<!--
  MonoGame - Copyright (C) The MonoGame Team
  This file is subject to the terms and conditions defined in
  file 'LICENSE.txt', which is part of this source code package.
-->

<!--
  This file defines the steps to automatically build referenced Content Projects and copy the .xnb files to the game output directory (or android package).
  
  You can reference Content Projects by manually adding the code below to your game project (where Content1 is the name of your content project)
  
    <ItemGroup>
      <MonoGameContentReference Include="..\Content1\Content1.contentproj">
      </MonoGameContentReference>
    </ItemGroup>	
-->

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- Add MonoGameContentReference to item type selection in Visual Studio -->

  <ItemGroup>
    <AvailableItemName Include="MonoGameContentReference" />
  </ItemGroup>

  <!-- Get all Mono Game Content References and store them in a list -->

  <ItemGroup>
    <ContentReferences Include="@(MonoGameContentReference)"/>
  </ItemGroup>

  <!-- Hide Content References from Solution Explorer in Visual Studio -->

  <ItemDefinitionGroup>
    <MonoGameContentReference>
      <Visible>False</Visible>
    </MonoGameContentReference>
  </ItemDefinitionGroup>

  <Target Name="Prepare">
    <PropertyGroup>
      <!-- This is the path where all .xnb files will land, by default Content/-->
      <ContentRootDirectory>Content</ContentRootDirectory>
      <ParentOutputDir>$(ProjectDir)$(ContentRootDirectory)\$(MonoGamePlatform)</ParentOutputDir>
      <ParentIntermediateDir>$(ProjectDir)$(IntermediateOutputPath)</ParentIntermediateDir>

      <MonoGameContentBuilderExe>$(MSBuildProgramFiles32)\MonoGame\v3.0\MGCB.exe</MonoGameContentBuilderExe>

      <Header>/platform:$(MonoGamePlatform) /outputDir:&quot;$(ParentOutputDir)&quot; /quiet</Header>
    </PropertyGroup>

    <!--  Valid platforms: Windows, Xbox360, WindowsPhone, iOS, Android, Linux, MacOSX, WindowsStoreApp, NativeClient, Ouya, PlayStationMobile, PlayStation4, WindowsPhone8, RaspberryPi -->
    <Error Text="The MonoGamePlatform property is not set"
       Condition="'$(MonoGamePlatform)' == ''" />

    <Error
        Text="MonoGame Content Builder could not be located at '$(MonoGameContentBuilderExe)'"
        Condition="!Exists('$(MonoGameContentBuilderExe)')"
      />

    <MakeDir Directories="$(ParentIntermediateDir)"/>
    <MakeDir Directories="$(ParentOutputDir)"/>
  </Target>

  <Target Name="BuildContent"
        BeforeTargets="PreBuildEvent"
        DependsOnTargets="Prepare">
    <Exec Command="&quot;$(MonoGameContentBuilderExe)&quot; $(Header) /@:&quot;%(ContentReferences.FullPath)&quot; /intermediateDir:&quot;$(ParentIntermediateDir)%(ContentReferences.Filename)&quot; /incremental "
          WorkingDirectory="%(ContentReferences.RootDir)%(ContentReferences.Directory)"/>

    <ItemGroup>
      <ExtraContent Include="$(ProjectDir)$(ContentRootDirectory)\$(MonoGamePlatform)\**\*.*" />

      <Content Include="@(ExtraContent->'$(ProjectDir)$(ContentRootDirectory)\$(MonoGamePlatform)\%(RecursiveDir)%(Filename)%(Extension)')" Condition="$(MonoGamePlatform) != 'Android'">
        <Link>$(ContentRootDirectory)\%(ExtraContent.RecursiveDir)%(Filename)%(Extension)</Link>
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </Content>

      <AndroidAsset Include="@(ExtraContent->'$(ProjectDir)$(ContentRootDirectory)\$(MonoGamePlatform)\%(RecursiveDir)%(Filename)%(Extension)')" Condition="$(MonoGamePlatform) == 'Android'">
        <Link>Assets\$(ContentRootDirectory)\%(ExtraContent.RecursiveDir)%(Filename)%(Extension)</Link>
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </AndroidAsset>
    </ItemGroup>

    <Message Text="@(ExtraContent->'$(ContentRootDirectory)\%(RecursiveDir)%(FileName)%(Extension)')"/>

  </Target>

  <Target Name="RebuildContent"
          BeforeTargets="Rebuild"
          DependsOnTargets="Prepare">
    <Exec Command="&quot;$(MonoGameContentBuilderExe)&quot; $(Header) /@:&quot;%(ContentReferences.FullPath)&quot; /intermediateDir:&quot;$(ParentIntermediateDir)%(ContentReferences.Filename)&quot; /rebuild "
          WorkingDirectory="%(ContentReferences.RootDir)%(ContentReferences.Directory)"/>
  </Target>

  <Target Name="CleanContent"
          BeforeTargets="Clean"
          DependsOnTargets="Prepare">

    <Exec Command="&quot;$(MonoGameContentBuilderExe)&quot; $(Header) /intermediateDir:&quot;$(ParentIntermediateDir)%(ContentReferences.Filename)&quot;  /clean"
          WorkingDirectory="%(ContentReferences.RootDir)%(ContentReferences.Directory)"
          />
  </Target>

</Project>

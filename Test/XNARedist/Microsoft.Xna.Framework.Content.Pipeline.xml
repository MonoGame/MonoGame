<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.ChildCollection`2">
      <summary>Provides a collection of child objects for a content item.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ChildCollection`2.#ctor(`0)">
      <summary>Creates an instance of ChildCollection.</summary>
      <param name="parent">Parent object of the child objects returned in the collection.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ChildCollection`2.ClearItems">
      <summary>Removes all children from the collection.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ChildCollection`2.GetParent(`1)">
      <summary>Gets the parent of a child object.</summary>
      <param name="child">The child of the parent being retrieved.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ChildCollection`2.InsertItem(System.Int32,`1)">
      <summary>Inserts a child object into the collection at the specified location.</summary>
      <param name="index">The position in the collection.</param>
      <param name="item">The child object being inserted.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ChildCollection`2.RemoveItem(System.Int32)">
      <summary>Removes a child object from the collection.</summary>
      <param name="index">The index of the item being removed.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ChildCollection`2.SetItem(System.Int32,`1)">
      <summary>Modifies the value of the child object at the specified location.</summary>
      <param name="index">The index of the child object being modified.</param>
      <param name="item">The new value for the child object.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ChildCollection`2.SetParent(`1,`0)">
      <summary>Modifies the value of the parent object of the specified child object.</summary>
      <param name="child">The child of the parent being modified.</param>
      <param name="parent">The new value for the parent object.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.ContentBuildLogger">
      <summary>Provides methods for reporting informational messages or warnings from content importers and processors.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ContentBuildLogger.#ctor">
      <summary>Initializes a new instance of ContentBuildLogger.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ContentBuildLogger.GetCurrentFilename(Microsoft.Xna.Framework.Content.Pipeline.ContentIdentity)">
      <summary>Gets the filename currently being processed, for use in warning and error messages.</summary>
      <param name="contentIdentity">Identity of a content item. If specified, GetCurrentFilename uses this value to refine the search. If no value os specified, the current PushFile state is used.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.ContentBuildLogger.LoggerRootDirectory">
      <summary>Gets or sets the base reference path used when reporting errors during the content build process.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ContentBuildLogger.LogImportantMessage(System.String,System.Object[])">
      <summary>Outputs a high-priority status message from a content importer or processor.</summary>
      <param name="message">Message being reported.</param>
      <param name="messageArgs">[ParamArrayAttribute] Arguments for the reported message.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ContentBuildLogger.LogMessage(System.String,System.Object[])">
      <summary>Outputs a low priority status message from a content importer or processor.</summary>
      <param name="message">Message being reported.</param>
      <param name="messageArgs">[ParamArrayAttribute] Arguments for the reported message.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ContentBuildLogger.LogWarning(System.String,Microsoft.Xna.Framework.Content.Pipeline.ContentIdentity,System.String,System.Object[])">
      <summary>Outputs a warning message from a content importer or processor.</summary>
      <param name="helpLink">Link to an existing online help topic containing related information.</param>
      <param name="contentIdentity">Identity of the content item that generated the message.</param>
      <param name="message">Message being reported.</param>
      <param name="messageArgs">[ParamArrayAttribute] Arguments for the reported message.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ContentBuildLogger.PopFile">
      <summary>Outputs a message indicating that a content asset has completed processing.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ContentBuildLogger.PushFile(System.String)">
      <summary>Outputs a message indicating that a content asset has begun processing.</summary>
      <param name="filename">Name of the file containing future messages.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.ContentIdentity">
      <summary>Provides properties describing the origin of the game asset, such as the original source file and creation tool. This information is used for error reporting, and by processors that need to determine from what directory the asset was originally loaded.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ContentIdentity.#ctor">
      <summary>Initializes a new instance of ContentIdentity.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ContentIdentity.#ctor(System.String)">
      <summary>Initializes a new instance of ContentIdentity with the specified values.</summary>
      <param name="sourceFilename">The absolute path to the file name of the asset source.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ContentIdentity.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of ContentIdentity with the specified values.</summary>
      <param name="sourceFilename">The absolute path to the file name of the asset source.</param>
      <param name="sourceTool">The name of the digital content creation (DCC) tool that created the asset.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ContentIdentity.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of ContentIdentity with the specified values.</summary>
      <param name="sourceFilename">The absolute path to the file name of the asset source.</param>
      <param name="sourceTool">The name of the digital content creation (DCC) tool that created the asset.</param>
      <param name="fragmentIdentifier">Specific location of the content item within the larger source file. For example, this could be a line number in the file.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.ContentIdentity.FragmentIdentifier">
      <summary>Gets or sets the specific location of the content item within the larger source file.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.ContentIdentity.SourceFilename">
      <summary>Gets or sets the file name of the asset source.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.ContentIdentity.SourceTool">
      <summary>Gets or sets the creation tool of the asset.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.ContentImporter`1">
      <summary>Implements a file format importer for use with game assets.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ContentImporter`1.#ctor">
      <summary>Initializes a new instance of ContentImporter.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ContentImporter`1.Import(System.String,Microsoft.Xna.Framework.Content.Pipeline.ContentImporterContext)">
      <summary />
      <param name="filename">Name of a game asset file.</param>
      <param name="context">Contains information for importing a game asset, such as a logger interface.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ContentImporter`1.Microsoft#Xna#Framework#Content#Pipeline#IContentImporter#Import(System.String,Microsoft.Xna.Framework.Content.Pipeline.ContentImporterContext)">
      <summary />
      <param name="filename">Name of a game asset file.</param>
      <param name="context">Contains information for importing a game asset, such as a logger interface.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.ContentImporterAttribute">
      <summary>Provides properties that identify and provide metadata about the importer, such as supported file extensions and caching information.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ContentImporterAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of ContentImporterAttribute and sets the file name extension supported by the importer.</summary>
      <param name="fileExtension">The list of file name extensions supported by the importer. Prefix each extension with a '.'.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ContentImporterAttribute.#ctor(System.String[])">
      <summary>Initializes a new instance of ContentImporterAttribute and sets the file name extensions supported by the importer.</summary>
      <param name="fileExtensions">[ParamArrayAttribute] The list of file name extensions supported by the importer. Prefix each extension with a '.'.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.ContentImporterAttribute.CacheImportedData">
      <summary>Gets and sets the caching of the content during importation.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.ContentImporterAttribute.DefaultProcessor">
      <summary>Gets or sets the name of the default processor for content read by this importer.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.ContentImporterAttribute.DisplayName">
      <summary />
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.ContentImporterAttribute.FileExtensions">
      <summary>Gets the supported file name extensions of the importer.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.ContentImporterContext">
      <summary>Provides properties that define logging behavior for the importer.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ContentImporterContext.#ctor">
      <summary>Initializes a new instance of ContentImporterContext.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ContentImporterContext.AddDependency(System.String)">
      <summary />
      <param name="filename">Name of an asset file.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.ContentImporterContext.IntermediateDirectory">
      <summary>The absolute path to the root of the build intermediate (object) directory.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.ContentImporterContext.Logger">
      <summary>Gets the logger for an importer.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.ContentImporterContext.OutputDirectory">
      <summary>The absolute path to the root of the build output (binaries) directory.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.ContentItem">
      <summary>Provides properties that define various aspects of content stored using the intermediate file format of the XNA Framework.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ContentItem.#ctor">
      <summary>Initializes a new instance of ContentItem.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.ContentItem.Identity">
      <summary>Gets or sets the identity of the content item.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.ContentItem.Name">
      <summary>Gets or sets the name of the content item.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.ContentItem.OpaqueData">
      <summary>Gets the opaque data of the content item.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.ContentProcessor`2">
      <summary>Provides a base class to use when developing custom processor components. All processors must derive from this class.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ContentProcessor`2.#ctor">
      <summary>Initializes a new instance of the ContentProcessor class.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.ContentProcessor`2.Microsoft#Xna#Framework#Content#Pipeline#IContentProcessor#InputType">
      <summary>Gets the expected object type of the input parameter to IContentProcessor.Process.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.ContentProcessor`2.Microsoft#Xna#Framework#Content#Pipeline#IContentProcessor#OutputType">
      <summary>Gets the object type returned by IContentProcessor.Process.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ContentProcessor`2.Microsoft#Xna#Framework#Content#Pipeline#IContentProcessor#Process(System.Object,Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext)">
      <summary>Processes the specified input data and returns the result.</summary>
      <param name="input">Existing content object being processed.</param>
      <param name="context">Contains any required custom process parameters.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ContentProcessor`2.Process(`0,Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext)">
      <summary>Processes the specified input data and returns the result.</summary>
      <param name="input">Existing content object being processed.</param>
      <param name="context">Contains any required custom process parameters.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorAttribute">
      <summary>Gets any existing content processor components.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorAttribute.#ctor">
      <summary>Initializes an instance of ContentProcessorAttribute.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorAttribute.DisplayName">
      <summary />
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext">
      <summary>Provides access to custom processor parameters, methods for converting member data, and triggering nested builds.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext.#ctor">
      <summary>Initializes a new instance of ContentProcessorContext.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext.AddDependency(System.String)">
      <summary />
      <param name="filename">Name of an asset file.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext.AddOutputFile(System.String)">
      <summary />
      <param name="filename">The name of the file.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext.BuildAndLoadAsset``2(Microsoft.Xna.Framework.Content.Pipeline.ExternalReference{``0},System.String)">
      <summary>Initiates a nested build of the specified asset and then loads the result into memory.</summary>
      <param name="sourceAsset">Reference to the source asset.</param>
      <param name="processorName">Optional processor for this content.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext.BuildAndLoadAsset``2(Microsoft.Xna.Framework.Content.Pipeline.ExternalReference{``0},System.String,Microsoft.Xna.Framework.Content.Pipeline.OpaqueDataDictionary,System.String)">
      <summary>Initiates a nested build of the specified asset and then loads the result into memory.</summary>
      <param name="sourceAsset">Reference to the source asset.</param>
      <param name="processorName">Optional processor for this content.</param>
      <param name="processorParameters">Optional collection of named values available as input to the content processor.</param>
      <param name="importerName">Optional importer for this content.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext.BuildAsset``2(Microsoft.Xna.Framework.Content.Pipeline.ExternalReference{``0},System.String)">
      <summary>Initiates a nested build of an additional asset.</summary>
      <param name="sourceAsset">Reference to the source asset.</param>
      <param name="processorName">Optional processor for this content.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext.BuildAsset``2(Microsoft.Xna.Framework.Content.Pipeline.ExternalReference{``0},System.String,Microsoft.Xna.Framework.Content.Pipeline.OpaqueDataDictionary,System.String,System.String)">
      <summary>Initiates a nested build of an additional asset.</summary>
      <param name="sourceAsset">Reference to the source asset.</param>
      <param name="processorName">Optional processor for this content.</param>
      <param name="processorParameters">Optional collection of named values available as input to the content processor.</param>
      <param name="importerName">Optional importer for this content.</param>
      <param name="assetName">Optional name of the final compiled content.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext.BuildConfiguration">
      <summary>Gets the name of the current content build configuration.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext.Convert``2(``0,System.String)">
      <summary>Converts a content item object using the specified content processor.</summary>
      <param name="input">Source content to be converted.</param>
      <param name="processorName">Optional processor for this content.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext.Convert``2(``0,System.String,Microsoft.Xna.Framework.Content.Pipeline.OpaqueDataDictionary)">
      <summary>Converts a content item object using the specified content processor.</summary>
      <param name="input">Source content to be converted.</param>
      <param name="processorName">Optional processor for this content.</param>
      <param name="processorParameters">Optional paramters for the processor.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext.IntermediateDirectory">
      <summary>Gets the path of the directory that will contain any intermediate files generated by the content processor.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext.Logger">
      <summary>Gets the logger interface used for status messages or warnings.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext.OutputDirectory">
      <summary>Gets the output path of the content processor.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext.OutputFilename">
      <summary>Gets the output file name of the content processor.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext.Parameters">
      <summary>Gets the collection of parameters used by the content processor.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext.TargetPlatform">
      <summary>Gets the current content build target platform.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext.TargetProfile">
      <summary>Gets the current content build target profile.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.ExternalReference`1">
      <summary>Specifies external references to a data file for the content item.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ExternalReference`1.#ctor">
      <summary>Initializes a new instance of ExternalReference.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ExternalReference`1.#ctor(System.String)">
      <summary>Initializes a new instance of ExternalReference.</summary>
      <param name="filename">The name of the referenced file.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.ExternalReference`1.#ctor(System.String,Microsoft.Xna.Framework.Content.Pipeline.ContentIdentity)">
      <summary>Initializes a new instance of ExternalReference, specifying the file path relative to another content item.</summary>
      <param name="filename">The name of the referenced file.</param>
      <param name="relativeToContent">The content that the path specified in filename is relative to.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.ExternalReference`1.Filename">
      <summary>Gets and sets the file name of an ExternalReference.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.FontDescriptionImporter">
      <summary>Provides methods for reading .spritefont files for use in the Content Pipeline.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.FontDescriptionImporter.#ctor">
      <summary>Initializes a new instance of FontDescriptionImporter.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.FontDescriptionImporter.Import(System.String,Microsoft.Xna.Framework.Content.Pipeline.ContentImporterContext)">
      <summary>Called by the XNA Framework when importing a .spritefont file to be used as a game asset. This is the method called by the XNA Framework when an asset is to be imported into an object that can be recognized by the Content Pipeline.</summary>
      <param name="filename">Name of a game asset file.</param>
      <param name="context">Contains information for importing a game asset, such as a logger interface.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.IContentImporter">
      <summary>Accesses a statically typed ContentImporter instance from generic code using dynamic typing.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.IContentImporter.Import(System.String,Microsoft.Xna.Framework.Content.Pipeline.ContentImporterContext)">
      <summary>Imports an asset from the specified file.</summary>
      <param name="filename">Name of the game asset file.</param>
      <param name="context">A ContentImporterContext class containing information for importing a game asset, such as a logger interface.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.IContentProcessor">
      <summary>Provides methods and properties for accessing a statically typed ContentProcessor subclass, using dynamically typed object data.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.IContentProcessor.InputType">
      <summary>Gets the expected object type of the input parameter to IContentProcessor.Process.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.IContentProcessor.OutputType">
      <summary>Gets the object type returned by IContentProcessor.Process.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.IContentProcessor.Process(System.Object,Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext)">
      <summary>Processes the specified input data and returns the result.</summary>
      <param name="input">Existing content object being processed.</param>
      <param name="context">Contains any required custom process parameters.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.InvalidContentException">
      <summary>Thrown when errors are encountered in content during processing.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.InvalidContentException.#ctor">
      <summary>Initializes a new instance of the InvalidContentException class</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.InvalidContentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the InvalidContentException class with information on serialization and streaming context for the related content item.</summary>
      <param name="serializationInfo">Information necessary for serialization and deserialization of the content item.</param>
      <param name="streamingContext">Information necessary for the source and destination of a given serialized stream. Also provides an additional caller-defined context.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.InvalidContentException.#ctor(System.String)">
      <summary>Initializes a new instance of the InvalidContentException class with the specified error message.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.InvalidContentException.#ctor(System.String,Microsoft.Xna.Framework.Content.Pipeline.ContentIdentity)">
      <summary>Initializes a new instance of the InvalidContentException class with the specified error message and the identity of the content throwing the exception.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="contentIdentity">Information about the content item that caused this error, including the file name. In some cases, a location within the file (of the problem) is specified.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.InvalidContentException.#ctor(System.String,Microsoft.Xna.Framework.Content.Pipeline.ContentIdentity,System.Exception)">
      <summary>Initializes a new instance of the InvalidContentException class with the specified error message, the identity of the content throwing the exception, and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="contentIdentity">Information about the content item that caused this error, including the file name. In some cases, a location within the file (of the problem) is specified.</param>
      <param name="innerException">The exception that is the cause of the current exception. If innerException is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.InvalidContentException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the InvalidContentException class with the specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="innerException">The exception that is the cause of the current exception. If innerException is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.InvalidContentException.ContentIdentity">
      <summary>Gets or sets the identity of the content item that caused the exception.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.InvalidContentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>When overridden in a derived class, returns information about the exception.</summary>
      <param name="info">Information necessary for serialization and deserialization of the content item.</param>
      <param name="context">Information necessary for the source and destination of a given serialized stream. Also provides an additional caller-defined context.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.NamedValueDictionary`1">
      <summary>Base class for dictionaries that map string identifiers to data values.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.NamedValueDictionary`1.#ctor">
      <summary>Initializes an instance of NamedValueDictionary.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.NamedValueDictionary`1.Add(System.String,`0)">
      <summary>Adds the specified key and value to the dictionary.</summary>
      <param name="key">Identity of the key of the new data pair.</param>
      <param name="value">The value of the new data pair.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.NamedValueDictionary`1.AddItem(System.String,`0)">
      <summary>Adds an element to the dictionary.</summary>
      <param name="key">Identity of the key of the new element.</param>
      <param name="value">The value of the new element.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.NamedValueDictionary`1.Clear">
      <summary>Removes all keys and values from the dictionary.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.NamedValueDictionary`1.ClearItems">
      <summary>Removes all elements from the dictionary.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.NamedValueDictionary`1.ContainsKey(System.String)">
      <summary>Determines whether the specified key is present in the dictionary.</summary>
      <param name="key">Identity of a key.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.NamedValueDictionary`1.Count">
      <summary>Gets the number of items in the dictionary.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.NamedValueDictionary`1.DefaultSerializerType">
      <summary />
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.NamedValueDictionary`1.GetEnumerator">
      <summary>Gets an enumerator that iterates through items in a dictionary.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.NamedValueDictionary`1.Item(System.String)">
      <summary>Gets or sets the specified item.</summary>
      <param name="key" />
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.NamedValueDictionary`1.Keys">
      <summary>Gets all keys contained in the dictionary.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.NamedValueDictionary`1.Remove(System.String)">
      <summary>Removes the specified key and value from the dictionary.</summary>
      <param name="key">Identity of the key to be removed.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.NamedValueDictionary`1.RemoveItem(System.String)">
      <summary>Removes the specified element from the dictionary.</summary>
      <param name="key">Identity of the key of the data pair to be removed.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.NamedValueDictionary`1.SetItem(System.String,`0)">
      <summary>Modifies the value of an existing element.</summary>
      <param name="key">Identity of the element to be modified.</param>
      <param name="value">The value to be set.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.NamedValueDictionary`1.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{System.String,`0})">
      <summary>Adds an item to the collection.</summary>
      <param name="item">The item to add to the collection.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.NamedValueDictionary`1.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{System.String,`0})">
      <summary>Determines whether the collection contains a specific value.</summary>
      <param name="item">The object to locate in the collection.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.NamedValueDictionary`1.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,`0}[],System.Int32)">
      <summary>Copies the elements of the collection to an array, starting at a specified index.</summary>
      <param name="array">The index at which to begin the copy.</param>
      <param name="arrayIndex">The destination array.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.NamedValueDictionary`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Gets a value indicating if this object is read-only.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.NamedValueDictionary`1.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{System.String,`0})">
      <summary>Removes the first occurrence of the specified object from the collection.</summary>
      <param name="item">The item to remove from the collection.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.NamedValueDictionary`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that can iterate through this collection.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.NamedValueDictionary`1.TryGetValue(System.String,`0@)">
      <summary>Gets the value associated with the specified key.</summary>
      <param name="key">Identity of the key of the element whose value is to be retrieved.</param>
      <param name="value">[OutAttribute] The current value of the element.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.NamedValueDictionary`1.Values">
      <summary>Gets all values contained in the dictionary.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.OpaqueDataDictionary">
      <summary>Provides properties that define opaque data for a game asset.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.OpaqueDataDictionary.#ctor">
      <summary>Initializes a new instance of OpaqueDataDictionary.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.OpaqueDataDictionary.GetContentAsXml">
      <summary />
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.OpaqueDataDictionary.GetValue``1(System.String,``0)">
      <summary>Gets the value of the specified key/value pair of the asset.</summary>
      <param name="key">The name of the key.</param>
      <param name="defaultValue">The value to return if the key cannot be found. This can be null for reference types, 0 for primitive types, and a zero-filled structure for structure types.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.PipelineComponentScanner">
      <summary />
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.PipelineComponentScanner.#ctor">
      <summary>Initializes a new instance of PipelineComponentScanner.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.PipelineComponentScanner.Errors">
      <summary>Gets the list of error messages produced by the last call to Update.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.PipelineComponentScanner.ImporterAttributes">
      <summary>Gets a dictionary that maps importer names to their associated metadata attributes.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.PipelineComponentScanner.ImporterNames">
      <summary>Gets the names of all available importers.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.PipelineComponentScanner.ImporterOutputTypes">
      <summary>Gets a dictionary that maps importer names to the fully qualified name of their return types.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.PipelineComponentScanner.ProcessorAttributes">
      <summary>Gets a dictionary that maps processor names to their associated metadata attributes.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.PipelineComponentScanner.ProcessorInputTypes">
      <summary>Gets a dictionary that maps processor names to the fully qualified name of supported input types.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.PipelineComponentScanner.ProcessorNames">
      <summary>Gets the names of all available importers.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.PipelineComponentScanner.ProcessorOutputTypes">
      <summary>Gets a dictionary that maps processor names to the fully qualified name of their output types.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.PipelineComponentScanner.ProcessorParameters">
      <summary>A collection of supported processor parameters.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.PipelineComponentScanner.Update(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Updates the scanner object with the latest available assembly states.</summary>
      <param name="pipelineAssemblies">Enumerated list of available assemblies.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.PipelineComponentScanner.Update(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
      <summary>Updates the scanner object with the latest available assembly states.</summary>
      <param name="pipelineAssemblies">Enumerated list of available assemblies.</param>
      <param name="pipelineAssemblyDependencies">Enumerated list of dependent assemblies.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.PipelineException">
      <summary>Thrown when errors are encountered during a content pipeline build.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.PipelineException.#ctor">
      <summary>Creates an instance of PipelineException.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.PipelineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates an instance of PipelineException with information on serialization and streaming context for the related content item.</summary>
      <param name="serializationInfo">Information necessary for serialization and deserialization of the content item.</param>
      <param name="streamingContext">Information necessary for the source and destination of a given serialized stream. Also provides an additional caller-defined context.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.PipelineException.#ctor(System.String)">
      <summary>Initializes a new instance of the PipelineException class with the specified error message.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.PipelineException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the PipelineException class with the specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="innerException">The exception that is the cause of the current exception. If innerException is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.PipelineException.#ctor(System.String,System.Object[])">
      <summary>Initializes a new instance of the PipelineException class with the specified error message.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="messageArgs">[ParamArrayAttribute] Array of strings specifying message-related arguments.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.ProcessorParameter">
      <summary />
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.ProcessorParameter.DefaultValue">
      <summary>Default value of the processor parameter.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.ProcessorParameter.Description">
      <summary>Description of the parameter, as specified by the [Description] attribute.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.ProcessorParameter.DisplayName">
      <summary>Name of the parameter displayed in the designer, as specified by the [DisplayName] attribute.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.ProcessorParameter.IsEnum">
      <summary>Gets a value indicating whether the paramter is an enumeration.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.ProcessorParameter.PossibleEnumValues">
      <summary />
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.ProcessorParameter.PropertyName">
      <summary>Name of the property, as defined in the C# code.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.ProcessorParameter.PropertyType">
      <summary>Type of the parameter.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.ProcessorParameterCollection">
      <summary />
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform">
      <summary>Identifiers for the target platform.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform.Windows">
      <summary>All supported versions of Windows (excluding Windows Phone)</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform.WindowsPhone">
      <summary>Windows Phone</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform.Xbox360">
      <summary>Xbox 360 video game and entertainment system</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.VideoContent">
      <summary>Provides a base class for all video objects.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.VideoContent.#ctor(System.String)">
      <summary>Initializes a new copy of the VideoContent class for the specified video file.</summary>
      <param name="filename">The file name of the video to import.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.VideoContent.BitsPerSecond">
      <summary>Gets the bit rate for this video.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.VideoContent.Dispose">
      <summary>Immediately releases the unmanaged resources used by this object.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.VideoContent.Duration">
      <summary>Gets the duration of this video.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.VideoContent.Filename">
      <summary>Gets or sets the file name for this video.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.VideoContent.FramesPerSecond">
      <summary>Gets the frame rate for this video.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.VideoContent.Height">
      <summary>Gets the height of this video.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.VideoContent.VideoSoundtrackType">
      <summary>Gets or sets the type of soundtrack accompanying the video.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.VideoContent.Width">
      <summary>Gets the width of this video.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.XmlImporter">
      <summary />
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.XmlImporter.#ctor">
      <summary>Initializes a new instance of XmlImporter.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.XmlImporter.Import(System.String,Microsoft.Xna.Framework.Content.Pipeline.ContentImporterContext)">
      <summary />
      <param name="filename">Name of the intermediate file.</param>
      <param name="context">Contains information for importing the intermediate file, such as a logger interface.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Audio.AudioContent">
      <summary>Encapsulates and provides operations, such as format conversions, on the source audio. This type is produced by the audio importers and used by audio processors to produce compiled audio assets.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Audio.AudioContent.#ctor(System.String,Microsoft.Xna.Framework.Content.Pipeline.Audio.AudioFileType)">
      <summary>Initializes a new instance of AudioContent.</summary>
      <param name="audioFileName">Name of the audio source file to be processed.</param>
      <param name="audioFileType">Type of the processed audio: WAV, MP3 or WMA.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Audio.AudioContent.ConvertFormat(Microsoft.Xna.Framework.Content.Pipeline.Audio.ConversionFormat,Microsoft.Xna.Framework.Content.Pipeline.Audio.ConversionQuality,System.String)">
      <summary>Transcodes the source audio to the target format and quality.</summary>
      <param name="formatType">Format of the processed source audio: WAV, MP3 or WMA.</param>
      <param name="quality">Quality of the processed source audio. It can be one of the following: Low (96 kbps) Medium (128 kbps) Best (192 kbps)</param>
      <param name="targetFileName">Name of the file containing the processed source audio.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Audio.AudioContent.Data">
      <summary>Gets the raw audio data.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Audio.AudioContent.Dispose">
      <summary>Immediately releases the unmanaged resources used by this object.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Audio.AudioContent.Duration">
      <summary>Gets the duration (in milliseconds) of the audio data.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Audio.AudioContent.FileName">
      <summary>Gets the file name containing the audio data.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Audio.AudioContent.FileType">
      <summary>Gets the AudioFileType of this audio source.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Audio.AudioContent.Finalize">
      <summary>Releases unmanaged resources and performs other cleanup operations before garbage collection reclaims the object.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Audio.AudioContent.Format">
      <summary>Gets the AudioFormat of this audio source.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Audio.AudioContent.LoopLength">
      <summary>Gets the loop length, in samples.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Audio.AudioContent.LoopStart">
      <summary>Gets the loop start, in samples.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Audio.AudioFileType">
      <summary>Type of the audio file.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Audio.AudioFileType.Mp3">
      <summary>The MP3 format</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Audio.AudioFileType.Wav">
      <summary>The WAV format</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Audio.AudioFileType.Wma">
      <summary>The WMA format</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Audio.AudioFormat">
      <summary>Encapsulates the native audio format (WAVEFORMATEX) information of the audio content.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Audio.AudioFormat.AverageBytesPerSecond">
      <summary>Gets the average bytes processed per second.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Audio.AudioFormat.BitsPerSample">
      <summary>Gets the bit depth of the audio content.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Audio.AudioFormat.BlockAlign">
      <summary />
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Audio.AudioFormat.ChannelCount">
      <summary>Gets the number of channels.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Audio.AudioFormat.Format">
      <summary>Gets the format of the audio content.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Audio.AudioFormat.NativeWaveFormat">
      <summary />
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Audio.AudioFormat.SampleRate">
      <summary>Gets the sample rate of the audio content.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Audio.ConversionFormat">
      <summary>Target formats supported for audio source conversions.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Audio.ConversionFormat.Adpcm">
      <summary>A PCM encoding technique using 4 bits</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Audio.ConversionFormat.Pcm">
      <summary>8/16-bit mono/stereo PCM audio 8KHz-48KHz</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Audio.ConversionFormat.WindowsMedia">
      <summary>Windows Media CBR formats (64 kbps, 128 kbps, 192 kbps)</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Audio.ConversionFormat.Xma">
      <summary>The Xbox compression format</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Audio.ConversionQuality">
      <summary>Compression quality of the audio content.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Audio.ConversionQuality.Best">
      <summary>Lowest compression, but the best audio quality</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Audio.ConversionQuality.Low">
      <summary>High compression yielding lower file size, but could compromise audio quality</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Audio.ConversionQuality.Medium">
      <summary>Moderate compression resulting in a compromise between audio quality and file size</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AlphaTestMaterialContent">
      <summary>Provides properties for modifying an effect that supports alpha testing.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AlphaTestMaterialContent.#ctor">
      <summary>Creates an instance of this object.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AlphaTestMaterialContent.Alpha">
      <summary>Gets or sets the material alpha.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AlphaTestMaterialContent.AlphaFunction">
      <summary>Gets or sets the compare function for alpha test. The default value is Greater.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AlphaTestMaterialContent.AlphaFunctionKey">
      <summary>Specifies the key of the key/data pair for the alpha test.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AlphaTestMaterialContent.AlphaKey">
      <summary>Specifies the key of the key/data pair for the alpha property.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AlphaTestMaterialContent.DiffuseColor">
      <summary>Gets or sets the material diffuse color, which ranges from 0 to 1.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AlphaTestMaterialContent.DiffuseColorKey">
      <summary>Specifies the key of the key/data pair for the material diffuse color.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AlphaTestMaterialContent.ReferenceAlpha">
      <summary>Gets or sets the reference alpha value. The default value is 0.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AlphaTestMaterialContent.ReferenceAlphaKey">
      <summary>Specifies the key of the key/data pair for the reference alpha value.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AlphaTestMaterialContent.Texture">
      <summary>Gets or sets the current texture.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AlphaTestMaterialContent.TextureKey">
      <summary>Specifies the key of the key/data pair for the current texture.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AlphaTestMaterialContent.VertexColorEnabled">
      <summary>Gets or sets whether vertex color is enabled.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AlphaTestMaterialContent.VertexColorEnabledKey">
      <summary>Specifies the key of the key/data pair for the vertex color enabled setting.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AnimationChannel">
      <summary />
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AnimationChannel.#ctor">
      <summary>Initializes a new instance of AnimationChannel.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AnimationChannel.Add(Microsoft.Xna.Framework.Content.Pipeline.Graphics.AnimationKeyframe)">
      <summary>Adds a new keyframe to the collection, automatically sorting the contents according to keyframe times.</summary>
      <param name="item">Keyframe to be added to the channel.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AnimationChannel.Clear">
      <summary>Removes all keyframes from the collection.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AnimationChannel.Contains(Microsoft.Xna.Framework.Content.Pipeline.Graphics.AnimationKeyframe)">
      <summary>Searches the collection for the specified keyframe.</summary>
      <param name="item">Keyframe being searched for.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AnimationChannel.Count">
      <summary>Gets the number of keyframes in the collection.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AnimationChannel.GetEnumerator">
      <summary>Returns an enumerator that iterates through the keyframes.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AnimationChannel.IndexOf(Microsoft.Xna.Framework.Content.Pipeline.Graphics.AnimationKeyframe)">
      <summary>Determines the index for the specified keyframe.</summary>
      <param name="item">Identity of a keyframe.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AnimationChannel.Item(System.Int32)">
      <summary>Gets the keyframe at the specified index position.</summary>
      <param name="index" />
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AnimationChannel.Remove(Microsoft.Xna.Framework.Content.Pipeline.Graphics.AnimationKeyframe)">
      <summary>Removes the specified keyframe from the collection.</summary>
      <param name="item">Keyframe being removed.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AnimationChannel.RemoveAt(System.Int32)">
      <summary>Removes the keyframe at the specified index position.</summary>
      <param name="index">Index of the keyframe being removed.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AnimationChannel.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gets an enumerator that iterates through the keyframes of an animation channel.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AnimationChannelDictionary">
      <summary>Collection of animation data channels, one per bone or rigid object.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AnimationChannelDictionary.#ctor">
      <summary>Initializes a new instance of AnimationChannelDictionary.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AnimationContent">
      <summary>Provides properties for maintaining an animation.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AnimationContent.#ctor">
      <summary>Initializes a new instance of AnimationContent.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AnimationContent.Channels">
      <summary />
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AnimationContent.Duration">
      <summary>Gets or sets the total length of the animation.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AnimationContentDictionary">
      <summary>Collection of named animations.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AnimationContentDictionary.#ctor">
      <summary>Initializes a new instance of AnimationContentDictionary.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AnimationKeyframe">
      <summary />
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AnimationKeyframe.#ctor(System.TimeSpan,Microsoft.Xna.Framework.Matrix)">
      <summary>Initializes a new instance of AnimationKeyframe with the specified time offsetand transform.</summary>
      <param name="time">Time offset of the keyframe.</param>
      <param name="transform">Position of the keyframe.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AnimationKeyframe.CompareTo(Microsoft.Xna.Framework.Content.Pipeline.Graphics.AnimationKeyframe)">
      <summary>Compares this instance of a keyframe to another.</summary>
      <param name="other">Keyframe being compared to.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AnimationKeyframe.Time">
      <summary>Gets the time offset from the start of the animation to the position described by this keyframe.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.AnimationKeyframe.Transform">
      <summary>Gets or sets the position described by this keyframe.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BasicMaterialContent">
      <summary>Provides properties for modifying a traditional fixed-function–style material, as supported by most 3D modeling packages.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BasicMaterialContent.#ctor">
      <summary>Initializes a new instance of BasicMaterialContent.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BasicMaterialContent.Alpha">
      <summary>Gets or sets the alpha property.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BasicMaterialContent.AlphaKey">
      <summary>Specifies the key of the key/data pair for the alpha property.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BasicMaterialContent.DiffuseColor">
      <summary>Gets or sets the diffuse color property.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BasicMaterialContent.DiffuseColorKey">
      <summary>Specifies the key of the key/data pair for the diffuse color.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BasicMaterialContent.EmissiveColor">
      <summary>Gets or sets the emissive color property.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BasicMaterialContent.EmissiveColorKey">
      <summary>Specifies the key of the key/data pair for the emissive color.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BasicMaterialContent.SpecularColor">
      <summary>Gets or sets the specular color property.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BasicMaterialContent.SpecularColorKey">
      <summary>Specifies the key of the key/data pair for the specular color.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BasicMaterialContent.SpecularPower">
      <summary>Gets or sets the specular power property.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BasicMaterialContent.SpecularPowerKey">
      <summary>Specifies the key of the key/data pair for the specular power.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BasicMaterialContent.Texture">
      <summary>Gets or sets the diffuse texture property.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BasicMaterialContent.TextureKey">
      <summary>Specifies the key of the key/data pair for the diffuse texture.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BasicMaterialContent.VertexColorEnabled">
      <summary>Gets or sets the vertex color property.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BasicMaterialContent.VertexColorEnabledKey">
      <summary>Specifies the key of the key/data pair for the vertex color property.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent">
      <summary>Provides properties and methods for creating and maintaining a bitmap resource.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent.#ctor">
      <summary>Initializes a new instance of BitmapContent.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of BitmapContent with the specified width or height.</summary>
      <param name="width">Width, in pixels, of the bitmap resource.</param>
      <param name="height">Height, in pixels, of the bitmap resource.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent.Copy(Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent,Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent)">
      <summary>Copies one bitmap into another.</summary>
      <param name="sourceBitmap">BitmapContent being copied.</param>
      <param name="destinationBitmap">BitmapContent being overwritten.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent.Copy(Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent,Microsoft.Xna.Framework.Rectangle)">
      <summary>Copies one bitmap into another.</summary>
      <param name="sourceBitmap">BitmapContent being copied.</param>
      <param name="sourceRegion">Region of sourceBitmap.</param>
      <param name="destinationBitmap">BitmapContent being overwritten.</param>
      <param name="destinationRegion">Region of bitmap to be overwritten.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent.GetPixelData">
      <summary>Reads encoded bitmap content.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent.Height">
      <summary>Gets or sets the height of the bitmap, in pixels.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent.SetPixelData(System.Byte[])">
      <summary>Writes encoded bitmap content.</summary>
      <param name="sourceData">Array containing encoded bitmap data to be set.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent.ToString">
      <summary>Returns a string description of the bitmap resource.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent.TryCopyFrom(Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Rectangle)">
      <summary>Attempts to copy a region from a specified bitmap.</summary>
      <param name="sourceBitmap">BitmapContent being copied.</param>
      <param name="sourceRegion">Location of sourceBitmap.</param>
      <param name="destinationRegion">Region of destination bitmap to be overwritten.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent.TryCopyTo(Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Rectangle)">
      <summary>Attempts to copy a region of the specified bitmap onto another.</summary>
      <param name="destinationBitmap">BitmapContent being overwritten.</param>
      <param name="sourceRegion">Location of the source bitmap.</param>
      <param name="destinationRegion">Region of destination bitmap to be overwritten.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent.TryGetFormat(Microsoft.Xna.Framework.Graphics.SurfaceFormat@)">
      <summary>Gets the corresponding GPU texture format for the specified bitmap type.</summary>
      <param name="format">[OutAttribute] Format being compared.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent.ValidateCopyArguments(Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent,Microsoft.Xna.Framework.Rectangle)">
      <summary>Validates the arguments to the Copy function.</summary>
      <param name="sourceBitmap">BitmapContent being copied.</param>
      <param name="sourceRegion">Location of sourceBitmap.</param>
      <param name="destinationBitmap">BitmapContent being overwritten.</param>
      <param name="destinationRegion">Region of bitmap to be overwritten.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent.Width">
      <summary>Gets or sets the width of the bitmap, in pixels.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BoneContent">
      <summary>Represents an animation skeleton.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BoneContent.#ctor">
      <summary>Initializes a new instance of BoneContent.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BoneWeight">
      <summary>Provides properties for managing a bone weight.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BoneWeight.#ctor(System.String,System.Single)">
      <summary>Initializes a new instance of BoneWeight with the specified name and weight.</summary>
      <param name="boneName">Name of the bone.</param>
      <param name="weight">Amount of influence, ranging from zero to one.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BoneWeight.BoneName">
      <summary>Gets the name of the bone.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BoneWeight.Weight">
      <summary />
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BoneWeightCollection">
      <summary>Collection of bone weights of a vertex.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BoneWeightCollection.#ctor">
      <summary>Initializes a new instance of BoneWeightCollection.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BoneWeightCollection.NormalizeWeights">
      <summary>Normalizes the contents of the weights list.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.BoneWeightCollection.NormalizeWeights(System.Int32)">
      <summary>Normalizes the contents of the bone weights list.</summary>
      <param name="maxWeights">Maximum number of weights allowed.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.DualTextureMaterialContent">
      <summary>Provides properties for modifying an effect that supports two-layer multitexturing.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.DualTextureMaterialContent.#ctor">
      <summary>Creates an instance of this object.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.DualTextureMaterialContent.Alpha">
      <summary>Gets or sets the material alpha.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.DualTextureMaterialContent.AlphaKey">
      <summary>Specifies the key of the key/data pair for the alpha property.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.DualTextureMaterialContent.DiffuseColor">
      <summary>Gets or sets the material diffuse color, which ranges from 0 to 1.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.DualTextureMaterialContent.DiffuseColorKey">
      <summary>Specifies the key of the key/data pair for the material diffuse color.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.DualTextureMaterialContent.Texture">
      <summary>Gets or sets the current texture.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.DualTextureMaterialContent.Texture2">
      <summary>Gets or sets the current overlay texture.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.DualTextureMaterialContent.Texture2Key">
      <summary>Specifies the key of the key/data pair for the current overlay texture.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.DualTextureMaterialContent.TextureKey">
      <summary>Specifies the key of the key/data pair for the current texture.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.DualTextureMaterialContent.VertexColorEnabled">
      <summary>Gets or sets whether vertex color is enabled.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.DualTextureMaterialContent.VertexColorEnabledKey">
      <summary>Specifies the key of the key/data pair for the vertex color enabled setting.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.Dxt1BitmapContent">
      <summary>Provides methods and properties for managing compressed textures (DXT1).</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.Dxt1BitmapContent.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of Dxt1BitmapContent with the specified width and height.</summary>
      <param name="width">Width of the bitmap, in pixels.</param>
      <param name="height">Height of the bitmap, in pixels.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.Dxt1BitmapContent.TryGetFormat(Microsoft.Xna.Framework.Graphics.SurfaceFormat@)">
      <summary>Attempts to get the GPU texture format of this bitmap type.</summary>
      <param name="format">[OutAttribute] Matching GPU format.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.Dxt3BitmapContent">
      <summary>Provides methods and properties for managing compressed textures (DXT3).</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.Dxt3BitmapContent.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of Dxt3BitmapContent with the specified width and height.</summary>
      <param name="width">Width of the bitmap, in pixels.</param>
      <param name="height">Height of the bitmap, in pixels.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.Dxt3BitmapContent.TryGetFormat(Microsoft.Xna.Framework.Graphics.SurfaceFormat@)">
      <summary>Attempts to get the GPU texture format of this bitmap type.</summary>
      <param name="format">[OutAttribute] Matching GPU format.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.Dxt5BitmapContent">
      <summary>Provides methods and properties for managing compressed textures (DXT5).</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.Dxt5BitmapContent.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of Dxt5BitmapContent with the specified width and height.</summary>
      <param name="width">Width of the bitmap, in pixels.</param>
      <param name="height">Height of the bitmap, in pixels.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.Dxt5BitmapContent.TryGetFormat(Microsoft.Xna.Framework.Graphics.SurfaceFormat@)">
      <summary>Attempts to get the GPU texture format of this bitmap type.</summary>
      <param name="format">[OutAttribute] Matching GPU format.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.DxtBitmapContent">
      <summary />
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.DxtBitmapContent.#ctor(System.Int32)">
      <summary>Initializes a new instance of DxtBitmapContent with the specified compression.</summary>
      <param name="blockSize">Size of the block, in bytes.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.DxtBitmapContent.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of DxtBitmapContent with the specified size.</summary>
      <param name="blockSize">Size of the block, in bytes.</param>
      <param name="width">Width of the bitmap, in pixels.</param>
      <param name="height">Height of the bitmap, in pixels.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.DxtBitmapContent.GetPixelData">
      <summary>Gets the bitmap content as an array of encoded bytes.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.DxtBitmapContent.SetPixelData(System.Byte[])">
      <summary>Sets the contents of the bitmap using an encoded byte array.</summary>
      <param name="sourceData">Contents to be copied to destination bitmap.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.DxtBitmapContent.TryCopyFrom(Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Rectangle)">
      <summary>Attempts to copy from a specified region to another.</summary>
      <param name="sourceBitmap">Bitmap being copied from.</param>
      <param name="sourceRegion">Region of bitmap being copied.</param>
      <param name="destinationRegion">Region being copied to.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.DxtBitmapContent.TryCopyTo(Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Rectangle)">
      <summary>Attempts to copy the specified region to another.</summary>
      <param name="destinationBitmap">Bitmap being copied to.</param>
      <param name="sourceRegion">Region of source bitmap being copied from.</param>
      <param name="destinationRegion">Region of destination bitmap.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.EffectContent">
      <summary>Contains the source code for a DirectX Effect, loaded from a .fx file.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.EffectContent.#ctor">
      <summary>Initializes a new instance of EffectContent.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.EffectContent.EffectCode">
      <summary>Gets or sets the effect program source code.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.EffectMaterialContent">
      <summary>Provides support for representing DirectX Effect materials.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.EffectMaterialContent.#ctor">
      <summary>Initializes a new instance of EffectMaterialContent.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.EffectMaterialContent.CompiledEffect">
      <summary>Gets or sets the compiled Effect.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.EffectMaterialContent.CompiledEffectKey">
      <summary>Specifies the key of the key/data pair for the compiled effect property.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.EffectMaterialContent.Effect">
      <summary>Gets or sets the effect property.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.EffectMaterialContent.EffectKey">
      <summary>Use this key search for the related effect property in the OpaqueDataDictionary object.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.EnvironmentMapMaterialContent">
      <summary>Provides properties for modifying an effect that supports environment mapping.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.EnvironmentMapMaterialContent.#ctor">
      <summary>Creates an instance of this object.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.EnvironmentMapMaterialContent.Alpha">
      <summary>Gets or sets the material alpha.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.EnvironmentMapMaterialContent.AlphaKey">
      <summary>Specifies the key of the key/data pair for the alpha property.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.EnvironmentMapMaterialContent.DiffuseColor">
      <summary>Gets or sets the material diffuse color, which ranges from 0 to 1.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.EnvironmentMapMaterialContent.DiffuseColorKey">
      <summary>Specifies the key of the key/data pair for the material diffuse color.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.EnvironmentMapMaterialContent.EmissiveColor">
      <summary>Gets or sets the emissive color of the effect material.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.EnvironmentMapMaterialContent.EmissiveColorKey">
      <summary>Specifies the key of the key/data pair for the material emissive color.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.EnvironmentMapMaterialContent.EnvironmentMap">
      <summary>Gets or sets the current environment map texture.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.EnvironmentMapMaterialContent.EnvironmentMapAmount">
      <summary>Gets or sets the amount of the environment map color (RGB) that will be blended over the base texture. The value ranges from 0 to 1; the default value is 1.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.EnvironmentMapMaterialContent.EnvironmentMapAmountKey">
      <summary>Specifies the key of the key/data pair for the amount of the environment map color to blend.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.EnvironmentMapMaterialContent.EnvironmentMapKey">
      <summary>Specifies the key of the key/data pair for the current environment map texture.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.EnvironmentMapMaterialContent.EnvironmentMapSpecular">
      <summary>Gets or sets the amount of the environment map alpha value that will be added to the base texture. The value ranges from 0 to 1; the default value is 0.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.EnvironmentMapMaterialContent.EnvironmentMapSpecularKey">
      <summary>Specifies the key of the key/data pair for the amount of the environment map alpha value to add.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.EnvironmentMapMaterialContent.FresnelFactor">
      <summary>Gets or sets the Fresnel factor used for the environment map blending.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.EnvironmentMapMaterialContent.FresnelFactorKey">
      <summary>Specifies the key of the key/data pair for the fresnel factor.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.EnvironmentMapMaterialContent.Texture">
      <summary>Gets or sets the current texture.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.EnvironmentMapMaterialContent.TextureKey">
      <summary>Specifies the key of the key/data pair for the current texture.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.FontDescription">
      <summary>Provides information to the FontDescriptionProcessor describing which font to rasterize, which font size to utilize, and which Unicode characters to include in the processor output.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.FontDescription.#ctor(System.String,System.Single,System.Single)">
      <summary>Initializes a new instance of FontDescription and initializes its members to the specified font, size, and spacing, using FontDescriptionStyle.Regular as the default value for Style.</summary>
      <param name="fontName">The name of the font, such as Times New Roman.</param>
      <param name="size">The size, in points, of the font.</param>
      <param name="spacing">The amount of space, in pixels, to insert between letters in a string.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.FontDescription.#ctor(System.String,System.Single,System.Single,Microsoft.Xna.Framework.Content.Pipeline.Graphics.FontDescriptionStyle)">
      <summary>Initializes a new instance of FontDescription and initializes its members to the specified font, size, spacing, and style.</summary>
      <param name="fontName">The name of the font, such as Times New Roman.</param>
      <param name="size">The size, in points, of the font.</param>
      <param name="spacing">The amount of space, in pixels, to insert between letters in a string.</param>
      <param name="fontStyle">The font style for the font.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.FontDescription.#ctor(System.String,System.Single,System.Single,Microsoft.Xna.Framework.Content.Pipeline.Graphics.FontDescriptionStyle,System.Boolean)">
      <summary>Initializes a new instance of FontDescription using the specified values.</summary>
      <param name="fontName">The name of the font, such as Times New Roman.</param>
      <param name="size">The size, in points, of the font.</param>
      <param name="spacing">The amount of space, in pixels, to insert between letters in a string.</param>
      <param name="fontStyle">The font style for the font.</param>
      <param name="useKerning">true if kerning information is used when drawing characters; false otherwise.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.FontDescription.Characters">
      <summary>Gets the collection of characters provided by this FontDescription. Reference page contains links to related conceptual articles.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.FontDescription.DefaultCharacter">
      <summary>Gets or sets the default character for the font.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.FontDescription.FontName">
      <summary>Gets or sets the name of the font, such as "Times New Roman" or "Arial". This value cannot be null or empty.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.FontDescription.Size">
      <summary>Gets or sets the size, in points, of the font.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.FontDescription.Spacing">
      <summary>Gets or sets the amount of space, in pixels, to insert between letters in a string.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.FontDescription.Style">
      <summary>Gets or sets the style of the font, expressed as a combination of one or more FontDescriptionStyle flags.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.FontDescription.UseKerning">
      <summary>Indicates if kerning information is used when drawing characters.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.FontDescriptionStyle">
      <summary>Flags that describe style information to be applied to text.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.FontDescriptionStyle.Bold">
      <summary>Bold text.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.FontDescriptionStyle.Italic">
      <summary>Italic text.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.FontDescriptionStyle.Regular">
      <summary>Normal text.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.GeometryContent">
      <summary>Provides properties that define various aspects of a geometry batch.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.GeometryContent.#ctor">
      <summary>Creates an instance of GeometryContent.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.GeometryContent.Indices">
      <summary />
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.GeometryContent.Material">
      <summary>Gets or sets the material of the parent mesh.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.GeometryContent.Parent">
      <summary>Gets or sets the parent MeshContent for this object.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.GeometryContent.Vertices">
      <summary>Gets the set of vertex batches for the geometry batch.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.GeometryContentCollection">
      <summary>Provides methods for maintaining a collection of geometry batches that make up a mesh.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.IndexCollection">
      <summary>Provides methods for maintaining a list of index values.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.IndexCollection.#ctor">
      <summary>Initializes a new instance of IndexCollection.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.IndexCollection.AddRange(System.Collections.Generic.IEnumerable{System.Int32})">
      <summary>Appends the specified indices into the collection.</summary>
      <param name="indices">Index into the Positions member of the parent.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.IndirectPositionCollection">
      <summary>Provides methods for maintaining a list of vertex positions.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.IndirectPositionCollection.Contains(Microsoft.Xna.Framework.Vector3)">
      <summary>Determines whether the specified position is in the collection.</summary>
      <param name="item">Position being searched for in the collection.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.IndirectPositionCollection.CopyTo(Microsoft.Xna.Framework.Vector3[],System.Int32)">
      <summary>Copies the specified positions to an array, starting at the specified index.</summary>
      <param name="array">Array of positions to be copied.</param>
      <param name="arrayIndex">Index of the first copied position.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.IndirectPositionCollection.Count">
      <summary>Number of positions in the collection.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.IndirectPositionCollection.GetEnumerator">
      <summary>Gets an enumerator interface for reading the position values.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.IndirectPositionCollection.IndexOf(Microsoft.Xna.Framework.Vector3)">
      <summary>Gets the index of the specified position in a collection.</summary>
      <param name="item">Position being searched for.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.IndirectPositionCollection.Item(System.Int32)">
      <summary>Gets or sets the position at the specified index.</summary>
      <param name="index" />
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.IndirectPositionCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that can iterate through the collection.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MaterialContent">
      <summary>Provides methods and properties for maintaining a collection of named texture references.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MaterialContent.#ctor">
      <summary>Initializes a new instance of MaterialContent.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MaterialContent.GetReferenceTypeProperty``1(System.String)">
      <summary>Gets a reference type from the OpaqueDataDictionary collection.</summary>
      <param name="key">Key of the property being retrieved.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MaterialContent.GetTexture(System.String)">
      <summary>Gets a value from the Textures collection.</summary>
      <param name="key">Key of the texture being retrieved.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MaterialContent.GetValueTypeProperty``1(System.String)">
      <summary>Gets a value type from the OpaqueDataDictionary collection.</summary>
      <param name="key">Key of the value type being retrieved.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MaterialContent.SetProperty``1(System.String,``0)">
      <summary>Sets a value in the contained OpaqueDataDictionary object.</summary>
      <param name="key">Name of the key being modified.</param>
      <param name="value">Value being set.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MaterialContent.SetTexture(System.String,Microsoft.Xna.Framework.Content.Pipeline.ExternalReference{Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent})">
      <summary>Sets a value in the contained TextureReferenceDictionary object.</summary>
      <param name="key">Name of the key being modified.</param>
      <param name="value">Value being set.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MaterialContent.Textures">
      <summary>Gets the texture collection of the material.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MeshBuilder">
      <summary>Provides support for writing a custom importer for mesh objects.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MeshBuilder.AddTriangleVertex(System.Int32)">
      <summary>Adds a vertex into the index collection.</summary>
      <param name="indexIntoVertexCollection">Index of the inserted vertex, in the collection. This corresponds to the value returned by CreatePosition.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MeshBuilder.CreatePosition(Microsoft.Xna.Framework.Vector3)">
      <summary>Inserts the specified vertex position into the vertex channel at the specified index.</summary>
      <param name="pos">Value of the vertex being inserted.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MeshBuilder.CreatePosition(System.Single,System.Single,System.Single)">
      <summary>Inserts the specified vertex position into the vertex channel.</summary>
      <param name="x">Value of the x component of the vector.</param>
      <param name="y">Value of the y component of the vector.</param>
      <param name="z">Value of the z component of the vector.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MeshBuilder.CreateVertexChannel``1(System.String)">
      <summary />
      <param name="usage">Describes how the channel is used. Use this parameter as a look-up into a VertexChannelCollection. It is strongly recommended that you choose a usage from the following list. Binormal Color Normal Tangent TextureCoordinate Weights For more information, see VertexChannelNames.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MeshBuilder.FinishMesh">
      <summary>Ends the creation of a mesh.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MeshBuilder.MergeDuplicatePositions">
      <summary>Gets or sets the current value for position merging of the mesh. Reference page contains code snippet demonstrating example usage.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MeshBuilder.MergePositionTolerance">
      <summary />
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MeshBuilder.Name">
      <summary />
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MeshBuilder.SetMaterial(Microsoft.Xna.Framework.Content.Pipeline.Graphics.MaterialContent)">
      <summary>Specifies the material used by the current mesh.</summary>
      <param name="material">The material to be used by the mesh.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MeshBuilder.SetOpaqueData(Microsoft.Xna.Framework.Content.Pipeline.OpaqueDataDictionary)">
      <summary>Initializes the opaque data for a specific mesh object.</summary>
      <param name="opaqueData">Opaque data to be applied to the GeometryContent object of the next triangle.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MeshBuilder.SetVertexChannelData(System.Int32,System.Object)">
      <summary>Sets the specified vertex data with new data.</summary>
      <param name="vertexDataIndex">Index of the vertex data channel being set. This should match the index returned by CreateVertexChannel.</param>
      <param name="channelData">New data values for the vertex data. The data type being set must match the data type for the vertex channel specified by vertexDataIndex.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MeshBuilder.StartMesh(System.String)">
      <summary>Initializes the creation of a mesh.</summary>
      <param name="name">Name of the mesh.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MeshBuilder.SwapWindingOrder">
      <summary>Reverses the triangle winding order of the specified mesh.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MeshContent">
      <summary>Provides properties and methods that define various aspects of a mesh.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MeshContent.#ctor">
      <summary>Initializes a new instance of MeshContent.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MeshContent.Geometry">
      <summary>Gets the list of geometry batches for the mesh.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MeshContent.Positions">
      <summary>Gets the list of vertex position values.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MeshHelper">
      <summary>Provides methods for manipulating mesh data.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MeshHelper.CalculateNormals(Microsoft.Xna.Framework.Content.Pipeline.Graphics.MeshContent,System.Boolean)">
      <summary>Computes new normals for the specified mesh.</summary>
      <param name="mesh">Mesh containing the normals being computed.</param>
      <param name="overwriteExistingNormals">true if existing normals are to be discarded; false otherwise. Existing normals are searched for as if they are a vertex data channel (of type Vector3 Structure) with the name VertexChannelNames.Normal.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MeshHelper.CalculateTangentFrames(Microsoft.Xna.Framework.Content.Pipeline.Graphics.MeshContent,System.String,System.String,System.String)">
      <summary>Compute tangent frames for the given mesh.</summary>
      <param name="mesh">The target mesh used to create the tangent frame. All geometries in this mesh must have normal vertex channels stored in Normal, and must contain Vector3 data.</param>
      <param name="textureCoordinateChannelName">The texture coordinate channel used for computing the tangent frame. This channel most contain Vector2 data.</param>
      <param name="tangentChannelName">Target channel name used to store calculated tangents. A tangent channel is not generated if null or an empty string is specified.</param>
      <param name="binormalChannelName">Target channel name used to store calculated binormals. A tangent channel is not generated if null or an empty string is specified.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MeshHelper.FindSkeleton(Microsoft.Xna.Framework.Content.Pipeline.Graphics.NodeContent)">
      <summary />
      <param name="node">Mesh that possibly contains the skeleton.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MeshHelper.FlattenSkeleton(Microsoft.Xna.Framework.Content.Pipeline.Graphics.BoneContent)">
      <summary>Gets a flattened list of all bones contained by the specified skeleton.</summary>
      <param name="skeleton">Skeleton to be traversed.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MeshHelper.MergeDuplicatePositions(Microsoft.Xna.Framework.Content.Pipeline.Graphics.MeshContent,System.Single)">
      <summary>Processes the PositionCollection collection of the specified mesh, merging any values that are closer together than the specified tolerance threshold.</summary>
      <param name="mesh">Mesh to be processed.</param>
      <param name="tolerance">Tolerance to be used when determining duplicate positions. Pass a value of 0 to merge only those values that are exactly identical.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MeshHelper.MergeDuplicateVertices(Microsoft.Xna.Framework.Content.Pipeline.Graphics.GeometryContent)">
      <summary>Processes the PositionIndices and VertexChannel data of the specified geometry batch, merging any duplicate vertices.</summary>
      <param name="geometry">Geometry batch to be processed.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MeshHelper.MergeDuplicateVertices(Microsoft.Xna.Framework.Content.Pipeline.Graphics.MeshContent)">
      <summary>Processes the PositionIndices and VertexChannel data of the specified mesh, merging any duplicate vertices.</summary>
      <param name="mesh">Mesh to be processed.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MeshHelper.OptimizeForCache(Microsoft.Xna.Framework.Content.Pipeline.Graphics.MeshContent)">
      <summary>Reorders the indices and vertices of the mesh for optimal GPU cache performance.</summary>
      <param name="mesh">Mesh to be optimized.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MeshHelper.SwapWindingOrder(Microsoft.Xna.Framework.Content.Pipeline.Graphics.MeshContent)">
      <summary>Reverses the triangle winding order of the specified mesh.</summary>
      <param name="mesh">The mesh to be modified.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MeshHelper.TransformScene(Microsoft.Xna.Framework.Content.Pipeline.Graphics.NodeContent,Microsoft.Xna.Framework.Matrix)">
      <summary>Applies a transformation to the contents of a scene hierarchy.</summary>
      <param name="scene">Scene hierarchy being transformed.</param>
      <param name="transform">Matrix used in the transformation</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MipmapChain">
      <summary>Provides methods for accessing a mipmap chain.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MipmapChain.#ctor">
      <summary>Initializes a new instance of MipmapChain.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MipmapChain.#ctor(Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent)">
      <summary>Initializes a new instance of MipmapChain with the specified mipmap.</summary>
      <param name="bitmap">Image containing a mipmap.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.MipmapChainCollection">
      <summary>Provides methods for maintaining a mipmap chain.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.NodeContent">
      <summary>Provides a base class for graphics types that define local coordinate systems.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.NodeContent.#ctor">
      <summary>Creates an instance of NodeContent.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.NodeContent.AbsoluteTransform">
      <summary>Gets the value of the local Transform property, multiplied by the AbsoluteTransform of the parent.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.NodeContent.Animations">
      <summary>Gets the set of animations belonging to this node.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.NodeContent.Children">
      <summary>Gets the children of the NodeContent object.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.NodeContent.Parent">
      <summary>Gets the parent of this NodeContent object.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.NodeContent.Transform">
      <summary>Gets the transform matrix of the scene.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.NodeContentCollection">
      <summary>Provides a collection of all NodeContent objects in a spatial hierarchy.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.PixelBitmapContent`1">
      <summary>Provides methods for maintaining a 2D array of pixel values.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.PixelBitmapContent`1.#ctor">
      <summary>Initializes a new instance of PixelBitmapContent.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.PixelBitmapContent`1.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of PixelBitmapContent with the specified width and height.</summary>
      <param name="width">Width, in pixels, of the blank pixel bitmap.</param>
      <param name="height">Height, in pixels, of the blank pixel bitmap.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.PixelBitmapContent`1.GetPixel(System.Int32,System.Int32)">
      <summary>Gets the pixel value at the specified location in the bitmap.</summary>
      <param name="x">The x component of a bitmap pixel.</param>
      <param name="y">The y component of a bitmap pixel.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.PixelBitmapContent`1.GetPixelData">
      <summary>Gets the bitmap content as an array of encoded bytes.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.PixelBitmapContent`1.GetRow(System.Int32)">
      <summary>Gets an array containing a single row of bitmap data.</summary>
      <param name="y">The y component of the bitmap row.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.PixelBitmapContent`1.ReplaceColor(`0,`0)">
      <summary>Searches for all pixels matching the specified color and replaces them with a new value.</summary>
      <param name="originalColor">Color being searched for.</param>
      <param name="newColor">Color used to replace originalColor.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.PixelBitmapContent`1.SetPixel(System.Int32,System.Int32,`0)">
      <summary>Sets the pixel value at the specified location in the bitmap.</summary>
      <param name="x">The x component of a bitmap pixel.</param>
      <param name="y">The y component of a bitmap pixel.</param>
      <param name="value">New pixel value.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.PixelBitmapContent`1.SetPixelData(System.Byte[])">
      <summary>Sets the bitmap content using the specified encoded byte array.</summary>
      <param name="sourceData">New bitmap content.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.PixelBitmapContent`1.ToString">
      <summary>Gets a string description of the bitmap.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.PixelBitmapContent`1.TryCopyFrom(Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Rectangle)">
      <summary>Attempts to copy a region from the specified bitmap.</summary>
      <param name="sourceBitmap">Bitmap content being copied.</param>
      <param name="sourceRegion">Location of the upper-left region of sourceBitmap being copied from.</param>
      <param name="destinationRegion">Region of destination bitmap to be overwritten.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.PixelBitmapContent`1.TryCopyTo(Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Rectangle)">
      <summary>Attempts to copy a region to the specified bitmap.</summary>
      <param name="destinationBitmap">Bitmap to be copied to.</param>
      <param name="sourceRegion">Location of upper-left region to be copied.</param>
      <param name="destinationRegion">Target region for the copied content.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.PixelBitmapContent`1.TryGetFormat(Microsoft.Xna.Framework.Graphics.SurfaceFormat@)">
      <summary>Gets the GPU texture format that corresponds to the specified bitmap type.</summary>
      <param name="format">[OutAttribute] Format being compared.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.PositionCollection">
      <summary>Provides a collection of vertex position values.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.PositionCollection.#ctor">
      <summary>Initializes a new instance of PositionCollection.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.SkinnedMaterialContent">
      <summary>Provides properties for modifying an effect for rendering skinned character models.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.SkinnedMaterialContent.#ctor">
      <summary>Creates an instance of this object.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.SkinnedMaterialContent.Alpha">
      <summary>Gets or sets the material alpha.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.SkinnedMaterialContent.AlphaKey">
      <summary>Specifies the key of the key/data pair for the alpha property.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.SkinnedMaterialContent.DiffuseColor">
      <summary>Gets or sets the material diffuse color, which ranges from 0 to 1.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.SkinnedMaterialContent.DiffuseColorKey">
      <summary>Specifies the key of the key/data pair for the material diffuse color.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.SkinnedMaterialContent.EmissiveColor">
      <summary>Gets or sets the emissive color of the effect material.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.SkinnedMaterialContent.EmissiveColorKey">
      <summary>Specifies the key of the key/data pair for the material emissive color.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.SkinnedMaterialContent.SpecularColor">
      <summary>Gets or sets the specular color of this effect material.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.SkinnedMaterialContent.SpecularColorKey">
      <summary>Specifies the key of the key/data pair for the specular color.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.SkinnedMaterialContent.SpecularPower">
      <summary>Gets or sets the specular power of this effect material.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.SkinnedMaterialContent.SpecularPowerKey">
      <summary>Specifies the key of the key/data pair for the specular power.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.SkinnedMaterialContent.Texture">
      <summary>Gets or sets the current texture.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.SkinnedMaterialContent.TextureKey">
      <summary>Specifies the key of the key/data pair for the current texture.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.SkinnedMaterialContent.WeightsPerVertex">
      <summary>Gets or sets the number of per-vertex skinning weights to evaluate, which is either 1, 2, or 4.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Graphics.SkinnedMaterialContent.WeightsPerVertexKey">
      <summary>Specifies the key of the key/data pair for the per-vertex skinning weights.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.Texture2DContent">
      <summary>Represents a regular two-dimensional texture.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.Texture2DContent.#ctor">
      <summary>Initializes a new instance of Texture2DContent.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.Texture2DContent.Mipmaps">
      <summary>Gets or sets the collection of mipmaps containing the texture image data.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.Texture2DContent.Validate(System.Nullable{Microsoft.Xna.Framework.Graphics.GraphicsProfile})">
      <summary>Validates that the required contents of this texture are present, valid and match the capabilities of the device.</summary>
      <param name="targetProfile">The profile identifier that defines the capabilities of the device.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.Texture3DContent">
      <summary>Represents a three-dimensional volume texture.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.Texture3DContent.#ctor">
      <summary>Initializes a new instance of Texture3DContent.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.Texture3DContent.GenerateMipmaps(System.Boolean)">
      <summary>Generates mipmaps for a volume texture.</summary>
      <param name="overwriteExistingMipmaps">true to overwrite existing mipmaps for the volume texture; false otherwise.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.Texture3DContent.Validate(System.Nullable{Microsoft.Xna.Framework.Graphics.GraphicsProfile})">
      <summary>Validates that the required contents of this volume texture are present, valid and match the capabilities of the device.</summary>
      <param name="targetProfile">The profile identifier that defines the capabilities of the device.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent">
      <summary>Provides a base class for all texture objects.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent.#ctor(Microsoft.Xna.Framework.Content.Pipeline.Graphics.MipmapChainCollection)">
      <summary>Initializes a new instance of TextureContent with the specified face collection.</summary>
      <param name="faces">Mipmap chain containing the face collection.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent.ConvertBitmapType(System.Type)">
      <summary>Converts all bitmaps for this texture to a different format.</summary>
      <param name="newBitmapType">Type being converted to. The new type must be a subclass of BitmapContent, such as PixelBitmapContent or DxtBitmapContent.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent.Faces">
      <summary>Collection of image faces that hold a single mipmap chain for a regular 2D texture, six chains for a cube map, or an arbitrary number for volume and array textures.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent.GenerateMipmaps(System.Boolean)">
      <summary>Generates a full set of mipmaps for the texture.</summary>
      <param name="overwriteExistingMipmaps">true if the existing mipmap set is replaced with the new set; false otherwise.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent.Validate(System.Nullable{Microsoft.Xna.Framework.Graphics.GraphicsProfile})">
      <summary>Verifies that all contents of this texture are present, correct and match the capabilities of the device.</summary>
      <param name="targetProfile">The profile identifier that defines the capabilities of the device.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureCubeContent">
      <summary>Provides validation for a cube map texture, which contains an array of six image faces.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureCubeContent.#ctor">
      <summary>Initializes a new instance of TextureCubeContent.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureCubeContent.Validate(System.Nullable{Microsoft.Xna.Framework.Graphics.GraphicsProfile})">
      <summary>Verifies that all contents of the cube map are present, correct and match the capabilities of the device.</summary>
      <param name="targetProfile">The profile identifier that defines the capabilities of the device.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureReferenceDictionary">
      <summary>Provides a collection of named references to texture files.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureReferenceDictionary.#ctor">
      <summary>Initializes a new instance of TextureReferenceDictionary.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VectorConverter">
      <summary>Provides methods for converting data between different packed vector representations.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VectorConverter.GetConverter``2">
      <summary>Gets a Converter delegate that can convert one packed vector representation to another.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VectorConverter.TryGetSurfaceFormat(System.Type,Microsoft.Xna.Framework.Graphics.SurfaceFormat@)">
      <summary>Gets the GPU texture format that corresponds to a managed vector type.</summary>
      <param name="vectorType">Can be one of the following: IPackedVector Single Vector2 Vector3 Vector4</param>
      <param name="surfaceFormat">[OutAttribute] Surface format being compared.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VectorConverter.TryGetVectorType(Microsoft.Xna.Framework.Graphics.SurfaceFormat,System.Type@)">
      <summary>Searches for a managed vector type that corresponds to a GPU texture format.</summary>
      <param name="surfaceFormat">Surface format being compared.</param>
      <param name="vectorType">[OutAttribute] Corresponding managed vector type.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VectorConverter.TryGetVectorType(Microsoft.Xna.Framework.Graphics.VertexElementFormat,System.Type@)">
      <summary>Searches for a managed vector type that corresponds to a GPU vertex format.</summary>
      <param name="vertexElementFormat">Texture format being matched.</param>
      <param name="vectorType">[OutAttribute] Corresponding managed vector type.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VectorConverter.TryGetVertexElementFormat(System.Type,Microsoft.Xna.Framework.Graphics.VertexElementFormat@)">
      <summary>Gets the GPU vertex format that corresponds to a managed vector type.</summary>
      <param name="vectorType">Can be one of the following: IPackedVector Single Vector2 Vector3 Vector4</param>
      <param name="vertexElementFormat">[OutAttribute] Corresponding vertex element type.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannel">
      <summary>Provides methods and properties for maintaining a vertex channel.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannel.Contains(System.Object)">
      <summary>Determines whether the specified element is in the channel.</summary>
      <param name="value">Element being searched for.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannel.CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the channel to an array, starting at the specified index.</summary>
      <param name="array">Array that will receive the copied channel elements.</param>
      <param name="index">Starting index for copy operation.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannel.Count">
      <summary>Gets the number of elements in the vertex channel</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannel.ElementType">
      <summary>Gets the type of data contained in this channel.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannel.GetEnumerator">
      <summary>Gets an enumerator interface for reading channel content.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannel.IndexOf(System.Object)">
      <summary>Gets the index of the specified item.</summary>
      <param name="value">Item whose index is to be retrieved.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannel.Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <param name="index" />
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannel.Name">
      <summary>Gets the name of the vertex channel.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannel.ReadConvertedContent``1">
      <summary>Reads channel content and automatically converts it to the specified vector format.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannel.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value indicating whether access to the collection is synchronized (thread safe).</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannel.System#Collections#ICollection#SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the collection.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannel.System#Collections#IList#Add(System.Object)">
      <summary>Adds a new element to the end of the collection.</summary>
      <param name="value">The element to add.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannel.System#Collections#IList#Clear">
      <summary>Removes all elements from the collection.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannel.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserts an element into the collection at the specified position.</summary>
      <param name="index">Index at which to insert the element.</param>
      <param name="value">The element to insert.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannel.System#Collections#IList#IsFixedSize">
      <summary>Gets a value indicating whether this list has a fixed size.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannel.System#Collections#IList#IsReadOnly">
      <summary>Gets a value indicating whether this object is read-only.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannel.System#Collections#IList#Remove(System.Object)">
      <summary>Removes a specified element from the collection.</summary>
      <param name="value">The element to remove.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannel.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Removes the element at the specified index position.</summary>
      <param name="index">Index of the element to remove.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannel`1">
      <summary>Provides methods and properties for maintaining a vertex channel.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannel`1.Contains(`0)">
      <summary>Determines whether the specified element is in the channel.</summary>
      <param name="item">Element being searched for.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannel`1.CopyTo(`0[],System.Int32)">
      <summary>Copies the elements of the channel to an array, starting at the specified index.</summary>
      <param name="array">Array that will receive the copied channel elements.</param>
      <param name="arrayIndex">Starting index for copy operation.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannel`1.ElementType">
      <summary>Gets the type of data contained in this channel.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannel`1.GetEnumerator">
      <summary>Gets an enumerator interface for reading channel content.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannel`1.IndexOf(`0)">
      <summary>Gets the index of the specified item.</summary>
      <param name="item">Item whose index is to be retrieved.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannel`1.Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <param name="index" />
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannel`1.ReadConvertedContent``1">
      <summary>Reads channel content and automatically converts it to the specified vector format.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannelCollection">
      <summary>Provides methods and properties for managing a list of vertex data channels.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannelCollection.Add``1(System.String,System.Collections.Generic.IEnumerable{``0})">
      <summary>Adds a new vertex channel to the end of the collection.</summary>
      <param name="name">Name of the new channel.</param>
      <param name="channelData">Initial data for the new channel. If null, the channel is filled with the default value for that type.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannelCollection.Add(System.String,System.Type,System.Collections.IEnumerable)">
      <summary>Adds a new vertex channel to the end of the collection.</summary>
      <param name="name">Name of the new channel.</param>
      <param name="elementType">Type of data to be contained in the new channel.</param>
      <param name="channelData">Initial data for the new channel. If null, the channel is filled with the default value for that type.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannelCollection.Clear">
      <summary>Removes all vertex channels from the collection.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannelCollection.Contains(Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannel)">
      <summary>Determines whether the collection contains the specified vertex channel.</summary>
      <param name="item">Name of the channel being searched for.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannelCollection.Contains(System.String)">
      <summary>Determines whether the collection contains the specified vertex channel.</summary>
      <param name="name">Name of the channel being searched for.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannelCollection.ConvertChannelContent``1(System.Int32)">
      <summary>Converts the channel, at the specified index, to another vector format.</summary>
      <param name="index">Index of the channel to be converted.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannelCollection.ConvertChannelContent``1(System.String)">
      <summary>Converts the channel, specified by name to another vector format.</summary>
      <param name="name">Name of the channel to be converted.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannelCollection.Count">
      <summary>Gets the number of vertex channels in the collection.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannelCollection.Get``1(System.Int32)">
      <summary>Gets the vertex channel with the specified index and content type.</summary>
      <param name="index">Index of a vertex channel.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannelCollection.Get``1(System.String)">
      <summary>Gets the vertex channel with the specified name and content type.</summary>
      <param name="name">Name of a vertex channel.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannelCollection.GetEnumerator">
      <summary>Gets an enumerator that iterates through the vertex channels of a collection.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannelCollection.IndexOf(Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannel)">
      <summary>Determines the index of the specified vertex channel.</summary>
      <param name="item">Vertex channel being searched for.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannelCollection.IndexOf(System.String)">
      <summary>Determines the index of a vertex channel with the specified name.</summary>
      <param name="name">Name of the vertex channel being searched for.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannelCollection.Insert``1(System.Int32,System.String,System.Collections.Generic.IEnumerable{``0})">
      <summary>Inserts a new vertex channel at the specified position.</summary>
      <param name="index">Index for channel insertion.</param>
      <param name="name">Name of the new channel.</param>
      <param name="channelData">The new channel.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannelCollection.Insert(System.Int32,System.String,System.Type,System.Collections.IEnumerable)">
      <summary>Inserts a new vertex channel at the specified position.</summary>
      <param name="index">Index for channel insertion.</param>
      <param name="name">Name of the new channel.</param>
      <param name="elementType">Type of the new channel.</param>
      <param name="channelData">Initial data for the new channel. If null, it is filled with the default value.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannelCollection.Item(System.Int32)">
      <summary>Gets or sets the vertex channel at the specified index position.</summary>
      <param name="index" />
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannelCollection.Item(System.String)">
      <summary>Gets or sets the vertex channel with the specified name.</summary>
      <param name="name" />
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannelCollection.Remove(Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannel)">
      <summary>Removes the specified vertex channel from the collection.</summary>
      <param name="item">Name of the vertex channel being removed.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannelCollection.Remove(System.String)">
      <summary>Removes the specified vertex channel from the collection.</summary>
      <param name="name">Name of the vertex channel being removed.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannelCollection.RemoveAt(System.Int32)">
      <summary>Removes the vertex channel at the specified index position.</summary>
      <param name="index">Index of the vertex channel being removed.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannelCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through a collection.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannelNames">
      <summary>Provides properties for managing a collection of vertex channel names.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannelNames.Binormal(System.Int32)">
      <summary>Gets the name of a binormal vector channel with the specified index.</summary>
      <param name="usageIndex">Zero-based index of the vector channel being retrieved.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannelNames.Color(System.Int32)">
      <summary>Gets the name of a color channel with the specified index.</summary>
      <param name="usageIndex">Zero-based index of the color channel being retrieved.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannelNames.DecodeBaseName(System.String)">
      <summary>Gets a channel base name stub from the encoded string format.</summary>
      <param name="encodedName">Encoded string to be decoded.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannelNames.DecodeUsageIndex(System.String)">
      <summary>Gets a channel usage index from the encoded format.</summary>
      <param name="encodedName">Encoded name to be decoded.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannelNames.EncodeName(Microsoft.Xna.Framework.Graphics.VertexElementUsage,System.Int32)">
      <summary>Combines a vertex declaration usage and usage index into a string name.</summary>
      <param name="vertexElementUsage">A vertex declaration.</param>
      <param name="usageIndex">An index for the vertex declaration.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannelNames.EncodeName(System.String,System.Int32)">
      <summary>Combines a channel name stub and usage index into a string name.</summary>
      <param name="baseName">A channel base name stub.</param>
      <param name="usageIndex">A channel usage index.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannelNames.Normal">
      <summary>Gets the name of the primary normal channel.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannelNames.Normal(System.Int32)">
      <summary>Gets the name of the normal channel with the specified index.</summary>
      <param name="usageIndex">Zero-based index of the normal channel being retrieved.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannelNames.Tangent(System.Int32)">
      <summary>Gets the name of the tangent vector channel with the specified index.</summary>
      <param name="usageIndex">Zero-based index of the tangent vector channel being retrieved.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannelNames.TextureCoordinate(System.Int32)">
      <summary>Gets the name of the texture coordinate channel with the specified index.</summary>
      <param name="usageIndex">Zero-based index of the texture coordinate channel being retrieved.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannelNames.TryDecodeUsage(System.String,Microsoft.Xna.Framework.Graphics.VertexElementUsage@)">
      <summary>Gets a vertex declaration usage enumeration from the encoded string format.</summary>
      <param name="encodedName">Encoded name of a vertex declaration.</param>
      <param name="usage">[OutAttribute] Value of the declaration usage for the vertex declaration.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannelNames.Weights">
      <summary>Gets the name of the primary animation weights channel.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexChannelNames.Weights(System.Int32)">
      <summary>Gets the name of an animation weights channel at the specified index.</summary>
      <param name="usageIndex">Index of the animation weight channel to be retrieved.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexContent">
      <summary>Provides methods and properties for maintaining the vertex data of a GeometryContent.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexContent.Add(System.Int32)">
      <summary>Appends a new vertex index to the end of the PositionIndices collection.</summary>
      <param name="positionIndex">Index into the MeshContent.Positions member of the parent.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexContent.AddRange(System.Collections.Generic.IEnumerable{System.Int32})">
      <summary>Appends multiple vertex indices to the end of the PositionIndices collection.</summary>
      <param name="positionIndexCollection">Index into the Positions member of the parent.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexContent.Channels">
      <summary>Gets the list of named vertex data channels in the VertexContent.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexContent.CreateVertexBuffer">
      <summary>Converts design-time vertex position and channel data into a vertex buffer format that a graphics device can recognize.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexContent.Insert(System.Int32,System.Int32)">
      <summary>Inserts a new vertex index to the PositionIndices collection.</summary>
      <param name="index">Vertex index to be inserted.</param>
      <param name="positionIndex">Position of new vertex index in the collection.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexContent.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
      <summary>Inserts multiple vertex indices to the PositionIndices collection.</summary>
      <param name="index">Vertex index to be inserted.</param>
      <param name="positionIndexCollection">Position of the first element of the inserted range in the collection.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexContent.PositionIndices">
      <summary>Gets the list of position indices.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexContent.Positions">
      <summary>Gets position data from the parent mesh object.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexContent.RemoveAt(System.Int32)">
      <summary>Removes a vertex index from the specified location in both PositionIndices and VertexChannel&lt;T&gt;.</summary>
      <param name="index">Index of the vertex to be removed.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexContent.RemoveRange(System.Int32,System.Int32)">
      <summary>Removes a range of vertex indices from the specified location in both PositionIndices and VertexChannel&lt;T&gt;.</summary>
      <param name="index">Index of the first vertex index to be removed.</param>
      <param name="count">Number of indices to remove.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Graphics.VertexContent.VertexCount">
      <summary>Number of vertices for the content.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Processors.CompiledEffectContent">
      <summary>Represents a compiled Effect.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.CompiledEffectContent.#ctor(System.Byte[])">
      <summary>Creates a new instance of the CompiledEffectContent class</summary>
      <param name="effectCode">The compiled effect code.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.CompiledEffectContent.GetEffectCode">
      <summary>Retrieves the compiled byte code for this shader.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Processors.EffectProcessor">
      <summary>Processes a string representation to a platform-specific compiled effect.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.EffectProcessor.#ctor">
      <summary>Initializes a new instance of EffectProcessor.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.EffectProcessor.DebugMode">
      <summary>The debug mode for compiling effects.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.EffectProcessor.Defines">
      <summary>Define assignments for the effect.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.EffectProcessor.Process(Microsoft.Xna.Framework.Content.Pipeline.Graphics.EffectContent,Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext)">
      <summary>Processes the string representation of the specified effect into a platform-specific binary format using the specified context.</summary>
      <param name="input">The effect string to be processed.</param>
      <param name="context">Context for the specified processor.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Processors.EffectProcessorDebugMode">
      <summary>Specifies how debugging of effects is to be supported in PIX.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Processors.EffectProcessorDebugMode.Auto">
      <summary>Enables effect debugging when built with Debug profile.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Processors.EffectProcessorDebugMode.Debug">
      <summary>Enables effect debugging for all profiles. Will produce unoptimized shaders.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Processors.EffectProcessorDebugMode.Optimize">
      <summary>Disables debugging for all profiles, produce optimized shaders.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Processors.FontDescriptionProcessor">
      <summary>Provides methods to convert a font description class containing the name and size of a font into SpriteFontContent. Reference page contains links to related code samples.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.FontDescriptionProcessor.#ctor">
      <summary>Initializes a new instance of FontDescriptionProcessor.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.FontDescriptionProcessor.Process(Microsoft.Xna.Framework.Content.Pipeline.Graphics.FontDescription,Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext)">
      <summary>Creates SpriteFontContent from a FontDescription object.</summary>
      <param name="input">Description of the font to build.</param>
      <param name="context">Context for the specified processor.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Processors.FontTextureProcessor">
      <summary>Provides methods to convert a specially marked 2D bitmap into SpriteFontContent. Reference page contains code snippet demonstrating example usage.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.FontTextureProcessor.#ctor">
      <summary>Initializes a new instance of FontTextureProcessor.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.FontTextureProcessor.FirstCharacter">
      <summary>Gets or sets the value of the First Character processor parameter.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.FontTextureProcessor.GetCharacterForIndex(System.Int32)">
      <summary>Maps a glyph index to a character.</summary>
      <param name="index">The glyph index. This is a zero-based index that corresponds to the position of the glyph in the original character. This value begins at the upper-left corner of the texture and increases when moving to the right and down.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.FontTextureProcessor.PremultiplyAlpha">
      <summary>Specifies whether alpha premultiply of font textures is enabled.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.FontTextureProcessor.Process(Microsoft.Xna.Framework.Content.Pipeline.Graphics.Texture2DContent,Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext)">
      <summary>Creates SpriteFontContent from a bitmap.</summary>
      <param name="input">The bitmap data to convert to a font.</param>
      <param name="context">Context for the specified processor.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.FontTextureProcessor.TextureFormat">
      <summary>Gets or sets the output SurfaceFormat of textures.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Processors.MaterialProcessor">
      <summary>Builds the effects and textures of a MaterialContent object.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.MaterialProcessor.#ctor">
      <summary>Initializes a new instance of the MaterialProcessor class.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.MaterialProcessor.BuildEffect(Microsoft.Xna.Framework.Content.Pipeline.ExternalReference{Microsoft.Xna.Framework.Content.Pipeline.Graphics.EffectContent},Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext)">
      <summary>Builds effect content.</summary>
      <param name="effect">An external reference to the effect content.</param>
      <param name="context">Context for the specified processor.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.MaterialProcessor.BuildTexture(System.String,Microsoft.Xna.Framework.Content.Pipeline.ExternalReference{Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent},Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext)">
      <summary>Builds texture content.</summary>
      <param name="textureName">The name of the texture. This should correspond to the key used to store the texture in Textures.</param>
      <param name="texture">The asset to build. This should be a member of Textures.</param>
      <param name="context">Context for the specified processor.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.MaterialProcessor.ColorKeyColor">
      <summary>Gets or sets the color value to replace with transparent black.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.MaterialProcessor.ColorKeyEnabled">
      <summary>Specifies whether color keying of a texture is enabled.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.MaterialProcessor.DefaultEffect">
      <summary>The default effect type for this instance of MaterialProcessor.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.MaterialProcessor.GenerateMipmaps">
      <summary>Specifies if a full chain of mipmaps are generated from the source material. Existing mipmaps of the material are not replaced.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.MaterialProcessor.PremultiplyTextureAlpha">
      <summary>Specifies whether alpha premultiply of textures is enabled.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.MaterialProcessor.Process(Microsoft.Xna.Framework.Content.Pipeline.Graphics.MaterialContent,Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext)">
      <summary>Builds the texture and effect content for the material.</summary>
      <param name="input">The material content to build.</param>
      <param name="context">Context for the specified processor.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.MaterialProcessor.ResizeTexturesToPowerOfTwo">
      <summary />
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.MaterialProcessor.TextureFormat">
      <summary />
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Processors.MaterialProcessorDefaultEffect">
      <summary>Specifies the default effect type.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Processors.MaterialProcessorDefaultEffect.AlphaTestEffect">
      <summary>An AlphaTestEffect Class effect.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Processors.MaterialProcessorDefaultEffect.BasicEffect">
      <summary>An BasicEffect Class effect.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Processors.MaterialProcessorDefaultEffect.DualTextureEffect">
      <summary>An DualTextureEffect Class effect.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Processors.MaterialProcessorDefaultEffect.EnvironmentMapEffect">
      <summary>An EnvironmentMapEffect Class effect.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Processors.MaterialProcessorDefaultEffect.SkinnedEffect">
      <summary>An SkinnedEffect Class effect.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelBoneContent">
      <summary>Stores design-time data for a ModelBone asset.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelBoneContent.Children">
      <summary>Gets the children of this bone.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelBoneContent.Index">
      <summary>Gets the index of this bone in a ModelBoneContentCollection.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelBoneContent.Name">
      <summary>Gets the bone name.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelBoneContent.Parent">
      <summary>Gets the parent of this bone.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelBoneContent.Transform">
      <summary>Gets or sets the local transformation matrix for this bone.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelBoneContentCollection">
      <summary>A collection of ModelBoneContent objects.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelContent">
      <summary>Stores design-time data for a Model asset.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelContent.Bones">
      <summary>Gets the collection of bones that are referenced by this model.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelContent.Meshes">
      <summary>Gets the collection of meshes that are associated with this model.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelContent.Root">
      <summary>Gets the root bone of this model</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelContent.Tag">
      <summary>Gets a user defined tag object.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelMeshContent">
      <summary>Stores design-time data for a ModelMesh asset.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelMeshContent.BoundingSphere">
      <summary>Gets the bounding sphere for this mesh.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelMeshContent.MeshParts">
      <summary>Gets the children mesh parts associated with this mesh.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelMeshContent.Name">
      <summary>Gets the mesh name.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelMeshContent.ParentBone">
      <summary>Gets the parent bone.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelMeshContent.SourceMesh">
      <summary>Gets the MeshContent source object used when creating this class.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelMeshContent.Tag">
      <summary>Gets a user-defined tag object.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelMeshContentCollection">
      <summary>A collection of ModelMeshContent objects.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelMeshPartContent">
      <summary>Stores design-time data for a ModelMeshPart asset.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelMeshPartContent.IndexBuffer">
      <summary>Gets the index buffer associated with this mesh part.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelMeshPartContent.Material">
      <summary>Gets the material of this mesh part.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelMeshPartContent.NumVertices">
      <summary>Gets the number of vertices used in this mesh part.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelMeshPartContent.PrimitiveCount">
      <summary>Gets the number of primitives to render for this mesh part.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelMeshPartContent.StartIndex">
      <summary>Gets the location in the index buffer at which to start reading vertices.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelMeshPartContent.Tag">
      <summary>Gets a user-defined tag object.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelMeshPartContent.VertexBuffer">
      <summary>Gets the vertex buffer associated with this mesh part.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelMeshPartContent.VertexOffset">
      <summary>Gets the offset, in bytes, from the first index of the of vertex buffer for this mesh part.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelMeshPartContentCollection">
      <summary>Collection of ModelMeshPartContent objects.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelProcessor">
      <summary>Processes a game asset mesh to a model content that is optimal for runtime.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelProcessor.#ctor">
      <summary>Initializes a new instance of ModelProcessor.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelProcessor.ColorKeyColor">
      <summary />
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelProcessor.ColorKeyEnabled">
      <summary>Specifies whether color keying of a model is enabled.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelProcessor.ConvertMaterial(Microsoft.Xna.Framework.Content.Pipeline.Graphics.MaterialContent,Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext)">
      <summary>Called by the framework when the MaterialContent property of a GeometryContent object is encountered in the input node collection.</summary>
      <param name="material">The input material content.</param>
      <param name="context">Context for the specified processor.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelProcessor.DefaultEffect">
      <summary>The default effect type for this instance of ModelProcessor.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelProcessor.GenerateMipmaps">
      <summary />
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelProcessor.GenerateTangentFrames">
      <summary>Gets or sets the value of the Generate Tangent Frames processor parameter.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelProcessor.PremultiplyTextureAlpha">
      <summary>Specifies whether alpha premultiply of textures is enabled.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelProcessor.PremultiplyVertexColors">
      <summary>Specifies if premultiply of vertex colors is enabled.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelProcessor.Process(Microsoft.Xna.Framework.Content.Pipeline.Graphics.NodeContent,Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext)">
      <summary>Converts mesh content to model content.</summary>
      <param name="input">The root node content.</param>
      <param name="context">Context for the specified processor.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelProcessor.ProcessGeometryUsingMaterial(Microsoft.Xna.Framework.Content.Pipeline.Graphics.MaterialContent,System.Collections.Generic.IEnumerable{Microsoft.Xna.Framework.Content.Pipeline.Graphics.GeometryContent},Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext)">
      <summary>Processes all geometry using a specified material.</summary>
      <param name="material">A material used in the scene.</param>
      <param name="geometryCollection">A collection of all the geometry using the specified material.</param>
      <param name="context">Context for the specified processor.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelProcessor.ProcessVertexChannel(Microsoft.Xna.Framework.Content.Pipeline.Graphics.GeometryContent,System.Int32,Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext)">
      <summary>Processes geometry content vertex channels at the specified index.</summary>
      <param name="geometry">The geometry content to process.</param>
      <param name="vertexChannelIndex">Index of the vertex channel to process.</param>
      <param name="context">Context for the specified processor.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelProcessor.ResizeTexturesToPowerOfTwo">
      <summary />
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelProcessor.RotationX">
      <summary>Gets or sets the value of the X Axis Rotation processor parameter.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelProcessor.RotationY">
      <summary>Gets or sets the value of the Y Axis Rotation processor parameter.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelProcessor.RotationZ">
      <summary>Gets or sets the value of the Z Axis Rotation processor parameter.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelProcessor.Scale">
      <summary>Gets or sets the value of the Scale processor parameter.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelProcessor.SwapWindingOrder">
      <summary>Gets or sets the value of the Swap Winding Order processor parameter.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelProcessor.TextureFormat">
      <summary />
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelTextureProcessor">
      <summary>Processes textures for 3D models.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelTextureProcessor.#ctor">
      <summary>Initializes a new instance of the ModelTextureProcessor class.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelTextureProcessor.ColorKeyColor">
      <summary />
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelTextureProcessor.ColorKeyEnabled">
      <summary>Specifies whether color keying of the texture is enabled.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelTextureProcessor.GenerateMipmaps">
      <summary />
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelTextureProcessor.Process(Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent,Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext)">
      <summary>Processes a texture.</summary>
      <param name="input">The texture content to process.</param>
      <param name="context">Context for the specified processor.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelTextureProcessor.ResizeToPowerOfTwo">
      <summary />
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.ModelTextureProcessor.TextureFormat">
      <summary />
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Processors.PassThroughProcessor">
      <summary>Provides an implementation of a no-operation processor that returns an unmodified copy of the input data.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.PassThroughProcessor.#ctor">
      <summary>Initializes a new instance of the PassThroughProcessor class.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.PassThroughProcessor.Process(System.Object,Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext)">
      <summary>No-operation process that simply returns the input argument.</summary>
      <param name="input">The input argument.</param>
      <param name="context">Context for the specified processor.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Processors.SongContent">
      <summary>Represents a processed Song object.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Processors.SongProcessor">
      <summary />
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.SongProcessor.#ctor">
      <summary>Initializes a new instance of SongProcessor.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.SongProcessor.Process(Microsoft.Xna.Framework.Content.Pipeline.Audio.AudioContent,Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext)">
      <summary>Builds the content for the source audio.</summary>
      <param name="input">The audio content to build.</param>
      <param name="context">Context for the specified processor.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.SongProcessor.Quality">
      <summary>Gets or sets the target format quality of the audio content.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Processors.SoundEffectContent">
      <summary>Represents a processed sound effect.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Processors.SoundEffectProcessor">
      <summary />
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.SoundEffectProcessor.#ctor">
      <summary>Initializes a new instance of SoundEffectProcessor.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.SoundEffectProcessor.Process(Microsoft.Xna.Framework.Content.Pipeline.Audio.AudioContent,Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext)">
      <summary>Builds the content for the source audio.</summary>
      <param name="input">The audio content to build.</param>
      <param name="context">Context for the specified processor.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.SoundEffectProcessor.Quality">
      <summary>Gets or sets the target format quality of the sound effect.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Processors.SpriteFontContent">
      <summary>Provides methods and properties for managing a design-time SpriteFont Class holding packed font data.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Processors.SpriteTextureProcessor">
      <summary>Processes textures for use as 2D sprites or user interface components.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.SpriteTextureProcessor.#ctor">
      <summary>Initializes a new instance of the SpriteTextureProcessor class.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.SpriteTextureProcessor.ColorKeyColor">
      <summary />
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.SpriteTextureProcessor.ColorKeyEnabled">
      <summary>Specifies whether color keying of the texture is enabled.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.SpriteTextureProcessor.GenerateMipmaps">
      <summary />
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.SpriteTextureProcessor.Process(Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent,Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext)">
      <summary>Processes a texture for use as 2D sprites or user interface components.</summary>
      <param name="input">The input texture content.</param>
      <param name="context">Context for the specified processor.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.SpriteTextureProcessor.ResizeToPowerOfTwo">
      <summary />
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.SpriteTextureProcessor.TextureFormat">
      <summary />
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Processors.TextureProcessor">
      <summary>Provides methods for processing textures.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.TextureProcessor.#ctor">
      <summary>Initializes a new instance of the TextureProcessor class.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.TextureProcessor.ColorKeyColor">
      <summary />
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.TextureProcessor.ColorKeyEnabled">
      <summary>Specifies whether color keying of a texture is enabled.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.TextureProcessor.GenerateMipmaps">
      <summary />
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.TextureProcessor.PremultiplyAlpha">
      <summary>Specifies whether alpha premultiply of textures is enabled.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.TextureProcessor.Process(Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent,Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext)">
      <summary>Processes a texture.</summary>
      <param name="input">The texture content to process.</param>
      <param name="context">Context for the specified processor.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.TextureProcessor.ResizeToPowerOfTwo">
      <summary />
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.TextureProcessor.TextureFormat">
      <summary />
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Processors.TextureProcessorOutputFormat">
      <summary />
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Processors.TextureProcessorOutputFormat.Color">
      <summary>The SurfaceFormat value, of the input TextureContent object, is converted to Color by the processor. Typically used for 2D graphics and overlays.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Processors.TextureProcessorOutputFormat.DxtCompressed">
      <summary>The SurfaceFormat value, of the input TextureContent object, is converted to an appropriate DXT compression by the processor. If the input texture contains fractional alpha values, it is converted to DXT5 format (8 bits per texel); otherwise it is converted to DXT1 (4 bits per texel). This conversion reduces the resource's size on the graphics card. Typically used for 3D textures such as 3D model textures.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Processors.TextureProcessorOutputFormat.NoChange">
      <summary>The SurfaceFormat value, of the input TextureContent object, is not changed by the processor. Typically used for textures processed by an external tool.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Processors.VertexBufferContent">
      <summary>Provides methods and properties for managing a design-time vertex buffer that holds packed vertex data.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.VertexBufferContent.#ctor">
      <summary>Initializes a new instance of VertexBufferContent.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.VertexBufferContent.#ctor(System.Int32)">
      <summary>Initializes a new instance of VertexBufferContent of the specified size.</summary>
      <param name="size">The size of the vertex buffer content, in bytes.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.VertexBufferContent.SizeOf(System.Type)">
      <summary>Gets the size of the specified type, in bytes.</summary>
      <param name="type">The type.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.VertexBufferContent.VertexData">
      <summary />
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.VertexBufferContent.VertexDeclaration">
      <summary>Gets the associated VertexDeclarationContent object.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.VertexBufferContent.Write``1(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{``0})">
      <summary />
      <param name="offset">Offset to begin writing at.</param>
      <param name="stride">Stride of the data being written (in bytes).</param>
      <param name="data">Enumerated collection of data.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.VertexBufferContent.Write(System.Int32,System.Int32,System.Type,System.Collections.IEnumerable)">
      <summary />
      <param name="offset">Offset at which to begin writing.</param>
      <param name="stride">Stride of the data being written (in bytes).</param>
      <param name="dataType">The type of data to be written.</param>
      <param name="data">The data to write.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Processors.VertexDeclarationContent">
      <summary>Provides methods and properties for maintaining the vertex declaration data of a VertexContent.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.VertexDeclarationContent.#ctor">
      <summary>Initializes a new instance of VertexDeclarationContent.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.VertexDeclarationContent.VertexElements">
      <summary>Gets the VertexElement object of the vertex declaration.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.VertexDeclarationContent.VertexStride">
      <summary>The number of bytes from one vertex to the next.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Processors.VideoProcessor">
      <summary>Processes videos for playback within a game.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.VideoProcessor.#ctor">
      <summary>Initializes a new instance of VideoProcessor.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Processors.VideoProcessor.Process(Microsoft.Xna.Framework.Content.Pipeline.VideoContent,Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext)">
      <summary>Processes a video.</summary>
      <param name="input">The video content to process.</param>
      <param name="context">Context for the processor.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Processors.VideoProcessor.VideoSoundtrackType">
      <summary>Gets or sets the VideoSoundtrackType for this video.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentCompiler">
      <summary>Provides methods for writing compiled binary format.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentCompiler.GetTypeWriter(System.Type)">
      <summary>Retrieves the worker writer for the specified type.</summary>
      <param name="type">The type.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter">
      <summary>Provides methods and properties for compiling a specific managed type into a binary format.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter.#ctor(System.Type)">
      <summary>Initializes a new instance of the ContentTypeWriter class.</summary>
      <param name="targetType">The target type the ContentTypeWriter.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter.CanDeserializeIntoExistingObject">
      <summary>Determines if deserialization into an existing object is possible.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter.GetRuntimeReader(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform)">
      <summary>Gets the assembly qualified name of the runtime loader for this type.</summary>
      <param name="targetPlatform">Name of the platform.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter.GetRuntimeType(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform)">
      <summary />
      <param name="targetPlatform">The target platform.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter.Initialize(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentCompiler)">
      <summary />
      <param name="compiler">The content compiler.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter.ShouldCompressContent(Microsoft.Xna.Framework.Content.Pipeline.TargetPlatform,System.Object)">
      <summary>Indicates whether a given type of content should be compressed.</summary>
      <param name="targetPlatform">The target platform of the content build.</param>
      <param name="value">The object about to be serialized, or null if a collection of objects is to be serialized.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter.TargetType">
      <summary>Gets the type handled by this compiler component.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter.TypeVersion">
      <summary>Gets a format version number for this type.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter.Write(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter,System.Object)">
      <summary>Compiles an object into binary format.</summary>
      <param name="output">The content writer serializing the value.</param>
      <param name="value">The resultant object.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter`1">
      <summary>Provides a generic implementation of ContentTypeWriter methods and properties for compiling a specific managed type into a binary format.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter`1.#ctor">
      <summary>Initializes a new instance of the ContentTypeWriter class.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter`1.Write(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter,System.Object)">
      <summary>Compiles a strongly typed object into binary format.</summary>
      <param name="output">The content writer serializing the value.</param>
      <param name="value">The value to write.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter`1.Write(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter,`0)">
      <summary>Compiles a strongly typed object into binary format.</summary>
      <param name="output">The content writer serializing the value.</param>
      <param name="value">The value to write.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriterAttribute">
      <summary />
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriterAttribute.#ctor">
      <summary>Initializes a new instance of the ContentTypeWriterAttribute class.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter">
      <summary>Provides an implementation for many of the ContentCompiler methods including compilation, state tracking for shared resources and creation of the header type manifest.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter.TargetPlatform">
      <summary>Gets the content build target platform.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter.TargetProfile">
      <summary>Gets or sets the target graphics profile.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter.Write(Microsoft.Xna.Framework.Color)">
      <summary>Writes a Color value.</summary>
      <param name="value">Value of a color using Red, Green, Blue, and Alpha values to write.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter.Write(Microsoft.Xna.Framework.Matrix)">
      <summary>Writes a Matrix value.</summary>
      <param name="value">Value to write.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter.Write(Microsoft.Xna.Framework.Quaternion)">
      <summary>Writes a Quaternion value.</summary>
      <param name="value">Value to write.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter.Write(Microsoft.Xna.Framework.Vector2)">
      <summary>Writes a Vector2 value.</summary>
      <param name="value">Value to write.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter.Write(Microsoft.Xna.Framework.Vector3)">
      <summary>Writes a Vector3 value.</summary>
      <param name="value">Value to write.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter.Write(Microsoft.Xna.Framework.Vector4)">
      <summary>Writes a Vector4 value.</summary>
      <param name="value">Value to write.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter.WriteExternalReference``1(Microsoft.Xna.Framework.Content.Pipeline.ExternalReference{``0})">
      <summary>Writes the name of an external file to the output binary.</summary>
      <param name="reference">External reference to a data file for the content item.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter.WriteObject``1(``0)">
      <summary>Writes a single object preceded by a type identifier to the output binary.</summary>
      <param name="value">The value to write.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter.WriteObject``1(``0,Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter)">
      <summary>Writes a single object to the output binary, using the specified type hint and writer worker.</summary>
      <param name="value">The value to write.</param>
      <param name="typeWriter">The content type writer.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter.WriteRawObject``1(``0)">
      <summary>Writes a single object to the output binary as an instance of the specified type.</summary>
      <param name="value">The value to write.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter.WriteRawObject``1(``0,Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentTypeWriter)">
      <summary>Writes a single object to the output binary using the specified writer worker.</summary>
      <param name="value">The value to write.</param>
      <param name="typeWriter">The writer worker. This should be looked up from the Initialize method of the ContentTypeWriter that is calling WriteRawObject, by calling GetTypeWriter.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.ContentWriter.WriteSharedResource``1(``0)">
      <summary>Adds a shared reference to the output binary and records the object to be serialized later.</summary>
      <param name="value">The object to record.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.ContentTypeSerializer">
      <summary>Provides methods for serializing and deserializing a specific managed type.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.ContentTypeSerializer.#ctor(System.Type)">
      <summary>Initializes a new instance of the ContentTypeSerializer class for serializing the specified type.</summary>
      <param name="targetType">The target type.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.ContentTypeSerializer.#ctor(System.Type,System.String)">
      <summary>Initializes a new instance of the ContentTypeSerializer class for serializing the specified type using the specified XML shortcut name.</summary>
      <param name="targetType">The target type.</param>
      <param name="xmlTypeName">The XML shortcut name.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.ContentTypeSerializer.CanDeserializeIntoExistingObject">
      <summary>Gets a value indicating whether this component may load data into an existing object or if it must it construct a new instance of the object before loading the data.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.ContentTypeSerializer.Deserialize(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateReader,Microsoft.Xna.Framework.Content.ContentSerializerAttribute,System.Object)">
      <summary>Deserializes an object from intermediate XML format.</summary>
      <param name="input">Location of the intermediate XML and various deserialization helpers.</param>
      <param name="format">Specifies the intermediate source XML format.</param>
      <param name="existingInstance">The object containing the received data, or null if the deserializer should construct a new instance.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.ContentTypeSerializer.Initialize(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateSerializer)">
      <summary>Retrieves and caches any nested type serializers and allows reflection over the target data type.</summary>
      <param name="serializer">The content serializer.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.ContentTypeSerializer.ObjectIsEmpty(System.Object)">
      <summary>Queries whether an object contains data to be serialized.</summary>
      <param name="value">The object to query.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.ContentTypeSerializer.ScanChildren(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateSerializer,Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.ContentTypeSerializer.ChildCallback,System.Object)">
      <summary>Examines the children of the specified object, passing each to a callback delegate.</summary>
      <param name="serializer">The content serializer.</param>
      <param name="callback">The method to be called for each examined child.</param>
      <param name="value">The object whose children are being scanned.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.ContentTypeSerializer.Serialize(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateWriter,System.Object,Microsoft.Xna.Framework.Content.ContentSerializerAttribute)">
      <summary>Serializes an object to intermediate XML format.</summary>
      <param name="output">Specifies the intermediate XML location, and provides various serialization helpers.</param>
      <param name="value">The object to be serialized.</param>
      <param name="format">Specifies the content format for this object.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.ContentTypeSerializer.TargetType">
      <summary>Gets the type handled by this serializer component.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.ContentTypeSerializer.XmlTypeName">
      <summary>Gets a short-form XML name for the target type, or null if there is none.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.ContentTypeSerializer`1">
      <summary>Provides a generic implementation of ContentTypeSerializer methods and properties for serializing and deserializing a specific managed type.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.ContentTypeSerializer`1.#ctor">
      <summary>Initializes a new instance of the ContentTypeSerializer class.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.ContentTypeSerializer`1.#ctor(System.String)">
      <summary>Initializes a new instance of the ContentTypeSerializer class using the specified XML shortcut name.</summary>
      <param name="xmlTypeName">The XML shortcut name.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.ContentTypeSerializer`1.Deserialize(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateReader,Microsoft.Xna.Framework.Content.ContentSerializerAttribute,System.Object)">
      <summary>Deserializes an object from intermediate XML format.</summary>
      <param name="input">Location of the intermediate XML and various deserialization helpers.</param>
      <param name="format">Specifies the intermediate source XML format.</param>
      <param name="existingInstance">The object containing the received data, or null if the deserializer should construct a new instance.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.ContentTypeSerializer`1.Deserialize(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateReader,Microsoft.Xna.Framework.Content.ContentSerializerAttribute,`0)">
      <summary>Deserializes a strongly typed object from intermediate XML format.</summary>
      <param name="input">Location of the intermediate XML and various deserialization helpers.</param>
      <param name="format">Specifies the intermediate source XML format.</param>
      <param name="existingInstance">The strongly typed object containing the received data, or null if the deserializer should construct a new instance.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.ContentTypeSerializer`1.ObjectIsEmpty(System.Object)">
      <summary>Queries whether a strongly-typed object contains data to be serialized.</summary>
      <param name="value">The object to query.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.ContentTypeSerializer`1.ObjectIsEmpty(`0)">
      <summary>Queries whether an object contains data to be serialized.</summary>
      <param name="value">The object to query.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.ContentTypeSerializer`1.ScanChildren(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateSerializer,Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.ContentTypeSerializer.ChildCallback,System.Object)">
      <summary>Examines the children of the specified object, passing each to a callback delegate.</summary>
      <param name="serializer">The content serializer.</param>
      <param name="callback">The method to be called for each examined child.</param>
      <param name="value">The object whose children are being scanned.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.ContentTypeSerializer`1.ScanChildren(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateSerializer,Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.ContentTypeSerializer.ChildCallback,`0)">
      <summary>Examines the children of the specified object, passing each to a callback delegate.</summary>
      <param name="serializer">The content serializer.</param>
      <param name="callback">The method to be called for each examined child.</param>
      <param name="value">The strongly typed object whose children are being scanned.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.ContentTypeSerializer`1.Serialize(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateWriter,System.Object,Microsoft.Xna.Framework.Content.ContentSerializerAttribute)">
      <summary>Serializes an object to intermediate XML format.</summary>
      <param name="output">Specifies the intermediate XML location, and provides various serialization helpers.</param>
      <param name="value">The object to be serialized.</param>
      <param name="format">Specifies the content format for this object.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.ContentTypeSerializer`1.Serialize(Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateWriter,`0,Microsoft.Xna.Framework.Content.ContentSerializerAttribute)">
      <summary>Serializes an object to intermediate XML format.</summary>
      <param name="output">Specifies the intermediate XML location, and provides various serialization helpers.</param>
      <param name="value">The strongly typed object to be serialized.</param>
      <param name="format">Specifies the content format for this object.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.ContentTypeSerializer.ChildCallback">
      <summary>Callback delegate for the ScanChildren method.</summary>
      <param name="typeSerializer">The serializer component used to read or write the child object.</param>
      <param name="value">The child object currently being scanned.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.ContentTypeSerializerAttribute">
      <summary>Identifies type serializer components.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.ContentTypeSerializerAttribute.#ctor">
      <summary>Initializes a new isntance of the ContentTypeSerializerAttribute class.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateReader">
      <summary>Provides an implementation of many of the methods of IntermediateSerializer. Deserializes and tracks state for shared resources and external references.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateReader.MoveToElement(System.String)">
      <summary>Moves to the specified element if the element name exists.</summary>
      <param name="elementName">The element name.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateReader.ReadExternalReference``1(Microsoft.Xna.Framework.Content.Pipeline.ExternalReference{``0})">
      <summary>Reads an external reference ID and records it for subsequent operations.</summary>
      <param name="existingInstance">The object receiving the data, or null if a new instance of the object should be created.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateReader.ReadObject``1(Microsoft.Xna.Framework.Content.ContentSerializerAttribute)">
      <summary>Reads a single object from the input XML stream.</summary>
      <param name="format">The format expected by the type serializer.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateReader.ReadObject``1(Microsoft.Xna.Framework.Content.ContentSerializerAttribute,Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.ContentTypeSerializer)">
      <summary>Reads a single object from the input XML stream, using the specified type hint.</summary>
      <param name="format">The format of the XML.</param>
      <param name="typeSerializer">The type serializer.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateReader.ReadObject``1(Microsoft.Xna.Framework.Content.ContentSerializerAttribute,Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.ContentTypeSerializer,``0)">
      <summary>Reads a single object from the input XML stream using the specified type hint, optionally specifying an existing instance to receive the data.</summary>
      <param name="format">The format of the XML.</param>
      <param name="typeSerializer">The type serializer.</param>
      <param name="existingInstance">The object receiving the data, or null if a new instance should be created.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateReader.ReadObject``1(Microsoft.Xna.Framework.Content.ContentSerializerAttribute,``0)">
      <summary>Reads a single object from the input XML stream, optionally specifying an existing instance to receive the data.</summary>
      <param name="format">The format expected by the type serializer.</param>
      <param name="existingInstance">The object receiving the data, or null if a new instance should be created.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateReader.ReadRawObject``1(Microsoft.Xna.Framework.Content.ContentSerializerAttribute)">
      <summary>Reads a single object from the input XML stream as an instance of the specified type, optionally specifying an existing instance to receive the data.</summary>
      <param name="format">The format of the XML.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateReader.ReadRawObject``1(Microsoft.Xna.Framework.Content.ContentSerializerAttribute,Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.ContentTypeSerializer)">
      <summary>Reads a single object from the input XML stream as an instance of the specified type using the specified type hint.</summary>
      <param name="format">The format of the XML.</param>
      <param name="typeSerializer">The type serializer.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateReader.ReadRawObject``1(Microsoft.Xna.Framework.Content.ContentSerializerAttribute,Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.ContentTypeSerializer,``0)">
      <summary>Reads a single object from the input XML stream as an instance of the specified type using the specified type hint, optionally specifying an existing instance to receive the data.</summary>
      <param name="format">The format of the XML.</param>
      <param name="typeSerializer">The type serializer.</param>
      <param name="existingInstance">The object receiving the data, or null if a new instance should be created.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateReader.ReadRawObject``1(Microsoft.Xna.Framework.Content.ContentSerializerAttribute,``0)">
      <summary>Reads a single object from the input XML stream, as an instance of the specified type.</summary>
      <param name="format">The object.</param>
      <param name="existingInstance">The object receiving the data, or null if a new instance should be created.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateReader.ReadSharedResource``1(Microsoft.Xna.Framework.Content.ContentSerializerAttribute,System.Action{``0})">
      <summary>Reads a shared resource ID and records it for subsequent operations.</summary>
      <param name="format">The format of the XML.</param>
      <param name="fixup">The fixup operation to perform.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateReader.ReadTypeName">
      <summary>Reads and decodes a type descriptor from the XML input stream.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateReader.Serializer">
      <summary>Gets the parent serializer.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateReader.Xml">
      <summary>Gets the XML input stream.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateSerializer">
      <summary>Provides methods for reading and writing XNA intermediate XML format.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateSerializer.Deserialize``1(System.Xml.XmlReader,System.String)">
      <summary>Deserializes an intermediate XML file into a managed object.</summary>
      <param name="input">Intermediate XML file.</param>
      <param name="referenceRelocationPath">Final name of the output file used to relative encode external reference filenames.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateSerializer.GetTypeSerializer(System.Type)">
      <summary>Retrieves the worker serializer for a specified type.</summary>
      <param name="type">The type.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateSerializer.Serialize``1(System.Xml.XmlWriter,``0,System.String)">
      <summary>Serializes an object into an intermediate XML file.</summary>
      <param name="output">The output XML stream.</param>
      <param name="value">The object to be serialized.</param>
      <param name="referenceRelocationPath">Final name of the output file, used to relative encode external reference filenames.</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateWriter">
      <summary>Provides an implementation of many of the methods of IntermediateSerializer including serialization and state tracking for shared resources and external references.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateWriter.Serializer">
      <summary>Gets the parent serializer.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateWriter.WriteExternalReference``1(Microsoft.Xna.Framework.Content.Pipeline.ExternalReference{``0})">
      <summary>Adds an external reference to the output XML, and records the filename to be serialized later.</summary>
      <param name="value">The external reference to add.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateWriter.WriteObject``1(``0,Microsoft.Xna.Framework.Content.ContentSerializerAttribute)">
      <summary>Writes a single object to the output XML stream.</summary>
      <param name="value">The value to write.</param>
      <param name="format">The format of the XML.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateWriter.WriteObject``1(``0,Microsoft.Xna.Framework.Content.ContentSerializerAttribute,Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.ContentTypeSerializer)">
      <summary>Writes a single object to the output XML stream, using the specified type hint.</summary>
      <param name="value">The value to write.</param>
      <param name="format">The format of the XML.</param>
      <param name="typeSerializer">The type serializer.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateWriter.WriteRawObject``1(``0,Microsoft.Xna.Framework.Content.ContentSerializerAttribute)">
      <summary>Writes a single object to the output XML stream using the specified serializer worker.</summary>
      <param name="value">The value to write.</param>
      <param name="format">The format of the XML.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateWriter.WriteRawObject``1(``0,Microsoft.Xna.Framework.Content.ContentSerializerAttribute,Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.ContentTypeSerializer)">
      <summary>Writes a single object to the output XML stream as an instance of the specified type.</summary>
      <param name="value">The value to write.</param>
      <param name="format">The format of the XML.</param>
      <param name="typeSerializer">The type serializer.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateWriter.WriteSharedResource``1(``0,Microsoft.Xna.Framework.Content.ContentSerializerAttribute)">
      <summary>Adds a shared reference to the output XML and records the object to be serialized later.</summary>
      <param name="value">The value to write.</param>
      <param name="format">The format of the XML.</param>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateWriter.WriteTypeName(System.Type)">
      <summary>Writes a managed type descriptor to the XML output stream.</summary>
      <param name="type">The type.</param>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Serialization.Intermediate.IntermediateWriter.Xml">
      <summary>Gets the XML output stream.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Tasks.BuildContent">
      <summary>Provides methods and properties for importing and processing game assets into a binary format.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Tasks.BuildContent.#ctor">
      <summary>Initializes a new instance of BuildContent.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Tasks.BuildContent.BuildConfiguration">
      <summary>Gets or sets the content build configuration name.</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Content.Pipeline.Tasks.BuildContent.CancelEventNameFormat">
      <summary>The format specifier for the named event used to cancel the build.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Tasks.BuildContent.CompressContent">
      <summary>Gets or sets the content compression flag.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Tasks.BuildContent.Execute">
      <summary>Executes the related build task.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Tasks.BuildContent.IntermediateDirectory">
      <summary>Gets or sets the directory for storing temporary build files.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Tasks.BuildContent.IntermediateFiles">
      <summary />
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Tasks.BuildContent.LoggerRootDirectory">
      <summary>Gets or sets the base reference path used when reporting errors during the content build process.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Tasks.BuildContent.OutputContentFiles">
      <summary />
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Tasks.BuildContent.OutputDirectory">
      <summary>Gets or sets the output directory for the final build results.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Tasks.BuildContent.PipelineAssemblies">
      <summary>Gets or sets the names of assemblies that provide Importer&lt;T&gt; or ContentProcessor&lt;T&gt; components for use by the build.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Tasks.BuildContent.PipelineAssemblyDependencies">
      <summary>Gets or sets the dependencies of the pipeline assemblies.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Tasks.BuildContent.RebuildAll">
      <summary>Gets or sets the force rebuild flag.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Tasks.BuildContent.RebuiltContentFiles">
      <summary />
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Tasks.BuildContent.RootDirectory">
      <summary>Gets or sets the base path for the entire content build process.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Tasks.BuildContent.SourceAssets">
      <summary>Gets or sets the source asset files to be built.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Tasks.BuildContent.TargetPlatform">
      <summary>Gets or sets the content build target platform.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Tasks.BuildContent.TargetProfile">
      <summary>Gets or sets the target graphics profile.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Tasks.BuildXact">
      <summary>An MSBuild task that provides incremental build capabilities for XACT projects.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Tasks.BuildXact.#ctor">
      <summary>Initializes a new instance of BuildXact.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Tasks.BuildXact.BuildConfiguration">
      <summary>Gets or sets the content build configuration name.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Tasks.BuildXact.Execute">
      <summary>Executes the BuildXact task.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Tasks.BuildXact.IntermediateDirectory">
      <summary>Gets or sets the directory for storing temporary build files.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Tasks.BuildXact.IntermediateFiles">
      <summary>Gets the names of the intermediate files used internally by the build.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Tasks.BuildXact.LoggerRootDirectory">
      <summary>Gets or sets the base reference path used when reporting errors during the content build process.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Tasks.BuildXact.OutputDirectory">
      <summary>Gets or sets the directory for the final build results.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Tasks.BuildXact.OutputXactFiles">
      <summary>Gets the names of all files produced by the build, regardless of any incremental optimizations.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Tasks.BuildXact.RebuildAll">
      <summary>Gets or sets the force rebuild flag.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Tasks.BuildXact.RebuiltXactFiles">
      <summary>Gets the names of files modified by an incremental rebuild.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Tasks.BuildXact.RootDirectory">
      <summary>Gets or sets the base directory for the entire content build process.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Tasks.BuildXact.TargetPlatform">
      <summary>Gets or sets the content build target platform.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Tasks.BuildXact.TargetProfile">
      <summary>Gets or sets the target graphics profile.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Tasks.BuildXact.XactProjects">
      <summary>Gets or sets the XACT project files to be built.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Tasks.BuildXact.XnaFrameworkVersion">
      <summary>Gets or sets XNA framework version, used to determine the xactbld3.exe path.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Tasks.CleanContent">
      <summary>An MSBuild task for deleting all the intermediate and output files that were created by a previous Content Pipeline build operation.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Tasks.CleanContent.#ctor">
      <summary>Instantiates a new instance of this MSBuild task for deleting all the intermediate and output files that were created by a previous Content Pipeline build operation.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Tasks.CleanContent.BuildConfiguration">
      <summary>Gets or sets the content build configuration name.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Tasks.CleanContent.Execute">
      <summary>Removes all intermediate and output files that were created by a previous Content Pipeline build operation.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Tasks.CleanContent.IntermediateDirectory">
      <summary>Gets or sets the directory for storing temporary build files.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Tasks.CleanContent.OutputDirectory">
      <summary>Gets or sets the output directory for the final build results.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Tasks.CleanContent.RootDirectory">
      <summary>Gets or sets the base path for the entire content build process.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Tasks.CleanContent.TargetPlatform">
      <summary>Gets or sets the content build target platform.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Tasks.CleanContent.TargetProfile">
      <summary>Gets or sets the target graphics profile.</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Content.Pipeline.Tasks.GetLastOutputs">
      <summary>Provides methods and properties for getting the names of all output content files from the content pipeline's cache file.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Tasks.GetLastOutputs.#ctor">
      <summary>Creates a new instance of GetLastOutputs.</summary>
    </member>
    <member name="M:Microsoft.Xna.Framework.Content.Pipeline.Tasks.GetLastOutputs.Execute">
      <summary>Executes the related task using MSBuild.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Tasks.GetLastOutputs.IntermediateDirectory">
      <summary>Gets or sets the directory containing the cache file to be retrieved.</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Content.Pipeline.Tasks.GetLastOutputs.OutputContentFiles">
      <summary />
    </member>
  </members>
</doc>
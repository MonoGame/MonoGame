<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SharpDX.Direct2D1</name>
    </assembly>
    <members>
        <member name="T:SharpDX.Direct2D1.Bitmap1">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Bitmap1']/*"/>	
            <unmanaged>ID2D1Bitmap1</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.Bitmap">
            <summary>	
            Represents a bitmap that has been bound to an <see cref="T:SharpDX.Direct2D1.RenderTarget"/>.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Bitmap']/*"/>	
            <unmanaged>ID2D1Bitmap</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.Image">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Image']/*"/>	
            <unmanaged>ID2D1Image</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.Resource">
            <summary>	
            Represents a Direct2D drawing resource.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Resource']/*"/>	
            <unmanaged>ID2D1Resource</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Resource.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.Resource"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.Resource.GetFactory(SharpDX.Direct2D1.Factory@)">
            <summary>	
            Retrieves the factory associated with this resource.	
            </summary>	
            <param name="factory"><para>When this method returns, contains a reference to a reference to the factory that created this resource. This parameter is passed uninitialized.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Resource::GetFactory']/*"/>	
            <unmanaged>void ID2D1Resource::GetFactory([Out] ID2D1Factory** factory)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct2D1.Resource.Factory">
            <summary>	
            Retrieves the factory associated with this resource.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Resource::GetFactory']/*"/>	
            <unmanaged>GetFactory</unmanaged>	
            <unmanaged>void ID2D1Resource::GetFactory([Out] ID2D1Factory** factory)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Image.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.Image"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap.#ctor(SharpDX.Direct2D1.RenderTarget,SharpDX.DrawingSize)">
            <summary>	
            Creates a Direct2D bitmap from a pointer to in-memory source data.	
            </summary>	
            <param name="renderTarget">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <param name="size">The dimension of the bitmap to create in pixels.</param>
            <unmanaged>HRESULT ID2D1RenderTarget::CreateBitmap([In] D2D_SIZE_U size,[In, Optional] const void* srcData,[In] unsigned int pitch,[In] const D2D1_BITMAP_PROPERTIES* bitmapProperties,[Out, Fast] ID2D1Bitmap** bitmap)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap.#ctor(SharpDX.Direct2D1.RenderTarget,SharpDX.DrawingSize,SharpDX.Direct2D1.BitmapProperties)">
            <summary>	
            Creates a Direct2D bitmap from a pointer to in-memory source data.	
            </summary>	
            <param name="renderTarget">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <param name="size">The dimension of the bitmap to create in pixels.</param>
            <param name="bitmapProperties">The pixel format and dots per inch (DPI) of the bitmap to create.</param>
            <unmanaged>HRESULT ID2D1RenderTarget::CreateBitmap([In] D2D_SIZE_U size,[In, Optional] const void* srcData,[In] unsigned int pitch,[In] const D2D1_BITMAP_PROPERTIES* bitmapProperties,[Out, Fast] ID2D1Bitmap** bitmap)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap.#ctor(SharpDX.Direct2D1.RenderTarget,SharpDX.DrawingSize,SharpDX.DataStream,System.Int32)">
            <summary>	
            Creates a Direct2D bitmap from a pointer to in-memory source data.	
            </summary>	
            <param name="renderTarget">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <param name="size">The dimension of the bitmap to create in pixels.</param>
            <param name="dataStream">A pointer to the memory location of the image data, or NULL to create an uninitialized bitmap.</param>
            <param name="pitch">The byte count of each scanline, which is equal to (the image width in pixels * the number of bytes per pixel) + memory padding. If srcData is NULL, this value is ignored. (Note that pitch is also sometimes called stride.)</param>
            <unmanaged>HRESULT ID2D1RenderTarget::CreateBitmap([In] D2D_SIZE_U size,[In, Optional] const void* srcData,[In] unsigned int pitch,[In] const D2D1_BITMAP_PROPERTIES* bitmapProperties,[Out, Fast] ID2D1Bitmap** bitmap)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap.#ctor(SharpDX.Direct2D1.RenderTarget,SharpDX.DrawingSize,SharpDX.DataStream,System.Int32,SharpDX.Direct2D1.BitmapProperties)">
            <summary>	
            Creates a Direct2D bitmap from a pointer to in-memory source data.	
            </summary>	
            <param name="renderTarget">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <param name="size">The dimension of the bitmap to create in pixels.</param>
            <param name="dataStream">A pointer to the memory location of the image data, or NULL to create an uninitialized bitmap.</param>
            <param name="pitch">The byte count of each scanline, which is equal to (the image width in pixels * the number of bytes per pixel) + memory padding. If srcData is NULL, this value is ignored. (Note that pitch is also sometimes called stride.)</param>
            <param name="bitmapProperties">The pixel format and dots per inch (DPI) of the bitmap to create.</param>
            <unmanaged>HRESULT ID2D1RenderTarget::CreateBitmap([In] D2D_SIZE_U size,[In, Optional] const void* srcData,[In] unsigned int pitch,[In] const D2D1_BITMAP_PROPERTIES* bitmapProperties,[Out, Fast] ID2D1Bitmap** bitmap)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap.#ctor(SharpDX.Direct2D1.RenderTarget,SharpDX.Direct2D1.Bitmap)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.Bitmap"/> whose data is shared with another resource.	
            </summary>	
            <param name="renderTarget">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <param name="bitmap">An <see cref="T:SharpDX.Direct2D1.Bitmap"/> that contains the data to share with the new ID2D1Bitmap. For more information, see the Remarks section.</param>
            <unmanaged>HRESULT ID2D1RenderTarget::CreateSharedBitmap([In] const GUID&amp; riid,[In] void* data,[In, Optional] const D2D1_BITMAP_PROPERTIES* bitmapProperties,[Out, Fast] ID2D1Bitmap** bitmap)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap.#ctor(SharpDX.Direct2D1.RenderTarget,SharpDX.Direct2D1.Bitmap,System.Nullable{SharpDX.Direct2D1.BitmapProperties})">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.Bitmap"/> whose data is shared with another resource.	
            </summary>	
            <param name="renderTarget">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <param name="bitmap">An <see cref="T:SharpDX.Direct2D1.Bitmap"/> that contains the data to share with the new ID2D1Bitmap. For more information, see the Remarks section.</param>
            <param name="bitmapProperties">The pixel format  and DPI of the bitmap to create . The <see cref="T:SharpDX.DXGI.Format"/> portion of the pixel format  must match the <see cref="T:SharpDX.DXGI.Format"/> of data or the method will fail, but the alpha modes don't have to match. To prevent a  mismatch, you can pass NULL or the value obtained from the {{D2D1::PixelFormat}} helper function. The DPI settings do not have to match those of data. If both dpiX and dpiY are  0.0f, the default DPI, 96, is used.</param>
            <unmanaged>HRESULT ID2D1RenderTarget::CreateSharedBitmap([In] const GUID&amp; riid,[In] void* data,[In, Optional] const D2D1_BITMAP_PROPERTIES* bitmapProperties,[Out, Fast] ID2D1Bitmap** bitmap)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap.#ctor(SharpDX.Direct2D1.RenderTarget,SharpDX.DXGI.Surface)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.Bitmap"/> whose data is shared with another resource.	
            </summary>	
            <param name="renderTarget">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <param name="surface">An <see cref="T:SharpDX.DXGI.Surface"/> that contains the data to share with the new ID2D1Bitmap. For more information, see the Remarks section.</param>
            <unmanaged>HRESULT ID2D1RenderTarget::CreateSharedBitmap([In] const GUID&amp; riid,[In] void* data,[In, Optional] const D2D1_BITMAP_PROPERTIES* bitmapProperties,[Out, Fast] ID2D1Bitmap** bitmap)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap.#ctor(SharpDX.Direct2D1.RenderTarget,SharpDX.DXGI.Surface,System.Nullable{SharpDX.Direct2D1.BitmapProperties})">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.Bitmap"/> whose data is shared with another resource.	
            </summary>	
            <param name="renderTarget">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <param name="surface">An <see cref="T:SharpDX.DXGI.Surface"/> that contains the data to share with the new ID2D1Bitmap. For more information, see the Remarks section.</param>
            <param name="bitmapProperties">The pixel format  and DPI of the bitmap to create . The <see cref="T:SharpDX.DXGI.Format"/> portion of the pixel format  must match the <see cref="T:SharpDX.DXGI.Format"/> of data or the method will fail, but the alpha modes don't have to match. To prevent a  mismatch, you can pass NULL or the value obtained from the {{D2D1::PixelFormat}} helper function. The DPI settings do not have to match those of data. If both dpiX and dpiY are  0.0f, the default DPI, 96, is used.</param>
            <unmanaged>HRESULT ID2D1RenderTarget::CreateSharedBitmap([In] const GUID&amp; riid,[In] void* data,[In, Optional] const D2D1_BITMAP_PROPERTIES* bitmapProperties,[Out, Fast] ID2D1Bitmap** bitmap)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap.FromWicBitmap(SharpDX.Direct2D1.RenderTarget,SharpDX.WIC.BitmapSource)">
            <summary>
            Creates a Bitmap from a wic bitmap.
            </summary>
            <param name="renderTarget">The render target.</param>
            <param name="wicBitmapSource">A reference to a <see cref="T:SharpDX.WIC.BitmapSource"/> wic bitmap.</param>
            <returns></returns>
            <unmanaged>HRESULT ID2D1RenderTarget::CreateBitmapFromWicBitmap([In] IWICBitmapSource* wicBitmapSource,[In, Optional] const D2D1_BITMAP_PROPERTIES* bitmapProperties,[Out] ID2D1Bitmap** bitmap)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap.FromWicBitmap(SharpDX.Direct2D1.RenderTarget,SharpDX.WIC.BitmapSource,SharpDX.Direct2D1.BitmapProperties)">
            <summary>
            Creates a Bitmap from a wic bitmap.
            </summary>
            <param name="renderTarget">The render target.</param>
            <param name="wicBitmap">The wic bitmap.</param>
            <param name="bitmapProperties">The bitmap properties.</param>
            <returns></returns>
            <unmanaged>HRESULT ID2D1RenderTarget::CreateBitmapFromWicBitmap([In] IWICBitmapSource* wicBitmapSource,[In, Optional] const D2D1_BITMAP_PROPERTIES* bitmapProperties,[Out] ID2D1Bitmap** bitmap)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap.FromBitmap(SharpDX.Direct2D1.Bitmap)">
            <summary>	
            Copies the specified region from the specified bitmap into the current bitmap. 	
            </summary>	
            <remarks>	
            This method does not update the size of the  current bitmap. If the contents of the source bitmap do not fit in the current bitmap, this method fails. Also, note that this method does not perform format conversion, and will fail if the bitmap formats do not match. Calling this method may cause the current batch to flush if the bitmap is active in the batch. If the batch that was flushed does not complete successfully, this method fails. However, this method does not clear the error state of the render target on which the batch was flushed. The failing <see cref="T:System.Int32"/> and tag state will be returned at the next call to {{EndDraw}} or {{Flush}}.  	
            </remarks>	
            <param name="sourceBitmap">The bitmap to copy from. </param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code. </returns>
            <unmanaged>HRESULT ID2D1Bitmap::CopyFromBitmap([In, Optional] const D2D1_POINT_2U* destPoint,[In] ID2D1Bitmap* bitmap,[In, Optional] const D2D1_RECT_U* srcRect)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap.FromBitmap(SharpDX.Direct2D1.Bitmap,SharpDX.DrawingPoint)">
            <summary>	
            Copies the specified region from the specified bitmap into the current bitmap. 	
            </summary>	
            <remarks>	
            This method does not update the size of the  current bitmap. If the contents of the source bitmap do not fit in the current bitmap, this method fails. Also, note that this method does not perform format conversion, and will fail if the bitmap formats do not match. Calling this method may cause the current batch to flush if the bitmap is active in the batch. If the batch that was flushed does not complete successfully, this method fails. However, this method does not clear the error state of the render target on which the batch was flushed. The failing <see cref="T:System.Int32"/> and tag state will be returned at the next call to {{EndDraw}} or {{Flush}}.  	
            </remarks>	
            <param name="sourceBitmap">The bitmap to copy from. </param>
            <param name="destinationPoint">In the current bitmap, the upper-left corner of the area to which the region specified by srcRect is copied. </param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code. </returns>
            <unmanaged>HRESULT ID2D1Bitmap::CopyFromBitmap([In, Optional] const D2D1_POINT_2U* destPoint,[In] ID2D1Bitmap* bitmap,[In, Optional] const D2D1_RECT_U* srcRect)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap.FromBitmap(SharpDX.Direct2D1.Bitmap,SharpDX.DrawingPoint,SharpDX.Rectangle)">
            <summary>	
            Copies the specified region from the specified bitmap into the current bitmap. 	
            </summary>	
            <remarks>	
            This method does not update the size of the  current bitmap. If the contents of the source bitmap do not fit in the current bitmap, this method fails. Also, note that this method does not perform format conversion, and will fail if the bitmap formats do not match. Calling this method may cause the current batch to flush if the bitmap is active in the batch. If the batch that was flushed does not complete successfully, this method fails. However, this method does not clear the error state of the render target on which the batch was flushed. The failing <see cref="T:System.Int32"/> and tag state will be returned at the next call to {{EndDraw}} or {{Flush}}.  	
            </remarks>	
            <param name="sourceBitmap">The bitmap to copy from. </param>
            <param name="sourceArea">The area of bitmap to copy. </param>
            <param name="destinationPoint">In the current bitmap, the upper-left corner of the area to which the region specified by srcRect is copied. </param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code. </returns>
            <unmanaged>HRESULT ID2D1Bitmap::CopyFromBitmap([In, Optional] const D2D1_POINT_2U* destPoint,[In] ID2D1Bitmap* bitmap,[In, Optional] const D2D1_RECT_U* srcRect)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap.FromMemory(System.IntPtr,System.Int32)">
            <summary>	
            Copies the specified region from memory into the current bitmap. 	
            </summary>	
            <remarks>	
            This method does not update the size of the current bitmap. If the contents of the source bitmap do not fit in the current bitmap, this method fails. Also, note that this method does not perform format conversion; the two bitmap formats should match.  Passing this method invalid input, such as an invalid destination rectangle, can produce unpredictable results, such as a distorted image or device failure. Calling this method may cause the current batch to flush if the bitmap is active in the batch. If the batch that was flushed does not complete successfully, this method fails. However, this method does not clear the error state of the render target on which the batch was flushed. The failing <see cref="T:System.Int32"/> and tag state will be returned at the next call to {{EndDraw}} or {{Flush}}.  	
            </remarks>	
            <param name="pointer">The data to copy. </param>
            <param name="pitch">The stride, or pitch, of the source bitmap stored in srcData. The stride is the byte count of a scanline (one row of pixels in memory). The stride can be computed from the following formula: pixel width * bytes per pixel + memory padding. </param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code. </returns>
            <unmanaged>HRESULT ID2D1Bitmap::CopyFromMemory([In, Optional] const D2D1_RECT_U* dstRect,[In] const void* srcData,[None] int pitch)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap.FromMemory(System.Byte[],System.Int32)">
            <summary>	
            Copies the specified region from memory into the current bitmap. 	
            </summary>	
            <remarks>	
            This method does not update the size of the current bitmap. If the contents of the source bitmap do not fit in the current bitmap, this method fails. Also, note that this method does not perform format conversion; the two bitmap formats should match.  Passing this method invalid input, such as an invalid destination rectangle, can produce unpredictable results, such as a distorted image or device failure. Calling this method may cause the current batch to flush if the bitmap is active in the batch. If the batch that was flushed does not complete successfully, this method fails. However, this method does not clear the error state of the render target on which the batch was flushed. The failing <see cref="T:System.Int32"/> and tag state will be returned at the next call to {{EndDraw}} or {{Flush}}.  	
            </remarks>	
            <param name="memory">The data to copy. </param>
            <param name="pitch">The stride, or pitch, of the source bitmap stored in srcData. The stride is the byte count of a scanline (one row of pixels in memory). The stride can be computed from the following formula: pixel width * bytes per pixel + memory padding. </param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code. </returns>
            <unmanaged>HRESULT ID2D1Bitmap::CopyFromMemory([In, Optional] const D2D1_RECT_U* dstRect,[In] const void* srcData,[None] int pitch)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap.FromMemory(System.IntPtr,System.Int32,SharpDX.Rectangle)">
            <summary>	
            Copies the specified region from memory into the current bitmap. 	
            </summary>	
            <remarks>	
            This method does not update the size of the current bitmap. If the contents of the source bitmap do not fit in the current bitmap, this method fails. Also, note that this method does not perform format conversion; the two bitmap formats should match.  Passing this method invalid input, such as an invalid destination rectangle, can produce unpredictable results, such as a distorted image or device failure. Calling this method may cause the current batch to flush if the bitmap is active in the batch. If the batch that was flushed does not complete successfully, this method fails. However, this method does not clear the error state of the render target on which the batch was flushed. The failing <see cref="T:System.Int32"/> and tag state will be returned at the next call to {{EndDraw}} or {{Flush}}.  	
            </remarks>	
            <param name="pointer">The data to copy. </param>
            <param name="pitch">The stride, or pitch, of the source bitmap stored in srcData. The stride is the byte count of a scanline (one row of pixels in memory). The stride can be computed from the following formula: pixel width * bytes per pixel + memory padding. </param>
            <param name="destinationArea">In the current bitmap, the upper-left corner of the area to which the region specified by srcRect is copied. </param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code. </returns>
            <unmanaged>HRESULT ID2D1Bitmap::CopyFromMemory([In, Optional] const D2D1_RECT_U* dstRect,[In] const void* srcData,[None] int pitch)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap.FromMemory(System.Byte[],System.Int32,SharpDX.Rectangle)">
            <summary>	
            Copies the specified region from memory into the current bitmap. 	
            </summary>	
            <remarks>	
            This method does not update the size of the current bitmap. If the contents of the source bitmap do not fit in the current bitmap, this method fails. Also, note that this method does not perform format conversion; the two bitmap formats should match.  Passing this method invalid input, such as an invalid destination rectangle, can produce unpredictable results, such as a distorted image or device failure. Calling this method may cause the current batch to flush if the bitmap is active in the batch. If the batch that was flushed does not complete successfully, this method fails. However, this method does not clear the error state of the render target on which the batch was flushed. The failing <see cref="T:System.Int32"/> and tag state will be returned at the next call to {{EndDraw}} or {{Flush}}.  	
            </remarks>	
            <param name="memory">The data to copy. </param>
            <param name="pitch">The stride, or pitch, of the source bitmap stored in srcData. The stride is the byte count of a scanline (one row of pixels in memory). The stride can be computed from the following formula: pixel width * bytes per pixel + memory padding. </param>
            <param name="destinationArea">In the current bitmap, the upper-left corner of the area to which the region specified by srcRect is copied. </param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code. </returns>
            <unmanaged>HRESULT ID2D1Bitmap::CopyFromMemory([In, Optional] const D2D1_RECT_U* dstRect,[In] const void* srcData,[None] int pitch)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap.FromRenderTarget(SharpDX.Direct2D1.RenderTarget)">
            <summary>	
            Copies the specified region from the specified render target into the current bitmap. 	
            </summary>	
            <remarks>	
            This method does not update the size of the current bitmap. If the contents of the source bitmap do not fit in the current bitmap, this method fails. Also, note that this method does not perform format conversion, and will fail if the bitmap formats do not match. Calling this method may cause the current batch to flush if the bitmap is active in the batch. If the batch that was flushed does not complete successfully, this method fails. However, this method does not clear the error state of the render target on which the batch was flushed. The failing <see cref="T:System.Int32"/> and tag state will be returned at the next call to {{EndDraw}} or {{Flush}}.  All clips and layers must be popped off of the render target before calling this method.  The method returns {{D2DERR_RENDER_TARGET_HAS_LAYER_OR_CLIPRECT}} if any clips or layers are currently applied to the render target. 	
            </remarks>	
            <param name="renderTarget">The render target that contains the region to copy. </param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code. </returns>
            <unmanaged>HRESULT ID2D1Bitmap::CopyFromRenderTarget([In, Optional] const D2D1_POINT_2U* destPoint,[In] ID2D1RenderTarget* renderTarget,[In, Optional] const D2D1_RECT_U* srcRect)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap.FromRenderTarget(SharpDX.Direct2D1.RenderTarget,SharpDX.DrawingPoint)">
            <summary>	
            Copies the specified region from the specified render target into the current bitmap. 	
            </summary>	
            <remarks>	
            This method does not update the size of the current bitmap. If the contents of the source bitmap do not fit in the current bitmap, this method fails. Also, note that this method does not perform format conversion, and will fail if the bitmap formats do not match. Calling this method may cause the current batch to flush if the bitmap is active in the batch. If the batch that was flushed does not complete successfully, this method fails. However, this method does not clear the error state of the render target on which the batch was flushed. The failing <see cref="T:System.Int32"/> and tag state will be returned at the next call to {{EndDraw}} or {{Flush}}.  All clips and layers must be popped off of the render target before calling this method.  The method returns {{D2DERR_RENDER_TARGET_HAS_LAYER_OR_CLIPRECT}} if any clips or layers are currently applied to the render target. 	
            </remarks>	
            <param name="renderTarget">The render target that contains the region to copy. </param>
            <param name="destinationPoint">In the current bitmap, the upper-left corner of the area to which the region specified by srcRect is copied. </param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code. </returns>
            <unmanaged>HRESULT ID2D1Bitmap::CopyFromRenderTarget([In, Optional] const D2D1_POINT_2U* destPoint,[In] ID2D1RenderTarget* renderTarget,[In, Optional] const D2D1_RECT_U* srcRect)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap.FromRenderTarget(SharpDX.Direct2D1.RenderTarget,SharpDX.DrawingPoint,SharpDX.Rectangle)">
            <summary>	
            Copies the specified region from the specified render target into the current bitmap. 	
            </summary>	
            <remarks>	
            This method does not update the size of the current bitmap. If the contents of the source bitmap do not fit in the current bitmap, this method fails. Also, note that this method does not perform format conversion, and will fail if the bitmap formats do not match. Calling this method may cause the current batch to flush if the bitmap is active in the batch. If the batch that was flushed does not complete successfully, this method fails. However, this method does not clear the error state of the render target on which the batch was flushed. The failing <see cref="T:System.Int32"/> and tag state will be returned at the next call to {{EndDraw}} or {{Flush}}.  All clips and layers must be popped off of the render target before calling this method.  The method returns {{D2DERR_RENDER_TARGET_HAS_LAYER_OR_CLIPRECT}} if any clips or layers are currently applied to the render target. 	
            </remarks>	
            <param name="renderTarget">The render target that contains the region to copy. </param>
            <param name="destinationPoint">In the current bitmap, the upper-left corner of the area to which the region specified by srcRect is copied. </param>
            <param name="sourceArea">The area of renderTarget to copy. </param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code. </returns>
            <unmanaged>HRESULT ID2D1Bitmap::CopyFromRenderTarget([In, Optional] const D2D1_POINT_2U* destPoint,[In] ID2D1RenderTarget* renderTarget,[In, Optional] const D2D1_RECT_U* srcRect)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap.FromStream(System.IO.Stream,System.Int32,System.Int32)">
            <summary>	
            Copies the specified region from a stream into the current bitmap. 	
            </summary>	
            <remarks>	
            This method does not update the size of the current bitmap. If the contents of the source bitmap do not fit in the current bitmap, this method fails. Also, note that this method does not perform format conversion; the two bitmap formats should match.  Passing this method invalid input, such as an invalid destination rectangle, can produce unpredictable results, such as a distorted image or device failure. Calling this method may cause the current batch to flush if the bitmap is active in the batch. If the batch that was flushed does not complete successfully, this method fails. However, this method does not clear the error state of the render target on which the batch was flushed. The failing <see cref="T:System.Int32"/> and tag state will be returned at the next call to {{EndDraw}} or {{Flush}}.  	
            </remarks>	
            <param name="stream">The stream to copy the data from. </param>
            <param name="length">Length in bytes of the data to copy from the stream.</param>
            <param name="pitch">The stride, or pitch, of the source bitmap stored in srcData. The stride is the byte count of a scanline (one row of pixels in memory). The stride can be computed from the following formula: pixel width * bytes per pixel + memory padding. </param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code. </returns>
            <unmanaged>HRESULT ID2D1Bitmap::CopyFromMemory([In, Optional] const D2D1_RECT_U* dstRect,[In] const void* srcData,[None] int pitch)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap.FromStream(System.IO.Stream,System.Int32,System.Int32,SharpDX.Rectangle)">
            <summary>	
            Copies the specified region from a stream into the current bitmap. 	
            </summary>	
            <remarks>	
            This method does not update the size of the current bitmap. If the contents of the source bitmap do not fit in the current bitmap, this method fails. Also, note that this method does not perform format conversion; the two bitmap formats should match.  Passing this method invalid input, such as an invalid destination rectangle, can produce unpredictable results, such as a distorted image or device failure. Calling this method may cause the current batch to flush if the bitmap is active in the batch. If the batch that was flushed does not complete successfully, this method fails. However, this method does not clear the error state of the render target on which the batch was flushed. The failing <see cref="T:System.Int32"/> and tag state will be returned at the next call to {{EndDraw}} or {{Flush}}.  	
            </remarks>	
            <param name="stream">The stream to copy the data from. </param>
            <param name="length">Length in bytes of the data to copy from the stream.</param>
            <param name="pitch">The stride, or pitch, of the source bitmap stored in srcData. The stride is the byte count of a scanline (one row of pixels in memory). The stride can be computed from the following formula: pixel width * bytes per pixel + memory padding. </param>
            <param name="destinationArea">In the current bitmap, the upper-left corner of the area to which the region specified by srcRect is copied. </param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code. </returns>
            <unmanaged>HRESULT ID2D1Bitmap::CopyFromMemory([In, Optional] const D2D1_RECT_U* dstRect,[In] const void* srcData,[None] int pitch)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.Bitmap"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap.GetSize">
            <summary>	
            Returns the size, in device-independent pixels (DIPs), of the bitmap.	
            </summary>	
            <returns>The size, in DIPs, of the bitmap.</returns>	
            <remarks>	
            A DIP is 1/96?of an inch. To retrieve the size in device pixels, use the <see cref="M:SharpDX.Direct2D1.Bitmap.GetPixelSize"/> method.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Bitmap::GetSize']/*"/>	
            <unmanaged>D2D_SIZE_F ID2D1Bitmap::GetSize()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap.GetPixelSize">
            <summary>	
            Returns the size, in device-dependent units (pixels), of the bitmap.	
            </summary>	
            <returns>The size, in pixels, of the bitmap.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Bitmap::GetPixelSize']/*"/>	
            <unmanaged>D2D_SIZE_U ID2D1Bitmap::GetPixelSize()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap.GetPixelFormat">
            <summary>	
            Retrieves the pixel format and alpha mode of the bitmap.	
            </summary>	
            <returns>The pixel format and alpha mode of the bitmap.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Bitmap::GetPixelFormat']/*"/>	
            <unmanaged>D2D1_PIXEL_FORMAT ID2D1Bitmap::GetPixelFormat()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap.GetDpi(System.Single@,System.Single@)">
            <summary>	
            Return the dots per inch (DPI) of the bitmap.	
            </summary>	
            <param name="dpiX"><para>The horizontal DPI of the image. You must allocate storage for this parameter.</para></param>	
            <param name="dpiY"><para>The vertical DPI of the image.  You must allocate storage for this parameter.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Bitmap::GetDpi']/*"/>	
            <unmanaged>void ID2D1Bitmap::GetDpi([Out] float* dpiX,[Out] float* dpiY)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap.CopyFromBitmap(System.Nullable{SharpDX.DrawingPoint},SharpDX.Direct2D1.Bitmap,System.Nullable{SharpDX.Rectangle})">
            <summary>	
            Copies the specified region from the specified bitmap into the current bitmap.	
            </summary>	
            <param name="destPoint"><para>In the current bitmap, the upper-left corner of the area to which the region specified by srcRect is copied.</para></param>	
            <param name="bitmap"><para>The bitmap to copy from.</para></param>	
            <param name="srcRect"><para>The area of bitmap to copy.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            This method does not update the size of the  current bitmap. If the contents of the source bitmap do not fit in the current bitmap, this method fails. Also, note that this method does not perform format conversion, and will fail if the bitmap formats do not match.Calling this method may cause the current batch to flush if the bitmap is active in the batch. If the batch that was flushed does not complete successfully, this method fails. However, this method does not clear the error state of the render target on which the batch was flushed. The failing <see cref="T:SharpDX.Result"/> and tag state will be returned at the next call to EndDraw or Flush.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Bitmap::CopyFromBitmap']/*"/>	
            <unmanaged>HRESULT ID2D1Bitmap::CopyFromBitmap([In, Optional] const D2D_POINT_2U* destPoint,[In] ID2D1Bitmap* bitmap,[In, Optional] const D2D_RECT_U* srcRect)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap.CopyFromRenderTarget(System.Nullable{SharpDX.DrawingPoint},SharpDX.Direct2D1.RenderTarget,System.Nullable{SharpDX.Rectangle})">
            <summary>	
            Copies the specified region from the specified render target into the current bitmap.	
            </summary>	
            <param name="destPoint"><para>In the current bitmap, the upper-left corner of the area to which the region specified by srcRect is copied.</para></param>	
            <param name="renderTarget"><para>The render target that contains the region to copy.</para></param>	
            <param name="srcRect"><para>The area of renderTarget to copy.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            This method does not update the size of the current bitmap. If the contents of the source bitmap do not fit in the current bitmap, this method fails. Also, note that this method does not perform format conversion, and will fail if the bitmap formats do not match.Calling this method may cause the current batch to flush if the bitmap is active in the batch. If the batch that was flushed does not complete successfully, this method fails. However, this method does not clear the error state of the render target on which the batch was flushed. The failing <see cref="T:SharpDX.Result"/> and tag state will be returned at the next call to EndDraw or Flush.All clips and layers must be popped off of the render target before calling this method.  The method returns D2DERR_RENDER_TARGET_HAS_LAYER_OR_CLIPRECT if any clips or layers are currently applied to the render target.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Bitmap::CopyFromRenderTarget']/*"/>	
            <unmanaged>HRESULT ID2D1Bitmap::CopyFromRenderTarget([In, Optional] const D2D_POINT_2U* destPoint,[In] ID2D1RenderTarget* renderTarget,[In, Optional] const D2D_RECT_U* srcRect)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap.CopyFromMemory(System.Nullable{SharpDX.Rectangle},System.IntPtr,System.Int32)">
            <summary>	
            Copies the specified region from memory into the current bitmap.	
            </summary>	
            <param name="dstRect"><para>In the current bitmap, the upper-left corner of the area to which the region specified by srcRect is copied.</para></param>	
            <param name="srcData"><para>The data to copy.</para></param>	
            <param name="pitch"><para>The stride, or pitch, of the source bitmap stored in srcData. The stride is the byte count of a scanline (one row of pixels in memory). The stride can be computed from the following formula: pixel width * bytes per pixel + memory padding.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            This method does not update the size of the current bitmap. If the contents of the source bitmap do not fit in the current bitmap, this method fails. Also, note that this method does not perform format conversion; the two bitmap formats should match.If this method is passed invalid input (such as an invalid destination rectangle), can produce unpredictable results, such as a distorted image or device failure.Calling this method may cause the current batch to flush if the bitmap is active in the batch. If the batch that was flushed does not complete successfully, this method fails. However, this method does not clear the error state of the render target on which the batch was flushed. The failing <see cref="T:SharpDX.Result"/> and tag state will be returned at the next call to EndDraw or Flush.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Bitmap::CopyFromMemory']/*"/>	
            <unmanaged>HRESULT ID2D1Bitmap::CopyFromMemory([In, Optional] const D2D_RECT_U* dstRect,[In] const void* srcData,[In] unsigned int pitch)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct2D1.Bitmap.DotsPerInch">
            <summary>	
            Return the dots per inch (DPI) of the bitmap.	
            </summary>	
            <value>The dots per inch (DPI) of the bitma.</value>
        </member>
        <member name="P:SharpDX.Direct2D1.Bitmap.Size">
            <summary>	
            Returns the size, in device-independent pixels (DIPs), of the bitmap.	
            </summary>	
            <remarks>	
            A DIP is 1/96?of an inch. To retrieve the size in device pixels, use the <see cref="M:SharpDX.Direct2D1.Bitmap.GetPixelSize"/> method.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Bitmap::GetSize']/*"/>	
            <unmanaged>GetSize</unmanaged>	
            <unmanaged>D2D_SIZE_F ID2D1Bitmap::GetSize()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.Bitmap.PixelSize">
            <summary>	
            Returns the size, in device-dependent units (pixels), of the bitmap.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Bitmap::GetPixelSize']/*"/>	
            <unmanaged>GetPixelSize</unmanaged>	
            <unmanaged>D2D_SIZE_U ID2D1Bitmap::GetPixelSize()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.Bitmap.PixelFormat">
            <summary>	
            Retrieves the pixel format and alpha mode of the bitmap.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Bitmap::GetPixelFormat']/*"/>	
            <unmanaged>GetPixelFormat</unmanaged>	
            <unmanaged>D2D1_PIXEL_FORMAT ID2D1Bitmap::GetPixelFormat()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap1.#ctor(SharpDX.Direct2D1.DeviceContext,SharpDX.DrawingSize)">
            <summary>	
            Creates a Direct2D bitmap from a pointer to in-memory source data.	
            </summary>	
            <param name="deviceContext">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <param name="size">The dimension of the bitmap to create in pixels.</param>
            <unmanaged>HRESULT ID2D1DeviceContext::CreateBitmap([In] D2D_SIZE_U size,[In, Buffer, Optional] const void* sourceData,[In] unsigned int pitch,[In] const D2D1_BITMAP_PROPERTIES1* bitmapProperties,[Out, Fast] ID2D1Bitmap1** bitmap)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap1.#ctor(SharpDX.Direct2D1.DeviceContext,SharpDX.DrawingSize,SharpDX.Direct2D1.BitmapProperties1)">
            <summary>	
            Creates a Direct2D bitmap from a pointer to in-memory source data.	
            </summary>	
            <param name="deviceContext">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <param name="size">The dimension of the bitmap to create in pixels.</param>
            <param name="bitmapProperties">The pixel format and dots per inch (DPI) of the bitmap to create.</param>
            <unmanaged>HRESULT ID2D1DeviceContext::CreateBitmap([In] D2D_SIZE_U size,[In, Buffer, Optional] const void* sourceData,[In] unsigned int pitch,[In] const D2D1_BITMAP_PROPERTIES1* bitmapProperties,[Out, Fast] ID2D1Bitmap1** bitmap)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap1.#ctor(SharpDX.Direct2D1.DeviceContext,SharpDX.DrawingSize,SharpDX.DataStream,System.Int32)">
            <summary>	
            Creates a Direct2D bitmap from a pointer to in-memory source data.	
            </summary>	
            <param name="deviceContext">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <param name="size">The dimension of the bitmap to create in pixels.</param>
            <param name="dataStream">A pointer to the memory location of the image data, or NULL to create an uninitialized bitmap.</param>
            <param name="pitch">The byte count of each scanline, which is equal to (the image width in pixels * the number of bytes per pixel) + memory padding. If srcData is NULL, this value is ignored. (Note that pitch is also sometimes called stride.)</param>
            <unmanaged>HRESULT ID2D1DeviceContext::CreateBitmap([In] D2D_SIZE_U size,[In, Buffer, Optional] const void* sourceData,[In] unsigned int pitch,[In] const D2D1_BITMAP_PROPERTIES1* bitmapProperties,[Out, Fast] ID2D1Bitmap1** bitmap)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap1.#ctor(SharpDX.Direct2D1.DeviceContext,SharpDX.DrawingSize,SharpDX.DataStream,System.Int32,SharpDX.Direct2D1.BitmapProperties1)">
            <summary>	
            Creates a Direct2D bitmap from a pointer to in-memory source data.	
            </summary>	
            <param name="deviceContext">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <param name="size">The dimension of the bitmap to create in pixels.</param>
            <param name="dataStream">A pointer to the memory location of the image data, or NULL to create an uninitialized bitmap.</param>
            <param name="pitch">The byte count of each scanline, which is equal to (the image width in pixels * the number of bytes per pixel) + memory padding. If srcData is NULL, this value is ignored. (Note that pitch is also sometimes called stride.)</param>
            <param name="bitmapProperties">The pixel format and dots per inch (DPI) of the bitmap to create.</param>
            <unmanaged>HRESULT ID2D1DeviceContext::CreateBitmap([In] D2D_SIZE_U size,[In, Buffer, Optional] const void* sourceData,[In] unsigned int pitch,[In] const D2D1_BITMAP_PROPERTIES1* bitmapProperties,[Out, Fast] ID2D1Bitmap1** bitmap)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap1.#ctor(SharpDX.Direct2D1.DeviceContext,SharpDX.DXGI.Surface)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.Bitmap"/> whose data is shared with another resource.	
            </summary>	
            <param name="deviceContext">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <param name="surface">An <see cref="T:SharpDX.DXGI.Surface"/> that contains the data to share with the new ID2D1Bitmap. For more information, see the Remarks section.</param>
            <unmanaged>HRESULT ID2D1DeviceContext::CreateBitmapFromDxgiSurface([In] IDXGISurface* surface,[In, Optional] const D2D1_BITMAP_PROPERTIES1* bitmapProperties,[Out, Fast] ID2D1Bitmap1** bitmap1)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap1.#ctor(SharpDX.Direct2D1.DeviceContext,SharpDX.DXGI.Surface,SharpDX.Direct2D1.BitmapProperties1)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.Bitmap"/> whose data is shared with another resource.	
            </summary>	
            <param name="deviceContext">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <param name="surface">An <see cref="T:SharpDX.DXGI.Surface"/> that contains the data to share with the new ID2D1Bitmap. For more information, see the Remarks section.</param>
            <param name="bitmapProperties">The pixel format  and DPI of the bitmap to create . The <see cref="T:SharpDX.DXGI.Format"/> portion of the pixel format  must match the <see cref="T:SharpDX.DXGI.Format"/> of data or the method will fail, but the alpha modes don't have to match. To prevent a  mismatch, you can pass NULL or the value obtained from the {{D2D1::PixelFormat}} helper function. The DPI settings do not have to match those of data. If both dpiX and dpiY are  0.0f, the default DPI, 96, is used.</param>
            <unmanaged>HRESULT ID2D1DeviceContext::CreateBitmapFromDxgiSurface([In] IDXGISurface* surface,[In, Optional] const D2D1_BITMAP_PROPERTIES1* bitmapProperties,[Out, Fast] ID2D1Bitmap1** bitmap1)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap1.FromWicBitmap(SharpDX.Direct2D1.DeviceContext,SharpDX.WIC.BitmapSource)">
            <summary>
            Creates a Bitmap from a wic bitmap.
            </summary>
            <param name="deviceContext">The render target.</param>
            <param name="wicBitmapSource">A reference to a <see cref="T:SharpDX.WIC.BitmapSource"/> wic bitmap.</param>
            <returns></returns>
            <unmanaged>HRESULT ID2D1DeviceContext::CreateBitmapFromWicBitmap([In] IWICBitmapSource* wicBitmapSource,[In, Optional] const D2D1_BITMAP_PROPERTIES1* bitmapProperties,[Out] ID2D1Bitmap1** bitmap)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap1.FromWicBitmap(SharpDX.Direct2D1.DeviceContext,SharpDX.WIC.BitmapSource,SharpDX.Direct2D1.BitmapProperties1)">
            <summary>
            Creates a Bitmap from a wic bitmap.
            </summary>
            <param name="deviceContext">The render target.</param>
            <param name="wicBitmap">The wic bitmap.</param>
            <param name="bitmapProperties">The bitmap properties.</param>
            <returns></returns>
            <unmanaged>HRESULT ID2D1DeviceContext::CreateBitmapFromWicBitmap([In] IWICBitmapSource* wicBitmapSource,[In, Optional] const D2D1_BITMAP_PROPERTIES1* bitmapProperties,[Out] ID2D1Bitmap1** bitmap)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap1.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.Bitmap1"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap1.GetColorContext(SharpDX.Direct2D1.ColorContext@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="colorContext"><para>When this method returns, contains the address of a reference to the  color context interface associated with the bitmap.</para></param>	
            <remarks>	
            If the bitmap was created without specifying a color context, the returned context is <c>null</c>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Bitmap1::GetColorContext']/*"/>	
            <unmanaged>void ID2D1Bitmap1::GetColorContext([Out, Optional] ID2D1ColorContext** colorContext)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap1.GetOptions">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <returns>This method returns the options used.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Bitmap1::GetOptions']/*"/>	
            <unmanaged>D2D1_BITMAP_OPTIONS ID2D1Bitmap1::GetOptions()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap1.GetSurface(SharpDX.DXGI.Surface@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dxgiSurface">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Bitmap1::GetSurface']/*"/>	
            <unmanaged>HRESULT ID2D1Bitmap1::GetSurface([Out, Optional] IDXGISurface** dxgiSurface)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap1.Map(SharpDX.Direct2D1.MapOptions,SharpDX.Direct2D1.MappedRect@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="options"><para>The options used in mapping the bitmap into memory.</para></param>	
            <param name="mappedRect"><para>When this method returns, contains a reference to the rectangle that is mapped into memory.</para></param>	
            <returns>The method returns an <see cref="T:SharpDX.Result"/>. Possible values include, but are not limited to, those in the following table.HRESULTDescription S_OKNo error occurred. E_INVALIDARGOne or more arguments are not valid D3DERR_DEVICELOSTThe device has been lost but cannot be reset at this time.?</returns>	
            <remarks>	
            The bitmap must have been created with the <see cref="F:SharpDX.Direct2D1.MapOptions.Read"/> flag specified.The caller should try to unmap the memory as quickly as is feasable to release occupied DMA aperture memory.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Bitmap1::Map']/*"/>	
            <unmanaged>HRESULT ID2D1Bitmap1::Map([In] D2D1_MAP_OPTIONS options,[Out] D2D1_MAPPED_RECT* mappedRect)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Bitmap1.Unmap">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <returns>The method returns an <see cref="T:SharpDX.Result"/>. Possible values include, but are not limited to, those in the following table.HRESULTDescription S_OKNo error occurred. E_INVALIDARGOne or more arguments are not valid. E_POINTERPointer is not valid.?</returns>	
            <remarks>	
            Any memory returned from the Map call is now invalid and may be reclaimed by the operating system or used for other purposes.The bitmap must have been previously mapped.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Bitmap1::Unmap']/*"/>	
            <unmanaged>HRESULT ID2D1Bitmap1::Unmap()</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct2D1.Bitmap1.ColorContext">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            If the bitmap was created without specifying a color context, the returned context is <c>null</c>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Bitmap1::GetColorContext']/*"/>	
            <unmanaged>GetColorContext</unmanaged>	
            <unmanaged>void ID2D1Bitmap1::GetColorContext([Out, Optional] ID2D1ColorContext** colorContext)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.Bitmap1.Options">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Bitmap1::GetOptions']/*"/>	
            <unmanaged>GetOptions</unmanaged>	
            <unmanaged>D2D1_BITMAP_OPTIONS ID2D1Bitmap1::GetOptions()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.Bitmap1.Surface">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Bitmap1::GetSurface']/*"/>	
            <unmanaged>GetSurface</unmanaged>	
            <unmanaged>HRESULT ID2D1Bitmap1::GetSurface([Out, Optional] IDXGISurface** dxgiSurface)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.BitmapBrush1">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1BitmapBrush1']/*"/>	
            <unmanaged>ID2D1BitmapBrush1</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.BitmapBrush">
            <summary>	
            Paints an area with a bitmap.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1BitmapBrush']/*"/>	
            <unmanaged>ID2D1BitmapBrush</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.Brush">
            <summary>	
            Defines an object that paints an area. Interfaces that derive from <see cref="T:SharpDX.Direct2D1.Brush"/> describe how the area is painted.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Brush']/*"/>	
            <unmanaged>ID2D1Brush</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Brush.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.Brush"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.Brush.SetOpacity(System.Single)">
            <summary>	
            Sets the degree of opacity of this brush.	
            </summary>	
            <param name="opacity"><para>A value between zero and 1 that indicates the opacity of the brush. This value is a constant multiplier that linearly scales the alpha value of all pixels filled by the brush. The opacity values are clamped in the range 0?1 before they are multipled together. </para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Brush::SetOpacity']/*"/>	
            <unmanaged>void ID2D1Brush::SetOpacity([In] float opacity)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Brush.SetTransform(SharpDX.Matrix3x2@)">
            <summary>	
            Sets the transformation applied to the brush.	
            </summary>	
            <param name="transform"><para>The transformation to apply to this brush.</para></param>	
            <remarks>	
            When you paint with a brush, it paints in the coordinate space of the render target. Brushes do not automatically position themselves to align with the object being painted; by default, they begin painting at the origin (0, 0) of the render target.You can "move" the gradient defined by an <see cref="T:SharpDX.Direct2D1.LinearGradientBrush"/> to a target area by setting its start point and end point. Likewise, you can move the gradient defined by an <see cref="T:SharpDX.Direct2D1.RadialGradientBrush"/> by changing its center and radii.To align the content of an <see cref="T:SharpDX.Direct2D1.BitmapBrush"/> to the area being painted, you can use the SetTransform method to translate the bitmap to the desired location. This transform only affects the brush; it does not affect any other content drawn by the render target.The following illustrations show the effect of using an <see cref="T:SharpDX.Direct2D1.BitmapBrush"/> to fill a rectangle located at (100, 100). The illustration on the left illustration shows the result of filling the rectangle without transforming the brush: the bitmap is drawn at the render target's origin. As a result, only a portion of the bitmap appears in the rectangle.The illustration on the right shows the result of transforming the <see cref="T:SharpDX.Direct2D1.BitmapBrush"/> so that its content is shifted 50 pixels to the right and 50 pixels down. The bitmap now fills the rectangle.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Brush::SetTransform']/*"/>	
            <unmanaged>void ID2D1Brush::SetTransform([In] const D2D_MATRIX_3X2_F* transform)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Brush.GetOpacity">
            <summary>	
            Gets the degree of opacity of this brush.	
            </summary>	
            <returns>A value between zero and 1 that indicates the opacity of the brush. This value is a constant multiplier that linearly scales the alpha value of all pixels filled by the brush. The opacity values are clamped in the range 0?1 before they are multipled together.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Brush::GetOpacity']/*"/>	
            <unmanaged>float ID2D1Brush::GetOpacity()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Brush.GetTransform(SharpDX.Matrix3x2@)">
            <summary>	
            Gets the transform applied to this brush.	
            </summary>	
            <param name="transform"><para>The transform applied to this brush.</para></param>	
            <remarks>	
            When the brush transform is the identity matrix, the brush appears in the same coordinate space as the render target in which it is drawn.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Brush::GetTransform']/*"/>	
            <unmanaged>void ID2D1Brush::GetTransform([Out] D2D_MATRIX_3X2_F* transform)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct2D1.Brush.Opacity">
            <summary>	
            Gets the degree of opacity of this brush.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Brush::GetOpacity']/*"/>	
            <unmanaged>GetOpacity</unmanaged>	
            <unmanaged>float ID2D1Brush::GetOpacity()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.Brush.Transform">
            <summary>	
            Gets the transform applied to this brush.	
            </summary>	
            <remarks>	
            When the brush transform is the identity matrix, the brush appears in the same coordinate space as the render target in which it is drawn.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Brush::GetTransform']/*"/>	
            <unmanaged>GetTransform</unmanaged>	
            <unmanaged>void ID2D1Brush::GetTransform([Out] D2D_MATRIX_3X2_F* transform)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.BitmapBrush.#ctor(SharpDX.Direct2D1.RenderTarget,SharpDX.Direct2D1.Bitmap)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.BitmapBrush"/> from the specified bitmap.	
            </summary>	
            <param name="renderTarget">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <param name="bitmap">The bitmap contents of the new brush.</param>
            <unmanaged>HRESULT ID2D1RenderTarget::CreateBitmapBrush([In] ID2D1Bitmap* bitmap,[In, Optional] const D2D1_BITMAP_BRUSH_PROPERTIES* bitmapBrushProperties,[In, Optional] const D2D1_BRUSH_PROPERTIES* brushProperties,[Out, Fast] ID2D1BitmapBrush** bitmapBrush)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.BitmapBrush.#ctor(SharpDX.Direct2D1.RenderTarget,SharpDX.Direct2D1.Bitmap,SharpDX.Direct2D1.BitmapBrushProperties)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.BitmapBrush"/> from the specified bitmap.	
            </summary>	
            <param name="renderTarget">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <param name="bitmap">The bitmap contents of the new brush.</param>
            <param name="bitmapBrushProperties">The extend modes and interpolation mode of the new brush, or NULL. If this parameter is NULL, the brush defaults to the <see cref="F:SharpDX.Direct2D1.ExtendMode.Clamp"/> horizontal and vertical extend modes and the <see cref="F:SharpDX.Direct2D1.BitmapInterpolationMode.Linear"/> interpolation mode. </param>
            <unmanaged>HRESULT ID2D1RenderTarget::CreateBitmapBrush([In] ID2D1Bitmap* bitmap,[In, Optional] const D2D1_BITMAP_BRUSH_PROPERTIES* bitmapBrushProperties,[In, Optional] const D2D1_BRUSH_PROPERTIES* brushProperties,[Out, Fast] ID2D1BitmapBrush** bitmapBrush)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.BitmapBrush.#ctor(SharpDX.Direct2D1.RenderTarget,SharpDX.Direct2D1.Bitmap,SharpDX.Direct2D1.BrushProperties)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.BitmapBrush"/> from the specified bitmap.	
            </summary>	
            <param name="renderTarget">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <param name="bitmap">The bitmap contents of the new brush.</param>
            <param name="brushProperties">The opacity and transform of the new brush, or NULL. If this parameter is NULL, the brush defaults to an opacity of 1.0f and its transform is the identity matrix.</param>
            <unmanaged>HRESULT ID2D1RenderTarget::CreateBitmapBrush([In] ID2D1Bitmap* bitmap,[In, Optional] const D2D1_BITMAP_BRUSH_PROPERTIES* bitmapBrushProperties,[In, Optional] const D2D1_BRUSH_PROPERTIES* brushProperties,[Out, Fast] ID2D1BitmapBrush** bitmapBrush)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.BitmapBrush.#ctor(SharpDX.Direct2D1.RenderTarget,SharpDX.Direct2D1.Bitmap,System.Nullable{SharpDX.Direct2D1.BitmapBrushProperties},System.Nullable{SharpDX.Direct2D1.BrushProperties})">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.BitmapBrush"/> from the specified bitmap.	
            </summary>	
            <param name="renderTarget">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <param name="bitmap">The bitmap contents of the new brush.</param>
            <param name="bitmapBrushProperties">The extend modes and interpolation mode of the new brush, or NULL. If this parameter is NULL, the brush defaults to the <see cref="F:SharpDX.Direct2D1.ExtendMode.Clamp"/> horizontal and vertical extend modes and the <see cref="F:SharpDX.Direct2D1.BitmapInterpolationMode.Linear"/> interpolation mode. </param>
            <param name="brushProperties">The opacity and transform of the new brush, or NULL. If this parameter is NULL, the brush defaults to an opacity of 1.0f and its transform is the identity matrix.</param>
            <unmanaged>HRESULT ID2D1RenderTarget::CreateBitmapBrush([In] ID2D1Bitmap* bitmap,[In, Optional] const D2D1_BITMAP_BRUSH_PROPERTIES* bitmapBrushProperties,[In, Optional] const D2D1_BRUSH_PROPERTIES* brushProperties,[Out, Fast] ID2D1BitmapBrush** bitmapBrush)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.BitmapBrush.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.BitmapBrush"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.BitmapBrush.SetExtendModeX(SharpDX.Direct2D1.ExtendMode)">
            <summary>	
            Specifies how the brush horizontally tiles those areas that extend past its bitmap.	
            </summary>	
            <param name="extendModeX"><para>A value that specifies how the brush horizontally tiles those areas that extend past its bitmap. </para></param>	
            <remarks>	
            Sometimes, the  bitmap for a bitmap brush doesn't completely fill the area being painted. When this happens, Direct2D uses the brush's horizontal (SetExtendModeX) and vertical (SetExtendModeY) extend mode settings to determine how to fill the remaining area.The following illustration shows the results from  every  possible combination of the extend modes for an ID2D1BitmapBrush: <see cref="F:SharpDX.Direct2D1.ExtendMode.Clamp"/> (CLAMP), <see cref="F:SharpDX.Direct2D1.ExtendMode.Wrap"/> (WRAP), and D2D1_EXTEND_MIRROR (MIRROR).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1BitmapBrush::SetExtendModeX']/*"/>	
            <unmanaged>void ID2D1BitmapBrush::SetExtendModeX([In] D2D1_EXTEND_MODE extendModeX)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.BitmapBrush.SetExtendModeY(SharpDX.Direct2D1.ExtendMode)">
            <summary>	
            Specifies how the brush vertically tiles those areas that extend past its bitmap.	
            </summary>	
            <param name="extendModeY"><para>A value that specifies how the brush vertically tiles those areas that extend past its bitmap.</para></param>	
            <remarks>	
            Sometimes, the  bitmap for a bitmap brush doesn't completely fill the area being painted. When this happens, Direct2D uses the brush's horizontal (SetExtendModeX) and vertical (SetExtendModeY) extend mode settings to determine how to fill the remaining area.The following illustration shows the results from  every  possible combination of the extend modes for an ID2D1BitmapBrush: <see cref="F:SharpDX.Direct2D1.ExtendMode.Clamp"/> (CLAMP), <see cref="F:SharpDX.Direct2D1.ExtendMode.Wrap"/> (WRAP), and D2D1_EXTEND_MIRROR (MIRROR).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1BitmapBrush::SetExtendModeY']/*"/>	
            <unmanaged>void ID2D1BitmapBrush::SetExtendModeY([In] D2D1_EXTEND_MODE extendModeY)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.BitmapBrush.SetInterpolationMode(SharpDX.Direct2D1.BitmapInterpolationMode)">
            <summary>	
            Specifies the interpolation mode used when the brush bitmap is scaled or rotated.	
            </summary>	
            <param name="interpolationMode"><para>The interpolation mode used when the brush bitmap is scaled or rotated.</para></param>	
            <remarks>	
            This method sets the interpolation mode for a bitmap, which is an enum value that is specified in the <see cref="T:SharpDX.Direct2D1.BitmapInterpolationMode"/> enumeration type.   <see cref="F:SharpDX.Direct2D1.BitmapInterpolationMode.NearestNeighbor"/> represents nearest neighbor filtering. It looks up the nearest bitmap pixel to the current rendering pixel and chooses its exact color. <see cref="F:SharpDX.Direct2D1.BitmapInterpolationMode.Linear"/> represents linear filtering, and  interpolates a color from the four nearest bitmap pixels.The interpolation mode of a bitmap also affects subpixel translations. In a subpixel translation, bilinear interpolation positions the bitmap more precisely to the application requests, but blurs the bitmap in the process.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1BitmapBrush::SetInterpolationMode']/*"/>	
            <unmanaged>void ID2D1BitmapBrush::SetInterpolationMode([In] D2D1_BITMAP_INTERPOLATION_MODE interpolationMode)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.BitmapBrush.SetBitmap(SharpDX.Direct2D1.Bitmap)">
            <summary>	
            Specifies the bitmap source that this brush uses to paint.	
            </summary>	
            <param name="bitmap"><para>The bitmap source used by the brush.</para></param>	
            <remarks>	
            This method specifies the bitmap source that this brush uses to paint. The bitmap is not resized or rescaled automatically to fit the geometry that it fills. The bitmap stays at its native size. To resize or translate the bitmap, use the SetTransform method to apply  a transform to the brush.The native size of a bitmap is the width and height in bitmap pixels, divided by the bitmap DPI. This native size forms the base tile of the brush. To tile a subregion of the bitmap, you must generate a new bitmap containing this subregion and use SetBitmap to apply it to the brush.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1BitmapBrush::SetBitmap']/*"/>	
            <unmanaged>void ID2D1BitmapBrush::SetBitmap([In] ID2D1Bitmap* bitmap)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.BitmapBrush.GetExtendModeX">
            <summary>	
            Gets the method by which the brush horizontally tiles those areas that extend past its bitmap.	
            </summary>	
            <returns>A value that specifies how the brush horizontally tiles those areas that extend past its bitmap.</returns>	
            <remarks>	
            Like all brushes, <see cref="T:SharpDX.Direct2D1.BitmapBrush"/> defines an infinite plane of content. Because bitmaps are finite, it relies on an extend mode to determine how the plane is filled horizontally and vertically.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1BitmapBrush::GetExtendModeX']/*"/>	
            <unmanaged>D2D1_EXTEND_MODE ID2D1BitmapBrush::GetExtendModeX()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.BitmapBrush.GetExtendModeY">
            <summary>	
            Gets the method by which the brush vertically tiles those areas that extend past its bitmap.	
            </summary>	
            <returns>A value that specifies how the brush vertically tiles those areas that extend past its bitmap.</returns>	
            <remarks>	
            Like all brushes, <see cref="T:SharpDX.Direct2D1.BitmapBrush"/> defines an infinite plane of content.  Because bitmaps are finite, it relies on an extend mode to determine how the plane is filled horizontally and vertically.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1BitmapBrush::GetExtendModeY']/*"/>	
            <unmanaged>D2D1_EXTEND_MODE ID2D1BitmapBrush::GetExtendModeY()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.BitmapBrush.GetInterpolationMode">
            <summary>	
            Gets the interpolation method used when the brush bitmap is scaled or rotated.	
            </summary>	
            <returns>The interpolation method used when the brush bitmap is scaled or rotated.</returns>	
            <remarks>	
            This method gets the interpolation mode of a bitmap, which is specified by the <see cref="T:SharpDX.Direct2D1.BitmapInterpolationMode"/> enumeration type.   <see cref="F:SharpDX.Direct2D1.BitmapInterpolationMode.NearestNeighbor"/> represents nearest neighbor filtering. It looks up the bitmap pixel nearest to the current rendering pixel and chooses its exact color. <see cref="F:SharpDX.Direct2D1.BitmapInterpolationMode.Linear"/> represents linear filtering, and  interpolates a color from the four nearest bitmap pixels.The interpolation mode of a bitmap also affects subpixel translations. In a subpixel translation, linear interpolation positions the bitmap more precisely to the application request, but blurs the bitmap in the process.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1BitmapBrush::GetInterpolationMode']/*"/>	
            <unmanaged>D2D1_BITMAP_INTERPOLATION_MODE ID2D1BitmapBrush::GetInterpolationMode()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.BitmapBrush.GetBitmap(SharpDX.Direct2D1.Bitmap@)">
            <summary>	
            Gets the bitmap source that this brush uses to paint.	
            </summary>	
            <param name="bitmap"><para>When this method returns, contains the address to a reference to the bitmap with which this brush paints.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1BitmapBrush::GetBitmap']/*"/>	
            <unmanaged>void ID2D1BitmapBrush::GetBitmap([Out] ID2D1Bitmap** bitmap)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct2D1.BitmapBrush.ExtendModeX">
            <summary>	
            Gets the method by which the brush horizontally tiles those areas that extend past its bitmap.	
            </summary>	
            <remarks>	
            Like all brushes, <see cref="T:SharpDX.Direct2D1.BitmapBrush"/> defines an infinite plane of content. Because bitmaps are finite, it relies on an extend mode to determine how the plane is filled horizontally and vertically.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1BitmapBrush::GetExtendModeX']/*"/>	
            <unmanaged>GetExtendModeX</unmanaged>	
            <unmanaged>D2D1_EXTEND_MODE ID2D1BitmapBrush::GetExtendModeX()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.BitmapBrush.ExtendModeY">
            <summary>	
            Gets the method by which the brush vertically tiles those areas that extend past its bitmap.	
            </summary>	
            <remarks>	
            Like all brushes, <see cref="T:SharpDX.Direct2D1.BitmapBrush"/> defines an infinite plane of content.  Because bitmaps are finite, it relies on an extend mode to determine how the plane is filled horizontally and vertically.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1BitmapBrush::GetExtendModeY']/*"/>	
            <unmanaged>GetExtendModeY</unmanaged>	
            <unmanaged>D2D1_EXTEND_MODE ID2D1BitmapBrush::GetExtendModeY()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.BitmapBrush.InterpolationMode">
            <summary>	
            Gets the interpolation method used when the brush bitmap is scaled or rotated.	
            </summary>	
            <remarks>	
            This method gets the interpolation mode of a bitmap, which is specified by the <see cref="T:SharpDX.Direct2D1.BitmapInterpolationMode"/> enumeration type.   <see cref="F:SharpDX.Direct2D1.BitmapInterpolationMode.NearestNeighbor"/> represents nearest neighbor filtering. It looks up the bitmap pixel nearest to the current rendering pixel and chooses its exact color. <see cref="F:SharpDX.Direct2D1.BitmapInterpolationMode.Linear"/> represents linear filtering, and  interpolates a color from the four nearest bitmap pixels.The interpolation mode of a bitmap also affects subpixel translations. In a subpixel translation, linear interpolation positions the bitmap more precisely to the application request, but blurs the bitmap in the process.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1BitmapBrush::GetInterpolationMode']/*"/>	
            <unmanaged>GetInterpolationMode</unmanaged>	
            <unmanaged>D2D1_BITMAP_INTERPOLATION_MODE ID2D1BitmapBrush::GetInterpolationMode()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.BitmapBrush.Bitmap">
            <summary>	
            Gets the bitmap source that this brush uses to paint.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1BitmapBrush::GetBitmap']/*"/>	
            <unmanaged>GetBitmap</unmanaged>	
            <unmanaged>void ID2D1BitmapBrush::GetBitmap([Out] ID2D1Bitmap** bitmap)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.BitmapBrush1.#ctor(SharpDX.Direct2D1.DeviceContext,SharpDX.Direct2D1.Bitmap1)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.BitmapBrush"/> from the specified bitmap.	
            </summary>	
            <param name="deviceContext">an instance of <see cref="T:SharpDX.Direct2D1.DeviceContext"/></param>
            <param name="bitmap">The bitmap contents of the new brush.</param>
            <unmanaged>HRESULT ID2D1DeviceContext::CreateBitmapBrush([In] ID2D1Bitmap* bitmap,[In, Optional] const D2D1_BITMAP_BRUSH_PROPERTIES1* bitmapBrushProperties,[In, Optional] const D2D1_BRUSH_PROPERTIES* brushProperties,[Out, Fast] ID2D1BitmapBrush1** bitmapBrush)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.BitmapBrush1.#ctor(SharpDX.Direct2D1.DeviceContext,SharpDX.Direct2D1.Bitmap1,SharpDX.Direct2D1.BitmapBrushProperties1)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.BitmapBrush"/> from the specified bitmap.	
            </summary>	
            <param name="deviceContext">an instance of <see cref="T:SharpDX.Direct2D1.DeviceContext"/></param>
            <param name="bitmap">The bitmap contents of the new brush.</param>
            <param name="bitmapBrushProperties">The extend modes and interpolation mode of the new brush, or NULL. If this parameter is NULL, the brush defaults to the <see cref="F:SharpDX.Direct2D1.ExtendMode.Clamp"/> horizontal and vertical extend modes and the <see cref="F:SharpDX.Direct2D1.BitmapInterpolationMode.Linear"/> interpolation mode. </param>
            <unmanaged>HRESULT ID2D1DeviceContext::CreateBitmapBrush([In] ID2D1Bitmap* bitmap,[In, Optional] const D2D1_BITMAP_BRUSH_PROPERTIES1* bitmapBrushProperties,[In, Optional] const D2D1_BRUSH_PROPERTIES* brushProperties,[Out, Fast] ID2D1BitmapBrush1** bitmapBrush)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.BitmapBrush1.#ctor(SharpDX.Direct2D1.DeviceContext,SharpDX.Direct2D1.Bitmap1,SharpDX.Direct2D1.BrushProperties)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.BitmapBrush"/> from the specified bitmap.	
            </summary>	
            <param name="deviceContext">an instance of <see cref="T:SharpDX.Direct2D1.DeviceContext"/></param>
            <param name="bitmap">The bitmap contents of the new brush.</param>
            <param name="brushProperties">The opacity and transform of the new brush, or NULL. If this parameter is NULL, the brush defaults to an opacity of 1.0f and its transform is the identity matrix.</param>
            <unmanaged>HRESULT ID2D1DeviceContext::CreateBitmapBrush([In] ID2D1Bitmap* bitmap,[In, Optional] const D2D1_BITMAP_BRUSH_PROPERTIES1* bitmapBrushProperties,[In, Optional] const D2D1_BRUSH_PROPERTIES* brushProperties,[Out, Fast] ID2D1BitmapBrush1** bitmapBrush)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.BitmapBrush1.#ctor(SharpDX.Direct2D1.DeviceContext,SharpDX.Direct2D1.Bitmap1,System.Nullable{SharpDX.Direct2D1.BitmapBrushProperties1},System.Nullable{SharpDX.Direct2D1.BrushProperties})">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.BitmapBrush"/> from the specified bitmap.	
            </summary>	
            <param name="deviceContext">an instance of <see cref="T:SharpDX.Direct2D1.DeviceContext"/></param>
            <param name="bitmap">The bitmap contents of the new brush.</param>
            <param name="bitmapBrushProperties">The extend modes and interpolation mode of the new brush, or NULL. If this parameter is NULL, the brush defaults to the <see cref="F:SharpDX.Direct2D1.ExtendMode.Clamp"/> horizontal and vertical extend modes and the <see cref="F:SharpDX.Direct2D1.BitmapInterpolationMode.Linear"/> interpolation mode. </param>
            <param name="brushProperties">The opacity and transform of the new brush, or NULL. If this parameter is NULL, the brush defaults to an opacity of 1.0f and its transform is the identity matrix.</param>
            <unmanaged>HRESULT ID2D1DeviceContext::CreateBitmapBrush([In] ID2D1Bitmap* bitmap,[In, Optional] const D2D1_BITMAP_BRUSH_PROPERTIES1* bitmapBrushProperties,[In, Optional] const D2D1_BRUSH_PROPERTIES* brushProperties,[Out, Fast] ID2D1BitmapBrush1** bitmapBrush)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.BitmapBrush1.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.BitmapBrush1"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.BitmapBrush1.SetInterpolationMode1(SharpDX.Direct2D1.InterpolationMode)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="interpolationMode">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1BitmapBrush1::SetInterpolationMode1']/*"/>	
            <unmanaged>void ID2D1BitmapBrush1::SetInterpolationMode1([In] D2D1_INTERPOLATION_MODE interpolationMode)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.BitmapBrush1.GetInterpolationMode1">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1BitmapBrush1::GetInterpolationMode1']/*"/>	
            <unmanaged>D2D1_INTERPOLATION_MODE ID2D1BitmapBrush1::GetInterpolationMode1()</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct2D1.BitmapBrush1.InterpolationMode1">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1BitmapBrush1::GetInterpolationMode1']/*"/>	
            <unmanaged>GetInterpolationMode1</unmanaged>	
            <unmanaged>D2D1_INTERPOLATION_MODE ID2D1BitmapBrush1::GetInterpolationMode1()</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.BitmapProperties1">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAP_PROPERTIES1']/*"/>	
            <unmanaged>D2D1_BITMAP_PROPERTIES1</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.BitmapProperties1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.BitmapProperties1"/> class.
            </summary>
        </member>
        <member name="M:SharpDX.Direct2D1.BitmapProperties1.#ctor(SharpDX.Direct2D1.PixelFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.BitmapProperties"/> struct.
            </summary>
            <param name="pixelFormat">The pixel format.</param>
        </member>
        <member name="M:SharpDX.Direct2D1.BitmapProperties1.#ctor(SharpDX.Direct2D1.PixelFormat,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.BitmapProperties"/> struct.
            </summary>
            <param name="pixelFormat">The pixel format.</param>
            <param name="dpiX">The dpi X.</param>
            <param name="dpiY">The dpi Y.</param>
        </member>
        <member name="M:SharpDX.Direct2D1.BitmapProperties1.#ctor(SharpDX.Direct2D1.PixelFormat,System.Single,System.Single,SharpDX.Direct2D1.BitmapOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.BitmapProperties1"/> class.
            </summary>
            <param name="pixelFormat">The pixel format.</param>
            <param name="dpiX">The dpi X.</param>
            <param name="dpiY">The dpi Y.</param>
            <param name="bitmapOptions">The bitmap options.</param>
        </member>
        <member name="M:SharpDX.Direct2D1.BitmapProperties1.#ctor(SharpDX.Direct2D1.PixelFormat,System.Single,System.Single,SharpDX.Direct2D1.BitmapOptions,SharpDX.Direct2D1.ColorContext)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.BitmapProperties1"/> class.
            </summary>
            <param name="pixelFormat">The pixel format.</param>
            <param name="dpiX">The dpi X.</param>
            <param name="dpiY">The dpi Y.</param>
            <param name="bitmapOptions">The bitmap options.</param>
            <param name="colorContext">The color context.</param>
        </member>
        <member name="F:SharpDX.Direct2D1.BitmapProperties1.PixelFormat">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAP_PROPERTIES1::pixelFormat']/*"/>	
            <unmanaged>D2D1_PIXEL_FORMAT pixelFormat</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BitmapProperties1.DpiX">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAP_PROPERTIES1::dpiX']/*"/>	
            <unmanaged>float dpiX</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BitmapProperties1.DpiY">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAP_PROPERTIES1::dpiY']/*"/>	
            <unmanaged>float dpiY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BitmapProperties1.BitmapOptions">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAP_PROPERTIES1::bitmapOptions']/*"/>	
            <unmanaged>D2D1_BITMAP_OPTIONS bitmapOptions</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BitmapProperties1.ColorContextPointer">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAP_PROPERTIES1::colorContext']/*"/>	
            <unmanaged>ID2D1ColorContext* colorContext</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct2D1.BitmapProperties1.ColorContext">
            <summary>
            Gets or sets the color context.
            </summary>
            <value>
            The color context.
            </value>
        </member>
        <member name="T:SharpDX.Direct2D1.CommandList">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1CommandList']/*"/>	
            <unmanaged>ID2D1CommandList</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.CommandList.#ctor(SharpDX.Direct2D1.DeviceContext)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.CommandList"/> class.
            </summary>
            <param name="deviceContext">The device context.</param>
        </member>
        <member name="M:SharpDX.Direct2D1.CommandList.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.CommandList"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.CommandList.Stream_(System.IntPtr)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="sink"><para>The sink into which the command list will be streamed.</para></param>	
            <returns>If the method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. If it fails, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            Sample use:<code>	
            Class MyCommandSink : public <see cref="T:SharpDX.Direct2D1.CommandSink"/>	
            {	
            public: // All of the <see cref="T:SharpDX.Direct2D1.CommandSink"/> methods implemented here.	
            }; <see cref="T:SharpDX.Result"/>	
            StreamToMyCommandSink( __in <see cref="T:SharpDX.Direct2D1.CommandList"/> *pCommandList  )	
            { <see cref="T:SharpDX.Result"/> hr = <see cref="F:SharpDX.Result.Ok"/>; MyCommandSink *pCommandSink = new MyCommandSink(); hr = pCommandSink ? <see cref="F:SharpDX.Result.Ok"/> : E_OUTOFMEMORY; if (SUCCEEDED(hr)) { // Receive the contents of the command sink streamed to the sink. hr = pCommandList-&gt;Stream(pCommandSink); } SafeRelease(&amp;pCommandSink); return hr; }	
            </code>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1CommandList::Stream']/*"/>	
            <unmanaged>HRESULT ID2D1CommandList::Stream([In] ID2D1CommandSink* sink)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.CommandList.Close">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1CommandList::Close']/*"/>	
            <unmanaged>HRESULT ID2D1CommandList::Close()</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.Effect">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Effect']/*"/>	
            <unmanaged>ID2D1Effect</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.Properties">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Properties']/*"/>	
            <unmanaged>ID2D1Properties</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Properties.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.Properties"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.Properties.GetPropertyCount">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <returns>This method returns the number of custom (non-system) properties that can be accessed by the object.</returns>	
            <remarks>	
            This method returns the number of custom properties on the <see cref="T:SharpDX.Direct2D1.Properties"/> interface. System properties and sub-properties are part of a closed set, and are enumerable by iterating over this closed set.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Properties::GetPropertyCount']/*"/>	
            <unmanaged>unsigned int ID2D1Properties::GetPropertyCount()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Properties.GetPropertyName(System.Int32,System.IntPtr,System.Int32)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="index"><para>The index of the property for which the name is being returned.</para></param>	
            <param name="name"><para>When this method returns, contains the name being retrieved.</para></param>	
            <param name="nameCount"><para>The number of characters in the name buffer.</para></param>	
            <returns>The method returns an <see cref="T:SharpDX.Result"/>. Possible values include, but are not limited to, those in the following table.HRESULTDescription S_OKNo error occurred. HRESULT_FROM_WIN32(<see cref="F:SharpDX.Win32.ErrorCode.InsufficientBuffer"/>)The supplied buffer was too small to accomodate the data. D2DERR_INVALID_PROPERTYThe specified property does not exist.?</returns>	
            <remarks>	
            This method returns an empty string if index is invalid. If the method returns RESULT_FROM_WIN32(<see cref="F:SharpDX.Win32.ErrorCode.InsufficientBuffer"/>), name will still be filled and truncated.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Properties::GetPropertyName']/*"/>	
            <unmanaged>HRESULT ID2D1Properties::GetPropertyName([In] unsigned int index,[Out, Buffer] wchar_t* name,[In] unsigned int nameCount)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Properties.GetPropertyNameLength(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="index">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Properties::GetPropertyNameLength']/*"/>	
            <unmanaged>unsigned int ID2D1Properties::GetPropertyNameLength([In] unsigned int index)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Properties.GetTypeInfo(System.Int32)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="index">No documentation.</param>	
            <returns>This method returns the type of the selected property.</returns>	
            <remarks>	
            If the property does not exist, the method returns <see cref="F:SharpDX.Direct2D1.PropertyType.Unknown"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Properties::GetType']/*"/>	
            <unmanaged>D2D1_PROPERTY_TYPE ID2D1Properties::GetType([In] unsigned int index)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Properties.GetPropertyIndex(System.String)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="name"><para>The name of the property to retrieve.</para></param>	
            <returns>The index of the corresponding property name.</returns>	
            <remarks>	
            If the property does not exist, this method returns D2D1_INVALID_PROPERTY_INDEX. This reserved value will never map to a valid index and will cause <c>null</c> or sentinel values to be returned from other parts of the property interface.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Properties::GetPropertyIndex']/*"/>	
            <unmanaged>unsigned int ID2D1Properties::GetPropertyIndex([In] const wchar_t* name)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Properties.SetValueByName(System.String,SharpDX.Direct2D1.PropertyType,System.Byte[],System.Int32)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="name"><para>The name of the property to set.</para></param>	
            <param name="type"><para>The data to set.</para></param>	
            <param name="data"><para>The number of bytes in the data to set.</para></param>	
            <param name="dataSize">No documentation.</param>	
            <returns>The method returns an <see cref="T:SharpDX.Result"/>. Possible values include, but are not limited to, those in the following table.HRESULTDescription S_OKNo error occurred. D2DERR_INVALID_PROPERTYThe specified property does not exist. E_OUTOFMEMORYFailed to allocate necessary memory. D3DERR_OUT_OF_VIDEO_MEMORYFailed to allocate required video memory. E_INVALIDARGOne or more arguments are invalid. E_FAILUnspecified failure.?</returns>	
            <remarks>	
            If the property does not exist, the request is ignored and the method returns D2DERR_INVALID_PROPERTY.Any error not in the standard set returned by a property implementation will be mapped into the standard error range.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Properties::SetValueByName']/*"/>	
            <unmanaged>HRESULT ID2D1Properties::SetValueByName([In] const wchar_t* name,[In] D2D1_PROPERTY_TYPE type,[In, Buffer] const unsigned char* data,[In] unsigned int dataSize)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Properties.SetValue(System.Int32,SharpDX.Direct2D1.PropertyType,System.Byte[],System.Int32)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="index"><para>The index of the property to set.</para></param>	
            <param name="type"><para>The data to set.</para></param>	
            <param name="data"><para>The number of bytes in the data to set.</para></param>	
            <param name="dataSize">No documentation.</param>	
            <returns>The method returns an <see cref="T:SharpDX.Result"/>. Possible values include, but are not limited to, those in the following table.HRESULTDescription S_OKNo error occurred. D2DERR_INVALID_PROPERTYThe specified property does not exist. E_OUTOFMEMORYFailed to allocate necessary memory. D3DERR_OUT_OF_VIDEO_MEMORYFailed to allocate required video memory. E_INVALIDARGOne or more arguments are invalid. E_FAILUnspecified failure.?</returns>	
            <remarks>	
            If the property does not exist, the request is ignored and D2DERR_INVALID_PROPERTY is returned.Any error not in the standard set returned by a property implementation will be mapped into the standard error range.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Properties::SetValue']/*"/>	
            <unmanaged>HRESULT ID2D1Properties::SetValue([In] unsigned int index,[In] D2D1_PROPERTY_TYPE type,[In, Buffer] const unsigned char* data,[In] unsigned int dataSize)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Properties.GetValueByName(System.String,SharpDX.Direct2D1.PropertyType,System.Byte[],System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="name">No documentation.</param>	
            <param name="type">No documentation.</param>	
            <param name="data">No documentation.</param>	
            <param name="dataSize">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Properties::GetValueByName']/*"/>	
            <unmanaged>HRESULT ID2D1Properties::GetValueByName([In] const wchar_t* name,[In] D2D1_PROPERTY_TYPE type,[Out, Buffer] unsigned char* data,[In] unsigned int dataSize)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Properties.GetValue(System.Int32,SharpDX.Direct2D1.PropertyType,System.Byte[],System.Int32)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="index"><para>The index of the property from which the data is to be obtained.</para></param>	
            <param name="type"><para>When this method returns, contains a reference to the data requested.</para></param>	
            <param name="data"><para>The number of bytes in the data to be retrieved.</para></param>	
            <param name="dataSize">No documentation.</param>	
            <returns>The method returns an <see cref="T:SharpDX.Result"/>. Possible values include, but are not limited to, those in the following table.HRESULTDescription S_OKNo error occurred. D2DERR_INVALID_PROPERTYThe specified property does not exist. E_OUTOFMEMORYFailed to allocate necessary memory. D3DERR_OUT_OF_VIDEO_MEMORYFailed to allocate required video memory. E_INVALIDARGOne or more arguments are invalid. E_FAILUnspecified failure.?</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Properties::GetValue']/*"/>	
            <unmanaged>HRESULT ID2D1Properties::GetValue([In] unsigned int index,[In] D2D1_PROPERTY_TYPE type,[Out, Buffer] unsigned char* data,[In] unsigned int dataSize)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Properties.GetValueSize(System.Int32)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="index"><para>The index of the property.</para></param>	
            <returns>This method returns size of the value in bytes, using the property index</returns>	
            <remarks>	
            This method returns zero if index does not exist.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Properties::GetValueSize']/*"/>	
            <unmanaged>unsigned int ID2D1Properties::GetValueSize([In] unsigned int index)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Properties.GetSubProperties(System.Int32,SharpDX.Direct2D1.Properties@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="index"><para>The index of the  sub-properties to be retrieved.</para></param>	
            <param name="subProperties"><para>When this method returns, contains the address of a reference to the sub-properties.</para></param>	
            <returns>The method returns an <see cref="T:SharpDX.Result"/>. Possible values include, but are not limited to, those in the following table.HRESULTDescription S_OKNo error occurred. D2DERR_NO_SUBPROPERTIESThe specified property does not exist.?</returns>	
            <remarks>	
            If there are no sub-properties, subProperties will be <c>null</c>, and D2DERR_NO_SUBPROPERTIES will be returned.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Properties::GetSubProperties']/*"/>	
            <unmanaged>HRESULT ID2D1Properties::GetSubProperties([In] unsigned int index,[Out, Optional] ID2D1Properties** subProperties)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct2D1.Properties.PropertyCount">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            This method returns the number of custom properties on the <see cref="T:SharpDX.Direct2D1.Properties"/> interface. System properties and sub-properties are part of a closed set, and are enumerable by iterating over this closed set.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Properties::GetPropertyCount']/*"/>	
            <unmanaged>GetPropertyCount</unmanaged>	
            <unmanaged>unsigned int ID2D1Properties::GetPropertyCount()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Effect.#ctor(SharpDX.Direct2D1.DeviceContext,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.Effect"/> class.
            </summary>
            <param name="deviceContext">The device context.</param>
            <param name="effectId"><para>The class ID of the effect to create.</para></param>	
            <exception cref="T:SharpDX.SharpDXException">If no sufficient memory to complete the call, or if it does not have enough display memory to perform the operation, or if the specified effect is not registered by the system.</exception>
            <remarks>
            The created effect does not increment the reference count for the dynamic-link library (DLL) from which the effect was created. If the application deletes an effect while that effect is loaded, the resulting behavior will be unpredictable.	
            </remarks>	
            <unmanaged>HRESULT ID2D1DeviceContext::CreateEffect([In] const GUID&amp; effectId,[Out, Fast] ID2D1Effect** effect)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Effect.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.Effect"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.DisplacementMap">
            <summary>Constant DisplacementMap.</summary>
            <unmanaged>CLSID_D2D1DisplacementMap</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.Border">
            <summary>Constant Border.</summary>
            <unmanaged>CLSID_D2D1Border</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.Saturation">
            <summary>Constant Saturation.</summary>
            <unmanaged>CLSID_D2D1Saturation</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.ConvolveMatrix">
            <summary>Constant ConvolveMatrix.</summary>
            <unmanaged>CLSID_D2D1ConvolveMatrix</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.GammaTransfer">
            <summary>Constant GammaTransfer.</summary>
            <unmanaged>CLSID_D2D1GammaTransfer</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.Morphology">
            <summary>Constant Morphology.</summary>
            <unmanaged>CLSID_D2D1Morphology</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.Histogram">
            <summary>Constant Histogram.</summary>
            <unmanaged>CLSID_D2D1Histogram</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.Turbulence">
            <summary>Constant Turbulence.</summary>
            <unmanaged>CLSID_D2D1Turbulence</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.SpotDiffuse">
            <summary>Constant SpotDiffuse.</summary>
            <unmanaged>CLSID_D2D1SpotDiffuse</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.HueRotation">
            <summary>Constant HueRotation.</summary>
            <unmanaged>CLSID_D2D1HueRotation</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.ColorMatrix">
            <summary>Constant ColorMatrix.</summary>
            <unmanaged>CLSID_D2D1ColorMatrix</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.LuminanceToAlpha">
            <summary>Constant LuminanceToAlpha.</summary>
            <unmanaged>CLSID_D2D1LuminanceToAlpha</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.DistantSpecular">
            <summary>Constant DistantSpecular.</summary>
            <unmanaged>CLSID_D2D1DistantSpecular</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.Atlas">
            <summary>Constant Atlas.</summary>
            <unmanaged>CLSID_D2D1Atlas</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.Brightness">
            <summary>Constant Brightness.</summary>
            <unmanaged>CLSID_D2D1Brightness</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.Premultiply">
            <summary>Constant Premultiply.</summary>
            <unmanaged>CLSID_D2D1Premultiply</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.HighQualityScale">
            <summary>Constant HighQualityScale.</summary>
            <unmanaged>CLSID_D2D1HighQualityScale</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.Tile">
            <summary>Constant Tile.</summary>
            <unmanaged>CLSID_D2D1Tile</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.GaussianBlur">
            <summary>Constant GaussianBlur.</summary>
            <unmanaged>CLSID_D2D1GaussianBlur</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.Blend">
            <summary>Constant Blend.</summary>
            <unmanaged>CLSID_D2D1Blend</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.TableTransfer">
            <summary>Constant TableTransfer.</summary>
            <unmanaged>CLSID_D2D1TableTransfer</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.LinearTransfer">
            <summary>Constant LinearTransfer.</summary>
            <unmanaged>CLSID_D2D1LinearTransfer</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.ColorManagement">
            <summary>Constant ColorManagement.</summary>
            <unmanaged>CLSID_D2D1ColorManagement</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.Shadow">
            <summary>Constant Shadow.</summary>
            <unmanaged>CLSID_D2D1Shadow</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.ArithmeticComposite">
            <summary>Constant ArithmeticComposite.</summary>
            <unmanaged>CLSID_D2D1ArithmeticComposite</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.DpiCompensation">
            <summary>Constant DpiCompensation.</summary>
            <unmanaged>CLSID_D2D1DpiCompensation</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.BitmapSource">
            <summary>Constant BitmapSource.</summary>
            <unmanaged>CLSID_D2D1BitmapSource</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.PointDiffuse">
            <summary>Constant PointDiffuse.</summary>
            <unmanaged>CLSID_D2D1PointDiffuse</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.InfiniteDiffuse">
            <summary>Constant InfiniteDiffuse.</summary>
            <unmanaged>CLSID_D2D1InfiniteDiffuse</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.Crop">
            <summary>Constant Crop.</summary>
            <unmanaged>CLSID_D2D1Crop</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.DirectionalBlur">
            <summary>Constant DirectionalBlur.</summary>
            <unmanaged>CLSID_D2D1DirectionalBlur</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.SpotSpecular">
            <summary>Constant SpotSpecular.</summary>
            <unmanaged>CLSID_D2D1SpotSpecular</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.Flood">
            <summary>Constant Flood.</summary>
            <unmanaged>CLSID_D2D1Flood</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.DiscreteTransfer">
            <summary>Constant DiscreteTransfer.</summary>
            <unmanaged>CLSID_D2D1DiscreteTransfer</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.Composite">
            <summary>Constant Composite.</summary>
            <unmanaged>CLSID_D2D1Composite</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.PointSpecular">
            <summary>Constant PointSpecular.</summary>
            <unmanaged>CLSID_D2D1PointSpecular</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.UnPremultiply">
            <summary>Constant UnPremultiply.</summary>
            <unmanaged>CLSID_D2D1UnPremultiply</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.AffineTransform2D">
            <summary>Constant AffineTransform2D.</summary>
            <unmanaged>CLSID_D2D12DAffineTransform</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.PerspectiveTransform3D">
            <summary>Constant PerspectiveTransform3D.</summary>
            <unmanaged>CLSID_D2D13DPerspectiveTransform</unmanaged>
        </member>
        <member name="F:SharpDX.Direct2D1.Effect.Transform3D">
            <summary>Constant Transform3D.</summary>
            <unmanaged>CLSID_D2D13DTransform</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Effect.SetInput(System.Int32,SharpDX.Direct2D1.Image,System.Boolean)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="index">No documentation.</param>	
            <param name="input">No documentation.</param>	
            <param name="invalidate">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Effect::SetInput']/*"/>	
            <unmanaged>void ID2D1Effect::SetInput([In] unsigned int index,[In, Optional] ID2D1Image* input,[In] BOOL invalidate)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Effect.SetInputCount(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="inputCount">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Effect::SetInputCount']/*"/>	
            <unmanaged>HRESULT ID2D1Effect::SetInputCount([In] unsigned int inputCount)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Effect.GetInput(System.Int32,SharpDX.Direct2D1.Image@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="index"><para>The index of the image to retrieve.</para></param>	
            <param name="input"><para>When this method returns, contains the address of a reference to the image that is identified by Index.</para></param>	
            <remarks>	
            If the input index is out of range, the returned image will be <c>null</c>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Effect::GetInput']/*"/>	
            <unmanaged>void ID2D1Effect::GetInput([In] unsigned int index,[Out, Optional] ID2D1Image** input)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Effect.GetInputCount">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <returns>This method returns the number of inputs to the effect.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Effect::GetInputCount']/*"/>	
            <unmanaged>unsigned int ID2D1Effect::GetInputCount()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Effect.GetOutput(SharpDX.Direct2D1.Image@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="outputImage"><para>When this method returns, contains the address of a reference to the output image for the effect.</para></param>	
            <remarks>	
            The output image  can be set as an input to another effect, or can be directly passed into the <see cref="T:SharpDX.Direct2D1.DeviceContext"/> in order to render the effect.It is  also possible to use QueryInterface to retreive the same output image.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Effect::GetOutput']/*"/>	
            <unmanaged>void ID2D1Effect::GetOutput([Out] ID2D1Image** outputImage)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct2D1.Effect.InputCount">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Effect::GetInputCount']/*"/>	
            <unmanaged>GetInputCount</unmanaged>	
            <unmanaged>unsigned int ID2D1Effect::GetInputCount()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.Effect.Output">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            The output image  can be set as an input to another effect, or can be directly passed into the <see cref="T:SharpDX.Direct2D1.DeviceContext"/> in order to render the effect.It is  also possible to use QueryInterface to retreive the same output image.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Effect::GetOutput']/*"/>	
            <unmanaged>GetOutput</unmanaged>	
            <unmanaged>void ID2D1Effect::GetOutput([Out] ID2D1Image** outputImage)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.Factory1">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Factory1']/*"/>	
            <unmanaged>ID2D1Factory1</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.Factory">
            <summary>	
            Creates Direct2D resources.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Factory']/*"/>	
            <unmanaged>ID2D1Factory</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Factory.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.Factory"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.Factory.ReloadSystemMetrics">
            <summary>	
            Forces the factory to refresh any system defaults that it might have changed since factory creation.	
            </summary>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            You should call this method before calling the GetDesktopDpi method, to ensure that the system DPI is current.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Factory::ReloadSystemMetrics']/*"/>	
            <unmanaged>HRESULT ID2D1Factory::ReloadSystemMetrics()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Factory.GetDesktopDpi(System.Single@,System.Single@)">
            <summary>	
            Retrieves the current desktop dots per inch (DPI). To refresh this value, call ReloadSystemMetrics.	
            </summary>	
            <param name="dpiX">No documentation.</param>	
            <param name="dpiY">No documentation.</param>	
            <remarks>	
            Use this method to obtain the system DPI when setting physical pixel values, such as when you specify the size of a window.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Factory::GetDesktopDpi']/*"/>	
            <unmanaged>void ID2D1Factory::GetDesktopDpi([Out] float* dpiX,[Out] float* dpiY)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Factory.CreateRectangleGeometry(SharpDX.RectangleF,SharpDX.Direct2D1.RectangleGeometry)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.RectangleGeometry"/>.	
            </summary>	
            <param name="rectangle">No documentation.</param>	
            <param name="rectangleGeometry">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Factory::CreateRectangleGeometry']/*"/>	
            <unmanaged>HRESULT ID2D1Factory::CreateRectangleGeometry([In] const D2D_RECT_F* rectangle,[Out, Fast] ID2D1RectangleGeometry** rectangleGeometry)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Factory.CreateRoundedRectangleGeometry(SharpDX.Direct2D1.RoundedRect@,SharpDX.Direct2D1.RoundedRectangleGeometry)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.RoundedRectangleGeometry"/>.	
            </summary>	
            <param name="roundedRectangle">No documentation.</param>	
            <param name="roundedRectangleGeometry">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Factory::CreateRoundedRectangleGeometry']/*"/>	
            <unmanaged>HRESULT ID2D1Factory::CreateRoundedRectangleGeometry([In] const D2D1_ROUNDED_RECT* roundedRectangle,[Out, Fast] ID2D1RoundedRectangleGeometry** roundedRectangleGeometry)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Factory.CreateEllipseGeometry(SharpDX.Direct2D1.Ellipse,SharpDX.Direct2D1.EllipseGeometry)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.EllipseGeometry"/>.	
            </summary>	
            <param name="ellipse">No documentation.</param>	
            <param name="ellipseGeometry">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Factory::CreateEllipseGeometry']/*"/>	
            <unmanaged>HRESULT ID2D1Factory::CreateEllipseGeometry([In] const D2D1_ELLIPSE* ellipse,[Out, Fast] ID2D1EllipseGeometry** ellipseGeometry)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Factory.CreateGeometryGroup(SharpDX.Direct2D1.FillMode,SharpDX.Direct2D1.Geometry[],System.Int32,SharpDX.Direct2D1.GeometryGroup)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.GeometryGroup"/>, which is an object that holds other geometries.	
            </summary>	
            <param name="fillMode">No documentation.</param>	
            <param name="geometries">No documentation.</param>	
            <param name="geometriesCount">No documentation.</param>	
            <param name="geometryGroup">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            Geometry groups are a convenient way to group several geometries simultaneously so all figures of several distinct geometries are concatenated into one. To create a  <see cref="T:SharpDX.Direct2D1.GeometryGroup"/> object, call  the CreateGeometryGroup method on the <see cref="T:SharpDX.Direct2D1.Factory"/> object, passing in the fillMode with possible values of   <see cref="F:SharpDX.Direct2D1.FillMode.Alternate"/> (alternate) and <see cref="F:SharpDX.Direct2D1.FillMode.Winding"/>, an array of geometry objects to add to the geometry group, and the number of elements in this array.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Factory::CreateGeometryGroup']/*"/>	
            <unmanaged>HRESULT ID2D1Factory::CreateGeometryGroup([In] D2D1_FILL_MODE fillMode,[In, Buffer] ID2D1Geometry** geometries,[In] unsigned int geometriesCount,[Out, Fast] ID2D1GeometryGroup** geometryGroup)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Factory.CreateGeometryGroup(SharpDX.Direct2D1.FillMode,SharpDX.ComArray{SharpDX.Direct2D1.Geometry},System.Int32,SharpDX.Direct2D1.GeometryGroup)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.GeometryGroup"/>, which is an object that holds other geometries.	
            </summary>	
            <param name="fillMode">No documentation.</param>	
            <param name="geometries">No documentation.</param>	
            <param name="geometriesCount">No documentation.</param>	
            <param name="geometryGroup">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            Geometry groups are a convenient way to group several geometries simultaneously so all figures of several distinct geometries are concatenated into one. To create a  <see cref="T:SharpDX.Direct2D1.GeometryGroup"/> object, call  the CreateGeometryGroup method on the <see cref="T:SharpDX.Direct2D1.Factory"/> object, passing in the fillMode with possible values of   <see cref="F:SharpDX.Direct2D1.FillMode.Alternate"/> (alternate) and <see cref="F:SharpDX.Direct2D1.FillMode.Winding"/>, an array of geometry objects to add to the geometry group, and the number of elements in this array.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Factory::CreateGeometryGroup']/*"/>	
            <unmanaged>HRESULT ID2D1Factory::CreateGeometryGroup([In] D2D1_FILL_MODE fillMode,[In, Buffer] ID2D1Geometry** geometries,[In] unsigned int geometriesCount,[Out, Fast] ID2D1GeometryGroup** geometryGroup)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Factory.CreateTransformedGeometry(SharpDX.Direct2D1.Geometry,SharpDX.Matrix3x2@,SharpDX.Direct2D1.TransformedGeometry)">
            <summary>	
            Transforms the specified geometry and stores the result as an <see cref="T:SharpDX.Direct2D1.TransformedGeometry"/> object.	
            </summary>	
            <param name="sourceGeometry">No documentation.</param>	
            <param name="transform">No documentation.</param>	
            <param name="transformedGeometry">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            Like other resources, a transformed geometry the inherits the resource space and threading policy of the factory that created it. This object is immutable.When stroking a transformed geometry with the DrawGeometry method, the stroke width is not affected by the transform applied to the geometry.  The stroke width is only affected by the world transform.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Factory::CreateTransformedGeometry']/*"/>	
            <unmanaged>HRESULT ID2D1Factory::CreateTransformedGeometry([In] ID2D1Geometry* sourceGeometry,[In] const D2D_MATRIX_3X2_F* transform,[Out, Fast] ID2D1TransformedGeometry** transformedGeometry)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Factory.CreatePathGeometry(SharpDX.Direct2D1.PathGeometry)">
            <summary>	
            Creates an empty <see cref="T:SharpDX.Direct2D1.PathGeometry"/>.	
            </summary>	
            <param name="athGeometryRef">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Factory::CreatePathGeometry']/*"/>	
            <unmanaged>HRESULT ID2D1Factory::CreatePathGeometry([Out, Fast] ID2D1PathGeometry** pathGeometry)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Factory.CreateStrokeStyle(SharpDX.Direct2D1.StrokeStyleProperties@,System.Single[],System.Int32,SharpDX.Direct2D1.StrokeStyle)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.StrokeStyle"/> that describes start cap, dash pattern, and other features of a stroke.	
            </summary>	
            <param name="strokeStyleProperties">No documentation.</param>	
            <param name="dashes">No documentation.</param>	
            <param name="dashesCount">No documentation.</param>	
            <param name="strokeStyle">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Factory::CreateStrokeStyle']/*"/>	
            <unmanaged>HRESULT ID2D1Factory::CreateStrokeStyle([In] const D2D1_STROKE_STYLE_PROPERTIES* strokeStyleProperties,[In, Buffer, Optional] const float* dashes,[In] unsigned int dashesCount,[Out, Fast] ID2D1StrokeStyle** strokeStyle)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Factory.CreateDrawingStateBlock(System.Nullable{SharpDX.Direct2D1.DrawingStateDescription},SharpDX.DirectWrite.RenderingParams,SharpDX.Direct2D1.DrawingStateBlock)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.DrawingStateBlock"/> that can be used with the SaveDrawingState and RestoreDrawingState methods of a render target.	
            </summary>	
            <param name="drawingStateDescription">No documentation.</param>	
            <param name="textRenderingParams">No documentation.</param>	
            <param name="drawingStateBlock">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Factory::CreateDrawingStateBlock']/*"/>	
            <unmanaged>HRESULT ID2D1Factory::CreateDrawingStateBlock([In, Optional] const D2D1_DRAWING_STATE_DESCRIPTION* drawingStateDescription,[In, Optional] IDWriteRenderingParams* textRenderingParams,[Out, Fast] ID2D1DrawingStateBlock** drawingStateBlock)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Factory.CreateWicBitmapRenderTarget(SharpDX.WIC.Bitmap,SharpDX.Direct2D1.RenderTargetProperties@,SharpDX.Direct2D1.RenderTarget)">
            <summary>	
            Creates a render target that renders to a Microsoft Windows Imaging Component (WIC)  bitmap.	
            </summary>	
            <param name="target"><para>The bitmap that receives the rendering output of the render target.</para></param>	
            <param name="renderTargetProperties"><para>The rendering mode, pixel format, remoting options, DPI information, and the minimum DirectX support required for hardware rendering. For information about supported pixel formats, see  Supported Pixel  Formats and Alpha Modes.</para></param>	
            <param name="renderTarget"><para>When this method returns, contains the address of the reference to the  <see cref="T:SharpDX.Direct2D1.RenderTarget"/> object created by this method. </para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            Your application should create render targets once and hold onto them for the life of the application or until the D2DERR_RECREATE_TARGET error is received. When you receive this error, you need to recreate the render target (and any resources it created).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Factory::CreateWicBitmapRenderTarget']/*"/>	
            <unmanaged>HRESULT ID2D1Factory::CreateWicBitmapRenderTarget([In] IWICBitmap* target,[In] const D2D1_RENDER_TARGET_PROPERTIES* renderTargetProperties,[Out, Fast] ID2D1RenderTarget** renderTarget)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Factory.CreateHwndRenderTarget(SharpDX.Direct2D1.RenderTargetProperties@,SharpDX.Direct2D1.HwndRenderTargetProperties,SharpDX.Direct2D1.WindowRenderTarget)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.WindowRenderTarget"/>, a render target that renders to a window.	
            </summary>	
            <param name="renderTargetProperties">No documentation.</param>	
            <param name="hwndRenderTargetProperties">No documentation.</param>	
            <param name="hwndRenderTarget">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            When you create a render target and hardware acceleration is available, you allocate resources on the computer's GPU. By creating a render target once and retaining it as long as possible, you gain performance benefits. Your application should create render targets once and hold onto them for the life of the application or until the D2DERR_RECREATE_TARGET error is received. When you receive this error, you need to recreate the render target (and any resources it created).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Factory::CreateHwndRenderTarget']/*"/>	
            <unmanaged>HRESULT ID2D1Factory::CreateHwndRenderTarget([In] const D2D1_RENDER_TARGET_PROPERTIES* renderTargetProperties,[In] const D2D1_HWND_RENDER_TARGET_PROPERTIES* hwndRenderTargetProperties,[Out, Fast] ID2D1HwndRenderTarget** hwndRenderTarget)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Factory.CreateDxgiSurfaceRenderTarget(SharpDX.DXGI.Surface,SharpDX.Direct2D1.RenderTargetProperties@,SharpDX.Direct2D1.RenderTarget)">
            <summary>	
            Creates a render target that draws to a DirectX Graphics Infrastructure (DXGI) surface.	
            </summary>	
            <param name="dxgiSurface"><para>The <see cref="T:SharpDX.DXGI.Surface"/> to which the render target will draw.</para></param>	
            <param name="renderTargetProperties"><para>The rendering mode, pixel format, remoting options, DPI information, and the minimum DirectX support required for hardware rendering. For information about supported pixel formats, see  Supported Pixel  Formats and Alpha Modes.</para></param>	
            <param name="renderTarget"><para>When this method returns, contains the address of the reference to the <see cref="T:SharpDX.Direct2D1.RenderTarget"/> object created by this method.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            To write to a Direct3D surface, you obtain an <see cref="T:SharpDX.DXGI.Surface"/> and pass it to the CreateDxgiSurfaceRenderTarget method to create a DXGI surface render target; you can then use the DXGI surface render target to draw 2-D content to the DXGI surface.A DXGI surface render target is a type of <see cref="T:SharpDX.Direct2D1.RenderTarget"/>. Like other Direct2D render targets, you can use it to create resources and issue drawing commands.The DXGI surface render target and the DXGI surface must use the same DXGI format. If you specify the DXGI_FORMAT_UNKOWN format when you create the render target, it will automatically use the surface's format.The DXGI surface render target does not perform DXGI surface synchronization.For more information about creating and using DXGI surface render targets, see the Direct2D and Direct3D Interoperability Overview.To work with Direct2D, the Direct3D device that provides the <see cref="T:SharpDX.DXGI.Surface"/> must be created with the <see cref="!:SharpDX.Direct3D10.DeviceCreationFlags.BgraSupport"/> flag.When you create a render target and hardware acceleration is available, you allocate resources on the computer's GPU. By creating a render target once and retaining it as long as possible, you gain performance benefits. Your application should create render targets once and hold onto them for the life of the application or until the render target's EndDraw method returns the D2DERR_RECREATE_TARGET error. When you receive this error, you need to recreate the render target (and any resources it created).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Factory::CreateDxgiSurfaceRenderTarget']/*"/>	
            <unmanaged>HRESULT ID2D1Factory::CreateDxgiSurfaceRenderTarget([In] IDXGISurface* dxgiSurface,[In] const D2D1_RENDER_TARGET_PROPERTIES* renderTargetProperties,[Out, Fast] ID2D1RenderTarget** renderTarget)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Factory.CreateDCRenderTarget(SharpDX.Direct2D1.RenderTargetProperties@,SharpDX.Direct2D1.DeviceContextRenderTarget)">
            <summary>	
            Creates a render target that draws to a Windows Graphics Device Interface (GDI) device context.	
            </summary>	
            <param name="renderTargetProperties"><para>The rendering mode, pixel format, remoting options, DPI information, and the minimum DirectX support required for hardware rendering.  To enable the device context (DC) render target to work with GDI, set the DXGI format to <see cref="F:SharpDX.DXGI.Format.B8G8R8A8_UNorm"/> and the alpha mode to <see cref="F:SharpDX.Direct2D1.AlphaMode.Premultiplied"/> or <see cref="F:SharpDX.Direct2D1.AlphaMode.Ignore"/>. For more information about pixel formats, see  Supported Pixel  Formats and Alpha Modes.</para></param>	
            <param name="dcRenderTarget"><para>When this method returns, dcRenderTarget contains the address of the reference to the  <see cref="T:SharpDX.Direct2D1.DeviceContextRenderTarget"/> created by the method.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            Before you can render with a DC render target, you must use the render target's BindDC method to associate it with a GDI DC.  Do this for each different DC and whenever there is a change in the size of the area you want to draw to.To enable the DC render target to work with GDI, set the render target's DXGI format to <see cref="F:SharpDX.DXGI.Format.B8G8R8A8_UNorm"/> and alpha mode to <see cref="F:SharpDX.Direct2D1.AlphaMode.Premultiplied"/> or <see cref="F:SharpDX.Direct2D1.AlphaMode.Ignore"/>.Your application should create render targets once and hold on to them for the life of the application or until the render target's  EndDraw method returns the D2DERR_RECREATE_TARGET error. When you receive this error, recreate the render target (and any resources it created).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Factory::CreateDCRenderTarget']/*"/>	
            <unmanaged>HRESULT ID2D1Factory::CreateDCRenderTarget([In] const D2D1_RENDER_TARGET_PROPERTIES* renderTargetProperties,[Out, Fast] ID2D1DCRenderTarget** dcRenderTarget)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Factory.#ctor">
            <summary>
            Default Constructor for a <see cref="T:SharpDX.Direct2D1.Factory"/>.
            </summary>
        </member>
        <member name="M:SharpDX.Direct2D1.Factory.#ctor(SharpDX.Direct2D1.FactoryType)">
            <summary>
            Default Constructor for a <see cref="T:SharpDX.Direct2D1.Factory"/>.
            </summary>
        </member>
        <member name="M:SharpDX.Direct2D1.Factory.#ctor(SharpDX.Direct2D1.FactoryType,SharpDX.Direct2D1.DebugLevel)">
            <summary>
            Default Constructor for a <see cref="T:SharpDX.Direct2D1.Factory"/>.
            </summary>
        </member>
        <member name="P:SharpDX.Direct2D1.Factory.DesktopDpi">
            <summary>	
            Retrieves the current desktop dots per inch (DPI). To refresh this value, call {{ReloadSystemMetrics}}.	
            </summary>	
            <remarks>	
            Use this method to obtain the system DPI when setting physical pixel values, such as when you specify the size of a window. 	
            </remarks>	
        </member>
        <member name="M:SharpDX.Direct2D1.Factory1.#ctor">
            <summary>
            Default Constructor for a <see cref="T:SharpDX.Direct2D1.Factory1"/>.
            </summary>
        </member>
        <member name="M:SharpDX.Direct2D1.Factory1.#ctor(SharpDX.Direct2D1.FactoryType)">
            <summary>
            Default Constructor for a <see cref="T:SharpDX.Direct2D1.Factory1"/>.
            </summary>
        </member>
        <member name="M:SharpDX.Direct2D1.Factory1.#ctor(SharpDX.Direct2D1.FactoryType,SharpDX.Direct2D1.DebugLevel)">
            <summary>
            Default Constructor for a <see cref="T:SharpDX.Direct2D1.Factory1"/>.
            </summary>
        </member>
        <member name="M:SharpDX.Direct2D1.Factory1.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.Factory1"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.Factory1.CreateDevice(SharpDX.DXGI.Device,SharpDX.Direct2D1.Device@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="dxgiDevice"><para>The <see cref="T:SharpDX.DXGI.Device"/> object used when creating  the <see cref="T:SharpDX.Direct2D1.Device"/>. </para></param>	
            <param name="d2dDevice"><para>The requested <see cref="T:SharpDX.Direct2D1.Device"/> object.</para></param>	
            <returns>The method returns an <see cref="T:SharpDX.Result"/>. Possible values include, but are not limited to, those in the following table.HRESULTDescription S_OKNo error occurred. E_OUTOFMEMORYDirect2D could not allocate sufficient memory to complete the call. E_INVALIDARGAn invalid parameter was passed to the returning function. D3DERR_OUTOFVIDEOMEMORYDirect3D does not have enough display memory to perform the operation.?</returns>	
            <remarks>	
            Each call to CreateDevice returns a unique <see cref="T:SharpDX.Direct2D1.Device"/> object.The <see cref="T:SharpDX.DXGI.Device"/> object is obtained by calling QueryInterface on an <see cref="!:SharpDX.Direct3D10.Device"/> or an <see cref="!:SharpDX.Direct3D11.Device"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Factory1::CreateDevice']/*"/>	
            <unmanaged>HRESULT ID2D1Factory1::CreateDevice([In] IDXGIDevice* dxgiDevice,[Out] ID2D1Device** d2dDevice)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Factory1.CreateStrokeStyle(SharpDX.Direct2D1.StrokeStyleProperties1@,System.Single[],System.Int32,SharpDX.Direct2D1.StrokeStyle1@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="strokeStyleProperties">No documentation.</param>	
            <param name="dashes">No documentation.</param>	
            <param name="dashesCount">No documentation.</param>	
            <param name="strokeStyle">No documentation.</param>	
            <returns>The method returns an <see cref="T:SharpDX.Result"/>. Possible values include, but are not limited to, those in the following table.HRESULTDescription S_OKNo error occurred. E_OUTOFMEMORYDirect2D could not allocate sufficient memory to complete the call. E_INVALIDARGAn invalid value was passed to the method.?</returns>	
            <remarks>	
            It is valid to specify a dash array only if <see cref="F:SharpDX.Direct2D1.DashStyle.Custom"/> is also specified.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Factory1::CreateStrokeStyle']/*"/>	
            <unmanaged>HRESULT ID2D1Factory1::CreateStrokeStyle([In] const D2D1_STROKE_STYLE_PROPERTIES1* strokeStyleProperties,[In, Buffer, Optional] const float* dashes,[In] unsigned int dashesCount,[Out] ID2D1StrokeStyle1** strokeStyle)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Factory1.CreatePathGeometry(SharpDX.Direct2D1.PathGeometry1@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="athGeometryRef">No documentation.</param>	
            <returns>The method returns an <see cref="T:SharpDX.Result"/>. Possible values include, but are not limited to, those in the following table.HRESULTDescription S_OKNo error occurred. E_OUTOFMEMORYDirect2D could not allocate sufficient memory to complete the call.?</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Factory1::CreatePathGeometry']/*"/>	
            <unmanaged>HRESULT ID2D1Factory1::CreatePathGeometry([Out] ID2D1PathGeometry1** pathGeometry)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Factory1.CreateDrawingStateBlock(System.Nullable{SharpDX.Direct2D1.DrawingStateDescription1},SharpDX.DirectWrite.RenderingParams,SharpDX.Direct2D1.DrawingStateBlock1@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="drawingStateDescription">No documentation.</param>	
            <param name="textRenderingParams">No documentation.</param>	
            <param name="drawingStateBlock">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Factory1::CreateDrawingStateBlock']/*"/>	
            <unmanaged>HRESULT ID2D1Factory1::CreateDrawingStateBlock([In, Optional] const D2D1_DRAWING_STATE_DESCRIPTION1* drawingStateDescription,[In, Optional] IDWriteRenderingParams* textRenderingParams,[Out] ID2D1DrawingStateBlock1** drawingStateBlock)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Factory1.CreateGdiMetafile_(System.IntPtr,SharpDX.Direct2D1.GdiMetafile@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="metafileStream">No documentation.</param>	
            <param name="metafile">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Factory1::CreateGdiMetafile']/*"/>	
            <unmanaged>HRESULT ID2D1Factory1::CreateGdiMetafile([In] IStream* metafileStream,[Out] ID2D1GdiMetafile** metafile)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Factory1.RegisterEffectFromStream_(System.Guid,System.IntPtr,SharpDX.Direct2D1.PropertyBinding[],System.Int32,SharpDX.FunctionCallback)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="classId">No documentation.</param>	
            <param name="ropertyXmlRef">No documentation.</param>	
            <param name="bindings">No documentation.</param>	
            <param name="bindingsCount">No documentation.</param>	
            <param name="effectFactory">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Factory1::RegisterEffectFromStream']/*"/>	
            <unmanaged>HRESULT ID2D1Factory1::RegisterEffectFromStream([In] const GUID&amp; classId,[In] IStream* propertyXml,[In, Buffer, Optional] const D2D1_PROPERTY_BINDING* bindings,[In] unsigned int bindingsCount,[In] const __function__stdcall* effectFactory)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Factory1.RegisterEffectFromString(System.Guid,System.String,SharpDX.Direct2D1.PropertyBinding[],System.Int32,SharpDX.FunctionCallback)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="classId">No documentation.</param>	
            <param name="ropertyXmlRef">No documentation.</param>	
            <param name="bindings">No documentation.</param>	
            <param name="bindingsCount">No documentation.</param>	
            <param name="effectFactory">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Factory1::RegisterEffectFromString']/*"/>	
            <unmanaged>HRESULT ID2D1Factory1::RegisterEffectFromString([In] const GUID&amp; classId,[In] const wchar_t* propertyXml,[In, Buffer, Optional] const D2D1_PROPERTY_BINDING* bindings,[In] unsigned int bindingsCount,[In] const __function__stdcall* effectFactory)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Factory1.UnregisterEffect(System.Guid)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="classId"><para>The identifier of the effect to be unregistered.</para></param>	
            <returns>D2DERR_EFFECT_IS_NOT_REGISTERED if the effect is not registered, <see cref="F:SharpDX.Result.Ok"/> otherwise.</returns>	
            <remarks>	
            In order for the effect to be fully unloaded, you must call UnregisterEffect the same number of times that you have registered the effect.The UnregisterEffect method unregisters only those effects that are registered on the same factory. It cannot be used to unregister a built-in effect.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Factory1::UnregisterEffect']/*"/>	
            <unmanaged>HRESULT ID2D1Factory1::UnregisterEffect([In] const GUID&amp; classId)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Factory1.GetRegisteredEffects(System.Guid[],System.Int32,System.Int32@,System.Int32@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="effects"><para>When this method returns, contains an array of effects. <c>null</c> if no effects are retrieved.</para></param>	
            <param name="effectsCount"><para>The capacity of the effects array.</para></param>	
            <param name="effectsReturned"><para>When this method returns, contains the  number of effects copied into effects.</para></param>	
            <param name="effectsRegistered"><para>When this method returns, contains the number of effects currently registered in the system.</para></param>	
            <returns>The method returns an <see cref="T:SharpDX.Result"/>. Possible values include, but are not limited to, those in the following table.HRESULTDescription S_OKNo error occurred. E_OUTOFMEMORYDirect2D could not allocate sufficient memory to complete the call. HRESULT_FROM_WIN32(<see cref="F:SharpDX.Win32.ErrorCode.InsufficientBuffer"/>)effectsRegistered is larger than effectCount.?</returns>	
            <remarks>	
            The set of class IDs will be atomically returned by the API. The set will not be interrupted by other threads registering or unregistering effects.If effectsRegistered is larger than effectCount, the supplied array will still be filled to capacity with the current set of registered effects. This method returns the CLSIDs for all global effects and all effects registered to this factory.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Factory1::GetRegisteredEffects']/*"/>	
            <unmanaged>HRESULT ID2D1Factory1::GetRegisteredEffects([Out, Buffer, Optional] GUID* effects,[In] unsigned int effectsCount,[Out, Optional] unsigned int* effectsReturned,[Out, Optional] unsigned int* effectsRegistered)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Factory1.GetEffectProperties(System.Guid,SharpDX.Direct2D1.Properties@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="effectId"><para>The ID of the effect to retrieve properties from.</para></param>	
            <param name="ropertiesRef"><para>When this method returns, contains the address of a reference to the property interface that can be used to query the metadata of the effect.</para></param>	
            <returns>The method returns an <see cref="T:SharpDX.Result"/>. Possible values include, but are not limited to, those in the following table.HRESULTDescription S_OKNo error occurred. D2DERR_EFFECT_IS_NOT_REGISTEREDThe requested effect could not be found. E_OUTOFMEMORYDirect2D could not allocate sufficient memory to complete the call.?</returns>	
            <remarks>	
            The returned effect properties will have all the mutable properties for the effect set to a default of <c>null</c>, or an  empty value.Value types will be zero-filled. Blob and string types will be zero-length. Array types will have length 1 and the element of the array will conform to the previous rules.This method cannot be used to return the properties for any effect not visible to <see cref="M:SharpDX.Direct2D1.DeviceContext.CreateEffect(System.Guid,SharpDX.Direct2D1.Effect)"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Factory1::GetEffectProperties']/*"/>	
            <unmanaged>HRESULT ID2D1Factory1::GetEffectProperties([In] const GUID&amp; effectId,[Out] ID2D1Properties** properties)</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.Device">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Device']/*"/>	
            <unmanaged>ID2D1Device</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Device.#ctor(SharpDX.DXGI.Device)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.Device"/> class.
            </summary>
            <param name="device">The device.</param>
            <unmanaged>HRESULT D2D1CreateDevice([In] IDXGIDevice* dxgiDevice,[In, Optional] const D2D1_CREATION_PROPERTIES* creationProperties,[Out] ID2D1Device** d2dDevice)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Device.#ctor(SharpDX.DXGI.Device,SharpDX.Direct2D1.CreationProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.Device"/> class.
            </summary>
            <param name="device">The device.</param>
            <param name="creationProperties">The creation properties.</param>
            <unmanaged>HRESULT D2D1CreateDevice([In] IDXGIDevice* dxgiDevice,[In, Optional] const D2D1_CREATION_PROPERTIES* creationProperties,[Out] ID2D1Device** d2dDevice)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Device.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.Device"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.Device.CreateDeviceContext(SharpDX.Direct2D1.DeviceContextOptions,SharpDX.Direct2D1.DeviceContext)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="options"><para>The options to be applied to the created device context.</para></param>	
            <param name="deviceContext"><para>When this method returns, contains the address of a reference to the new device context.</para></param>	
            <returns>If the method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. If it fails, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The new device context will not have a  selected target bitmap. The caller must create and select a bitmap as the target surface of the context.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Device::CreateDeviceContext']/*"/>	
            <unmanaged>HRESULT ID2D1Device::CreateDeviceContext([In] D2D1_DEVICE_CONTEXT_OPTIONS options,[Out, Fast] ID2D1DeviceContext** deviceContext)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Device.CreatePrintControl(SharpDX.WIC.ImagingFactory,SharpDX.ComObject,System.Nullable{SharpDX.Direct2D1.PrintControlProperties},SharpDX.Direct2D1.PrintControl)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="wicFactory">No documentation.</param>	
            <param name="documentTarget">No documentation.</param>	
            <param name="rintControlPropertiesRef">No documentation.</param>	
            <param name="rintControlRef">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Device::CreatePrintControl']/*"/>	
            <unmanaged>HRESULT ID2D1Device::CreatePrintControl([In] IWICImagingFactory* wicFactory,[In] IPrintDocumentPackageTarget* documentTarget,[In, Optional] const D2D1_PRINT_CONTROL_PROPERTIES* printControlProperties,[Out, Fast] ID2D1PrintControl** printControl)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Device.SetMaximumTextureMemory(System.Int64)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="maximumInBytes">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Device::SetMaximumTextureMemory']/*"/>	
            <unmanaged>void ID2D1Device::SetMaximumTextureMemory([In] unsigned longlong maximumInBytes)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Device.GetMaximumTextureMemory">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Device::GetMaximumTextureMemory']/*"/>	
            <unmanaged>unsigned longlong ID2D1Device::GetMaximumTextureMemory()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Device.ClearResources(System.Int32)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="millisecondsSinceUse"><para>The type of resource to release. This defaults to buffer resouces.</para></param>	
            <remarks>	
            This method clears resources that are cached but not in use. For example, it will clear the contents of all caching effects and all allocated intermediate rendering buffers. It will also unload all shaders used for imaging effects.If the application is keeping a resource active, the resource will not be cleared. The application is responsible for independently releasing active resources.This method deletes resources accumulated by the imaging API.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Device::ClearResources']/*"/>	
            <unmanaged>void ID2D1Device::ClearResources([In] unsigned int millisecondsSinceUse)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct2D1.Device.MaximumTextureMemory">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Device::GetMaximumTextureMemory']/*"/>	
            <unmanaged>GetMaximumTextureMemory</unmanaged>	
            <unmanaged>unsigned longlong ID2D1Device::GetMaximumTextureMemory()</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.DeviceContext">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext']/*"/>	
            <unmanaged>ID2D1DeviceContext</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.RenderTarget">
            <summary>	
            Represents an object that can receive drawing commands. Interfaces that inherit from <see cref="T:SharpDX.Direct2D1.RenderTarget"/> render the drawing commands they receive in different ways.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget']/*"/>	
            <unmanaged>ID2D1RenderTarget</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.RenderTarget.DefaultStrokeWidth">
            <summary>
            Default stroke width used for all methods that are not explicitly using it. Default is set to 1.0f.
            </summary>
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.RenderTarget"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.CreateBitmap(SharpDX.DrawingSize,System.IntPtr,System.Int32,SharpDX.Direct2D1.BitmapProperties,SharpDX.Direct2D1.Bitmap)">
            <summary>	
            Creates a Direct2D bitmap from a reference to in-memory source data.	
            </summary>	
            <param name="size"><para>The dimension of the bitmap to create in pixels.</para></param>	
            <param name="srcData"><para>A reference to the memory location of the image data, or <c>null</c> to create an uninitialized bitmap.</para></param>	
            <param name="pitch"><para>The byte count of each scanline, which is equal to (the image width in pixels ? the number of bytes per pixel) + memory padding. If srcData is <c>null</c>, this value is ignored. (Note that pitch is also sometimes called stride.)</para></param>	
            <param name="bitmapProperties"><para>The pixel format and dots per inch (DPI) of the bitmap to create.</para></param>	
            <param name="bitmap"><para>When this method returns, contains a reference to a reference to the new bitmap. This parameter is passed uninitialized.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::CreateBitmap']/*"/>	
            <unmanaged>HRESULT ID2D1RenderTarget::CreateBitmap([In] D2D_SIZE_U size,[In, Optional] const void* srcData,[In] unsigned int pitch,[In] const D2D1_BITMAP_PROPERTIES* bitmapProperties,[Out, Fast] ID2D1Bitmap** bitmap)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.CreateBitmapFromWicBitmap(SharpDX.WIC.BitmapSource,System.Nullable{SharpDX.Direct2D1.BitmapProperties},SharpDX.Direct2D1.Bitmap@)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.Bitmap"/> by copying the specified Microsoft Windows Imaging Component (WIC)   bitmap.	
            </summary>	
            <param name="wicBitmapSource">No documentation.</param>	
            <param name="bitmapProperties">No documentation.</param>	
            <param name="bitmap">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            Before Direct2D can load a WIC bitmap, that bitmap must be converted to a supported pixel format and alpha mode. For a list of supported pixel formats and alpha modes, see Supported Pixel Formats and Alpha Modes.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::CreateBitmapFromWicBitmap']/*"/>	
            <unmanaged>HRESULT ID2D1RenderTarget::CreateBitmapFromWicBitmap([In] IWICBitmapSource* wicBitmapSource,[In, Optional] const D2D1_BITMAP_PROPERTIES* bitmapProperties,[Out] ID2D1Bitmap** bitmap)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.CreateSharedBitmap(System.Guid,System.IntPtr,System.Nullable{SharpDX.Direct2D1.BitmapProperties},SharpDX.Direct2D1.Bitmap)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.Bitmap"/> whose data is shared with another resource.	
            </summary>	
            <param name="riid">No documentation.</param>	
            <param name="data">No documentation.</param>	
            <param name="bitmapProperties">No documentation.</param>	
            <param name="bitmap">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The CreateSharedBitmap method is useful for efficiently reusing bitmap data and can also be used to provide interoperability with Direct3D.Sharing an <see cref="T:SharpDX.Direct2D1.Bitmap"/>By passing an <see cref="T:SharpDX.Direct2D1.Bitmap"/> created by a render target that is resource-compatible, you can share a bitmap with that render target; both the original <see cref="T:SharpDX.Direct2D1.Bitmap"/> and the new <see cref="T:SharpDX.Direct2D1.Bitmap"/> created by this method will point to the same bitmap data. For more information about when render target resources can be shared, see the Sharing Render Target Resources section of the Resources Overview.You may also use this method to reinterpret the data of an existing bitmap and specify a new DPI or alpha mode. For example, in the case of a bitmap atlas, an <see cref="T:SharpDX.Direct2D1.Bitmap"/> may contain multiple sub-images, each of which should be rendered with a different <see cref="T:SharpDX.Direct2D1.AlphaMode"/> (<see cref="F:SharpDX.Direct2D1.AlphaMode.Premultiplied"/> or <see cref="F:SharpDX.Direct2D1.AlphaMode.Ignore"/>). You could use the CreateSharedBitmap method to reinterpret the bitmap using the desired alpha mode  without having to load a separate copy of the bitmap into memory.Sharing an <see cref="T:SharpDX.DXGI.Surface"/>When using a DXGI surface render target (an <see cref="T:SharpDX.Direct2D1.RenderTarget"/> object created by the CreateDxgiSurfaceRenderTarget method), you can pass an  <see cref="T:SharpDX.DXGI.Surface"/> surface to the CreateSharedBitmap method to share video memory with Direct3D and manipulate Direct3D content as an <see cref="T:SharpDX.Direct2D1.Bitmap"/>. As described in  the Resources Overview, the render target and the <see cref="T:SharpDX.DXGI.Surface"/> must be using the same Direct3D device.Note also that the <see cref="T:SharpDX.DXGI.Surface"/> must use one of the supported pixel formats and alpha modes described in Supported Pixel Formats and Alpha Modes.For more information about interoperability with Direct3D, see the Direct2D and Direct3D Interoperability Overview.Sharing an <see cref="T:SharpDX.WIC.BitmapLock"/>An <see cref="T:SharpDX.WIC.BitmapLock"/> stores the content of a WIC bitmap and shields it from simultaneous accesses. By passing an <see cref="T:SharpDX.WIC.BitmapLock"/> to the CreateSharedBitmap method, you can create an <see cref="T:SharpDX.Direct2D1.Bitmap"/> that points to the bitmap data already stored in the  <see cref="T:SharpDX.WIC.BitmapLock"/>.To use an <see cref="T:SharpDX.WIC.BitmapLock"/> with the CreateSharedBitmap method, the render target must use software rendering. To force a render target to use software rendering, set to <see cref="F:SharpDX.Direct2D1.RenderTargetType.Software"/> the type field of the  <see cref="T:SharpDX.Direct2D1.RenderTargetProperties"/> structure that you use to create the render target. To check whether an existing render target uses software rendering, use the IsSupported method.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::CreateSharedBitmap']/*"/>	
            <unmanaged>HRESULT ID2D1RenderTarget::CreateSharedBitmap([In] const GUID&amp; riid,[In] void* data,[In, Optional] const D2D1_BITMAP_PROPERTIES* bitmapProperties,[Out, Fast] ID2D1Bitmap** bitmap)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.CreateBitmapBrush(SharpDX.Direct2D1.Bitmap,System.Nullable{SharpDX.Direct2D1.BitmapBrushProperties},System.Nullable{SharpDX.Direct2D1.BrushProperties},SharpDX.Direct2D1.BitmapBrush)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.BitmapBrush"/> from the specified bitmap.	
            </summary>	
            <param name="bitmap">No documentation.</param>	
            <param name="bitmapBrushProperties">No documentation.</param>	
            <param name="brushProperties">No documentation.</param>	
            <param name="bitmapBrush">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::CreateBitmapBrush']/*"/>	
            <unmanaged>HRESULT ID2D1RenderTarget::CreateBitmapBrush([In] ID2D1Bitmap* bitmap,[In, Optional] const D2D1_BITMAP_BRUSH_PROPERTIES* bitmapBrushProperties,[In, Optional] const D2D1_BRUSH_PROPERTIES* brushProperties,[Out, Fast] ID2D1BitmapBrush** bitmapBrush)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.CreateSolidColorBrush(SharpDX.Color4,System.Nullable{SharpDX.Direct2D1.BrushProperties},SharpDX.Direct2D1.SolidColorBrush)">
            <summary>	
            Creates a new <see cref="T:SharpDX.Direct2D1.SolidColorBrush"/> that can be used to paint areas with a solid color.	
            </summary>	
            <param name="color">No documentation.</param>	
            <param name="brushProperties">No documentation.</param>	
            <param name="solidColorBrush">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::CreateSolidColorBrush']/*"/>	
            <unmanaged>HRESULT ID2D1RenderTarget::CreateSolidColorBrush([In] const D2D_COLOR_F* color,[In, Optional] const D2D1_BRUSH_PROPERTIES* brushProperties,[Out, Fast] ID2D1SolidColorBrush** solidColorBrush)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.CreateGradientStopCollection(SharpDX.Direct2D1.GradientStop[],System.Int32,SharpDX.Direct2D1.Gamma,SharpDX.Direct2D1.ExtendMode,SharpDX.Direct2D1.GradientStopCollection)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.GradientStopCollection"/> from the specified gradient stops, color interpolation gamma, and extend mode.	
            </summary>	
            <param name="gradientStops">No documentation.</param>	
            <param name="gradientStopsCount">No documentation.</param>	
            <param name="colorInterpolationGamma">No documentation.</param>	
            <param name="extendMode">No documentation.</param>	
            <param name="gradientStopCollection">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::CreateGradientStopCollection']/*"/>	
            <unmanaged>HRESULT ID2D1RenderTarget::CreateGradientStopCollection([In, Buffer] const D2D1_GRADIENT_STOP* gradientStops,[In] unsigned int gradientStopsCount,[In] D2D1_GAMMA colorInterpolationGamma,[In] D2D1_EXTEND_MODE extendMode,[Out, Fast] ID2D1GradientStopCollection** gradientStopCollection)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.CreateLinearGradientBrush(SharpDX.Direct2D1.LinearGradientBrushProperties,System.Nullable{SharpDX.Direct2D1.BrushProperties},SharpDX.Direct2D1.GradientStopCollection,SharpDX.Direct2D1.LinearGradientBrush)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.LinearGradientBrush"/> that contains the specified gradient stops and has the specified transform and base opacity.	
            </summary>	
            <param name="linearGradientBrushProperties">No documentation.</param>	
            <param name="brushProperties">No documentation.</param>	
            <param name="gradientStopCollection">No documentation.</param>	
            <param name="linearGradientBrush">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::CreateLinearGradientBrush']/*"/>	
            <unmanaged>HRESULT ID2D1RenderTarget::CreateLinearGradientBrush([In] const D2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES* linearGradientBrushProperties,[In, Optional] const D2D1_BRUSH_PROPERTIES* brushProperties,[In] ID2D1GradientStopCollection* gradientStopCollection,[Out, Fast] ID2D1LinearGradientBrush** linearGradientBrush)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.CreateRadialGradientBrush(SharpDX.Direct2D1.RadialGradientBrushProperties@,System.Nullable{SharpDX.Direct2D1.BrushProperties},SharpDX.Direct2D1.GradientStopCollection,SharpDX.Direct2D1.RadialGradientBrush)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.RadialGradientBrush"/> that contains the specified gradient stops, has no transform, and has a base opacity of 1.0.	
            </summary>	
            <param name="radialGradientBrushProperties">No documentation.</param>	
            <param name="brushProperties">No documentation.</param>	
            <param name="gradientStopCollection">No documentation.</param>	
            <param name="radialGradientBrush">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::CreateRadialGradientBrush']/*"/>	
            <unmanaged>HRESULT ID2D1RenderTarget::CreateRadialGradientBrush([In] const D2D1_RADIAL_GRADIENT_BRUSH_PROPERTIES* radialGradientBrushProperties,[In, Optional] const D2D1_BRUSH_PROPERTIES* brushProperties,[In] ID2D1GradientStopCollection* gradientStopCollection,[Out, Fast] ID2D1RadialGradientBrush** radialGradientBrush)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.CreateCompatibleRenderTarget(System.Nullable{SharpDX.DrawingSizeF},System.Nullable{SharpDX.DrawingSize},System.Nullable{SharpDX.Direct2D1.PixelFormat},SharpDX.Direct2D1.CompatibleRenderTargetOptions,SharpDX.Direct2D1.BitmapRenderTarget)">
            <summary>	
            Creates a new  bitmap render target for use during intermediate offscreen drawing that is compatible with the current render target .	
            </summary>	
            <param name="desiredSize">No documentation.</param>	
            <param name="desiredPixelSize">No documentation.</param>	
            <param name="desiredFormat">No documentation.</param>	
            <param name="options">No documentation.</param>	
            <param name="bitmapRenderTarget">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::CreateCompatibleRenderTarget']/*"/>	
            <unmanaged>HRESULT ID2D1RenderTarget::CreateCompatibleRenderTarget([In, Optional] const D2D_SIZE_F* desiredSize,[In, Optional] const D2D_SIZE_U* desiredPixelSize,[In, Optional] const D2D1_PIXEL_FORMAT* desiredFormat,[In] D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS options,[Out, Fast] ID2D1BitmapRenderTarget** bitmapRenderTarget)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.CreateLayer(System.Nullable{SharpDX.DrawingSizeF},SharpDX.Direct2D1.Layer)">
            <summary>	
            Creates a layer resource that can be used with this render target and its compatible render targets.	
            </summary>	
            <param name="size"><para>When the method returns, contains a reference to a reference to the new layer. This parameter is passed uninitialized.</para></param>	
            <param name="layer">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The layer automatically resizes itself, as needed.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::CreateLayer']/*"/>	
            <unmanaged>HRESULT ID2D1RenderTarget::CreateLayer([In, Optional] const D2D_SIZE_F* size,[Out, Fast] ID2D1Layer** layer)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.CreateMesh(SharpDX.Direct2D1.Mesh)">
            <summary>	
            Create a mesh that uses triangles to describe a shape.	
            </summary>	
            <param name="mesh"><para>When this method returns, contains a reference to a reference to the new mesh.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            To populate a mesh, use its Open method to obtain an <see cref="T:SharpDX.Direct2D1.TessellationSink"/>. To draw the mesh, use the render target's FillMesh method.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::CreateMesh']/*"/>	
            <unmanaged>HRESULT ID2D1RenderTarget::CreateMesh([Out, Fast] ID2D1Mesh** mesh)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.DrawLine(SharpDX.DrawingPointF,SharpDX.DrawingPointF,SharpDX.Direct2D1.Brush,System.Single,SharpDX.Direct2D1.StrokeStyle)">
            <summary>	
            Draws a line between the specified points using the specified stroke style.	
            </summary>	
            <param name="point0"><para>The start point of the line, in device-independent pixels.</para></param>	
            <param name="point1"><para>The end point of the line, in device-independent pixels.</para></param>	
            <param name="brush"><para>The brush used to paint the line's stroke.</para></param>	
            <param name="strokeWidth"><para>A value greater than or equal to 0.0f that specifies the width of the stroke. If this parameter isn't specified, it defaults to 1.0f.  The stroke is centered on the line.</para></param>	
            <param name="strokeStyle"><para>The style of stroke to paint, or <c>null</c> to paint a solid line.</para></param>	
            <remarks>	
            This method doesn't return an error code if it fails. To determine whether a drawing operation (such as DrawLine) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)"/> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)"/> methods.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::DrawLine']/*"/>	
            <unmanaged>void ID2D1RenderTarget::DrawLine([In] D2D_POINT_2F point0,[In] D2D_POINT_2F point1,[In] ID2D1Brush* brush,[In] float strokeWidth,[In, Optional] ID2D1StrokeStyle* strokeStyle)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.DrawRectangle(SharpDX.RectangleF,SharpDX.Direct2D1.Brush,System.Single,SharpDX.Direct2D1.StrokeStyle)">
            <summary>	
            Draws the outline of a rectangle that has the specified dimensions and stroke style.	
            </summary>	
            <param name="rect"><para>The dimensions of the rectangle to draw, in device-independent pixels.</para></param>	
            <param name="brush"><para>The brush used to paint the rectangle's stroke.</para></param>	
            <param name="strokeWidth"><para>A value greater than or equal to 0.0f that specifies the width of the rectangle's stroke. The stroke is centered on the rectangle's outline.</para></param>	
            <param name="strokeStyle"><para>The style of stroke to paint, or <c>null</c> to paint a solid stroke.</para></param>	
            <remarks>	
            When this method fails, it does not return an error code. To determine whether a drawing method (such as DrawRectangle) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)"/> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)"/> method.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::DrawRectangle']/*"/>	
            <unmanaged>void ID2D1RenderTarget::DrawRectangle([In] const D2D_RECT_F* rect,[In] ID2D1Brush* brush,[In] float strokeWidth,[In, Optional] ID2D1StrokeStyle* strokeStyle)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.FillRectangle(SharpDX.RectangleF,SharpDX.Direct2D1.Brush)">
            <summary>	
            Paints the interior of the specified rectangle.	
            </summary>	
            <param name="rect"><para>The dimension of the rectangle to paint, in device-independent pixels.</para></param>	
            <param name="brush"><para>The brush used to paint the rectangle's interior.</para></param>	
            <remarks>	
            This method doesn't return an error code if it fails. To determine whether a drawing operation (such as FillRectangle) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)"/> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)"/> methods.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::FillRectangle']/*"/>	
            <unmanaged>void ID2D1RenderTarget::FillRectangle([In] const D2D_RECT_F* rect,[In] ID2D1Brush* brush)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.DrawRoundedRectangle(SharpDX.Direct2D1.RoundedRect@,SharpDX.Direct2D1.Brush,System.Single,SharpDX.Direct2D1.StrokeStyle)">
            <summary>	
            Draws the outline of the specified rounded rectangle using the specified stroke style.	
            </summary>	
            <param name="roundedRect"><para>The dimensions of the rounded rectangle to draw, in device-independent pixels.</para></param>	
            <param name="brush"><para>The brush used to paint the rounded rectangle's outline. </para></param>	
            <param name="strokeWidth"><para>The width of the rounded rectangle's stroke. The stroke is centered on the rounded rectangle's outline. The default value is 1.0f. </para></param>	
            <param name="strokeStyle"><para>The style of the rounded rectangle's stroke, or <c>null</c> to paint a solid stroke. The default value is <c>null</c>.</para></param>	
            <remarks>	
            This method doesn't return an error code if it fails. To determine whether a drawing operation (such as DrawRoundedRectangle) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)"/> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)"/> methods.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::DrawRoundedRectangle']/*"/>	
            <unmanaged>void ID2D1RenderTarget::DrawRoundedRectangle([In] const D2D1_ROUNDED_RECT* roundedRect,[In] ID2D1Brush* brush,[In] float strokeWidth,[In, Optional] ID2D1StrokeStyle* strokeStyle)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.FillRoundedRectangle(SharpDX.Direct2D1.RoundedRect@,SharpDX.Direct2D1.Brush)">
            <summary>	
            Paints the interior of the specified rounded rectangle.	
            </summary>	
            <param name="roundedRect"><para>The dimensions of the rounded rectangle to paint, in device independent pixels.</para></param>	
            <param name="brush"><para>The brush used to paint the interior of the rounded rectangle.</para></param>	
            <remarks>	
            This method doesn't return an error code if it fails. To determine whether a drawing operation (such as FillRoundedRectangle) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)"/> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)"/> methods.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::FillRoundedRectangle']/*"/>	
            <unmanaged>void ID2D1RenderTarget::FillRoundedRectangle([In] const D2D1_ROUNDED_RECT* roundedRect,[In] ID2D1Brush* brush)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.DrawEllipse(SharpDX.Direct2D1.Ellipse,SharpDX.Direct2D1.Brush,System.Single,SharpDX.Direct2D1.StrokeStyle)">
            <summary>	
            Draws the outline of the specified ellipse using the specified stroke style.	
            </summary>	
            <param name="ellipse"><para>The position and radius of the ellipse to draw, in device-independent pixels.</para></param>	
            <param name="brush"><para>The brush used to paint the ellipse's outline.</para></param>	
            <param name="strokeWidth"><para>The thickness of the ellipse's stroke. The stroke is centered on the ellipse's outline.</para></param>	
            <param name="strokeStyle"><para>The style of stroke to apply to the ellipse's outline, or <c>null</c> to paint a solid stroke.</para></param>	
            <remarks>	
            The DrawEllipse method doesn't return an error code if it fails. To determine whether a drawing operation (such as DrawEllipse) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)"/> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)"/> methods.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::DrawEllipse']/*"/>	
            <unmanaged>void ID2D1RenderTarget::DrawEllipse([In] const D2D1_ELLIPSE* ellipse,[In] ID2D1Brush* brush,[In] float strokeWidth,[In, Optional] ID2D1StrokeStyle* strokeStyle)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.FillEllipse(SharpDX.Direct2D1.Ellipse,SharpDX.Direct2D1.Brush)">
            <summary>	
            Paints the interior of the specified ellipse.	
            </summary>	
            <param name="ellipse"><para>The position and radius, in device-independent pixels, of the ellipse to paint.</para></param>	
            <param name="brush"><para>The brush used to paint the interior of the ellipse.</para></param>	
            <remarks>	
            This method doesn't return an error code if it fails. To determine whether a drawing operation (such as FillEllipse) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)"/> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)"/> methods.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::FillEllipse']/*"/>	
            <unmanaged>void ID2D1RenderTarget::FillEllipse([In] const D2D1_ELLIPSE* ellipse,[In] ID2D1Brush* brush)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.DrawGeometry(SharpDX.Direct2D1.Geometry,SharpDX.Direct2D1.Brush,System.Single,SharpDX.Direct2D1.StrokeStyle)">
            <summary>	
            Draws the outline of the specified geometry using the specified stroke style.	
            </summary>	
            <param name="geometry"><para>The geometry to draw.</para></param>	
            <param name="brush"><para>The brush used to paint the geometry's stroke.</para></param>	
            <param name="strokeWidth"><para>The thickness of the geometry's stroke. The stroke is centered on the geometry's outline.</para></param>	
            <param name="strokeStyle"><para>The style of stroke to apply to the geometry's outline, or <c>null</c> to paint a solid stroke.</para></param>	
            <remarks>	
            This method doesn't return an error code if it fails. To determine whether a drawing operation (such as DrawGeometry) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)"/> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)"/> methods.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::DrawGeometry']/*"/>	
            <unmanaged>void ID2D1RenderTarget::DrawGeometry([In] ID2D1Geometry* geometry,[In] ID2D1Brush* brush,[In] float strokeWidth,[In, Optional] ID2D1StrokeStyle* strokeStyle)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.FillGeometry(SharpDX.Direct2D1.Geometry,SharpDX.Direct2D1.Brush,SharpDX.Direct2D1.Brush)">
            <summary>	
            Paints the interior of the specified geometry.	
            </summary>	
            <param name="geometry"><para>The geometry to paint.</para></param>	
            <param name="brush"><para>The brush used to paint the geometry's interior.</para></param>	
            <param name="opacityBrush"><para>The opacity mask to apply to the geometry, or <c>null</c> for no opacity mask. If an opacity mask (the opacityBrush parameter) is specified, brush must be an <see cref="T:SharpDX.Direct2D1.BitmapBrush"/> that has   its x- and y-extend modes set to <see cref="F:SharpDX.Direct2D1.ExtendMode.Clamp"/>. For more information, see the Remarks section. </para></param>	
            <remarks>	
            If the opacityBrush parameter is not <c>null</c>, the alpha value of each pixel of the mapped opacityBrush is used to determine the resulting opacity of each corresponding pixel of the geometry. Only the alpha value of each color in the brush is used for this processing; all other color information is ignored.  The alpha value specified by the brush is multiplied by the alpha value of the geometry after the geometry has been painted by brush.When this method fails, it does not return an error code. To determine whether a drawing operation (such as FillGeometry) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)"/> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)"/> method.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::FillGeometry']/*"/>	
            <unmanaged>void ID2D1RenderTarget::FillGeometry([In] ID2D1Geometry* geometry,[In] ID2D1Brush* brush,[In, Optional] ID2D1Brush* opacityBrush)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.FillMesh(SharpDX.Direct2D1.Mesh,SharpDX.Direct2D1.Brush)">
            <summary>	
            Paints the interior of the specified mesh.	
            </summary>	
            <param name="mesh"><para>The mesh to paint.</para></param>	
            <param name="brush"><para>The brush used to paint the mesh.</para></param>	
            <remarks>	
            The current antialias mode of the render target must be <see cref="F:SharpDX.Direct2D1.AntialiasMode.Aliased"/> when FillMesh is called. To change the render target's antialias mode, use the SetAntialiasMode method.FillMesh does not expect a particular winding order for the triangles in the <see cref="T:SharpDX.Direct2D1.Mesh"/>; both clockwise and counter-clockwise will work.This method doesn't return an error code if it fails. To determine whether a drawing operation (such as FillMesh) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)"/> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)"/> methods.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::FillMesh']/*"/>	
            <unmanaged>void ID2D1RenderTarget::FillMesh([In] ID2D1Mesh* mesh,[In] ID2D1Brush* brush)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.FillOpacityMask(SharpDX.Direct2D1.Bitmap,SharpDX.Direct2D1.Brush,SharpDX.Direct2D1.OpacityMaskContent,System.Nullable{SharpDX.RectangleF},System.Nullable{SharpDX.RectangleF})">
            <summary>	
            Applies the opacity mask described by the specified bitmap to a brush and uses that brush to paint a region of the render target.	
            </summary>	
            <param name="opacityMask">No documentation.</param>	
            <param name="brush">No documentation.</param>	
            <param name="content">No documentation.</param>	
            <param name="destinationRectangle">No documentation.</param>	
            <param name="sourceRectangle">No documentation.</param>	
            <remarks>	
            For this method to work properly, the render target must be using the <see cref="F:SharpDX.Direct2D1.AntialiasMode.Aliased"/> antialiasing mode. You can set the antialiasing mode by calling the <see cref="M:SharpDX.Direct2D1.RenderTarget.SetAntialiasMode(SharpDX.Direct2D1.AntialiasMode)"/> method.This method doesn't return an error code if it fails. To determine whether a drawing operation (such as FillOpacityMask) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)"/> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)"/> methods.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::FillOpacityMask']/*"/>	
            <unmanaged>void ID2D1RenderTarget::FillOpacityMask([In] ID2D1Bitmap* opacityMask,[In] ID2D1Brush* brush,[In] D2D1_OPACITY_MASK_CONTENT content,[In, Optional] const D2D_RECT_F* destinationRectangle,[In, Optional] const D2D_RECT_F* sourceRectangle)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.DrawBitmap(SharpDX.Direct2D1.Bitmap,System.Nullable{SharpDX.RectangleF},System.Single,SharpDX.Direct2D1.BitmapInterpolationMode,System.Nullable{SharpDX.RectangleF})">
            <summary>	
            Draws the specified bitmap after scaling it to the size of the specified rectangle.	
            </summary>	
            <param name="bitmap"><para>The bitmap to render.</para></param>	
            <param name="destinationRectangle"><para>The size and position, in device-independent pixels in the render target's coordinate space, of the area to which the bitmap is drawn. If the rectangle is not well-ordered, nothing is drawn, but the render target does not enter an error state.</para></param>	
            <param name="opacity"><para>A value between 0.0f and 1.0f, inclusive, that specifies the opacity value to be applied to the bitmap; this value is multiplied against the alpha values of the bitmap's contents.  Default is 1.0f.</para></param>	
            <param name="interpolationMode"><para>The interpolation mode to use if the bitmap is scaled or rotated by the drawing operation. The default value is <see cref="F:SharpDX.Direct2D1.BitmapInterpolationMode.Linear"/>. </para></param>	
            <param name="sourceRectangle"><para>The size and position, in device-independent pixels in the bitmap's coordinate space, of the area within the bitmap to draw; <c>null</c> to draw the entire bitmap.</para></param>	
            <remarks>	
            This method doesn't return an error code if it fails. To determine whether a drawing operation (such as DrawBitmap) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)"/> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)"/> methods.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::DrawBitmap']/*"/>	
            <unmanaged>void ID2D1RenderTarget::DrawBitmap([In] ID2D1Bitmap* bitmap,[In, Optional] const D2D_RECT_F* destinationRectangle,[In] float opacity,[In] D2D1_BITMAP_INTERPOLATION_MODE interpolationMode,[In, Optional] const D2D_RECT_F* sourceRectangle)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.DrawText(System.String,System.Int32,SharpDX.DirectWrite.TextFormat,SharpDX.RectangleF,SharpDX.Direct2D1.Brush,SharpDX.Direct2D1.DrawTextOptions,SharpDX.Direct2D1.MeasuringMode)">
            <summary>	
            Draws the specified text using the format information provided by an <see cref="T:SharpDX.DirectWrite.TextFormat"/> object.	
            </summary>	
            <param name="text">No documentation.</param>	
            <param name="stringLength">No documentation.</param>	
            <param name="textFormat">No documentation.</param>	
            <param name="layoutRect">No documentation.</param>	
            <param name="defaultForegroundBrush">No documentation.</param>	
            <param name="options">No documentation.</param>	
            <param name="measuringMode">No documentation.</param>	
            <remarks>	
            To draw text with Direct2D,  use the <see cref="M:SharpDX.Direct2D1.RenderTarget.DrawText(System.String,System.Int32,SharpDX.DirectWrite.TextFormat,SharpDX.RectangleF,SharpDX.Direct2D1.Brush,SharpDX.Direct2D1.DrawTextOptions,SharpDX.Direct2D1.MeasuringMode)"/> method for text that has a single format, or the <see cref="M:SharpDX.Direct2D1.RenderTarget.DrawTextLayout(SharpDX.DrawingPointF,SharpDX.DirectWrite.TextLayout,SharpDX.Direct2D1.Brush,SharpDX.Direct2D1.DrawTextOptions)"/> method when you need multiple formats, advanced OpenType features, or hit testing. These methods use the DirectWrite API to provide high-quality text display.This method doesn't return an error code if it fails. To determine whether a drawing operation (such as DrawText) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)"/> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)"/> methods.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::DrawTextW']/*"/>	
            <unmanaged>void ID2D1RenderTarget::DrawTextW([In, Buffer] const wchar_t* string,[In] unsigned int stringLength,[In] IDWriteTextFormat* textFormat,[In] const D2D_RECT_F* layoutRect,[In] ID2D1Brush* defaultForegroundBrush,[In] D2D1_DRAW_TEXT_OPTIONS options,[In] DWRITE_MEASURING_MODE measuringMode)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.DrawTextLayout(SharpDX.DrawingPointF,SharpDX.DirectWrite.TextLayout,SharpDX.Direct2D1.Brush,SharpDX.Direct2D1.DrawTextOptions)">
            <summary>	
            Draws the formatted text described by the specified <see cref="T:SharpDX.DirectWrite.TextLayout"/> object.	
            </summary>	
            <param name="origin">No documentation.</param>	
            <param name="textLayout">No documentation.</param>	
            <param name="defaultForegroundBrush">No documentation.</param>	
            <param name="options">No documentation.</param>	
            <remarks>	
            When drawing the same text repeatedly, using the DrawTextLayout method is more efficient than using the DrawText method because the text doesn't need to be formatted and the layout processed with each call.This method doesn't return an error code if it fails. To determine whether a drawing operation (such as DrawTextLayout) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)"/> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)"/> methods.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::DrawTextLayout']/*"/>	
            <unmanaged>void ID2D1RenderTarget::DrawTextLayout([In] D2D_POINT_2F origin,[In] IDWriteTextLayout* textLayout,[In] ID2D1Brush* defaultForegroundBrush,[In] D2D1_DRAW_TEXT_OPTIONS options)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.DrawGlyphRun(SharpDX.DrawingPointF,SharpDX.DirectWrite.GlyphRun,SharpDX.Direct2D1.Brush,SharpDX.Direct2D1.MeasuringMode)">
            <summary>	
            Draws the specified glyphs.	
            </summary>	
            <param name="baselineOrigin"><para>The origin, in device-independent pixels, of the glyphs' baseline.</para></param>	
            <param name="glyphRun"><para>The glyphs to render.</para></param>	
            <param name="foregroundBrush"><para>The brush used to paint the specified glyphs.</para></param>	
            <param name="measuringMode"><para>A value that indicates how glyph metrics are used to measure text when it is formatted.  The default value is <see cref="F:SharpDX.Direct2D1.MeasuringMode.Natural"/>. </para></param>	
            <remarks>	
            This method doesn't return an error code if it fails. To determine whether a drawing operation (such as DrawGlyphRun) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)"/> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)"/> methods.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::DrawGlyphRun']/*"/>	
            <unmanaged>void ID2D1RenderTarget::DrawGlyphRun([In] D2D_POINT_2F baselineOrigin,[In] const DWRITE_GLYPH_RUN* glyphRun,[In] ID2D1Brush* foregroundBrush,[In] DWRITE_MEASURING_MODE measuringMode)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.SetTransform(SharpDX.Matrix3x2@)">
            <summary>	
            Applies the specified transform to the render target, replacing the existing transformation. All subsequent drawing operations occur in the transformed space.	
            </summary>	
            <param name="transform">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::SetTransform']/*"/>	
            <unmanaged>void ID2D1RenderTarget::SetTransform([In] const D2D_MATRIX_3X2_F* transform)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.GetTransform(SharpDX.Matrix3x2@)">
            <summary>	
            Gets the current transform of the render target.	
            </summary>	
            <param name="transform"><para>When this returns, contains the current transform of the render target. This parameter is passed uninitialized.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::GetTransform']/*"/>	
            <unmanaged>void ID2D1RenderTarget::GetTransform([Out] D2D_MATRIX_3X2_F* transform)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.SetAntialiasMode(SharpDX.Direct2D1.AntialiasMode)">
            <summary>	
            Sets the antialiasing mode of the render target. The antialiasing mode applies to all subsequent drawing operations, excluding text and glyph drawing operations.	
            </summary>	
            <param name="antialiasMode"><para>The antialiasing mode for future drawing operations. </para></param>	
            <remarks>	
            To specify the antialiasing mode for text and glyph operations, use the SetTextAntialiasMode method.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::SetAntialiasMode']/*"/>	
            <unmanaged>void ID2D1RenderTarget::SetAntialiasMode([In] D2D1_ANTIALIAS_MODE antialiasMode)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.GetAntialiasMode">
            <summary>	
            Retrieves the current antialiasing mode for nontext drawing operations.	
            </summary>	
            <returns>The current antialiasing mode for nontext drawing operations.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::GetAntialiasMode']/*"/>	
            <unmanaged>D2D1_ANTIALIAS_MODE ID2D1RenderTarget::GetAntialiasMode()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.SetTextAntialiasMode(SharpDX.Direct2D1.TextAntialiasMode)">
            <summary>	
            Specifies the antialiasing mode to use for subsequent text and glyph drawing operations.	
            </summary>	
            <param name="textAntialiasMode"><para>The antialiasing mode to use for subsequent text and glyph drawing operations.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::SetTextAntialiasMode']/*"/>	
            <unmanaged>void ID2D1RenderTarget::SetTextAntialiasMode([In] D2D1_TEXT_ANTIALIAS_MODE textAntialiasMode)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.GetTextAntialiasMode">
            <summary>	
            Gets the current antialiasing mode for text and glyph drawing operations.	
            </summary>	
            <returns>The current antialiasing mode for text and glyph drawing operations.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::GetTextAntialiasMode']/*"/>	
            <unmanaged>D2D1_TEXT_ANTIALIAS_MODE ID2D1RenderTarget::GetTextAntialiasMode()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.SetTextRenderingParams(SharpDX.DirectWrite.RenderingParams)">
            <summary>	
            Specifies text rendering options to be applied to all subsequent text and glyph drawing operations.	
            </summary>	
            <param name="textRenderingParams"><para>The text rendering options to be applied to all subsequent text and glyph drawing operations; <c>null</c> to clear current text rendering options. </para></param>	
            <remarks>	
            If the settings specified by  textRenderingParams are incompatible with the render target's text antialiasing mode (specified by SetTextAntialiasMode), subsequent text and glyph drawing operations will fail and put the render target into an error state.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::SetTextRenderingParams']/*"/>	
            <unmanaged>void ID2D1RenderTarget::SetTextRenderingParams([In, Optional] IDWriteRenderingParams* textRenderingParams)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.GetTextRenderingParams(SharpDX.DirectWrite.RenderingParams@)">
            <summary>	
            Retrieves the render target's current text rendering options.	
            </summary>	
            <param name="textRenderingParams"><para> When this method returns, textRenderingParamscontains the address  of a reference to the render target's current text rendering options. </para></param>	
            <remarks>	
            If the settings specified by  textRenderingParams are incompatible with the render target's text antialiasing mode (specified by SetTextAntialiasMode), subsequent text and glyph drawing operations will fail and put the render target into an error state.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::GetTextRenderingParams']/*"/>	
            <unmanaged>void ID2D1RenderTarget::GetTextRenderingParams([Out, Optional] IDWriteRenderingParams** textRenderingParams)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.SetTags(System.Int64,System.Int64)">
            <summary>	
            Specifies a label for subsequent drawing operations.	
            </summary>	
            <param name="tag1"><para>A label to apply to subsequent drawing operations.</para></param>	
            <param name="tag2"><para>A label to apply to subsequent drawing operations.</para></param>	
            <remarks>	
            The labels specified by this method are printed by debug error messages. If no tag is set, the default value for each tag is 0.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::SetTags']/*"/>	
            <unmanaged>void ID2D1RenderTarget::SetTags([In] unsigned longlong tag1,[In] unsigned longlong tag2)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.GetTags(System.Int64@,System.Int64@)">
            <summary>	
            Gets the label for subsequent drawing operations.	
            </summary>	
            <param name="tag1"><para>When this method returns, contains the first label for subsequent drawing operations. This parameter is passed uninitialized. If <c>null</c> is specified, no value is retrieved for this parameter. </para></param>	
            <param name="tag2"><para>When this method returns, contains the second label for subsequent drawing operations. This parameter is passed uninitialized. If <c>null</c> is specified, no value is retrieved for this parameter.</para></param>	
            <remarks>	
            If the same address is passed for both parameters, both parameters receive the value of the second tag.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::GetTags']/*"/>	
            <unmanaged>void ID2D1RenderTarget::GetTags([Out, Optional] unsigned longlong* tag1,[Out, Optional] unsigned longlong* tag2)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.PushLayer(SharpDX.Direct2D1.LayerParameters@,SharpDX.Direct2D1.Layer)">
            <summary>	
            Adds the specified layer to the render target so that it receives all subsequent drawing operations until PopLayer is called.	
            </summary>	
            <param name="layerParameters">No documentation.</param>	
            <param name="layer">No documentation.</param>	
            <remarks>	
            The PushLayer method allows a caller to begin redirecting rendering to a layer. All rendering operations are valid in a layer. The location of the layer is affected by the world transform set on the render target.Each PushLayer must have a matching PopLayer call. If there are more PopLayer calls than PushLayer calls, the render target is placed into an error state. If Flush is called before all outstanding layers are popped, the render target is placed into an error state, and an error is returned. The error state can be cleared by a call to EndDraw.A particular <see cref="T:SharpDX.Direct2D1.Layer"/> resource can be active only at one time. In other words, you cannot call a PushLayer method, and then immediately follow  with another PushLayer method with the same layer resource. Instead, you must call the second PushLayer method with different layer resources.This method doesn't return an error code if it fails. To determine whether a drawing operation (such as PushLayer) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)"/> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)"/> methods.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::PushLayer']/*"/>	
            <unmanaged>void ID2D1RenderTarget::PushLayer([In] const D2D1_LAYER_PARAMETERS* layerParameters,[In, Optional] ID2D1Layer* layer)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.PopLayer">
            <summary>	
            Stops redirecting drawing operations to the layer that is specified by the last PushLayer call.	
            </summary>	
            <remarks>	
            A PopLayer must match a previous PushLayer call.This method doesn't return an error code if it fails. To determine whether a drawing operation (such as PopLayer) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)"/> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)"/> methods.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::PopLayer']/*"/>	
            <unmanaged>void ID2D1RenderTarget::PopLayer()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)">
            <summary>	
            Executes all pending drawing commands.	
            </summary>	
            <param name="tag1"><para>When this method returns, contains the tag for drawing operations that caused errors or 0 if there were no errors. This parameter is passed uninitialized.</para></param>	
            <param name="tag2"><para>When this method returns, contains the tag for drawing operations that caused errors or 0 if there were no errors. This parameter is passed uninitialized.</para></param>	
            <returns>If the method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code and sets tag1 and tag2 to the tags that were active when the error occurred. If no error occurred, this method sets the error tag state to be (0,0).</returns>	
            <remarks>	
            This command does not flush the device that is associated with the render target.Calling this method resets the error state of the render target.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::Flush']/*"/>	
            <unmanaged>HRESULT ID2D1RenderTarget::Flush([Out, Optional] unsigned longlong* tag1,[Out, Optional] unsigned longlong* tag2)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.SaveDrawingState(SharpDX.Direct2D1.DrawingStateBlock)">
            <summary>	
            Saves the current drawing state to the specified <see cref="T:SharpDX.Direct2D1.DrawingStateBlock"/>.	
            </summary>	
            <param name="drawingStateBlock">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::SaveDrawingState']/*"/>	
            <unmanaged>void ID2D1RenderTarget::SaveDrawingState([InOut] ID2D1DrawingStateBlock* drawingStateBlock)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.RestoreDrawingState(SharpDX.Direct2D1.DrawingStateBlock)">
            <summary>	
            Sets the render target's drawing state to that of the specified <see cref="T:SharpDX.Direct2D1.DrawingStateBlock"/>.	
            </summary>	
            <param name="drawingStateBlock">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::RestoreDrawingState']/*"/>	
            <unmanaged>void ID2D1RenderTarget::RestoreDrawingState([In] ID2D1DrawingStateBlock* drawingStateBlock)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.PushAxisAlignedClip(SharpDX.RectangleF,SharpDX.Direct2D1.AntialiasMode)">
            <summary>	
            Specifies a rectangle to which all subsequent drawing operations are clipped.	
            </summary>	
            <param name="clipRect"><para>The size and position of the clipping area, in device-independent pixels.</para></param>	
            <param name="antialiasMode"><para>The antialiasing mode that is used to draw the edges of clip rects that have subpixel boundaries, and to blend the clip with the scene contents. The blending is performed once when the PopAxisAlignedClip method is called, and does not apply to each primitive within the layer. </para></param>	
            <remarks>	
            The clipRect is transformed by the current world transform set on the render target. After the transform is applied to the clipRect that is passed in, the axis-aligned bounding box for the clipRect is computed.  For efficiency, the contents are clipped to this axis-aligned bounding box and not to the original clipRect that is passed in.The following diagrams show how a rotation transform is applied to the render target, the resulting clipRect, and  a calculated axis-aligned bounding box.<para>Assume the rectangle in the following illustration is a render target that is aligned to the screen pixels.</para>	
             <para></para>	
               <para>Apply a rotation transform to the render target. In the following illustration, the black rectangle represents the original render target and the red dashed rectangle represents the transformed render target.</para>	
             <para></para>	
               <para>After calling PushAxisAlignedClip, the rotation transform is applied to the clipRect. In the following illustration, the blue rectangle represents the transformed clipRect.</para>	
             <para></para>	
               <para>The axis-aligned bounding box is calculated. The green dashed rectangle represents the bounding box in the following illustration. All contents are clipped to this axis-aligned bounding box.</para>	
             <para></para>Note??If rendering operations fail or if PopAxisAlignedClip is not called, clip rects may cause some artifacts on the render target. PopAxisAlignedClip can be considered a drawing operation that is designed to fix the borders of a clipping region. Without this call, the borders of a clipped area may be not antialiased or otherwise corrected.The PushAxisAlignedClip and PopAxisAlignedClip must match. Otherwise, the error state is set. For the render target to continue receiving new commands, you can call Flush to clear the error.A           PushAxisAlignedClip and PopAxisAlignedClip pair can occur around or within a PushLayer and PopLayer, but cannot overlap. For example, the sequence of PushAxisAlignedClip, PushLayer, PopLayer, PopAxisAlignedClip is valid, but the sequence of PushAxisAlignedClip, PushLayer, PopAxisAlignedClip, PopLayer is invalid.This method doesn't return an error code if it fails. To determine whether a drawing operation (such as PushAxisAlignedClip) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)"/> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)"/> methods.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::PushAxisAlignedClip']/*"/>	
            <unmanaged>void ID2D1RenderTarget::PushAxisAlignedClip([In] const D2D_RECT_F* clipRect,[In] D2D1_ANTIALIAS_MODE antialiasMode)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.PopAxisAlignedClip">
            <summary>	
            Removes the last axis-aligned clip from the render target. After this method is called, the clip is no longer applied to subsequent drawing operations.	
            </summary>	
            <remarks>	
            A PushAxisAlignedClip/PopAxisAlignedClip pair can occur around or within a PushLayer/PopLayer pair, but may not overlap. For example, a PushAxisAlignedClip, PushLayer, PopLayer, PopAxisAlignedClip sequence is valid, but a PushAxisAlignedClip, PushLayer, PopAxisAlignedClip, PopLayer sequence is not.PopAxisAlignedClip must be called once for every call to PushAxisAlignedClip.For an example, see How to Clip with an Axis-Aligned Clip Rectangle.This method doesn't return an error code if it fails. To determine whether a drawing operation (such as PopAxisAlignedClip) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)"/> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)"/> methods.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::PopAxisAlignedClip']/*"/>	
            <unmanaged>void ID2D1RenderTarget::PopAxisAlignedClip()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.Clear(System.Nullable{SharpDX.Color4})">
            <summary>	
            Clears the drawing area to the specified color.	
            </summary>	
            <param name="clearColor"><para>The color to which the drawing area is cleared.</para></param>	
            <remarks>	
            Direct2D interprets the clearColor as straight alpha (not premultiplied).  If the render target's alpha mode is <see cref="F:SharpDX.Direct2D1.AlphaMode.Ignore"/>, the alpha channel of clearColor is ignored and replaced with 1.0f (fully opaque).If the render target has an active clip (specified by PushAxisAlignedClip), the clear command is applied only to the area within the clip region.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::Clear']/*"/>	
            <unmanaged>void ID2D1RenderTarget::Clear([In, Optional] const D2D_COLOR_F* clearColor)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.BeginDraw">
            <summary>	
            Initiates drawing on this render target.	
            </summary>	
            <remarks>	
            Drawing operations can only be issued between a BeginDraw and EndDraw call.BeginDraw and EndDraw are used to indicate that a render target is in use by the Direct2D system. Different implementations of <see cref="T:SharpDX.Direct2D1.RenderTarget"/> might behave differently when BeginDraw is called. An <see cref="T:SharpDX.Direct2D1.BitmapRenderTarget"/> may be locked between BeginDraw/EndDraw calls, a DXGI surface render target might be acquired on BeginDraw and released on EndDraw, while an <see cref="T:SharpDX.Direct2D1.WindowRenderTarget"/> may begin batching at BeginDraw and may present on EndDraw, for example.The BeginDraw method must be called before rendering operations can be called, though state-setting and state-retrieval operations can be performed even outside of BeginDraw/EndDraw.After BeginDraw is called, a render target will normally build up a batch of rendering commands, but defer processing of these commands until either an internal buffer is full, the Flush method is called, or until EndDraw is called. The EndDraw method causes any batched drawing operations to complete, and then returns an <see cref="T:SharpDX.Result"/> indicating the success of the operations and, optionally, the tag state of the render target at the time the error occurred. The EndDraw method always succeeds: it should not be called twice even if a previous EndDraw resulted in a failing <see cref="T:SharpDX.Result"/>.If EndDraw is called without a matched call to BeginDraw, it returns an error indicating that BeginDraw must be called before EndDraw. Calling BeginDraw twice on a render target puts the target into an error state where nothing further is drawn, and returns an appropriate <see cref="T:SharpDX.Result"/> and error information when EndDraw is called.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::BeginDraw']/*"/>	
            <unmanaged>void ID2D1RenderTarget::BeginDraw()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)">
            <summary>	
            Ends drawing operations  on the render target and indicates the current error state and associated tags.	
            </summary>	
            <param name="tag1"><para>When this method returns, contains the tag for drawing operations that caused errors or 0 if there were no errors. This parameter is passed uninitialized.</para></param>	
            <param name="tag2"><para>When this method returns, contains the tag for drawing operations that caused errors or 0 if there were no errors. This parameter is passed uninitialized.</para></param>	
            <returns>If the method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code and sets tag1 and tag2 to the tags that were active when the error occurred.</returns>	
            <remarks>	
            Drawing operations can only be issued between a BeginDraw and EndDraw call.BeginDraw and EndDraw are use to indicate that a render target is in use by the Direct2D system. Different implementations of <see cref="T:SharpDX.Direct2D1.RenderTarget"/> might behave differently when BeginDraw is called. An <see cref="T:SharpDX.Direct2D1.BitmapRenderTarget"/> may be locked between BeginDraw/EndDraw calls, a DXGI surface render target might be acquired on BeginDraw and released on EndDraw, while an <see cref="T:SharpDX.Direct2D1.WindowRenderTarget"/> may begin batching at BeginDraw and may present on EndDraw, for example.The BeginDraw method must be called before rendering operations can be called, though state-setting and state-retrieval operations can be performed even outside of BeginDraw/EndDraw.After BeginDraw is called, a render target will normally build up a batch of rendering commands, but defer processing of these commands until either an internal buffer is full, the Flush method is called, or until EndDraw is called. The EndDraw method causes any batched drawing operations to complete, and then returns an <see cref="T:SharpDX.Result"/> indicating the success of the operations and, optionally, the tag state of the render target at the time the error occurred. The EndDraw method always succeeds: it should not be called twice even if a previous EndDraw resulted in a failing <see cref="T:SharpDX.Result"/>.If EndDraw is called without a matched call to BeginDraw, it returns an error indicating that BeginDraw must be called before EndDraw. Calling BeginDraw twice on a render target puts the target into an error state where nothing further is drawn, and returns an appropriate <see cref="T:SharpDX.Result"/> and error information when EndDraw is called.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::EndDraw']/*"/>	
            <unmanaged>HRESULT ID2D1RenderTarget::EndDraw([Out, Optional] unsigned longlong* tag1,[Out, Optional] unsigned longlong* tag2)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.GetPixelFormat">
            <summary>	
            Retrieves the pixel format and alpha mode of the render target.	
            </summary>	
            <returns>The pixel format and alpha mode of the render target.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::GetPixelFormat']/*"/>	
            <unmanaged>D2D1_PIXEL_FORMAT ID2D1RenderTarget::GetPixelFormat()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.SetDpi(System.Single,System.Single)">
            <summary>	
            Sets the dots per inch (DPI) of the render target.	
            </summary>	
            <param name="dpiX"><para>A value greater than or equal to zero that specifies the horizontal DPI of the render target.</para></param>	
            <param name="dpiY"><para>A value greater than or equal to zero that specifies the vertical DPI of the render target.</para></param>	
            <remarks>	
            This method specifies the mapping from pixel space to device-independent space  for the render target.  If both dpiX and dpiY are 0, the factory-read system DPI is chosen. If one parameter is zero and the other unspecified, the DPI is not changed.For <see cref="T:SharpDX.Direct2D1.WindowRenderTarget"/>, the DPI defaults to the most recently factory-read system DPI. The default value for all other render targets is 96 DPI.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::SetDpi']/*"/>	
            <unmanaged>void ID2D1RenderTarget::SetDpi([In] float dpiX,[In] float dpiY)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.GetDpi(System.Single@,System.Single@)">
            <summary>	
            Return the render target's dots per inch (DPI).	
            </summary>	
            <param name="dpiX"><para>When this method returns, contains the horizontal DPI of the render target. This parameter is passed uninitialized.</para></param>	
            <param name="dpiY"><para>When this method returns, contains the vertical DPI of the render target. This parameter is passed uninitialized.</para></param>	
            <remarks>	
            This method indicates the mapping from pixel space to device-independent space  for the render target.For <see cref="T:SharpDX.Direct2D1.WindowRenderTarget"/>, the DPI defaults to the most recently factory-read system DPI. The default value for all other render targets is 96 DPI.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::GetDpi']/*"/>	
            <unmanaged>void ID2D1RenderTarget::GetDpi([Out] float* dpiX,[Out] float* dpiY)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.GetSize">
            <summary>	
            Returns the size of the render target in device-independent pixels.	
            </summary>	
            <returns>The current size of the render target in device-independent pixels.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::GetSize']/*"/>	
            <unmanaged>D2D_SIZE_F ID2D1RenderTarget::GetSize()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.GetPixelSize">
            <summary>	
            Returns the size of the render target in device pixels.	
            </summary>	
            <returns>The size of the render target in device pixels.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::GetPixelSize']/*"/>	
            <unmanaged>D2D_SIZE_U ID2D1RenderTarget::GetPixelSize()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.GetMaximumBitmapSize">
            <summary>	
            Gets the maximum size, in device-dependent units (pixels), of  any one bitmap dimension supported by the render target.	
            </summary>	
            <returns>The maximum size, in pixels, of  any one bitmap dimension supported by the render target.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::GetMaximumBitmapSize']/*"/>	
            <unmanaged>unsigned int ID2D1RenderTarget::GetMaximumBitmapSize()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.IsSupported(SharpDX.Direct2D1.RenderTargetProperties@)">
            <summary>	
            Indicates whether the render target supports the specified properties.	
            </summary>	
            <param name="renderTargetProperties"><para>The render target properties to test.</para></param>	
            <returns>TRUE if the specified render target properties are supported by this render target; otherwise, <see cref="F:SharpDX.Result.False"/>.</returns>	
            <remarks>	
            This method does not evaluate the DPI settings specified by the renderTargetProperties parameter.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::IsSupported']/*"/>	
            <unmanaged>BOOL ID2D1RenderTarget::IsSupported([In] const D2D1_RENDER_TARGET_PROPERTIES* renderTargetProperties)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.#ctor(SharpDX.Direct2D1.Factory,SharpDX.DXGI.Surface,SharpDX.Direct2D1.RenderTargetProperties)">
            <summary>	
            Creates a render target that draws to a DirectX Graphics Infrastructure (DXGI) surface. 	
            </summary>	
            <remarks>	
            To write to a Direct3D surface, you obtain an <see cref="T:SharpDX.DXGI.Surface"/> and pass it to the {{CreateDxgiSurfaceRenderTarget}} method to create a DXGI surface render target; you can then use the DXGI surface render target to draw 2-D content to the DXGI surface.  A DXGI surface render target is a type of <see cref="T:SharpDX.Direct2D1.RenderTarget"/>. Like other Direct2D render targets, you can use it to create resources and issue drawing commands. The DXGI surface render target and the DXGI surface must use the same DXGI format. If you specify the {{DXGI_FORMAT_UNKOWN}} format when you create the render target, it will automatically use the surface's format.The DXGI surface render target does not perform DXGI surface synchronization. To work with Direct2D, the Direct3D device that provides the <see cref="T:SharpDX.DXGI.Surface"/> must be created with the D3D10_CREATE_DEVICE_BGRA_SUPPORT flag.For more information about creating and using DXGI surface render targets, see the {{Direct2D and Direct3D Interoperability Overview}}.When you create a render target and hardware acceleration is available, you allocate resources on the computer's GPU. By creating a render target once and retaining it as long as possible, you gain performance benefits. Your application should create render targets once and hold onto them for the life of the application or until the render target's {{EndDraw}} method returns the {{D2DERR_RECREATE_TARGET}} error. When you receive this error, you need to recreate the render target (and any resources it created). 	
            </remarks>	
            <param name="factory">an instance of <see cref="T:SharpDX.Direct2D1.Factory"/></param>
            <param name="dxgiSurface">The dxgi surface to bind this render target to</param>
            <param name="properties">The rendering mode, pixel format, remoting options, DPI information, and the minimum DirectX support required for hardware rendering. For information about supported pixel formats, see  {{Supported Pixel  Formats and Alpha Modes}}.</param>
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.DrawBitmap(SharpDX.Direct2D1.Bitmap,System.Single,SharpDX.Direct2D1.BitmapInterpolationMode)">
            <summary>	
            Draws the specified bitmap after scaling it to the size of the specified rectangle. 	
            </summary>	
            <remarks>	
            This method doesn't return an error code if it fails. To determine whether a drawing operation (such as {{DrawBitmap}}) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)" /> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)" /> methods.  	
            </remarks>	
            <param name="bitmap">The bitmap to render. </param>
            <param name="opacity">A value between 0.0f and 1.0f, inclusive, that specifies an opacity value to apply to the bitmap; this value is multiplied against the alpha values of the bitmap's contents.  The default value is 1.0f. </param>
            <param name="interpolationMode">The interpolation mode to use if the bitmap is scaled or rotated by the drawing operation. The default value is <see cref="F:SharpDX.Direct2D1.BitmapInterpolationMode.Linear" />.  </param>
            <unmanaged>void ID2D1RenderTarget::DrawBitmap([In] ID2D1Bitmap* bitmap,[In, Optional] const D2D1_RECT_F* destinationRectangle,[None] float opacity,[None] D2D1_BITMAP_INTERPOLATION_MODE interpolationMode,[In, Optional] const D2D1_RECT_F* sourceRectangle)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.DrawBitmap(SharpDX.Direct2D1.Bitmap,SharpDX.RectangleF,System.Single,SharpDX.Direct2D1.BitmapInterpolationMode)">
            <summary>	
            Draws the specified bitmap after scaling it to the size of the specified rectangle. 	
            </summary>	
            <remarks>	
            This method doesn't return an error code if it fails. To determine whether a drawing operation (such as {{DrawBitmap}}) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw"/> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush"/> methods.  	
            </remarks>	
            <param name="bitmap">The bitmap to render. </param>
            <param name="destinationRectangle">The size and position, in device-independent pixels in the render target's coordinate space, of the area to which the bitmap is drawn; NULL to draw the selected portion of the bitmap at the origin of the render target.  If the rectangle is specified but not well-ordered, nothing is drawn, but the render target does not enter an error state. </param>
            <param name="opacity">A value between 0.0f and 1.0f, inclusive, that specifies an opacity value to apply to the bitmap; this value is multiplied against the alpha values of the bitmap's contents.  The default value is 1.0f. </param>
            <param name="interpolationMode">The interpolation mode to use if the bitmap is scaled or rotated by the drawing operation. The default value is <see cref="F:SharpDX.Direct2D1.BitmapInterpolationMode.Linear"/>.  </param>
            <unmanaged>void ID2D1RenderTarget::DrawBitmap([In] ID2D1Bitmap* bitmap,[In, Optional] const D2D1_RECT_F* destinationRectangle,[None] float opacity,[None] D2D1_BITMAP_INTERPOLATION_MODE interpolationMode,[In, Optional] const D2D1_RECT_F* sourceRectangle)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.DrawBitmap(SharpDX.Direct2D1.Bitmap,System.Single,SharpDX.Direct2D1.BitmapInterpolationMode,SharpDX.RectangleF)">
            <summary>	
            Draws the specified bitmap after scaling it to the size of the specified rectangle. 	
            </summary>	
            <remarks>	
            This method doesn't return an error code if it fails. To determine whether a drawing operation (such as {{DrawBitmap}}) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw"/> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)"/> methods.  	
            </remarks>	
            <param name="bitmap">The bitmap to render. </param>
            <param name="opacity">A value between 0.0f and 1.0f, inclusive, that specifies an opacity value to apply to the bitmap; this value is multiplied against the alpha values of the bitmap's contents.  The default value is 1.0f. </param>
            <param name="interpolationMode">The interpolation mode to use if the bitmap is scaled or rotated by the drawing operation. The default value is <see cref="F:SharpDX.Direct2D1.BitmapInterpolationMode.Linear"/>.  </param>
            <param name="sourceRectangle">The size and position, in device-independent pixels in the bitmap's coordinate space, of the area within the bitmap to be drawn; NULL to draw the entire bitmap.  </param>
            <unmanaged>void ID2D1RenderTarget::DrawBitmap([In] ID2D1Bitmap* bitmap,[In, Optional] const D2D1_RECT_F* destinationRectangle,[None] float opacity,[None] D2D1_BITMAP_INTERPOLATION_MODE interpolationMode,[In, Optional] const D2D1_RECT_F* sourceRectangle)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.DrawEllipse(SharpDX.Direct2D1.Ellipse,SharpDX.Direct2D1.Brush)">
            <summary>	
            Draws the outline of the specified ellipse using the specified stroke style. 	
            </summary>	
            <remarks>	
            The {{DrawEllipse}} method doesn't return an error code if it fails. To determine whether a drawing operation (such as DrawEllipse) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)" /> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)" /> methods.  	
            </remarks>	
            <param name="ellipse">The position and radius of the ellipse to draw, in device-independent pixels. </param>
            <param name="brush">The brush used to paint the ellipse's outline. </param>
            <unmanaged>void ID2D1RenderTarget::DrawEllipse([In] const D2D1_ELLIPSE* ellipse,[In] ID2D1Brush* brush,[None] float strokeWidth,[In, Optional] ID2D1StrokeStyle* strokeStyle)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.DrawEllipse(SharpDX.Direct2D1.Ellipse,SharpDX.Direct2D1.Brush,System.Single)">
            <summary>	
            Draws the outline of the specified ellipse using the specified stroke style. 	
            </summary>	
            <remarks>	
            The {{DrawEllipse}} method doesn't return an error code if it fails. To determine whether a drawing operation (such as DrawEllipse) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)" /> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)" /> methods.  	
            </remarks>	
            <param name="ellipse">The position and radius of the ellipse to draw, in device-independent pixels. </param>
            <param name="brush">The brush used to paint the ellipse's outline. </param>
            <param name="strokeWidth">The thickness of the ellipse's stroke. The stroke is centered on the ellipse's outline. </param>
            <unmanaged>void ID2D1RenderTarget::DrawEllipse([In] const D2D1_ELLIPSE* ellipse,[In] ID2D1Brush* brush,[None] float strokeWidth,[In, Optional] ID2D1StrokeStyle* strokeStyle)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.DrawGeometry(SharpDX.Direct2D1.Geometry,SharpDX.Direct2D1.Brush)">
            <summary>	
            Draws the outline of the specified geometry. 	
            </summary>	
            <remarks>	
            This method doesn't return an error code if it fails. To determine whether a drawing operation (such as DrawGeometry) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)" /> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)" /> methods.  	
            </remarks>	
            <param name="geometry">The geometry to draw. </param>
            <param name="brush">The brush used to paint the geometry's stroke. </param>
            <unmanaged>void ID2D1RenderTarget::DrawGeometry([In] ID2D1Geometry* geometry,[In] ID2D1Brush* brush,[None] float strokeWidth,[In, Optional] ID2D1StrokeStyle* strokeStyle)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.DrawGeometry(SharpDX.Direct2D1.Geometry,SharpDX.Direct2D1.Brush,System.Single)">
            <summary>	
            Draws the outline of the specified geometry. 	
            </summary>	
            <remarks>	
            This method doesn't return an error code if it fails. To determine whether a drawing operation (such as DrawGeometry) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)" /> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)" /> methods.  	
            </remarks>	
            <param name="geometry">The geometry to draw. </param>
            <param name="brush">The brush used to paint the geometry's stroke. </param>
            <param name="strokeWidth">The thickness of the geometry's stroke. The stroke is centered on the geometry's outline. </param>
            <unmanaged>void ID2D1RenderTarget::DrawGeometry([In] ID2D1Geometry* geometry,[In] ID2D1Brush* brush,[None] float strokeWidth,[In, Optional] ID2D1StrokeStyle* strokeStyle)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.DrawLine(SharpDX.DrawingPointF,SharpDX.DrawingPointF,SharpDX.Direct2D1.Brush)">
            <summary>	
            Draws a line between the specified points. 	
            </summary>	
            <remarks>	
            This method doesn't return an error code if it fails. To determine whether a drawing operation (such as DrawLine) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)" /> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)" /> methods.  	
            </remarks>	
            <param name="point0">The start point of the line, in device-independent pixels. </param>
            <param name="point1">The end point of the line, in device-independent pixels. </param>
            <param name="brush">The brush used to paint the line's stroke. </param>
            <unmanaged>void ID2D1RenderTarget::DrawLine([None] D2D1_POINT_2F point0,[None] D2D1_POINT_2F point1,[In] ID2D1Brush* brush,[None] float strokeWidth,[In, Optional] ID2D1StrokeStyle* strokeStyle)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.DrawLine(SharpDX.DrawingPointF,SharpDX.DrawingPointF,SharpDX.Direct2D1.Brush,System.Single)">
            <summary>	
            Draws a line between the specified points. 	
            </summary>	
            <remarks>	
            This method doesn't return an error code if it fails. To determine whether a drawing operation (such as DrawLine) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)" /> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)" /> methods.  	
            </remarks>	
            <param name="point0">The start point of the line, in device-independent pixels. </param>
            <param name="point1">The end point of the line, in device-independent pixels. </param>
            <param name="brush">The brush used to paint the line's stroke. </param>
            <param name="strokeWidth">A value greater than or equal to 0.0f that specifies the width of the stroke. If this parameter isn't specified, it defaults to 1.0f.  The stroke is centered on the line. </param>
            <unmanaged>void ID2D1RenderTarget::DrawLine([None] D2D1_POINT_2F point0,[None] D2D1_POINT_2F point1,[In] ID2D1Brush* brush,[None] float strokeWidth,[In, Optional] ID2D1StrokeStyle* strokeStyle)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.DrawRectangle(SharpDX.RectangleF,SharpDX.Direct2D1.Brush)">
            <summary>	
            Draws the outline of a rectangle that has the specified dimensions. 	
            </summary>	
            <remarks>	
            When this method fails, it does not return an error code. To determine whether a drawing method (such as {{DrawRectangle}}) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)" /> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)" /> method.  	
            </remarks>	
            <param name="rect">The dimensions of the rectangle to draw, in device-independent pixels. </param>
            <param name="brush">The brush used to paint the rectangle's stroke. </param>
            <unmanaged>void ID2D1RenderTarget::DrawRectangle([In] const D2D1_RECT_F* rect,[In] ID2D1Brush* brush,[None] float strokeWidth,[In, Optional] ID2D1StrokeStyle* strokeStyle)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.DrawRectangle(SharpDX.RectangleF,SharpDX.Direct2D1.Brush,System.Single)">
            <summary>	
            Draws the outline of a rectangle that has the specified dimensions and stroke style. 	
            </summary>	
            <remarks>	
            When this method fails, it does not return an error code. To determine whether a drawing method (such as {{DrawRectangle}}) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)" /> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)" /> method.  	
            </remarks>	
            <param name="rect">The dimensions of the rectangle to draw, in device-independent pixels. </param>
            <param name="brush">The brush used to paint the rectangle's stroke. </param>
            <param name="strokeWidth">A value greater than or equal to 0.0f that specifies the width of the rectangle's stroke. The stroke is centered on the rectangle's outline. </param>
            <unmanaged>void ID2D1RenderTarget::DrawRectangle([In] const D2D1_RECT_F* rect,[In] ID2D1Brush* brush,[None] float strokeWidth,[In, Optional] ID2D1StrokeStyle* strokeStyle)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.DrawRoundedRectangle(SharpDX.Direct2D1.RoundedRect,SharpDX.Direct2D1.Brush)">
            <summary>	
            Draws the outline of the specified rounded rectangle.	
            </summary>	
            <remarks>	
            This method doesn't return an error code if it fails. To determine whether a drawing operation (such as {{DrawRoundedRectangle}}) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)" /> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)" /> methods.  	
            </remarks>	
            <param name="roundedRect">The dimensions of the rounded rectangle to draw, in device-independent pixels. </param>
            <param name="brush">The brush used to paint the rounded rectangle's outline.  </param>
            <unmanaged>void ID2D1RenderTarget::DrawRoundedRectangle([In] const D2D1_ROUNDED_RECT* roundedRect,[In] ID2D1Brush* brush,[None] float strokeWidth,[In, Optional] ID2D1StrokeStyle* strokeStyle)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.DrawRoundedRectangle(SharpDX.Direct2D1.RoundedRect,SharpDX.Direct2D1.Brush,System.Single)">
            <summary>	
            Draws the outline of the specified rounded rectangle.	
            </summary>	
            <remarks>	
            This method doesn't return an error code if it fails. To determine whether a drawing operation (such as {{DrawRoundedRectangle}}) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)" /> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)" /> methods.  	
            </remarks>	
            <param name="roundedRect">The dimensions of the rounded rectangle to draw, in device-independent pixels. </param>
            <param name="brush">The brush used to paint the rounded rectangle's outline.  </param>
            <param name="strokeWidth">The width of the rounded rectangle's stroke. The stroke is centered on the rounded rectangle's outline. The default value is 1.0f.  </param>
            <unmanaged>void ID2D1RenderTarget::DrawRoundedRectangle([In] const D2D1_ROUNDED_RECT* roundedRect,[In] ID2D1Brush* brush,[None] float strokeWidth,[In, Optional] ID2D1StrokeStyle* strokeStyle)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.DrawRoundedRectangle(SharpDX.Direct2D1.RoundedRect,SharpDX.Direct2D1.Brush,System.Single,SharpDX.Direct2D1.StrokeStyle)">
            <summary>	
            Draws the outline of the specified rounded rectangle using the specified stroke style.	
            </summary>	
            <remarks>	
            This method doesn't return an error code if it fails. To determine whether a drawing operation (such as {{DrawRoundedRectangle}}) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)" /> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)" /> methods.  	
            </remarks>	
            <param name="roundedRect">The dimensions of the rounded rectangle to draw, in device-independent pixels. </param>
            <param name="brush">The brush used to paint the rounded rectangle's outline.  </param>
            <param name="strokeWidth">The width of the rounded rectangle's stroke. The stroke is centered on the rounded rectangle's outline. The default value is 1.0f.  </param>
            <param name="strokeStyle">The style of the rounded rectangle's stroke, or NULL to paint a solid stroke. The default value is NULL. </param>
            <unmanaged>void ID2D1RenderTarget::DrawRoundedRectangle([In] const D2D1_ROUNDED_RECT* roundedRect,[In] ID2D1Brush* brush,[None] float strokeWidth,[In, Optional] ID2D1StrokeStyle* strokeStyle)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.DrawText(System.String,SharpDX.DirectWrite.TextFormat,SharpDX.RectangleF,SharpDX.Direct2D1.Brush)">
            <summary>	
            Draws the specified text using the format information provided by an <see cref="T:SharpDX.DirectWrite.TextFormat" /> object. 	
            </summary>	
            <remarks>	
            To create an <see cref="T:SharpDX.DirectWrite.TextFormat" /> object, create an <see cref="T:SharpDX.DirectWrite.Factory" /> and call its {{CreateTextFormat}} method. This method doesn't return an error code if it fails. To determine whether a drawing operation (such as {{DrawText}}) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)" /> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)" /> methods.  	
            </remarks>	
            <param name="text">A reference to an array of Unicode characters to draw.  </param>
            <param name="textFormat">An object that describes formatting details of the text to draw, such as the font, the font size, and flow direction.   </param>
            <param name="layoutRect">The size and position of the area in which the text is drawn.  </param>
            <param name="defaultForegroundBrush">The brush used to paint the text. </param>
            <unmanaged>void ID2D1RenderTarget::DrawTextA([In, Buffer] const wchar_t* string,[None] int stringLength,[In] IDWriteTextFormat* textFormat,[In] const D2D1_RECT_F* layoutRect,[In] ID2D1Brush* defaultForegroundBrush,[None] D2D1_DRAW_TEXT_OPTIONS options,[None] DWRITE_MEASURING_MODE measuringMode)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.DrawText(System.String,SharpDX.DirectWrite.TextFormat,SharpDX.RectangleF,SharpDX.Direct2D1.Brush,SharpDX.Direct2D1.DrawTextOptions)">
            <summary>	
            Draws the specified text using the format information provided by an <see cref="T:SharpDX.DirectWrite.TextFormat" /> object. 	
            </summary>	
            <remarks>	
            To create an <see cref="T:SharpDX.DirectWrite.TextFormat" /> object, create an <see cref="T:SharpDX.DirectWrite.Factory" /> and call its {{CreateTextFormat}} method. This method doesn't return an error code if it fails. To determine whether a drawing operation (such as {{DrawText}}) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)" /> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)" /> methods.  	
            </remarks>	
            <param name="text">A reference to an array of Unicode characters to draw.  </param>
            <param name="textFormat">An object that describes formatting details of the text to draw, such as the font, the font size, and flow direction.   </param>
            <param name="layoutRect">The size and position of the area in which the text is drawn.  </param>
            <param name="defaultForegroundBrush">The brush used to paint the text. </param>
            <param name="options">A value that indicates whether the text should be snapped to pixel boundaries and whether the text should be clipped to the layout rectangle. The default value is <see cref="F:SharpDX.Direct2D1.DrawTextOptions.None" />, which indicates that text should be snapped to pixel boundaries and it should not be clipped to the layout rectangle. </param>
            <unmanaged>void ID2D1RenderTarget::DrawTextA([In, Buffer] const wchar_t* string,[None] int stringLength,[In] IDWriteTextFormat* textFormat,[In] const D2D1_RECT_F* layoutRect,[In] ID2D1Brush* defaultForegroundBrush,[None] D2D1_DRAW_TEXT_OPTIONS options,[None] DWRITE_MEASURING_MODE measuringMode)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.DrawText(System.String,SharpDX.DirectWrite.TextFormat,SharpDX.RectangleF,SharpDX.Direct2D1.Brush,SharpDX.Direct2D1.DrawTextOptions,SharpDX.Direct2D1.MeasuringMode)">
            <summary>	
            Draws the specified text using the format information provided by an <see cref="T:SharpDX.DirectWrite.TextFormat" /> object. 	
            </summary>	
            <remarks>	
            To create an <see cref="T:SharpDX.DirectWrite.TextFormat" /> object, create an <see cref="T:SharpDX.DirectWrite.Factory" /> and call its {{CreateTextFormat}} method. This method doesn't return an error code if it fails. To determine whether a drawing operation (such as {{DrawText}}) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)" /> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)" /> methods.  	
            </remarks>	
            <param name="text">A reference to an array of Unicode characters to draw.  </param>
            <param name="textFormat">An object that describes formatting details of the text to draw, such as the font, the font size, and flow direction.   </param>
            <param name="layoutRect">The size and position of the area in which the text is drawn.  </param>
            <param name="defaultForegroundBrush">The brush used to paint the text. </param>
            <param name="options">A value that indicates whether the text should be snapped to pixel boundaries and whether the text should be clipped to the layout rectangle. The default value is <see cref="F:SharpDX.Direct2D1.DrawTextOptions.None" />, which indicates that text should be snapped to pixel boundaries and it should not be clipped to the layout rectangle. </param>
            <param name="measuringMode">A value that indicates how glyph metrics are used to measure text when it is formatted.  The default value is DWRITE_MEASURING_MODE_NATURAL.  </param>
            <unmanaged>void ID2D1RenderTarget::DrawTextA([In, Buffer] const wchar_t* string,[None] int stringLength,[In] IDWriteTextFormat* textFormat,[In] const D2D1_RECT_F* layoutRect,[In] ID2D1Brush* defaultForegroundBrush,[None] D2D1_DRAW_TEXT_OPTIONS options,[None] DWRITE_MEASURING_MODE measuringMode)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.DrawTextLayout(SharpDX.DrawingPointF,SharpDX.DirectWrite.TextLayout,SharpDX.Direct2D1.Brush)">
            <summary>	
            Draws the formatted text described by the specified <see cref="T:SharpDX.DirectWrite.TextLayout" /> object.	
            </summary>	
            <remarks>	
            When drawing the same text repeatedly, using the DrawTextLayout method is more efficient than using the {{DrawText}} method because the text doesn't need to be formatted and the layout processed with each call. This method doesn't return an error code if it fails. To determine whether a drawing operation (such as DrawTextLayout) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)" /> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)" /> methods.  	
            </remarks>	
            <param name="origin">The point, described in device-independent pixels, at which the upper-left corner of the text described by textLayout is drawn. </param>
            <param name="textLayout">The formatted text to draw. Any drawing effects that do not inherit from <see cref="T:SharpDX.Direct2D1.Resource" /> are ignored. If there are drawing effects that inherit from ID2D1Resource that are not brushes, this method fails and the render target is put in an error state.  </param>
            <param name="defaultForegroundBrush">The brush used to paint any text in textLayout that does not already have a brush associated with it as a drawing effect (specified by the <see cref="M:SharpDX.DirectWrite.TextLayout.SetDrawingEffect(SharpDX.ComObject,SharpDX.DirectWrite.TextRange)" /> method).  </param>
            <unmanaged>void ID2D1RenderTarget::DrawTextLayout([None] D2D1_POINT_2F origin,[In] IDWriteTextLayout* textLayout,[In] ID2D1Brush* defaultForegroundBrush,[None] D2D1_DRAW_TEXT_OPTIONS options)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.EndDraw">
            <summary>	
            Ends drawing operations  on the render target and indicates the current error state and associated tags. 	
            </summary>	
            <remarks>	
            Drawing operations can only be issued between a {{BeginDraw}} and EndDraw call.BeginDraw and EndDraw are use to indicate that a render target is in use by the Direct2D system. Different implementations of <see cref="T:SharpDX.Direct2D1.RenderTarget"/> might behave differently when {{BeginDraw}} is called. An <see cref="T:SharpDX.Direct2D1.BitmapRenderTarget"/> may be locked between BeginDraw/EndDraw calls, a DXGI surface render target might be acquired on BeginDraw and released on EndDraw, while an <see cref="T:SharpDX.Direct2D1.WindowRenderTarget"/> may begin batching at BeginDraw and may present on EndDraw, for example. The BeginDraw method must be called before rendering operations can be called, though state-setting and state-retrieval operations can be performed even outside of {{BeginDraw}}/EndDraw. After {{BeginDraw}} is called, a render target will normally build up a batch of rendering commands, but defer processing of these commands until either an internal buffer is full, the {{Flush}} method is called, or until EndDraw is called. The EndDraw method causes any batched drawing operations to complete, and then returns an HRESULT indicating the success of the operations and, optionally, the tag state of the render target at the time the error occurred. The EndDraw method always succeeds: it should not be called twice even if a previous EndDraw resulted in a failing HRESULT. If EndDraw is called without a matched call to {{BeginDraw}}, it returns an error indicating that BeginDraw must be called before EndDraw. Calling BeginDraw twice on a render target puts the target into an error state where nothing further is drawn, and returns an appropriate HRESULT and error information when EndDraw is called.	
            </remarks>	
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code and sets tag1 and tag2 to the tags that were active when the error occurred. </returns>
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.FillGeometry(SharpDX.Direct2D1.Geometry,SharpDX.Direct2D1.Brush)">
            <summary>	
            Paints the interior of the specified geometry. 	
            </summary>	
            <remarks>	
            If the opacityBrush parameter is not NULL, the alpha value of each pixel of the mapped opacityBrush is used to determine the resulting opacity of each corresponding pixel of the geometry. Only the alpha value of each color in the brush is used for this processing; all other color information is ignored.  The alpha value specified by the brush is multiplied by the alpha value of the geometry after the geometry has been painted by brush.  	
            When this method fails, it does not return an error code. To determine whether a drawing operation (such as FillGeometry) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw"/> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush"/> method. 	
            </remarks>	
            <param name="geometry">The geometry to paint.</param>
            <param name="brush">The brush used to paint the geometry's interior.</param>
            <unmanaged>void FillGeometry([In] ID2D1Geometry* geometry,[In] ID2D1Brush* brush,[In, Optional] ID2D1Brush* opacityBrush)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.FillOpacityMask(SharpDX.Direct2D1.Bitmap,SharpDX.Direct2D1.Brush,SharpDX.Direct2D1.OpacityMaskContent)">
            <summary>	
            Applies the opacity mask described by the specified bitmap to a brush and uses that brush to paint a region of the render target.    	
            </summary>	
            <remarks>	
            For this method to work properly, the render target must be using the <see cref="F:SharpDX.Direct2D1.AntialiasMode.Aliased" /> antialiasing mode. You can set the antialiasing mode by calling the <see cref="M:SharpDX.Direct2D1.RenderTarget.SetAntialiasMode(SharpDX.Direct2D1.AntialiasMode)" /> method. This method doesn't return an error code if it fails. To determine whether a drawing operation (such as {{FillOpacityMask}}) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)" /> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)" /> methods.  	
            </remarks>	
            <param name="opacityMask">The opacity mask to apply to the brush. The alpha value of each pixel in the  region specified by sourceRectangle is multiplied with the alpha value of the brush after the brush has been mapped to the area defined by destinationRectangle. </param>
            <param name="brush">The brush used to paint the region of the render target specified by destinationRectangle. </param>
            <param name="content">The type of content the opacity mask contains. The value is used to determine the color space in which the opacity mask is blended. </param>
            <unmanaged>void ID2D1RenderTarget::FillOpacityMask([In] ID2D1Bitmap* opacityMask,[In] ID2D1Brush* brush,[None] D2D1_OPACITY_MASK_CONTENT content,[In, Optional] const D2D1_RECT_F* destinationRectangle,[In, Optional] const D2D1_RECT_F* sourceRectangle)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.FillRoundedRectangle(SharpDX.Direct2D1.RoundedRect,SharpDX.Direct2D1.Brush)">
            <summary>	
            Paints the interior of the specified rounded rectangle.	
            </summary>	
            <remarks>	
            This method doesn't return an error code if it fails. To determine whether a drawing operation (such as {{FillRoundedRectangle}}) failed, check the result returned by the <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)" /> or <see cref="M:SharpDX.Direct2D1.RenderTarget.Flush(System.Int64@,System.Int64@)" /> methods.  	
            </remarks>	
            <param name="roundedRect">The dimensions of the rounded rectangle to paint, in device-independent pixels. </param>
            <param name="brush">The brush used to paint the interior of the rounded rectangle. </param>
            <unmanaged>void ID2D1RenderTarget::FillRoundedRectangle([In] const D2D1_ROUNDED_RECT* roundedRect,[In] ID2D1Brush* brush)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTarget.Flush">
            <summary>	
            Executes all pending drawing commands. 	
            </summary>	
            <remarks>	
            This command does not flush the device that is associated with the render target.   Calling this method resets the error state of the render target. 	
            </remarks>	
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code and sets tag1 and tag2 to the tags that were active when the error occurred. If no error occurred, this method sets the error tag state to be (0,0). </returns>
            <unmanaged>HRESULT ID2D1RenderTarget::Flush([Out, Optional] D2D1_TAG* tag1,[Out, Optional] D2D1_TAG* tag2)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.RenderTarget.Transform">
            <summary>	
            Gets the current transform of the render target.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::GetTransform']/*"/>	
            <unmanaged>GetTransform</unmanaged>	
            <unmanaged>void ID2D1RenderTarget::GetTransform([Out] D2D_MATRIX_3X2_F* transform)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.RenderTarget.AntialiasMode">
            <summary>	
            Retrieves the current antialiasing mode for nontext drawing operations.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::GetAntialiasMode']/*"/>	
            <unmanaged>GetAntialiasMode</unmanaged>	
            <unmanaged>D2D1_ANTIALIAS_MODE ID2D1RenderTarget::GetAntialiasMode()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.RenderTarget.TextAntialiasMode">
            <summary>	
            Gets the current antialiasing mode for text and glyph drawing operations.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::GetTextAntialiasMode']/*"/>	
            <unmanaged>GetTextAntialiasMode</unmanaged>	
            <unmanaged>D2D1_TEXT_ANTIALIAS_MODE ID2D1RenderTarget::GetTextAntialiasMode()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.RenderTarget.TextRenderingParams">
            <summary>	
            Retrieves the render target's current text rendering options.	
            </summary>	
            <remarks>	
            If the settings specified by  textRenderingParams are incompatible with the render target's text antialiasing mode (specified by SetTextAntialiasMode), subsequent text and glyph drawing operations will fail and put the render target into an error state.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::GetTextRenderingParams']/*"/>	
            <unmanaged>GetTextRenderingParams</unmanaged>	
            <unmanaged>void ID2D1RenderTarget::GetTextRenderingParams([Out, Optional] IDWriteRenderingParams** textRenderingParams)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.RenderTarget.PixelFormat">
            <summary>	
            Retrieves the pixel format and alpha mode of the render target.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::GetPixelFormat']/*"/>	
            <unmanaged>GetPixelFormat</unmanaged>	
            <unmanaged>D2D1_PIXEL_FORMAT ID2D1RenderTarget::GetPixelFormat()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.RenderTarget.Size">
            <summary>	
            Returns the size of the render target in device-independent pixels.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::GetSize']/*"/>	
            <unmanaged>GetSize</unmanaged>	
            <unmanaged>D2D_SIZE_F ID2D1RenderTarget::GetSize()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.RenderTarget.PixelSize">
            <summary>	
            Returns the size of the render target in device pixels.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::GetPixelSize']/*"/>	
            <unmanaged>GetPixelSize</unmanaged>	
            <unmanaged>D2D_SIZE_U ID2D1RenderTarget::GetPixelSize()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.RenderTarget.MaximumBitmapSize">
            <summary>	
            Gets the maximum size, in device-dependent units (pixels), of  any one bitmap dimension supported by the render target.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderTarget::GetMaximumBitmapSize']/*"/>	
            <unmanaged>GetMaximumBitmapSize</unmanaged>	
            <unmanaged>unsigned int ID2D1RenderTarget::GetMaximumBitmapSize()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.RenderTarget.StrokeWidth">
            <summary>
            Get or set the default stroke width used for all methods that are not explicitly using it. Default is set to 1.0f.
            </summary>
        </member>
        <member name="P:SharpDX.Direct2D1.RenderTarget.DotsPerInch">
            <summary>	
            Get or sets the dots per inch (DPI) of the render target. 	
            </summary>	
            <remarks>	
            This method specifies the mapping from pixel space to device-independent space  for the render target.  If both dpiX and dpiY are 0, the factory-read system DPI is chosen. If one parameter is zero and the other unspecified, the DPI is not changed. For <see cref="T:SharpDX.Direct2D1.WindowRenderTarget"/>, the DPI defaults to the most recently factory-read system DPI. The default value for all other render targets is 96 DPI.   	
            </remarks>	
            <unmanaged>void ID2D1RenderTarget::SetDpi([None] float dpiX,[None] float dpiY)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.#ctor(SharpDX.DXGI.Surface)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.DeviceContext"/> class.
            </summary>
            <param name="surface">The surface.</param>
            <unmanaged>HRESULT D2D1CreateDeviceContext([In] IDXGISurface* dxgiSurface,[In, Optional] const D2D1_CREATION_PROPERTIES* creationProperties,[Out] ID2D1DeviceContext** d2dDeviceContext)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.#ctor(SharpDX.DXGI.Surface,SharpDX.Direct2D1.CreationProperties)">
            <summary>
            Initializes a new instance of the <see cref="P:SharpDX.Direct2D1.DeviceContext.Device"/> class.
            </summary>
            <param name="surface">The surface.</param>
            <param name="creationProperties">The creation properties.</param>
            <unmanaged>HRESULT D2D1CreateDeviceContext([In] IDXGISurface* dxgiSurface,[In, Optional] const D2D1_CREATION_PROPERTIES* creationProperties,[Out] ID2D1DeviceContext** d2dDeviceContext)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.#ctor(SharpDX.Direct2D1.Device,SharpDX.Direct2D1.DeviceContextOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.DeviceContext"/> class using an existing <see cref="P:SharpDX.Direct2D1.DeviceContext.Device"/>.
            </summary>
            <param name="device">The device.</param>
            <param name="options">The options to be applied to the created device context.</param>
            <remarks>
            The new device context will not have a  selected target bitmap. The caller must create and select a bitmap as the target surface of the context.
            </remarks>
            <unmanaged>HRESULT ID2D1Device::CreateDeviceContext([In] D2D1_DEVICE_CONTEXT_OPTIONS options,[Out] ID2D1DeviceContext** deviceContext)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.DeviceContext"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.CreateBitmap(SharpDX.DrawingSize,System.IntPtr,System.Int32,SharpDX.Direct2D1.BitmapProperties1,SharpDX.Direct2D1.Bitmap1)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="size">No documentation.</param>	
            <param name="sourceData">No documentation.</param>	
            <param name="pitch">No documentation.</param>	
            <param name="bitmapProperties">No documentation.</param>	
            <param name="bitmap">No documentation.</param>	
            <returns>The method returns an <see cref="T:SharpDX.Result"/>. Possible values include, but are not limited to, those in the following table.HRESULTDescription S_OKNo error occurred. E_OUTOFMEMORYDirect2D could not allocate sufficient memory to complete the call. E_INVALIDARGAn invalid value was passed to the method. D3DERR_OUTOFVIDEOMEMORYDirect3D does not have enough display memory to perform the operation.?</returns>	
            <remarks>	
            The new bitmap can be used as a target for SetTarget if it is created with <see cref="F:SharpDX.Direct2D1.BitmapOptions.Target"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::CreateBitmap']/*"/>	
            <unmanaged>HRESULT ID2D1DeviceContext::CreateBitmap([In] D2D_SIZE_U size,[In, Buffer, Optional] const void* sourceData,[In] unsigned int pitch,[In] const D2D1_BITMAP_PROPERTIES1* bitmapProperties,[Out, Fast] ID2D1Bitmap1** bitmap)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.CreateBitmapFromWicBitmap(SharpDX.WIC.BitmapSource,SharpDX.Direct2D1.BitmapProperties1,SharpDX.Direct2D1.Bitmap1@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="wicBitmapSource">No documentation.</param>	
            <param name="bitmapProperties">No documentation.</param>	
            <param name="bitmap">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::CreateBitmapFromWicBitmap']/*"/>	
            <unmanaged>HRESULT ID2D1DeviceContext::CreateBitmapFromWicBitmap([In] IWICBitmapSource* wicBitmapSource,[In, Optional] const D2D1_BITMAP_PROPERTIES1* bitmapProperties,[Out] ID2D1Bitmap1** bitmap)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.CreateColorContext(SharpDX.Direct2D1.ColorSpace,System.Byte[],System.Int32,SharpDX.Direct2D1.ColorContext)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="space"><para>The space  of color context to create.</para></param>	
            <param name="rofileRef"><para>A buffer containing the ICC profile bytes used to initialize the color context when space is <see cref="F:SharpDX.Direct2D1.ColorSpace.Custom"/>.  For other types, the parameter is ignored and should be set to <c>null</c>.</para></param>	
            <param name="profileSize"><para>The size in bytes of Profile.</para></param>	
            <param name="colorContext"><para>When this method returns, contains the address of a reference to a new color context object.</para></param>	
            <returns>The method returns an <see cref="T:SharpDX.Result"/>. Possible values include, but are not limited to, those in the following table.HRESULTDescription S_OKNo error occurred. E_OUTOFMEMORYDirect2D could not allocate sufficient memory to complete the call. E_INVALIDARGAn invalid value was passed to the method.?</returns>	
            <remarks>	
            The new color context can be used in D2D1_BITMAP1_PROPERTIES to initialize the color context of a created bitmap.When space is <see cref="F:SharpDX.Direct2D1.ColorSpace.Custom"/>, profile and profileSize must be specified.  Otherwise, these parameters should be set to <c>null</c> and zero respectively.  When the space is <see cref="F:SharpDX.Direct2D1.ColorSpace.Custom"/>, the model field of the profile header is inspected to determine if this profile is sRGB or scRGB and the color space is updated respectively.  Otherwise the space remains custom.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::CreateColorContext']/*"/>	
            <unmanaged>HRESULT ID2D1DeviceContext::CreateColorContext([In] D2D1_COLOR_SPACE space,[In, Buffer, Optional] const unsigned char* profile,[In] unsigned int profileSize,[Out, Fast] ID2D1ColorContext** colorContext)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.CreateColorContextFromFilename(System.String,SharpDX.Direct2D1.ColorContext)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="filename"><para>The path to the file containing the profile bytes to initialize the color context with.</para></param>	
            <param name="colorContext"><para>When this method returns, contains the address of a reference to a new color context.</para></param>	
            <returns>The method returns an <see cref="T:SharpDX.Result"/>. Possible values include, but are not limited to, those in the following table.HRESULTDescription S_OKNo error occurred. E_OUTOFMEMORYDirect2D could not allocate sufficient memory to complete the call. E_INVALIDARGAn invalid value was passed to the method.?</returns>	
            <remarks>	
            The new color context can be used in D2D1_BITMAP1_PROPERTIES to initialize the color context of a created bitmap.  The model field of the profile header is inspected to determine whether this profile is sRGB or scRGB and the color space is updated respectively.  Otherwise the space is  custom.Additional References,	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::CreateColorContextFromFilename']/*"/>	
            <unmanaged>HRESULT ID2D1DeviceContext::CreateColorContextFromFilename([In] const wchar_t* filename,[Out, Fast] ID2D1ColorContext** colorContext)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.CreateColorContextFromWicColorContext(SharpDX.WIC.ColorContext,SharpDX.Direct2D1.ColorContext)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="wicColorContext">No documentation.</param>	
            <param name="colorContext">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::CreateColorContextFromWicColorContext']/*"/>	
            <unmanaged>HRESULT ID2D1DeviceContext::CreateColorContextFromWicColorContext([In] IWICColorContext* wicColorContext,[Out, Fast] ID2D1ColorContext** colorContext)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.CreateBitmapFromDxgiSurface(SharpDX.DXGI.Surface,SharpDX.Direct2D1.BitmapProperties1,SharpDX.Direct2D1.Bitmap1)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="surface">No documentation.</param>	
            <param name="bitmapProperties">No documentation.</param>	
            <param name="bitmap1">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::CreateBitmapFromDxgiSurface']/*"/>	
            <unmanaged>HRESULT ID2D1DeviceContext::CreateBitmapFromDxgiSurface([In] IDXGISurface* surface,[In, Optional] const D2D1_BITMAP_PROPERTIES1* bitmapProperties,[Out, Fast] ID2D1Bitmap1** bitmap1)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.CreateEffect(System.Guid,SharpDX.Direct2D1.Effect)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="effectId"><para>The class ID of the effect to create.</para></param>	
            <param name="effect"><para>When this method returns, contains the address of a reference to a new effect.</para></param>	
            <returns>The method returns an <see cref="T:SharpDX.Result"/>. Possible values include, but are not limited to, those in the following table.HRESULTDescription S_OKNo error occurred. E_OUTOFMEMORYDirect2D could not allocate sufficient memory to complete the call. E_INVALIDARGAn invalid value was passed to the method. D3DERR_OUTOFVIDEOMEMORYDirect3D does not have enough display memory to perform the operation. D2DERR_EFFECT_IS_NOT_REGISTEREDThe specified effect is not registered by the system.?</returns>	
            <remarks>	
            The created effect does not increment the reference count for the dynamic-link library (DLL) from which the effect was created. If the application deletes an effect while that effect is loaded, the resulting behavior will be unpredictable.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::CreateEffect']/*"/>	
            <unmanaged>HRESULT ID2D1DeviceContext::CreateEffect([In] const GUID&amp; effectId,[Out, Fast] ID2D1Effect** effect)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.CreateGradientStopCollection(SharpDX.Direct2D1.GradientStop[],System.Int32,SharpDX.Direct2D1.ColorSpace,SharpDX.Direct2D1.ColorSpace,SharpDX.Direct2D1.BufferPrecision,SharpDX.Direct2D1.ExtendMode,SharpDX.Direct2D1.ColorInterpolationMode,SharpDX.Direct2D1.GradientStopCollection1)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="straightAlphaGradientStops"><para>An array of color values and offsets.</para></param>	
            <param name="straightAlphaGradientStopsCount"><para>The number of elements in the gradientStops array.</para></param>	
            <param name="preInterpolationSpace"><para>Specifies both the input color space and the space in which the color interpolation occurs.</para></param>	
            <param name="postInterpolationSpace"><para>The color space that colors will be converted to after interpolation occurs.</para></param>	
            <param name="bufferPrecision"><para>The precision of the texture used to hold interpolated values.</para></param>	
            <param name="extendMode"><para>Defines how colors outside of the range defined by the stop collection are determined.</para></param>	
            <param name="colorInterpolationMode"><para>The new gradient stop collection.</para></param>	
            <param name="gradientStopCollection1">No documentation.</param>	
            <returns>The method returns an <see cref="T:SharpDX.Result"/>. Possible values include, but are not limited to, those in the following table.HRESULTDescription S_OKNo error occurred. E_OUTOFMEMORYDirect2D could not allocate sufficient memory to complete the call. E_INVALIDARGAn invalid value was passed to the method.?</returns>	
            <remarks>	
            This method linearly interpolates between the color stops. An optional color space conversion is applied after interpolation. Whether and how this gamma conversion is applied is determined before and after interpolation. This method will fail if the device context does not support the requested buffer precision.Additional ReferencesD2D1_GRADIENT_STOP, D2D1_GAMMA_CONVERSION, <see cref="T:SharpDX.Direct2D1.BufferPrecision"/>, <see cref="T:SharpDX.Direct2D1.ExtendMode"/>, <see cref="T:SharpDX.Direct2D1.GradientStopCollection"/>RequirementsMinimum supported operating systemSame as Interface / Class Highest IRQL levelN/A (user mode) Callable from DlllMain()No Callable from services and session 0Yes Callable from UI threadYes?	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::CreateGradientStopCollection']/*"/>	
            <unmanaged>HRESULT ID2D1DeviceContext::CreateGradientStopCollection([In, Buffer] const D2D1_GRADIENT_STOP* straightAlphaGradientStops,[In] unsigned int straightAlphaGradientStopsCount,[In] D2D1_COLOR_SPACE preInterpolationSpace,[In] D2D1_COLOR_SPACE postInterpolationSpace,[In] D2D1_BUFFER_PRECISION bufferPrecision,[In] D2D1_EXTEND_MODE extendMode,[In] D2D1_COLOR_INTERPOLATION_MODE colorInterpolationMode,[Out, Fast] ID2D1GradientStopCollection1** gradientStopCollection1)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.CreateImageBrush(SharpDX.Direct2D1.Image,SharpDX.Direct2D1.ImageBrushProperties@,System.Nullable{SharpDX.Direct2D1.BrushProperties},SharpDX.Direct2D1.ImageBrush)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="image">No documentation.</param>	
            <param name="imageBrushProperties">No documentation.</param>	
            <param name="brushProperties">No documentation.</param>	
            <param name="imageBrush">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::CreateImageBrush']/*"/>	
            <unmanaged>HRESULT ID2D1DeviceContext::CreateImageBrush([In] ID2D1Image* image,[In] const D2D1_IMAGE_BRUSH_PROPERTIES* imageBrushProperties,[In, Optional] const D2D1_BRUSH_PROPERTIES* brushProperties,[Out, Fast] ID2D1ImageBrush** imageBrush)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.CreateBitmapBrush(SharpDX.Direct2D1.Bitmap,System.Nullable{SharpDX.Direct2D1.BitmapBrushProperties1},System.Nullable{SharpDX.Direct2D1.BrushProperties},SharpDX.Direct2D1.BitmapBrush1)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="bitmap">No documentation.</param>	
            <param name="bitmapBrushProperties">No documentation.</param>	
            <param name="brushProperties">No documentation.</param>	
            <param name="bitmapBrush">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::CreateBitmapBrush']/*"/>	
            <unmanaged>HRESULT ID2D1DeviceContext::CreateBitmapBrush([In] ID2D1Bitmap* bitmap,[In, Optional] const D2D1_BITMAP_BRUSH_PROPERTIES1* bitmapBrushProperties,[In, Optional] const D2D1_BRUSH_PROPERTIES* brushProperties,[Out, Fast] ID2D1BitmapBrush1** bitmapBrush)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.CreateCommandList(SharpDX.Direct2D1.CommandList)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="commandList">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::CreateCommandList']/*"/>	
            <unmanaged>HRESULT ID2D1DeviceContext::CreateCommandList([Out, Fast] ID2D1CommandList** commandList)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.IsDxgiFormatSupported(SharpDX.DXGI.Format)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="format">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::IsDxgiFormatSupported']/*"/>	
            <unmanaged>BOOL ID2D1DeviceContext::IsDxgiFormatSupported([In] DXGI_FORMAT format)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.IsBufferPrecisionSupported(SharpDX.Direct2D1.BufferPrecision)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="bufferPrecision">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::IsBufferPrecisionSupported']/*"/>	
            <unmanaged>BOOL ID2D1DeviceContext::IsBufferPrecisionSupported([In] D2D1_BUFFER_PRECISION bufferPrecision)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.GetImageLocalBounds(SharpDX.Direct2D1.Image,SharpDX.RectangleF@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="image">No documentation.</param>	
            <param name="localBounds">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::GetImageLocalBounds']/*"/>	
            <unmanaged>HRESULT ID2D1DeviceContext::GetImageLocalBounds([In] ID2D1Image* image,[Out] D2D_RECT_F* localBounds)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.GetImageWorldBounds(SharpDX.Direct2D1.Image,SharpDX.RectangleF@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="image">No documentation.</param>	
            <param name="worldBounds">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::GetImageWorldBounds']/*"/>	
            <unmanaged>HRESULT ID2D1DeviceContext::GetImageWorldBounds([In] ID2D1Image* image,[Out] D2D_RECT_F* worldBounds)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.GetGlyphRunWorldBounds(SharpDX.DrawingPointF,SharpDX.DirectWrite.GlyphRun,SharpDX.Direct2D1.MeasuringMode,SharpDX.RectangleF@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="baselineOrigin">No documentation.</param>	
            <param name="glyphRun">No documentation.</param>	
            <param name="measuringMode">No documentation.</param>	
            <param name="bounds">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::GetGlyphRunWorldBounds']/*"/>	
            <unmanaged>HRESULT ID2D1DeviceContext::GetGlyphRunWorldBounds([In] D2D_POINT_2F baselineOrigin,[In] const DWRITE_GLYPH_RUN* glyphRun,[In] DWRITE_MEASURING_MODE measuringMode,[Out] D2D_RECT_F* bounds)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.GetDevice(SharpDX.Direct2D1.Device@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="device"><para>When this method returns, contains the address of a reference to a Direct2D device associated with this device context.</para></param>	
            <remarks>	
            The application can retrieve the device even if it is created from an earlier render target code-path. The application must use an <see cref="T:SharpDX.Direct2D1.DeviceContext"/> interface and then call GetDevice. Some functionality for controlling all of the resources for a set of device contexts is maintained only on an <see cref="T:SharpDX.Direct2D1.Device"/> object.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::GetDevice']/*"/>	
            <unmanaged>void ID2D1DeviceContext::GetDevice([Out] ID2D1Device** device)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.SetTarget(SharpDX.Direct2D1.Image)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="image"><para>The DXGI surface to be set as the target.</para></param>	
            <remarks>	
            This method allows the device context to target a DXGI surface. This is equivalent to calling CreateBitmapFromDxgiSurface followed by SetTarget.  The created bitmap can be a source for drawing and a target bitmap.  The alpha mode of the created bitmap will be <see cref="F:SharpDX.Direct2D1.AlphaMode.Ignore"/>.  The DPI of the created bitmap will be (96,96).  The created bitmap will inherit the bind flags of the DXG surface.If Surface is <c>null</c>, this is equivalent to using  SetTargetBitmap(<c>null</c>);.If the provided  surface does not support being bound as a render target, the context will return D2DERR_BITMAP_IS_NOT_A_TARGET.If the surface is not associated with the same device as this device context, the context will return D2DERR_WRONG_RESOURCE_DOMAIN.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::SetTarget']/*"/>	
            <unmanaged>void ID2D1DeviceContext::SetTarget([In, Optional] ID2D1Image* image)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.GetTarget(SharpDX.Direct2D1.Image@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="image"><para>When this method returns, contains the address of a reference to the target currently associated with the device context.</para></param>	
            <remarks>	
            If a target is not associated with the device context, target will contain <c>null</c> when the methods returns.If the currently selected target is a bitmap rather than a command list, the application can gain access to the initial bitmaps created by using one of the following methods:CreateHwndRenderTarget   CreateDxgiSurfaceRenderTarget   CreateWicBitmapRenderTarget   CreateDCRenderTarget   CreateCompatibleRenderTargetIt is not possible for an application to destroy these bitmaps.  All of these bitmaps are bindable as bitmap targets.  However not all of these bitmaps can be used as bitmap sources for  <see cref="T:SharpDX.Direct2D1.RenderTarget"/> methods.CreateDxgiSurfaceRenderTarget will create a bitmap that is usable as a bitmap source if the DXGI surface is bindable as a shader resource view.CreateCompatibleRenderTarget will always create bitmaps that are usable as a bitmap source.<see cref="M:SharpDX.Direct2D1.RenderTarget.BeginDraw"/> will copy from the <see cref="T:System.IntPtr"/> to the original bitmap associated with it.  <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)"/> will copy from the original bitmap to the <see cref="T:System.IntPtr"/>.<see cref="T:SharpDX.WIC.Bitmap"/> objects will be locked in the following circumstances:BeginDraw has been called and the currently selected target bitmap is a WIC bitmap. A WIC bitmap is set as the target of a device context after BeginDraw has been called and before EndDraw has been called. Any of the ID2D1Bitmap::Copy* methods are called with a WIC bitmap as either the source or destination.IWICBitmap objects will be unlocked in the following circumstances:EndDraw is called and the currently selected target bitmap is a WIC bitmap. A WIC bitmap is removed as the target of a device context between the calls to BeginDraw and EndDraw. Any of the ID2D1Bitmap::Copy* methods are called with a WIC bitmap as either the source or destination.Direct2D will only lock bitmaps that are not currently locked.Calling QueryInterface for <see cref="T:SharpDX.Direct2D1.GdiInteropRenderTarget"/> will always succeed.  <see cref="M:SharpDX.Direct2D1.GdiInteropRenderTarget.GetDC(SharpDX.Direct2D1.DeviceContextInitializeMode)"/> will return a device context corresponding to the currently bound target bitmap.  GetDC will fail if the target bitmap was not created with the GDI_COMPATIBLE flag set.<see cref="M:SharpDX.Direct2D1.WindowRenderTarget.Resize(SharpDX.DrawingSize)"/> will return <see cref="F:SharpDX.DXGI.DXGIError.InvalidCall"/> if there are any outstanding references to the original target bitmap associated with the render target.Although the target can be a command list, it cannot be any other type of image. It cannot be the output image of an effect.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::GetTarget']/*"/>	
            <unmanaged>void ID2D1DeviceContext::GetTarget([Out, Optional] ID2D1Image** image)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.SetRenderingControls(SharpDX.Direct2D1.RenderingControls)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="renderingControls">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::SetRenderingControls']/*"/>	
            <unmanaged>void ID2D1DeviceContext::SetRenderingControls([In] const D2D1_RENDERING_CONTROLS* renderingControls)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.GetRenderingControls(SharpDX.Direct2D1.RenderingControls@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="renderingControls">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::GetRenderingControls']/*"/>	
            <unmanaged>void ID2D1DeviceContext::GetRenderingControls([Out] D2D1_RENDERING_CONTROLS* renderingControls)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.SetPrimitiveBlend(SharpDX.Direct2D1.PrimitiveBlend)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="primitiveBlend">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::SetPrimitiveBlend']/*"/>	
            <unmanaged>void ID2D1DeviceContext::SetPrimitiveBlend([In] D2D1_PRIMITIVE_BLEND primitiveBlend)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.GetPrimitiveBlend">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::GetPrimitiveBlend']/*"/>	
            <unmanaged>D2D1_PRIMITIVE_BLEND ID2D1DeviceContext::GetPrimitiveBlend()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.SetUnitMode(SharpDX.Direct2D1.UnitMode)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="unitMode">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::SetUnitMode']/*"/>	
            <unmanaged>void ID2D1DeviceContext::SetUnitMode([In] D2D1_UNIT_MODE unitMode)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.GetUnitMode">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <returns>The  unit mode.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::GetUnitMode']/*"/>	
            <unmanaged>D2D1_UNIT_MODE ID2D1DeviceContext::GetUnitMode()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.DrawGlyphRun(SharpDX.DrawingPointF,SharpDX.DirectWrite.GlyphRun,SharpDX.DirectWrite.GlyphRunDescription,SharpDX.Direct2D1.Brush,SharpDX.Direct2D1.MeasuringMode)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="baselineOrigin"><para>Origin of first glyph in the series.</para></param>	
            <param name="glyphRun"><para>Glyph information including glyph indices, advances, and offsets.</para></param>	
            <param name="glyphRunDescription"><para>Supplementary glyph series information.</para></param>	
            <param name="foregroundBrush"><para>The brush that defines the text color.</para></param>	
            <param name="measuringMode"><para>The measuring mode of the glyph series, used to determine the advances and offsets. The default value is <see cref="F:SharpDX.Direct2D1.MeasuringMode.Natural"/>.</para></param>	
            <remarks>	
            The glyphRunDescription is ignored when rendering, but can be useful for printing and serialization of rendering commands, such as to an XPS or SVG file. This extends <see cref="M:SharpDX.Direct2D1.RenderTarget.DrawGlyphRun(SharpDX.DrawingPointF,SharpDX.DirectWrite.GlyphRun,SharpDX.Direct2D1.Brush,SharpDX.Direct2D1.MeasuringMode)"/>, which lacked the glyph run description.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::DrawGlyphRun']/*"/>	
            <unmanaged>void ID2D1DeviceContext::DrawGlyphRun([In] D2D_POINT_2F baselineOrigin,[In] const DWRITE_GLYPH_RUN* glyphRun,[In, Optional] const DWRITE_GLYPH_RUN_DESCRIPTION* glyphRunDescription,[In] ID2D1Brush* foregroundBrush,[In] DWRITE_MEASURING_MODE measuringMode)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.DrawImage(SharpDX.Direct2D1.Image,System.Nullable{SharpDX.DrawingPointF},System.Nullable{SharpDX.RectangleF},SharpDX.Direct2D1.InterpolationMode,SharpDX.Direct2D1.CompositeMode)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="image">No documentation.</param>	
            <param name="targetOffset">No documentation.</param>	
            <param name="imageRectangle">No documentation.</param>	
            <param name="interpolationMode">No documentation.</param>	
            <param name="compositeMode">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::DrawImage']/*"/>	
            <unmanaged>void ID2D1DeviceContext::DrawImage([In] ID2D1Image* image,[In, Optional] const D2D_POINT_2F* targetOffset,[In, Optional] const D2D_RECT_F* imageRectangle,[In] D2D1_INTERPOLATION_MODE interpolationMode,[In] D2D1_COMPOSITE_MODE compositeMode)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.DrawGdiMetafile(SharpDX.Direct2D1.GdiMetafile,System.Nullable{SharpDX.DrawingPointF})">
            <summary>	
            No documentation.	
            </summary>	
            <param name="gdiMetafile">No documentation.</param>	
            <param name="targetOffset">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::DrawGdiMetafile']/*"/>	
            <unmanaged>void ID2D1DeviceContext::DrawGdiMetafile([In] ID2D1GdiMetafile* gdiMetafile,[In, Optional] const D2D_POINT_2F* targetOffset)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.DrawBitmap(SharpDX.Direct2D1.Bitmap,System.Nullable{SharpDX.RectangleF},System.Single,SharpDX.Direct2D1.InterpolationMode,System.Nullable{SharpDX.RectangleF})">
            <summary>	
            No documentation.	
            </summary>	
            <param name="bitmap">No documentation.</param>	
            <param name="destinationRectangle">No documentation.</param>	
            <param name="opacity">No documentation.</param>	
            <param name="interpolationMode">No documentation.</param>	
            <param name="sourceRectangle">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::DrawBitmap']/*"/>	
            <unmanaged>void ID2D1DeviceContext::DrawBitmap([In] ID2D1Bitmap* bitmap,[In, Optional] const D2D_RECT_F* destinationRectangle,[In] float opacity,[In] D2D1_INTERPOLATION_MODE interpolationMode,[In, Optional] const D2D_RECT_F* sourceRectangle)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.PushLayer(SharpDX.Direct2D1.LayerParameters1@,SharpDX.Direct2D1.Layer)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="layerParameters">No documentation.</param>	
            <param name="layer">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::PushLayer']/*"/>	
            <unmanaged>void ID2D1DeviceContext::PushLayer([In] const D2D1_LAYER_PARAMETERS1* layerParameters,[In, Optional] ID2D1Layer* layer)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.InvalidateEffectInputRectangle(SharpDX.Direct2D1.Effect,System.Int32,SharpDX.RectangleF)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="effect">No documentation.</param>	
            <param name="input">No documentation.</param>	
            <param name="inputRectangle">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::InvalidateEffectInputRectangle']/*"/>	
            <unmanaged>HRESULT ID2D1DeviceContext::InvalidateEffectInputRectangle([In] ID2D1Effect* effect,[In] unsigned int input,[In] const D2D_RECT_F* inputRectangle)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.GetEffectInvalidRectangleCount(SharpDX.Direct2D1.Effect,System.Int32@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="effect">No documentation.</param>	
            <param name="rectangleCount">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::GetEffectInvalidRectangleCount']/*"/>	
            <unmanaged>HRESULT ID2D1DeviceContext::GetEffectInvalidRectangleCount([In] ID2D1Effect* effect,[Out] unsigned int* rectangleCount)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.GetEffectInvalidRectangles(SharpDX.Direct2D1.Effect,SharpDX.RectangleF[],System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="effect">No documentation.</param>	
            <param name="rectangles">No documentation.</param>	
            <param name="rectanglesCount">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::GetEffectInvalidRectangles']/*"/>	
            <unmanaged>HRESULT ID2D1DeviceContext::GetEffectInvalidRectangles([In] ID2D1Effect* effect,[Out, Buffer] D2D_RECT_F* rectangles,[In] unsigned int rectanglesCount)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.GetEffectRequiredInputRectangles(SharpDX.Direct2D1.Effect,System.Nullable{SharpDX.RectangleF},SharpDX.Direct2D1.EffectInputDescription[],SharpDX.RectangleF[],System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="renderEffect">No documentation.</param>	
            <param name="renderImageRectangle">No documentation.</param>	
            <param name="inputDescriptions">No documentation.</param>	
            <param name="requiredInputRects">No documentation.</param>	
            <param name="inputCount">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::GetEffectRequiredInputRectangles']/*"/>	
            <unmanaged>HRESULT ID2D1DeviceContext::GetEffectRequiredInputRectangles([In] ID2D1Effect* renderEffect,[In, Optional] const D2D_RECT_F* renderImageRectangle,[In, Buffer] const D2D1_EFFECT_INPUT_DESCRIPTION* inputDescriptions,[Out, Buffer] D2D_RECT_F* requiredInputRects,[In] unsigned int inputCount)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContext.FillOpacityMask(SharpDX.Direct2D1.Bitmap,SharpDX.Direct2D1.Brush,System.Nullable{SharpDX.RectangleF},System.Nullable{SharpDX.RectangleF})">
            <summary>	
            No documentation.	
            </summary>	
            <param name="opacityMask">No documentation.</param>	
            <param name="brush">No documentation.</param>	
            <param name="destinationRectangle">No documentation.</param>	
            <param name="sourceRectangle">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::FillOpacityMask']/*"/>	
            <unmanaged>void ID2D1DeviceContext::FillOpacityMask([In] ID2D1Bitmap* opacityMask,[In] ID2D1Brush* brush,[In, Optional] const D2D_RECT_F* destinationRectangle,[In, Optional] const D2D_RECT_F* sourceRectangle)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct2D1.DeviceContext.Device">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            The application can retrieve the device even if it is created from an earlier render target code-path. The application must use an <see cref="T:SharpDX.Direct2D1.DeviceContext"/> interface and then call GetDevice. Some functionality for controlling all of the resources for a set of device contexts is maintained only on an <see cref="T:SharpDX.Direct2D1.Device"/> object.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::GetDevice']/*"/>	
            <unmanaged>GetDevice</unmanaged>	
            <unmanaged>void ID2D1DeviceContext::GetDevice([Out] ID2D1Device** device)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.DeviceContext.Target">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            If a target is not associated with the device context, target will contain <c>null</c> when the methods returns.If the currently selected target is a bitmap rather than a command list, the application can gain access to the initial bitmaps created by using one of the following methods:CreateHwndRenderTarget   CreateDxgiSurfaceRenderTarget   CreateWicBitmapRenderTarget   CreateDCRenderTarget   CreateCompatibleRenderTargetIt is not possible for an application to destroy these bitmaps.  All of these bitmaps are bindable as bitmap targets.  However not all of these bitmaps can be used as bitmap sources for  <see cref="T:SharpDX.Direct2D1.RenderTarget"/> methods.CreateDxgiSurfaceRenderTarget will create a bitmap that is usable as a bitmap source if the DXGI surface is bindable as a shader resource view.CreateCompatibleRenderTarget will always create bitmaps that are usable as a bitmap source.<see cref="M:SharpDX.Direct2D1.RenderTarget.BeginDraw"/> will copy from the <see cref="T:System.IntPtr"/> to the original bitmap associated with it.  <see cref="M:SharpDX.Direct2D1.RenderTarget.EndDraw(System.Int64@,System.Int64@)"/> will copy from the original bitmap to the <see cref="T:System.IntPtr"/>.<see cref="T:SharpDX.WIC.Bitmap"/> objects will be locked in the following circumstances:BeginDraw has been called and the currently selected target bitmap is a WIC bitmap. A WIC bitmap is set as the target of a device context after BeginDraw has been called and before EndDraw has been called. Any of the ID2D1Bitmap::Copy* methods are called with a WIC bitmap as either the source or destination.IWICBitmap objects will be unlocked in the following circumstances:EndDraw is called and the currently selected target bitmap is a WIC bitmap. A WIC bitmap is removed as the target of a device context between the calls to BeginDraw and EndDraw. Any of the ID2D1Bitmap::Copy* methods are called with a WIC bitmap as either the source or destination.Direct2D will only lock bitmaps that are not currently locked.Calling QueryInterface for <see cref="T:SharpDX.Direct2D1.GdiInteropRenderTarget"/> will always succeed.  <see cref="M:SharpDX.Direct2D1.GdiInteropRenderTarget.GetDC(SharpDX.Direct2D1.DeviceContextInitializeMode)"/> will return a device context corresponding to the currently bound target bitmap.  GetDC will fail if the target bitmap was not created with the GDI_COMPATIBLE flag set.<see cref="M:SharpDX.Direct2D1.WindowRenderTarget.Resize(SharpDX.DrawingSize)"/> will return <see cref="F:SharpDX.DXGI.DXGIError.InvalidCall"/> if there are any outstanding references to the original target bitmap associated with the render target.Although the target can be a command list, it cannot be any other type of image. It cannot be the output image of an effect.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::GetTarget']/*"/>	
            <unmanaged>GetTarget</unmanaged>	
            <unmanaged>void ID2D1DeviceContext::GetTarget([Out, Optional] ID2D1Image** image)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.DeviceContext.RenderingControls">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::GetRenderingControls']/*"/>	
            <unmanaged>GetRenderingControls</unmanaged>	
            <unmanaged>void ID2D1DeviceContext::GetRenderingControls([Out] D2D1_RENDERING_CONTROLS* renderingControls)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.DeviceContext.PrimitiveBlend">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::GetPrimitiveBlend']/*"/>	
            <unmanaged>GetPrimitiveBlend</unmanaged>	
            <unmanaged>D2D1_PRIMITIVE_BLEND ID2D1DeviceContext::GetPrimitiveBlend()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.DeviceContext.UnitMode">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DeviceContext::GetUnitMode']/*"/>	
            <unmanaged>GetUnitMode</unmanaged>	
            <unmanaged>D2D1_UNIT_MODE ID2D1DeviceContext::GetUnitMode()</unmanaged>
        </member>
        <member name="T:SharpDX.WIC.BIMIptcDigestProperties">
            <summary>	
            Specifies the identifiers of the metadata items in an 8BIM IPTC digest metadata block.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WIC8BIMIptcDigestProperties']/*"/>	
            <unmanaged>WIC8BIMIptcDigestProperties</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BIMIptcDigestProperties.PString">
            <summary>	
            <para>[VT_LPSTR] A name that identifies the 8BIM block.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WIC8BIMIptcDigestPString']/*"/>	
            <unmanaged>WIC8BIMIptcDigestPString</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BIMIptcDigestProperties.IptcDigest">
            <summary>	
            <para>[VT_BLOB] The embedded IPTC digest value.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WIC8BIMIptcDigestIptcDigest']/*"/>	
            <unmanaged>WIC8BIMIptcDigestIptcDigest</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.BIMIptcProperties">
            <summary>	
            Specifies the identifiers of the metadata items in an 8BIM IPTC block.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WIC8BIMIptcProperties']/*"/>	
            <unmanaged>WIC8BIMIptcProperties</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BIMIptcProperties.PString">
            <summary>	
            <para>[VT_LPSTR] A name that identifies the 8BIM block.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WIC8BIMIptcPString']/*"/>	
            <unmanaged>WIC8BIMIptcPString</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BIMIptcProperties.EmbeddedIPTC">
            <summary>	
            <para>[VT_UNKNOWN] The IPTC block embedded in this 8BIM IPTC block.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WIC8BIMIptcEmbeddedIPTC']/*"/>	
            <unmanaged>WIC8BIMIptcEmbeddedIPTC</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.BIMResolutionInfoProperties">
            <summary>	
            Specifies the identifiers of the metadata items in an 8BIMResolutionInfo block.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WIC8BIMResolutionInfoProperties']/*"/>	
            <unmanaged>WIC8BIMResolutionInfoProperties</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BIMResolutionInfoProperties.PString">
            <summary>	
            <para>[VT_LPSTR] A name that identifies the 8BIM block.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WIC8BIMResolutionInfoPString']/*"/>	
            <unmanaged>WIC8BIMResolutionInfoPString</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BIMResolutionInfoProperties.HResolution">
            <summary>	
            <para>[VT_UI4] The horizontal resolution of the image.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WIC8BIMResolutionInfoHResolution']/*"/>	
            <unmanaged>WIC8BIMResolutionInfoHResolution</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BIMResolutionInfoProperties.HResolutionUnit">
            <summary>	
            <para>[VT_UI2] The units that the horizontal resolution is specified in; a 1 indicates pixels per inch and a 2 indicates pixels per centimeter.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WIC8BIMResolutionInfoHResolutionUnit']/*"/>	
            <unmanaged>WIC8BIMResolutionInfoHResolutionUnit</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BIMResolutionInfoProperties.WidthUnit">
            <summary>	
            <para>[VT_UI2] The units that the image width is specified in; a 1 indicates inches, a 2 indicates centimeters, a 3 indicates points, a 4 specifies picas, and a 5 specifies columns.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WIC8BIMResolutionInfoWidthUnit']/*"/>	
            <unmanaged>WIC8BIMResolutionInfoWidthUnit</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BIMResolutionInfoProperties.VResolution">
            <summary>	
            <para>[VT_UI4] The vertical resolution of the image.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WIC8BIMResolutionInfoVResolution']/*"/>	
            <unmanaged>WIC8BIMResolutionInfoVResolution</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BIMResolutionInfoProperties.VResolutionUnit">
            <summary>	
            <para>[VT_UI2] The units that the vertical resolution is specified in; a 1 indicates pixels per inch and a 2 indicates pixels per centimeter.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WIC8BIMResolutionInfoVResolutionUnit']/*"/>	
            <unmanaged>WIC8BIMResolutionInfoVResolutionUnit</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BIMResolutionInfoProperties.HeightUnit">
            <summary>	
            <para>[VT_UI2] The units that the image height is specified in; a 1 indicates inches, a 2 indicates centimeters, a 3 indicates points, a 4 specifies picas, and a 5 specifies columns.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WIC8BIMResolutionInfoHeightUnit']/*"/>	
            <unmanaged>WIC8BIMResolutionInfoHeightUnit</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.BitmapAlphaChannelOption">
            <summary>	
            Specifies the desired alpha channel usage.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapAlphaChannelOption']/*"/>	
            <unmanaged>WICBitmapAlphaChannelOption</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapAlphaChannelOption.UseAlpha">
            <summary>	
            <para>Use alpha channel.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapUseAlpha']/*"/>	
            <unmanaged>WICBitmapUseAlpha</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapAlphaChannelOption.UsePremultipliedAlpha">
            <summary>	
            <para>Use a pre-multiplied alpha channel.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapUsePremultipliedAlpha']/*"/>	
            <unmanaged>WICBitmapUsePremultipliedAlpha</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapAlphaChannelOption.IgnoreAlpha">
            <summary>	
            <para>Ignore alpha channel.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapIgnoreAlpha']/*"/>	
            <unmanaged>WICBitmapIgnoreAlpha</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.BitmapCreateCacheOption">
            <summary>	
            Specifies the desired cache usage.	
            </summary>	
            <remarks>	
            The CreateBitmap of the <see cref="T:SharpDX.WIC.ImagingFactory"/> interface does not support <see cref="F:SharpDX.WIC.BitmapCreateCacheOption.NoCache"/> when the pixelFormat is a native pixel format provided by Windows Imaging Component (WIC).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapCreateCacheOption']/*"/>	
            <unmanaged>WICBitmapCreateCacheOption</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapCreateCacheOption.NoCache">
            <summary>	
            <para>Do not cache the bitmap.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapNoCache']/*"/>	
            <unmanaged>WICBitmapNoCache</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapCreateCacheOption.CacheOnDemand">
            <summary>	
            <para>Cache the bitmap when needed.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapCacheOnDemand']/*"/>	
            <unmanaged>WICBitmapCacheOnDemand</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapCreateCacheOption.CacheOnLoad">
            <summary>	
            <para>Cache the bitmap at initialization.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapCacheOnLoad']/*"/>	
            <unmanaged>WICBitmapCacheOnLoad</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.BitmapDecoderCapabilities">
            <summary>	
            Specifies the capabilities of the decoder.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapDecoderCapabilities']/*"/>	
            <unmanaged>WICBitmapDecoderCapabilities</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapDecoderCapabilities.SameEncoder">
            <summary>	
            <para>Decoder recognizes the image was encoded with an encoder produced by the same vendor. </para>	
             <para></para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapDecoderCapabilitySameEncoder']/*"/>	
            <unmanaged>WICBitmapDecoderCapabilitySameEncoder</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapDecoderCapabilities.CanDecodeAllImages">
            <summary>	
            <para>Decoder can decode all the images within an image container.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapDecoderCapabilityCanDecodeAllImages']/*"/>	
            <unmanaged>WICBitmapDecoderCapabilityCanDecodeAllImages</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapDecoderCapabilities.CanDecodeSomeImages">
            <summary>	
            <para>Decoder can decode some of the images within an image container.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapDecoderCapabilityCanDecodeSomeImages']/*"/>	
            <unmanaged>WICBitmapDecoderCapabilityCanDecodeSomeImages</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapDecoderCapabilities.CanEnumerateMetadata">
            <summary>	
            <para>Decoder can enumerate the metadata blocks within a container format.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapDecoderCapabilityCanEnumerateMetadata']/*"/>	
            <unmanaged>WICBitmapDecoderCapabilityCanEnumerateMetadata</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapDecoderCapabilities.CanDecodeThumbnail">
            <summary>	
            <para>Decoder can find and decode a thumbnail.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapDecoderCapabilityCanDecodeThumbnail']/*"/>	
            <unmanaged>WICBitmapDecoderCapabilityCanDecodeThumbnail</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapDecoderCapabilities.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.BitmapDitherType">
            <summary>	
            Specifies the type of dither algorithm to apply when converting between image formats.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapDitherType']/*"/>	
            <unmanaged>WICBitmapDitherType</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapDitherType.None">
            <summary>	
            <para>A solid color algorithm without dither.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapDitherTypeNone']/*"/>	
            <unmanaged>WICBitmapDitherTypeNone</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapDitherType.Solid">
            <summary>	
            <para>A solid color algorithm without dither.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapDitherTypeSolid']/*"/>	
            <unmanaged>WICBitmapDitherTypeSolid</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapDitherType.Ordered4x4">
            <summary>	
            <para>A 4x4 ordered dither algorithm. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapDitherTypeOrdered4x4']/*"/>	
            <unmanaged>WICBitmapDitherTypeOrdered4x4</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapDitherType.Ordered8x8">
            <summary>	
            <para>An 8x8 ordered dither algorithm.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapDitherTypeOrdered8x8']/*"/>	
            <unmanaged>WICBitmapDitherTypeOrdered8x8</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapDitherType.Ordered16x16">
            <summary>	
            <para>A 16x16 ordered dither algorithm.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapDitherTypeOrdered16x16']/*"/>	
            <unmanaged>WICBitmapDitherTypeOrdered16x16</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapDitherType.Spiral4x4">
            <summary>	
            <para>A 4x4 spiral dither algorithm.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapDitherTypeSpiral4x4']/*"/>	
            <unmanaged>WICBitmapDitherTypeSpiral4x4</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapDitherType.Spiral8x8">
            <summary>	
            <para>An 8x8 spiral dither algorithm.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapDitherTypeSpiral8x8']/*"/>	
            <unmanaged>WICBitmapDitherTypeSpiral8x8</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapDitherType.DualSpiral4x4">
            <summary>	
            <para>A 4x4 dual spiral dither algorithm.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapDitherTypeDualSpiral4x4']/*"/>	
            <unmanaged>WICBitmapDitherTypeDualSpiral4x4</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapDitherType.DualSpiral8x8">
            <summary>	
            <para>An 8x8 dual spiral dither algorithm.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapDitherTypeDualSpiral8x8']/*"/>	
            <unmanaged>WICBitmapDitherTypeDualSpiral8x8</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapDitherType.ErrorDiffusion">
            <summary>	
            <para>An error diffusion algorithm.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapDitherTypeErrorDiffusion']/*"/>	
            <unmanaged>WICBitmapDitherTypeErrorDiffusion</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.BitmapEncoderCacheOption">
            <summary>	
            Specifies the cache options available for an encoder.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapEncoderCacheOption']/*"/>	
            <unmanaged>WICBitmapEncoderCacheOption</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapEncoderCacheOption.InMemory">
            <summary>	
            <para>The encoder is cached in memory. This option is not supported.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapEncoderCacheInMemory']/*"/>	
            <unmanaged>WICBitmapEncoderCacheInMemory</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapEncoderCacheOption.TempFile">
            <summary>	
            <para>The encoder is cached to a temporary file. This option is not supported.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapEncoderCacheTempFile']/*"/>	
            <unmanaged>WICBitmapEncoderCacheTempFile</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapEncoderCacheOption.NoCache">
            <summary>	
            <para>The encoder is not cached.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapEncoderNoCache']/*"/>	
            <unmanaged>WICBitmapEncoderNoCache</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.BitmapInterpolationMode">
            <summary>	
            Specifies the sampling or filtering mode to use when scaling an image.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapInterpolationMode']/*"/>	
            <unmanaged>WICBitmapInterpolationMode</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapInterpolationMode.NearestNeighbor">
            <summary>	
            <para>A nearest neighbor interpolation algorithm. Also known as nearest pixel or point interpolation. </para>	
             <para>The output pixel is assigned the value of the pixel that the point falls within. No other pixels are considered.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapInterpolationModeNearestNeighbor']/*"/>	
            <unmanaged>WICBitmapInterpolationModeNearestNeighbor</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapInterpolationMode.Linear">
            <summary>	
            <para>A bilinear interpolation algorithm. </para>	
             <para>The output pixel values are computed as a weighted average of the nearest four pixels in a 2x2 grid.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapInterpolationModeLinear']/*"/>	
            <unmanaged>WICBitmapInterpolationModeLinear</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapInterpolationMode.Cubic">
            <summary>	
            <para>A bicubic interpolation algorithm. </para>	
             <para>Destination pixel values are computed as a weighted average of the nearest sixteen pixels in a 4x4 grid. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapInterpolationModeCubic']/*"/>	
            <unmanaged>WICBitmapInterpolationModeCubic</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapInterpolationMode.Fant">
            <summary>	
            <para>A Fant resampling algorithm. </para>	
             <para>Destination pixel values are computed as a weighted average of the all the pixels that map to the new pixel.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapInterpolationModeFant']/*"/>	
            <unmanaged>WICBitmapInterpolationModeFant</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.BitmapLockFlags">
            <summary>	
            Specifies access to an <see cref="T:SharpDX.WIC.Bitmap"/>.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapLockFlags']/*"/>	
            <unmanaged>WICBitmapLockFlags</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapLockFlags.Read">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapLockRead']/*"/>	
            <unmanaged>WICBitmapLockRead</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapLockFlags.Write">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapLockWrite']/*"/>	
            <unmanaged>WICBitmapLockWrite</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.BitmapPaletteType">
            <summary>	
            Specifies the type of palette used for an indexed image format.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapPaletteType']/*"/>	
            <unmanaged>WICBitmapPaletteType</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapPaletteType.Custom">
            <summary>	
            <para>An arbitrary custom palette provided by caller.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapPaletteTypeCustom']/*"/>	
            <unmanaged>WICBitmapPaletteTypeCustom</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapPaletteType.MedianCut">
            <summary>	
            <para>An optimal palette generated using a median-cut algorithm. Derived from the colors in an image.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapPaletteTypeMedianCut']/*"/>	
            <unmanaged>WICBitmapPaletteTypeMedianCut</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapPaletteType.FixedBW">
            <summary>	
            <para>A black and white palette.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapPaletteTypeFixedBW']/*"/>	
            <unmanaged>WICBitmapPaletteTypeFixedBW</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapPaletteType.FixedHalftone8">
            <summary>	
            <para>A palette that has its 8-color on-off primaries and the 16 system colors added. With duplicates removed, 16 colors are available.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapPaletteTypeFixedHalftone8']/*"/>	
            <unmanaged>WICBitmapPaletteTypeFixedHalftone8</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapPaletteType.FixedHalftone27">
            <summary>	
            <para>A palette that has 3 intensity levels of each primary: 27-color on-off primaries and the 16 system colors added. With duplicates removed, 35 colors are available.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapPaletteTypeFixedHalftone27']/*"/>	
            <unmanaged>WICBitmapPaletteTypeFixedHalftone27</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapPaletteType.FixedHalftone64">
            <summary>	
            <para>A palette that has 4 intensity levels of each primary: 64-color on-off primaries and the 16 system colors added. With duplicates removed, 72 colors are available.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapPaletteTypeFixedHalftone64']/*"/>	
            <unmanaged>WICBitmapPaletteTypeFixedHalftone64</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapPaletteType.FixedHalftone125">
            <summary>	
            <para>A palette that has 5 intensity levels of each primary: 125-color on-off primaries and the 16 system colors added. With duplicates removed, 133 colors are available.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapPaletteTypeFixedHalftone125']/*"/>	
            <unmanaged>WICBitmapPaletteTypeFixedHalftone125</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapPaletteType.FixedHalftone216">
            <summary>	
            <para>A palette that has 6 intensity levels of each primary: 216-color on-off primaries and the 16 system colors added. With duplicates removed, 224 colors are available. This is the same as WICBitmapPaletteFixedHalftoneWeb.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapPaletteTypeFixedHalftone216']/*"/>	
            <unmanaged>WICBitmapPaletteTypeFixedHalftone216</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapPaletteType.FixedWebPalette">
            <summary>	
            <para>A palette that has 6 intensity levels of each primary: 216-color on-off primaries and the 16 system colors added. With duplicates removed, 224 colors are available. This is the same as <see cref="F:SharpDX.WIC.BitmapPaletteType.FixedHalftone216"/>.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapPaletteTypeFixedWebPalette']/*"/>	
            <unmanaged>WICBitmapPaletteTypeFixedWebPalette</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapPaletteType.FixedHalftone252">
            <summary>	
            <para>A palette that has its 252-color on-off primaries and the 16 system colors added. With duplicates removed, 256 colors are available.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapPaletteTypeFixedHalftone252']/*"/>	
            <unmanaged>WICBitmapPaletteTypeFixedHalftone252</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapPaletteType.FixedHalftone256">
            <summary>	
            <para>A palette that has its 256-color on-off primaries and the 16 system colors added. With duplicates removed, 256 colors are available.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapPaletteTypeFixedHalftone256']/*"/>	
            <unmanaged>WICBitmapPaletteTypeFixedHalftone256</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapPaletteType.FixedGray4">
            <summary>	
            <para>A palette that has 4 shades of gray.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapPaletteTypeFixedGray4']/*"/>	
            <unmanaged>WICBitmapPaletteTypeFixedGray4</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapPaletteType.FixedGray16">
            <summary>	
            <para>A palette that has 16 shades of gray.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapPaletteTypeFixedGray16']/*"/>	
            <unmanaged>WICBitmapPaletteTypeFixedGray16</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapPaletteType.FixedGray256">
            <summary>	
            <para>A palette that has 256 shades of gray.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapPaletteTypeFixedGray256']/*"/>	
            <unmanaged>WICBitmapPaletteTypeFixedGray256</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.BitmapTransformOptions">
            <summary>	
            Specifies the flip and rotation transforms.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapTransformOptions']/*"/>	
            <unmanaged>WICBitmapTransformOptions</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapTransformOptions.Rotate0">
            <summary>	
            <para>A rotation of 0 degrees.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapTransformRotate0']/*"/>	
            <unmanaged>WICBitmapTransformRotate0</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapTransformOptions.Rotate90">
            <summary>	
            <para>A clockwise rotation of 90 degrees.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapTransformRotate90']/*"/>	
            <unmanaged>WICBitmapTransformRotate90</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapTransformOptions.Rotate180">
            <summary>	
            <para>A clockwise rotation of 180 degrees.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapTransformRotate180']/*"/>	
            <unmanaged>WICBitmapTransformRotate180</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapTransformOptions.Rotate270">
            <summary>	
            <para>A clockwise rotation of 270 degrees.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapTransformRotate270']/*"/>	
            <unmanaged>WICBitmapTransformRotate270</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapTransformOptions.FlipHorizontal">
            <summary>	
            <para>A horizontal flip. Pixels are flipped around the vertical y-axis.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapTransformFlipHorizontal']/*"/>	
            <unmanaged>WICBitmapTransformFlipHorizontal</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapTransformOptions.FlipVertical">
            <summary>	
            <para>A vertical flip. Pixels are flipped around the horizontal x-axis.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapTransformFlipVertical']/*"/>	
            <unmanaged>WICBitmapTransformFlipVertical</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.ColorContextType">
            <summary>	
            Specifies the color context types.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICColorContextType']/*"/>	
            <unmanaged>WICColorContextType</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.ColorContextType.Uninitialized">
            <summary>	
            <para>An uninitialized color context.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICColorContextUninitialized']/*"/>	
            <unmanaged>WICColorContextUninitialized</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.ColorContextType.Profile">
            <summary>	
            <para>A color context profile.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICColorContextProfile']/*"/>	
            <unmanaged>WICColorContextProfile</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.ColorContextType.ExifColorSpace">
            <summary>	
            <para>An EXIF color space color context.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICColorContextExifColorSpace']/*"/>	
            <unmanaged>WICColorContextExifColorSpace</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.ComponentEnumerateOptions">
            <summary>	
            Specifies component enumeration options.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICComponentEnumerateOptions']/*"/>	
            <unmanaged>WICComponentEnumerateOptions</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.ComponentEnumerateOptions.Default">
            <summary>	
            <para>Enumerate signed components.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICComponentEnumerateDefault']/*"/>	
            <unmanaged>WICComponentEnumerateDefault</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.ComponentEnumerateOptions.Refresh">
            <summary>	
            <para>Force a read of the registry when enumerating components.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICComponentEnumerateRefresh']/*"/>	
            <unmanaged>WICComponentEnumerateRefresh</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.ComponentEnumerateOptions.Disabled">
            <summary>	
            <para>Enumerate disabled components.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICComponentEnumerateDisabled']/*"/>	
            <unmanaged>WICComponentEnumerateDisabled</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.ComponentEnumerateOptions.Unsigned">
            <summary>	
            <para>Enumerate unsigned components.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICComponentEnumerateUnsigned']/*"/>	
            <unmanaged>WICComponentEnumerateUnsigned</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.ComponentEnumerateOptions.BuiltInOnly">
            <summary>	
            <para>Enumerate only built in components.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICComponentEnumerateBuiltInOnly']/*"/>	
            <unmanaged>WICComponentEnumerateBuiltInOnly</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.ComponentSigning">
            <summary>	
            Specifies the component signing status.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICComponentSigning']/*"/>	
            <unmanaged>WICComponentSigning</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.ComponentSigning.Signed">
            <summary>	
            <para>A signed component.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICComponentSigned']/*"/>	
            <unmanaged>WICComponentSigned</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.ComponentSigning.Unsigned">
            <summary>	
            <para>An unsigned component</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICComponentUnsigned']/*"/>	
            <unmanaged>WICComponentUnsigned</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.ComponentSigning.Safe">
            <summary>	
            <para>A component is safe. </para>	
             <para>Components that do not have a binary component to sign, such as a pixel format, should return this value.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICComponentSafe']/*"/>	
            <unmanaged>WICComponentSafe</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.ComponentSigning.Disabled">
            <summary>	
            <para>A component has been disabled.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICComponentDisabled']/*"/>	
            <unmanaged>WICComponentDisabled</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.ComponentType">
            <summary>	
            Specifies the type of Windows Imaging Component (WIC) component.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICComponentType']/*"/>	
            <unmanaged>WICComponentType</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.ComponentType.Decoder">
            <summary>	
            <para>A WIC decoder.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICDecoder']/*"/>	
            <unmanaged>WICDecoder</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.ComponentType.Encoder">
            <summary>	
            <para>A WIC encoder.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICEncoder']/*"/>	
            <unmanaged>WICEncoder</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.ComponentType.PixelFormatConverter">
            <summary>	
            <para>A WIC pixel converter.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPixelFormatConverter']/*"/>	
            <unmanaged>WICPixelFormatConverter</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.ComponentType.MetadataReader">
            <summary>	
            <para>A WIC metadata reader.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICMetadataReader']/*"/>	
            <unmanaged>WICMetadataReader</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.ComponentType.MetadataWriter">
            <summary>	
            <para>A WIC metadata writer.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICMetadataWriter']/*"/>	
            <unmanaged>WICMetadataWriter</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.ComponentType.PixelFormat">
            <summary>	
            <para>A WIC pixel format.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPixelFormat']/*"/>	
            <unmanaged>WICPixelFormat</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.ComponentType.AllComponents">
            <summary>	
            <para>All WIC components.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICAllComponents']/*"/>	
            <unmanaged>WICAllComponents</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.DecodeOptions">
            <summary>	
            Specifies decode options.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICDecodeOptions']/*"/>	
            <unmanaged>WICDecodeOptions</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.DecodeOptions.CacheOnDemand">
            <summary>	
            <para>Cache metadata when needed.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICDecodeMetadataCacheOnDemand']/*"/>	
            <unmanaged>WICDecodeMetadataCacheOnDemand</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.DecodeOptions.CacheOnLoad">
            <summary>	
            <para>Cache metadata when decoder is loaded.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICDecodeMetadataCacheOnLoad']/*"/>	
            <unmanaged>WICDecodeMetadataCacheOnLoad</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.GifApplicationExtensionProperties">
            <summary>	
            Specifies the application extension metadata properties for a Graphics Interchange Format (GIF) image.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICGifApplicationExtensionProperties']/*"/>	
            <unmanaged>WICGifApplicationExtensionProperties</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.GifApplicationExtensionProperties.Application">
            <summary>	
            <para>[VT_UI1 | VT_VECTOR] Indicates a string that identifies the application.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICGifApplicationExtensionApplication']/*"/>	
            <unmanaged>WICGifApplicationExtensionApplication</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.GifApplicationExtensionProperties.Data">
            <summary>	
            <para>[VT_UI1 | VT_VECTOR] Indicates data that is exposed by the application.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICGifApplicationExtensionData']/*"/>	
            <unmanaged>WICGifApplicationExtensionData</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.GifCommentExtensionProperties">
            <summary>	
            Specifies the comment extension metadata properties for a Graphics Interchange Format (GIF) image.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICGifCommentExtensionProperties']/*"/>	
            <unmanaged>WICGifCommentExtensionProperties</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.GifCommentExtensionProperties.Text">
            <summary>	
            <para>[VT_LPSTR] Indicates the comment text.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICGifCommentExtensionText']/*"/>	
            <unmanaged>WICGifCommentExtensionText</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.GifGraphicControlExtensionProperties">
            <summary>	
            Specifies the graphic control extension metadata properties that define the transitions between each frame animation for Graphics Interchange Format (GIF) images.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICGifGraphicControlExtensionProperties']/*"/>	
            <unmanaged>WICGifGraphicControlExtensionProperties</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.GifGraphicControlExtensionProperties.Disposal">
            <summary>	
            <para>[VT_UI1] Indicates  the disposal requirements. 0 - no disposal, 1 - do not dispose, 2 - restore to background color, 3 - restore to previous.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICGifGraphicControlExtensionDisposal']/*"/>	
            <unmanaged>WICGifGraphicControlExtensionDisposal</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.GifGraphicControlExtensionProperties.UserInputFlag">
            <summary>	
            <para>[VT_BOOL] Indicates the user input flag. TRUE if user input should advance to the next frame; otherwise, <see cref="F:SharpDX.Result.False"/>.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICGifGraphicControlExtensionUserInputFlag']/*"/>	
            <unmanaged>WICGifGraphicControlExtensionUserInputFlag</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.GifGraphicControlExtensionProperties.TransparencyFlag">
            <summary>	
            <para>[VT_BOOL] Indicates the transparency flag. TRUE if a transparent color in is in the color table for this frame; otherwise, <see cref="F:SharpDX.Result.False"/>.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICGifGraphicControlExtensionTransparencyFlag']/*"/>	
            <unmanaged>WICGifGraphicControlExtensionTransparencyFlag</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.GifGraphicControlExtensionProperties.Delay">
            <summary>	
            <para>[VT_UI2] Indicates  how long to display the next frame before advancing to the next frame, in units of 1/100th of a second.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICGifGraphicControlExtensionDelay']/*"/>	
            <unmanaged>WICGifGraphicControlExtensionDelay</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.GifGraphicControlExtensionProperties.TransparentColorIndex">
            <summary>	
            <para>[VT_UI1] Indicates which color in the palette should be treated as transparent.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICGifGraphicControlExtensionTransparentColorIndex']/*"/>	
            <unmanaged>WICGifGraphicControlExtensionTransparentColorIndex</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.GifImageDescriptorProperties">
            <summary>	
            Specifies the image descriptor metadata properties for  Graphics Interchange Format (GIF) frames.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICGifImageDescriptorProperties']/*"/>	
            <unmanaged>WICGifImageDescriptorProperties</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.GifImageDescriptorProperties.Left">
            <summary>	
            <para>[VT_UI2] Indicates the X offset at which to locate this frame within the logical screen.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICGifImageDescriptorLeft']/*"/>	
            <unmanaged>WICGifImageDescriptorLeft</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.GifImageDescriptorProperties.Top">
            <summary>	
            <para>[VT_UI2] Indicates the Y offset at which to locate this frame within the logical screen.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICGifImageDescriptorTop']/*"/>	
            <unmanaged>WICGifImageDescriptorTop</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.GifImageDescriptorProperties.Width">
            <summary>	
            <para>[VT_UI2] Indicates width of this frame, in pixels.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICGifImageDescriptorWidth']/*"/>	
            <unmanaged>WICGifImageDescriptorWidth</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.GifImageDescriptorProperties.Height">
            <summary>	
            <para>[VT_UI2] Indicates height of this frame, in pixels.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICGifImageDescriptorHeight']/*"/>	
            <unmanaged>WICGifImageDescriptorHeight</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.GifImageDescriptorProperties.LocalColorTableFlag">
            <summary>	
            <para>[VT_BOOL] Indicates the local color table flag. TRUE if global color table is present; otherwise, <see cref="F:SharpDX.Result.False"/>.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICGifImageDescriptorLocalColorTableFlag']/*"/>	
            <unmanaged>WICGifImageDescriptorLocalColorTableFlag</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.GifImageDescriptorProperties.InterlaceFlag">
            <summary>	
            <para>[VT_BOOL] Indicates the interlace flag. TRUE if image is interlaced; otherwise, <see cref="F:SharpDX.Result.False"/>.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICGifImageDescriptorInterlaceFlag']/*"/>	
            <unmanaged>WICGifImageDescriptorInterlaceFlag</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.GifImageDescriptorProperties.SortFlag">
            <summary>	
            <para>[VT_BOOL] Indicates the sorted color table flag. TRUE if the color table is sorted from most frequently to least frequently used color; otherwise, <see cref="F:SharpDX.Result.False"/>.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICGifImageDescriptorSortFlag']/*"/>	
            <unmanaged>WICGifImageDescriptorSortFlag</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.GifImageDescriptorProperties.LocalColorTableSize">
            <summary>	
            <para>[VT_UI1] Indicates the value used to calculate the number of bytes contained in the global color table. </para>	
             <para>To calculate the actual size of the color table, raise 2 to the value of the field + 1.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICGifImageDescriptorLocalColorTableSize']/*"/>	
            <unmanaged>WICGifImageDescriptorLocalColorTableSize</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.GifLogicalScreenDescriptorProperties">
            <summary>	
            Specifies the logical screen descriptor properties for Graphics Interchange Format (GIF) metadata.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICGifLogicalScreenDescriptorProperties']/*"/>	
            <unmanaged>WICGifLogicalScreenDescriptorProperties</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.GifLogicalScreenDescriptorProperties.Signature">
            <summary>	
            <para> [VT_UI1 | VT_VECTOR] Indicates the signature property.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICGifLogicalScreenSignature']/*"/>	
            <unmanaged>WICGifLogicalScreenSignature</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.GifLogicalScreenDescriptorProperties.Width">
            <summary>	
            <para>[VT_UI2] Indicates the width in pixels. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICGifLogicalScreenDescriptorWidth']/*"/>	
            <unmanaged>WICGifLogicalScreenDescriptorWidth</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.GifLogicalScreenDescriptorProperties.Height">
            <summary>	
            <para>[VT_UI2] Indicates the height in pixels. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICGifLogicalScreenDescriptorHeight']/*"/>	
            <unmanaged>WICGifLogicalScreenDescriptorHeight</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.GifLogicalScreenDescriptorProperties.GlobalColorTableFlag">
            <summary>	
            <para>[VT_BOOL] Indicates the  global color table flag. TRUE if a global color table is present; otherwise, <see cref="F:SharpDX.Result.False"/>.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICGifLogicalScreenDescriptorGlobalColorTableFlag']/*"/>	
            <unmanaged>WICGifLogicalScreenDescriptorGlobalColorTableFlag</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.GifLogicalScreenDescriptorProperties.ColorResolution">
            <summary>	
            <para>[VT_UI1] Indicates the color resolution in bits per pixel.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICGifLogicalScreenDescriptorColorResolution']/*"/>	
            <unmanaged>WICGifLogicalScreenDescriptorColorResolution</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.GifLogicalScreenDescriptorProperties.SortFlag">
            <summary>	
            <para>[VT_BOOL] Indicates the sorted color table flag. TRUE if the table is sorted; otherwise, <see cref="F:SharpDX.Result.False"/>.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICGifLogicalScreenDescriptorSortFlag']/*"/>	
            <unmanaged>WICGifLogicalScreenDescriptorSortFlag</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.GifLogicalScreenDescriptorProperties.GlobalColorTableSize">
            <summary>	
            <para>[VT_UI1] Indicates the value used to calculate the number of bytes contained in the global color table. </para>	
             <para>To calculate the actual size of the color table, raise 2 to the value of the field + 1.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICGifLogicalScreenDescriptorGlobalColorTableSize']/*"/>	
            <unmanaged>WICGifLogicalScreenDescriptorGlobalColorTableSize</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.GifLogicalScreenDescriptorProperties.BackgroundColorIndex">
            <summary>	
            <para>[VT_UI1] Indicates the index within the color table to use for the background (pixels not defined in the image).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICGifLogicalScreenDescriptorBackgroundColorIndex']/*"/>	
            <unmanaged>WICGifLogicalScreenDescriptorBackgroundColorIndex</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.GifLogicalScreenDescriptorProperties.PixelAspectRatio">
            <summary>	
            <para>[VT_UI1] Indicates the factor used to compute an approximation of the aspect ratio.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICGifLogicalScreenDescriptorPixelAspectRatio']/*"/>	
            <unmanaged>WICGifLogicalScreenDescriptorPixelAspectRatio</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.JpegChrominanceProperties">
            <summary>	
            Specifies the JPEG chrominance table property.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICJpegChrominanceProperties']/*"/>	
            <unmanaged>WICJpegChrominanceProperties</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.JpegChrominanceProperties.Table">
            <summary>	
            <para>[VT_UI2|VT_VECTOR] Indicates the metadata property is a chrominance table.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICJpegChrominanceTable']/*"/>	
            <unmanaged>WICJpegChrominanceTable</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.JpegCommentProperties">
            <summary>	
            Specifies the JPEG comment properties.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICJpegCommentProperties']/*"/>	
            <unmanaged>WICJpegCommentProperties</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.JpegCommentProperties.Text">
            <summary>	
            <para>Indicates the metadata property is comment text.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICJpegCommentText']/*"/>	
            <unmanaged>WICJpegCommentText</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.JpegLuminanceProperties">
            <summary>	
            Specifies the JPEG luminance table property.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICJpegLuminanceProperties']/*"/>	
            <unmanaged>WICJpegLuminanceProperties</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.JpegLuminanceProperties.Table">
            <summary>	
            <para>[VT_UI2|VT_VECTOR] Indicates the metadata property is a luminance table.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICJpegLuminanceTable']/*"/>	
            <unmanaged>WICJpegLuminanceTable</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.JpegYCrCbSubsamplingOption">
            <summary>	
            Specifies the JPEG YCrCB subsampling options.	
            </summary>	
            <remarks>	
            The native JPEG encoder uses <see cref="F:SharpDX.WIC.JpegYCrCbSubsamplingOption.Mode420"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICJpegYCrCbSubsamplingOption']/*"/>	
            <unmanaged>WICJpegYCrCbSubsamplingOption</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.JpegYCrCbSubsamplingOption.Default">
            <summary>	
            <para>The default subsampling option. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICJpegYCrCbSubsamplingDefault']/*"/>	
            <unmanaged>WICJpegYCrCbSubsamplingDefault</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.JpegYCrCbSubsamplingOption.Mode420">
            <summary>	
            <para>Subsampling option that uses both horizontal and vertical decimation.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICJpegYCrCbSubsampling420']/*"/>	
            <unmanaged>WICJpegYCrCbSubsampling420</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.JpegYCrCbSubsamplingOption.Mode422">
            <summary>	
            <para>Subsampling option that uses horizontal decimation  .</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICJpegYCrCbSubsampling422']/*"/>	
            <unmanaged>WICJpegYCrCbSubsampling422</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.JpegYCrCbSubsamplingOption.Mode444">
            <summary>	
            <para>Subsampling option that uses no decimation.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICJpegYCrCbSubsampling444']/*"/>	
            <unmanaged>WICJpegYCrCbSubsampling444</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.NamedWhitePoint">
            <summary>	
            Specifies named white balances for raw images.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICNamedWhitePoint']/*"/>	
            <unmanaged>WICNamedWhitePoint</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.NamedWhitePoint.Default">
            <summary>	
            <para>The default white balance.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICWhitePointDefault']/*"/>	
            <unmanaged>WICWhitePointDefault</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.NamedWhitePoint.Daylight">
            <summary>	
            <para>A daylight white balance.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICWhitePointDaylight']/*"/>	
            <unmanaged>WICWhitePointDaylight</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.NamedWhitePoint.Cloudy">
            <summary>	
            <para>A cloudy white balance.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICWhitePointCloudy']/*"/>	
            <unmanaged>WICWhitePointCloudy</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.NamedWhitePoint.Shade">
            <summary>	
            <para>A shade white balance.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICWhitePointShade']/*"/>	
            <unmanaged>WICWhitePointShade</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.NamedWhitePoint.Tungsten">
            <summary>	
            <para>A tungsten white balance.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICWhitePointTungsten']/*"/>	
            <unmanaged>WICWhitePointTungsten</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.NamedWhitePoint.Fluorescent">
            <summary>	
            <para>A fluorescent white balance.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICWhitePointFluorescent']/*"/>	
            <unmanaged>WICWhitePointFluorescent</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.NamedWhitePoint.Flash">
            <summary>	
            <para>Daylight white balance.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICWhitePointFlash']/*"/>	
            <unmanaged>WICWhitePointFlash</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.NamedWhitePoint.Underwater">
            <summary>	
            <para>A flash white balance.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICWhitePointUnderwater']/*"/>	
            <unmanaged>WICWhitePointUnderwater</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.NamedWhitePoint.Custom">
            <summary>	
            <para>A custom white balance. This is typically used when using a picture (grey-card) as white balance.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICWhitePointCustom']/*"/>	
            <unmanaged>WICWhitePointCustom</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.NamedWhitePoint.AutoWhiteBalance">
            <summary>	
            <para>An automatic balance.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICWhitePointAutoWhiteBalance']/*"/>	
            <unmanaged>WICWhitePointAutoWhiteBalance</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.NamedWhitePoint.AsShot">
            <summary>	
            <para>An "as shot" white balance.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICWhitePointAsShot']/*"/>	
            <unmanaged>WICWhitePointAsShot</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.PixelFormatNumericRepresentation">
            <summary>	
            typedef enum <see cref="T:SharpDX.WIC.PixelFormatNumericRepresentation"/> { <see cref="F:SharpDX.WIC.PixelFormatNumericRepresentation.Unspecified"/>?????? = 0x00000000, <see cref="F:SharpDX.WIC.PixelFormatNumericRepresentation.Indexed"/>?????????? = 0x00000001, <see cref="F:SharpDX.WIC.PixelFormatNumericRepresentation.UnsignedInteger"/>?? = 0x00000002, <see cref="F:SharpDX.WIC.PixelFormatNumericRepresentation.SignedInteger"/>???? = 0x00000003, <see cref="F:SharpDX.WIC.PixelFormatNumericRepresentation.Fixed"/>???????????? = 0x00000004, <see cref="F:SharpDX.WIC.PixelFormatNumericRepresentation.Float"/>???????????? = 0x00000005 	
            } <see cref="T:SharpDX.WIC.PixelFormatNumericRepresentation"/>;	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPixelFormatNumericRepresentation']/*"/>	
            <unmanaged>WICPixelFormatNumericRepresentation</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PixelFormatNumericRepresentation.Unspecified">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPixelFormatNumericRepresentationUnspecified']/*"/>	
            <unmanaged>WICPixelFormatNumericRepresentationUnspecified</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PixelFormatNumericRepresentation.Indexed">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPixelFormatNumericRepresentationIndexed']/*"/>	
            <unmanaged>WICPixelFormatNumericRepresentationIndexed</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PixelFormatNumericRepresentation.UnsignedInteger">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPixelFormatNumericRepresentationUnsignedInteger']/*"/>	
            <unmanaged>WICPixelFormatNumericRepresentationUnsignedInteger</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PixelFormatNumericRepresentation.SignedInteger">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPixelFormatNumericRepresentationSignedInteger']/*"/>	
            <unmanaged>WICPixelFormatNumericRepresentationSignedInteger</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PixelFormatNumericRepresentation.Fixed">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPixelFormatNumericRepresentationFixed']/*"/>	
            <unmanaged>WICPixelFormatNumericRepresentationFixed</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PixelFormatNumericRepresentation.Float">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPixelFormatNumericRepresentationFloat']/*"/>	
            <unmanaged>WICPixelFormatNumericRepresentationFloat</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.PngBkgdProperties">
            <summary>	
            Specifies the Portable Network Graphics (PNG) background (bKGD) chunk metadata properties.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngBkgdProperties']/*"/>	
            <unmanaged>WICPngBkgdProperties</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PngBkgdProperties.Color">
            <summary>	
            <para>Indicates the background color. There are three possible types, depending on the image's pixel format.</para>	
             <para></para>	
             <list>	
             <item><term>VT_UI1</term> <description> <para>Specifies the index of the background color in an image with an indexed pixel format.</para>	
             </description></item>	
             <item><term>VT_UI2</term> <description> <para>Specifies the background color in a grayscale image.</para>	
             </description></item>	
             <item><term>VT_VECTOR|VT_UI2</term> <description> <para>Specifies the background color in an RGB image as three USHORT values: {0xRRRR, 0xGGGG, 0xBBBB}.</para>	
             </description></item>	
             </list>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngBkgdBackgroundColor']/*"/>	
            <unmanaged>WICPngBkgdBackgroundColor</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.PngChrmProperties">
            <summary>	
            Specifies the Portable Network Graphics (PNG) cHRM chunk metadata properties for CIE XYZ chromaticity.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngChrmProperties']/*"/>	
            <unmanaged>WICPngChrmProperties</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PngChrmProperties.WhitePointX">
            <summary>	
            <para>[VT_UI4] Indicates the whitepoint x value ratio.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngChrmWhitePointX']/*"/>	
            <unmanaged>WICPngChrmWhitePointX</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PngChrmProperties.WhitePointY">
            <summary>	
            <para>[VT_UI4] Indicates the whitepoint y value ratio.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngChrmWhitePointY']/*"/>	
            <unmanaged>WICPngChrmWhitePointY</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PngChrmProperties.RedX">
            <summary>	
            <para>[VT_UI4] Indicates the red x value ratio.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngChrmRedX']/*"/>	
            <unmanaged>WICPngChrmRedX</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PngChrmProperties.RedY">
            <summary>	
            <para>[VT_UI4] Indicates the red y value ratio.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngChrmRedY']/*"/>	
            <unmanaged>WICPngChrmRedY</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PngChrmProperties.GreenX">
            <summary>	
            <para>[VT_UI4] Indicates the green x value ratio.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngChrmGreenX']/*"/>	
            <unmanaged>WICPngChrmGreenX</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PngChrmProperties.GreenY">
            <summary>	
            <para>[VT_UI4] Indicates the green y value ratio.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngChrmGreenY']/*"/>	
            <unmanaged>WICPngChrmGreenY</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PngChrmProperties.BlueX">
            <summary>	
            <para>[VT_UI4] Indicates the blue x value ratio.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngChrmBlueX']/*"/>	
            <unmanaged>WICPngChrmBlueX</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PngChrmProperties.BlueY">
            <summary>	
            <para>[VT_UI4] Indicates the blue y value ratio.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngChrmBlueY']/*"/>	
            <unmanaged>WICPngChrmBlueY</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.PngFilterOption">
            <summary>	
            Specifies the Portable Network Graphics (PNG) filters available for compression optimization.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngFilterOption']/*"/>	
            <unmanaged>WICPngFilterOption</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PngFilterOption.Unspecified">
            <summary>	
            <para>Indicates an unspecified PNG filter. This enables WIC to algorithmically choose the best filtering option for the image.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngFilterUnspecified']/*"/>	
            <unmanaged>WICPngFilterUnspecified</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PngFilterOption.None">
            <summary>	
            <para>Indicates no PNG filter.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngFilterNone']/*"/>	
            <unmanaged>WICPngFilterNone</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PngFilterOption.Sub">
            <summary>	
            <para>Indicates a PNG sub filter.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngFilterSub']/*"/>	
            <unmanaged>WICPngFilterSub</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PngFilterOption.Up">
            <summary>	
            <para>Indicates a PNG up filter.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngFilterUp']/*"/>	
            <unmanaged>WICPngFilterUp</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PngFilterOption.Average">
            <summary>	
            <para>Indicates a PNG average filter.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngFilterAverage']/*"/>	
            <unmanaged>WICPngFilterAverage</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PngFilterOption.Paeth">
            <summary>	
            <para>Indicates a PNG paeth filter.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngFilterPaeth']/*"/>	
            <unmanaged>WICPngFilterPaeth</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PngFilterOption.Adaptive">
            <summary>	
            <para>Indicates a PNG adaptive filter. This enables WIC to choose the best filtering mode on a per-scanline basis.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngFilterAdaptive']/*"/>	
            <unmanaged>WICPngFilterAdaptive</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.PngGamaProperties">
            <summary>	
            Specifies the Portable Network Graphics (PNG) gAMA chunk metadata properties.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngGamaProperties']/*"/>	
            <unmanaged>WICPngGamaProperties</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PngGamaProperties.Gamma">
            <summary>	
            <para>[VT_UI4] Indicates the gamma value.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngGamaGamma']/*"/>	
            <unmanaged>WICPngGamaGamma</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.PngHistProperties">
            <summary>	
            Specifies the Portable Network Graphics (PNG) hIST chunk metadata properties.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngHistProperties']/*"/>	
            <unmanaged>WICPngHistProperties</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PngHistProperties.Frequencies">
            <summary>	
            <para>[VT_VECTOR | VT_UI2] Indicates the approximate usage frequency of each color in the color palette. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngHistFrequencies']/*"/>	
            <unmanaged>WICPngHistFrequencies</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.PngIccpProperties">
            <summary>	
            Specifies the Portable Network Graphics (PNG) iCCP chunk metadata properties.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngIccpProperties']/*"/>	
            <unmanaged>WICPngIccpProperties</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PngIccpProperties.ProfileName">
            <summary>	
            <para>[VT_LPSTR] Indicates the International Color Consortium (ICC) profile name.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngIccpProfileName']/*"/>	
            <unmanaged>WICPngIccpProfileName</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PngIccpProperties.ProfileData">
            <summary>	
            <para>[VT_VECTOR | VT_UI1] Indicates the embedded ICC profile.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngIccpProfileData']/*"/>	
            <unmanaged>WICPngIccpProfileData</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.PngItxtProperties">
            <summary>	
            Specifies the Portable Network Graphics (PNG) iTXT chunk metadata properties.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngItxtProperties']/*"/>	
            <unmanaged>WICPngItxtProperties</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PngItxtProperties.Keyword">
            <summary>	
            <para>[VT_LPSTR] Indicates the keywords in the iTXT metadata chunk.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngItxtKeyword']/*"/>	
            <unmanaged>WICPngItxtKeyword</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PngItxtProperties.CompressionFlag">
            <summary>	
            <para>[VT_UI1] Indicates whether the text in the iTXT chunk is compressed. 1 if the text is compressed; otherwise, 0.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngItxtCompressionFlag']/*"/>	
            <unmanaged>WICPngItxtCompressionFlag</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PngItxtProperties.LanguageTag">
            <summary>	
            <para>[VT_LPSTR] Indicates the human language used by the translated keyword and the text.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngItxtLanguageTag']/*"/>	
            <unmanaged>WICPngItxtLanguageTag</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PngItxtProperties.TranslatedKeyword">
            <summary>	
            <para>[VT_LPWSTR] Indicates a translation of the keyword into the language indicated by the language tag.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngItxtTranslatedKeyword']/*"/>	
            <unmanaged>WICPngItxtTranslatedKeyword</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PngItxtProperties.Text">
            <summary>	
            <para>[VT_LPWSTR] Indicates additional text in the iTXT metadata chunk.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngItxtText']/*"/>	
            <unmanaged>WICPngItxtText</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.PngSrgbProperties">
            <summary>	
            Specifies the Portable Network Graphics (PNG) sRGB chunk metadata properties.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngSrgbProperties']/*"/>	
            <unmanaged>WICPngSrgbProperties</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PngSrgbProperties.RenderingIntent">
            <summary>	
            <para>[VT_UI1] Indicates the rendering intent for an sRGB color space image. The rendering intents have the following meaning.</para>	
              ValueMeaning 0Perceptual 1Relative colorimetric 2Saturation 3Absolute colorimetric  <para>?</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngSrgbRenderingIntent']/*"/>	
            <unmanaged>WICPngSrgbRenderingIntent</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.PngTimeProperties">
            <summary>	
            Specifies the Portable Network Graphics (PNG) tIME chunk metadata properties.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngTimeProperties']/*"/>	
            <unmanaged>WICPngTimeProperties</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PngTimeProperties.Year">
            <summary>	
            <para>[VT_UI2] Indicates the year of the last modification.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngTimeYear']/*"/>	
            <unmanaged>WICPngTimeYear</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PngTimeProperties.Month">
            <summary>	
            <para>[VT_UI1] Indicates the month of the last modification.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngTimeMonth']/*"/>	
            <unmanaged>WICPngTimeMonth</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PngTimeProperties.Day">
            <summary>	
            <para>[VT_UI1] Indicates day of the last modification.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngTimeDay']/*"/>	
            <unmanaged>WICPngTimeDay</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PngTimeProperties.Hour">
            <summary>	
            <para>[VT_UI1] Indicates the hour of the last modification.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngTimeHour']/*"/>	
            <unmanaged>WICPngTimeHour</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PngTimeProperties.Minute">
            <summary>	
            <para>[VT_UI1] Indicates the minute of the last modification.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngTimeMinute']/*"/>	
            <unmanaged>WICPngTimeMinute</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.PngTimeProperties.Second">
            <summary>	
            <para>[VT_UI1] Indicates the second of the last modification.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICPngTimeSecond']/*"/>	
            <unmanaged>WICPngTimeSecond</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.ProgressNotification">
            <summary>	
            Specifies when the progress notification callback should be called.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICProgressNotification']/*"/>	
            <unmanaged>WICProgressNotification</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.ProgressNotification.Begin">
            <summary>	
            <para>The callback should be called when codec operations begin.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICProgressNotificationBegin']/*"/>	
            <unmanaged>WICProgressNotificationBegin</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.ProgressNotification.End">
            <summary>	
            <para>The callback should be called when codec operations end.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICProgressNotificationEnd']/*"/>	
            <unmanaged>WICProgressNotificationEnd</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.ProgressNotification.Frequent">
            <summary>	
            <para>The callback should be called frequently to report status.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICProgressNotificationFrequent']/*"/>	
            <unmanaged>WICProgressNotificationFrequent</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.ProgressNotification.All">
            <summary>	
            <para>The callback should be called on all available progress notifications.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICProgressNotificationAll']/*"/>	
            <unmanaged>WICProgressNotificationAll</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.ProgressOperation">
            <summary>	
            Specifies the progress operations to receive notifications for.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICProgressOperation']/*"/>	
            <unmanaged>WICProgressOperation</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.ProgressOperation.CopyPixels">
            <summary>	
            <para>Receive copy pixel operation.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICProgressOperationCopyPixels']/*"/>	
            <unmanaged>WICProgressOperationCopyPixels</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.ProgressOperation.WritePixels">
            <summary>	
            <para>Receive write pixel operation.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICProgressOperationWritePixels']/*"/>	
            <unmanaged>WICProgressOperationWritePixels</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.ProgressOperation.All">
            <summary>	
            <para>Receive all progress operations available.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICProgressOperationAll']/*"/>	
            <unmanaged>WICProgressOperationAll</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.RawCapabilities">
            <summary>	
            Specifies the capability support of a raw image.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawCapabilities']/*"/>	
            <unmanaged>WICRawCapabilities</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.RawCapabilities.NotSupported">
            <summary>	
            <para>The capability is not supported.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawCapabilityNotSupported']/*"/>	
            <unmanaged>WICRawCapabilityNotSupported</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.RawCapabilities.GetSupported">
            <summary>	
            <para>The capability supports only get operations.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawCapabilityGetSupported']/*"/>	
            <unmanaged>WICRawCapabilityGetSupported</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.RawCapabilities.FullySupported">
            <summary>	
            <para>The capability supports get and set operations.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawCapabilityFullySupported']/*"/>	
            <unmanaged>WICRawCapabilityFullySupported</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.RawParameterSet">
            <summary>	
            Specifies the parameter set used by a raw codec.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawParameterSet']/*"/>	
            <unmanaged>WICRawParameterSet</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.RawParameterSet.AsShot">
            <summary>	
            <para>An as shot parameter set.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICAsShotParameterSet']/*"/>	
            <unmanaged>WICAsShotParameterSet</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.RawParameterSet.UserAdjusted">
            <summary>	
            <para>A user adjusted parameter set.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICUserAdjustedParameterSet']/*"/>	
            <unmanaged>WICUserAdjustedParameterSet</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.RawParameterSet.AutoAdjusted">
            <summary>	
            <para>A codec adjusted parameter set.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICAutoAdjustedParameterSet']/*"/>	
            <unmanaged>WICAutoAdjustedParameterSet</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.RawRenderMode">
            <summary>	
            Specifies the render intent of the next CopyPixels call.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawRenderMode']/*"/>	
            <unmanaged>WICRawRenderMode</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.RawRenderMode.Draft">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawRenderModeDraft']/*"/>	
            <unmanaged>WICRawRenderModeDraft</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.RawRenderMode.Normal">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawRenderModeNormal']/*"/>	
            <unmanaged>WICRawRenderModeNormal</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.RawRenderMode.BestQuality">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawRenderModeBestQuality']/*"/>	
            <unmanaged>WICRawRenderModeBestQuality</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.RawRotationCapabilities">
            <summary>	
            Specifies the rotation capabilities of the codec.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawRotationCapabilities']/*"/>	
            <unmanaged>WICRawRotationCapabilities</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.RawRotationCapabilities.NotSupported">
            <summary>	
            <para>Rotation is not supported.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawRotationCapabilityNotSupported']/*"/>	
            <unmanaged>WICRawRotationCapabilityNotSupported</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.RawRotationCapabilities.GetSupported">
            <summary>	
            <para>Set operations for rotation is not supported.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawRotationCapabilityGetSupported']/*"/>	
            <unmanaged>WICRawRotationCapabilityGetSupported</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.RawRotationCapabilities.NinetyDegreesSupported">
            <summary>	
            <para>90 degree rotations are supported.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawRotationCapabilityNinetyDegreesSupported']/*"/>	
            <unmanaged>WICRawRotationCapabilityNinetyDegreesSupported</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.RawRotationCapabilities.FullySupported">
            <summary>	
            <para>All rotation angles are supported.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawRotationCapabilityFullySupported']/*"/>	
            <unmanaged>WICRawRotationCapabilityFullySupported</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.SectionAccessLevel">
            <summary>	
            Specifies the access level of a Windows Graphics Device Interface (GDI) section.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICSectionAccessLevel']/*"/>	
            <unmanaged>WICSectionAccessLevel</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.SectionAccessLevel.Read">
            <summary>	
            <para>Indicates a read only access level.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICSectionAccessLevelRead']/*"/>	
            <unmanaged>WICSectionAccessLevelRead</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.SectionAccessLevel.ReadWrite">
            <summary>	
            <para>Indicates a read/write access level.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICSectionAccessLevelReadWrite']/*"/>	
            <unmanaged>WICSectionAccessLevelReadWrite</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.TiffCompressionOption">
            <summary>	
            Specifies the Tagged Image File Format (TIFF) compression options.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICTiffCompressionOption']/*"/>	
            <unmanaged>WICTiffCompressionOption</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.TiffCompressionOption.DontCare">
            <summary>	
            <para>Indicates a suitable compression algorithm based on the image and pixel format.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICTiffCompressionDontCare']/*"/>	
            <unmanaged>WICTiffCompressionDontCare</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.TiffCompressionOption.None">
            <summary>	
            <para>Indicates no compression.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICTiffCompressionNone']/*"/>	
            <unmanaged>WICTiffCompressionNone</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.TiffCompressionOption.CCITT3">
            <summary>	
            <para>Indicates a CCITT3 compression algorithm. This algorithm is only valid for 1bpp pixel formats.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICTiffCompressionCCITT3']/*"/>	
            <unmanaged>WICTiffCompressionCCITT3</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.TiffCompressionOption.CCITT4">
            <summary>	
            <para>Indicates a CCITT4 compression algorithm. This algorithm is only valid for 1bpp pixel formats.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICTiffCompressionCCITT4']/*"/>	
            <unmanaged>WICTiffCompressionCCITT4</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.TiffCompressionOption.LZW">
            <summary>	
            <para>Indicates a LZW compression algorithm.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICTiffCompressionLZW']/*"/>	
            <unmanaged>WICTiffCompressionLZW</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.TiffCompressionOption.RLE">
            <summary>	
            <para>Indicates a RLE compression algorithm. This algorithm is only valid for 1bpp pixel formats.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICTiffCompressionRLE']/*"/>	
            <unmanaged>WICTiffCompressionRLE</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.TiffCompressionOption.ZIP">
            <summary>	
            <para>Indicates a ZIP compression algorithm.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICTiffCompressionZIP']/*"/>	
            <unmanaged>WICTiffCompressionZIP</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.TiffCompressionOption.LZWHDifferencing">
            <summary>	
            <para>Indicates an LZWH differencing algorithm.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICTiffCompressionLZWHDifferencing']/*"/>	
            <unmanaged>WICTiffCompressionLZWHDifferencing</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.BitmapDecoderGuids">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.WIC.BitmapDecoderGuids']/*"/>	
        </member>
        <member name="F:SharpDX.WIC.BitmapDecoderGuids.Jpeg">
            <summary>Constant Jpeg.</summary>
            <unmanaged>CLSID_WICJpegDecoder</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.BitmapDecoderGuids.Bmp">
            <summary>Constant Bmp.</summary>
            <unmanaged>CLSID_WICBmpDecoder</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.BitmapDecoderGuids.Ico">
            <summary>Constant Ico.</summary>
            <unmanaged>CLSID_WICIcoDecoder</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.BitmapDecoderGuids.Tiff">
            <summary>Constant Tiff.</summary>
            <unmanaged>CLSID_WICTiffDecoder</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.BitmapDecoderGuids.Wmp">
            <summary>Constant Wmp.</summary>
            <unmanaged>CLSID_WICWmpDecoder</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.BitmapDecoderGuids.Gif">
            <summary>Constant Gif.</summary>
            <unmanaged>CLSID_WICGifDecoder</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.BitmapDecoderGuids.Png">
            <summary>Constant Png.</summary>
            <unmanaged>CLSID_WICPngDecoder</unmanaged>
        </member>
        <member name="T:SharpDX.WIC.BitmapEncoderGuids">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.WIC.BitmapEncoderGuids']/*"/>	
        </member>
        <member name="F:SharpDX.WIC.BitmapEncoderGuids.Wmp">
            <summary>Constant Wmp.</summary>
            <unmanaged>CLSID_WICWmpEncoder</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.BitmapEncoderGuids.Gif">
            <summary>Constant Gif.</summary>
            <unmanaged>CLSID_WICGifEncoder</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.BitmapEncoderGuids.Tiff">
            <summary>Constant Tiff.</summary>
            <unmanaged>CLSID_WICTiffEncoder</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.BitmapEncoderGuids.Jpeg">
            <summary>Constant Jpeg.</summary>
            <unmanaged>CLSID_WICJpegEncoder</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.BitmapEncoderGuids.Bmp">
            <summary>Constant Bmp.</summary>
            <unmanaged>CLSID_WICBmpEncoder</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.BitmapEncoderGuids.Png">
            <summary>Constant Png.</summary>
            <unmanaged>CLSID_WICPngEncoder</unmanaged>
        </member>
        <member name="T:SharpDX.WIC.ContainerFormatGuids">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.WIC.ContainerFormatGuids']/*"/>	
        </member>
        <member name="F:SharpDX.WIC.ContainerFormatGuids.Jpeg">
            <summary>Constant Jpeg.</summary>
            <unmanaged>GUID_ContainerFormatJpeg</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.ContainerFormatGuids.Ico">
            <summary>Constant Ico.</summary>
            <unmanaged>GUID_ContainerFormatIco</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.ContainerFormatGuids.Png">
            <summary>Constant Png.</summary>
            <unmanaged>GUID_ContainerFormatPng</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.ContainerFormatGuids.Wmp">
            <summary>Constant Wmp.</summary>
            <unmanaged>GUID_ContainerFormatWmp</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.ContainerFormatGuids.Bmp">
            <summary>Constant Bmp.</summary>
            <unmanaged>GUID_ContainerFormatBmp</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.ContainerFormatGuids.Gif">
            <summary>Constant Gif.</summary>
            <unmanaged>GUID_ContainerFormatGif</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.ContainerFormatGuids.Tiff">
            <summary>Constant Tiff.</summary>
            <unmanaged>GUID_ContainerFormatTiff</unmanaged>
        </member>
        <member name="T:SharpDX.WIC.PixelFormat">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.WIC.PixelFormat']/*"/>	
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format72bpp8ChannelsAlpha">
            <summary>Constant Format72bpp8ChannelsAlpha.</summary>
            <unmanaged>GUID_WICPixelFormat72bpp8ChannelsAlpha</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format48bppBGRFixedPoint">
            <summary>Constant Format48bppBGRFixedPoint.</summary>
            <unmanaged>GUID_WICPixelFormat48bppBGRFixedPoint</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format64bppCMYK">
            <summary>Constant Format64bppCMYK.</summary>
            <unmanaged>GUID_WICPixelFormat64bppCMYK</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format40bpp5Channels">
            <summary>Constant Format40bpp5Channels.</summary>
            <unmanaged>GUID_WICPixelFormat40bpp5Channels</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format4bppIndexed">
            <summary>Constant Format4bppIndexed.</summary>
            <unmanaged>GUID_WICPixelFormat4bppIndexed</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format32bppGrayFixedPoint">
            <summary>Constant Format32bppGrayFixedPoint.</summary>
            <unmanaged>GUID_WICPixelFormat32bppGrayFixedPoint</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format64bppPRGBA">
            <summary>Constant Format64bppPRGBA.</summary>
            <unmanaged>GUID_WICPixelFormat64bppPRGBA</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format40bpp4ChannelsAlpha">
            <summary>Constant Format40bpp4ChannelsAlpha.</summary>
            <unmanaged>GUID_WICPixelFormat40bpp4ChannelsAlpha</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format48bpp6Channels">
            <summary>Constant Format48bpp6Channels.</summary>
            <unmanaged>GUID_WICPixelFormat48bpp6Channels</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format16bppGray">
            <summary>Constant Format16bppGray.</summary>
            <unmanaged>GUID_WICPixelFormat16bppGray</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format48bpp5ChannelsAlpha">
            <summary>Constant Format48bpp5ChannelsAlpha.</summary>
            <unmanaged>GUID_WICPixelFormat48bpp5ChannelsAlpha</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format64bpp7ChannelsAlpha">
            <summary>Constant Format64bpp7ChannelsAlpha.</summary>
            <unmanaged>GUID_WICPixelFormat64bpp7ChannelsAlpha</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format1bppIndexed">
            <summary>Constant Format1bppIndexed.</summary>
            <unmanaged>GUID_WICPixelFormat1bppIndexed</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format4bppGray">
            <summary>Constant Format4bppGray.</summary>
            <unmanaged>GUID_WICPixelFormat4bppGray</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format32bpp3ChannelsAlpha">
            <summary>Constant Format32bpp3ChannelsAlpha.</summary>
            <unmanaged>GUID_WICPixelFormat32bpp3ChannelsAlpha</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format32bppBGRA">
            <summary>Constant Format32bppBGRA.</summary>
            <unmanaged>GUID_WICPixelFormat32bppBGRA</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format128bppRGBFixedPoint">
            <summary>Constant Format128bppRGBFixedPoint.</summary>
            <unmanaged>GUID_WICPixelFormat128bppRGBFixedPoint</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format64bppRGBAFixedPoint">
            <summary>Constant Format64bppRGBAFixedPoint.</summary>
            <unmanaged>GUID_WICPixelFormat64bppRGBAFixedPoint</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format80bpp4ChannelsAlpha">
            <summary>Constant Format80bpp4ChannelsAlpha.</summary>
            <unmanaged>GUID_WICPixelFormat80bpp4ChannelsAlpha</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format32bppCMYK">
            <summary>Constant Format32bppCMYK.</summary>
            <unmanaged>GUID_WICPixelFormat32bppCMYK</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format64bpp8Channels">
            <summary>Constant Format64bpp8Channels.</summary>
            <unmanaged>GUID_WICPixelFormat64bpp8Channels</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format16bppBGR555">
            <summary>Constant Format16bppBGR555.</summary>
            <unmanaged>GUID_WICPixelFormat16bppBGR555</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format16bppBGR565">
            <summary>Constant Format16bppBGR565.</summary>
            <unmanaged>GUID_WICPixelFormat16bppBGR565</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format32bppRGBA1010102XR">
            <summary>Constant Format32bppRGBA1010102XR.</summary>
            <unmanaged>GUID_WICPixelFormat32bppRGBA1010102XR</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format64bppRGB">
            <summary>Constant Format64bppRGB.</summary>
            <unmanaged>GUID_WICPixelFormat64bppRGB</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format128bppRGBFloat">
            <summary>Constant Format128bppRGBFloat.</summary>
            <unmanaged>GUID_WICPixelFormat128bppRGBFloat</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format32bppBGR">
            <summary>Constant Format32bppBGR.</summary>
            <unmanaged>GUID_WICPixelFormat32bppBGR</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format64bppPRGBAHalf">
            <summary>Constant Format64bppPRGBAHalf.</summary>
            <unmanaged>GUID_WICPixelFormat64bppPRGBAHalf</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format64bppRGBA">
            <summary>Constant Format64bppRGBA.</summary>
            <unmanaged>GUID_WICPixelFormat64bppRGBA</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.FormatDontCare">
            <summary>Constant FormatDontCare.</summary>
            <unmanaged>GUID_WICPixelFormatDontCare</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format96bppRGBFloat">
            <summary>Constant Format96bppRGBFloat.</summary>
            <unmanaged>GUID_WICPixelFormat96bppRGBFloat</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format32bppPRGBA">
            <summary>Constant Format32bppPRGBA.</summary>
            <unmanaged>GUID_WICPixelFormat32bppPRGBA</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format24bpp3Channels">
            <summary>Constant Format24bpp3Channels.</summary>
            <unmanaged>GUID_WICPixelFormat24bpp3Channels</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format32bppRGBE">
            <summary>Constant Format32bppRGBE.</summary>
            <unmanaged>GUID_WICPixelFormat32bppRGBE</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format24bppBGR">
            <summary>Constant Format24bppBGR.</summary>
            <unmanaged>GUID_WICPixelFormat24bppBGR</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format64bppRGBFixedPoint">
            <summary>Constant Format64bppRGBFixedPoint.</summary>
            <unmanaged>GUID_WICPixelFormat64bppRGBFixedPoint</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format96bppRGBFixedPoint">
            <summary>Constant Format96bppRGBFixedPoint.</summary>
            <unmanaged>GUID_WICPixelFormat96bppRGBFixedPoint</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format144bpp8ChannelsAlpha">
            <summary>Constant Format144bpp8ChannelsAlpha.</summary>
            <unmanaged>GUID_WICPixelFormat144bpp8ChannelsAlpha</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format64bppBGRAFixedPoint">
            <summary>Constant Format64bppBGRAFixedPoint.</summary>
            <unmanaged>GUID_WICPixelFormat64bppBGRAFixedPoint</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format32bppGrayFloat">
            <summary>Constant Format32bppGrayFloat.</summary>
            <unmanaged>GUID_WICPixelFormat32bppGrayFloat</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format64bppBGRA">
            <summary>Constant Format64bppBGRA.</summary>
            <unmanaged>GUID_WICPixelFormat64bppBGRA</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format48bpp3Channels">
            <summary>Constant Format48bpp3Channels.</summary>
            <unmanaged>GUID_WICPixelFormat48bpp3Channels</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format32bppBGR101010">
            <summary>Constant Format32bppBGR101010.</summary>
            <unmanaged>GUID_WICPixelFormat32bppBGR101010</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format112bpp7Channels">
            <summary>Constant Format112bpp7Channels.</summary>
            <unmanaged>GUID_WICPixelFormat112bpp7Channels</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format64bpp3ChannelsAlpha">
            <summary>Constant Format64bpp3ChannelsAlpha.</summary>
            <unmanaged>GUID_WICPixelFormat64bpp3ChannelsAlpha</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format2bppGray">
            <summary>Constant Format2bppGray.</summary>
            <unmanaged>GUID_WICPixelFormat2bppGray</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format56bpp7Channels">
            <summary>Constant Format56bpp7Channels.</summary>
            <unmanaged>GUID_WICPixelFormat56bpp7Channels</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format16bppBGRA5551">
            <summary>Constant Format16bppBGRA5551.</summary>
            <unmanaged>GUID_WICPixelFormat16bppBGRA5551</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format48bppRGBFixedPoint">
            <summary>Constant Format48bppRGBFixedPoint.</summary>
            <unmanaged>GUID_WICPixelFormat48bppRGBFixedPoint</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format32bppRGBA1010102">
            <summary>Constant Format32bppRGBA1010102.</summary>
            <unmanaged>GUID_WICPixelFormat32bppRGBA1010102</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format64bppPBGRA">
            <summary>Constant Format64bppPBGRA.</summary>
            <unmanaged>GUID_WICPixelFormat64bppPBGRA</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format96bpp6Channels">
            <summary>Constant Format96bpp6Channels.</summary>
            <unmanaged>GUID_WICPixelFormat96bpp6Channels</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format48bppRGB">
            <summary>Constant Format48bppRGB.</summary>
            <unmanaged>GUID_WICPixelFormat48bppRGB</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.FormatBlackWhite">
            <summary>Constant FormatBlackWhite.</summary>
            <unmanaged>GUID_WICPixelFormatBlackWhite</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format64bpp4Channels">
            <summary>Constant Format64bpp4Channels.</summary>
            <unmanaged>GUID_WICPixelFormat64bpp4Channels</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format48bppRGBHalf">
            <summary>Constant Format48bppRGBHalf.</summary>
            <unmanaged>GUID_WICPixelFormat48bppRGBHalf</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format96bpp5ChannelsAlpha">
            <summary>Constant Format96bpp5ChannelsAlpha.</summary>
            <unmanaged>GUID_WICPixelFormat96bpp5ChannelsAlpha</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format8bppGray">
            <summary>Constant Format8bppGray.</summary>
            <unmanaged>GUID_WICPixelFormat8bppGray</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format128bpp7ChannelsAlpha">
            <summary>Constant Format128bpp7ChannelsAlpha.</summary>
            <unmanaged>GUID_WICPixelFormat128bpp7ChannelsAlpha</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format8bppIndexed">
            <summary>Constant Format8bppIndexed.</summary>
            <unmanaged>GUID_WICPixelFormat8bppIndexed</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format80bpp5Channels">
            <summary>Constant Format80bpp5Channels.</summary>
            <unmanaged>GUID_WICPixelFormat80bpp5Channels</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format16bppGrayFixedPoint">
            <summary>Constant Format16bppGrayFixedPoint.</summary>
            <unmanaged>GUID_WICPixelFormat16bppGrayFixedPoint</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format128bpp8Channels">
            <summary>Constant Format128bpp8Channels.</summary>
            <unmanaged>GUID_WICPixelFormat128bpp8Channels</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format80bppCMYKAlpha">
            <summary>Constant Format80bppCMYKAlpha.</summary>
            <unmanaged>GUID_WICPixelFormat80bppCMYKAlpha</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format24bppRGB">
            <summary>Constant Format24bppRGB.</summary>
            <unmanaged>GUID_WICPixelFormat24bppRGB</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format128bppRGBAFloat">
            <summary>Constant Format128bppRGBAFloat.</summary>
            <unmanaged>GUID_WICPixelFormat128bppRGBAFloat</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format112bpp6ChannelsAlpha">
            <summary>Constant Format112bpp6ChannelsAlpha.</summary>
            <unmanaged>GUID_WICPixelFormat112bpp6ChannelsAlpha</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format64bppRGBAHalf">
            <summary>Constant Format64bppRGBAHalf.</summary>
            <unmanaged>GUID_WICPixelFormat64bppRGBAHalf</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format16bppGrayHalf">
            <summary>Constant Format16bppGrayHalf.</summary>
            <unmanaged>GUID_WICPixelFormat16bppGrayHalf</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format128bppRGBAFixedPoint">
            <summary>Constant Format128bppRGBAFixedPoint.</summary>
            <unmanaged>GUID_WICPixelFormat128bppRGBAFixedPoint</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format32bppRGB">
            <summary>Constant Format32bppRGB.</summary>
            <unmanaged>GUID_WICPixelFormat32bppRGB</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format40bppCMYKAlpha">
            <summary>Constant Format40bppCMYKAlpha.</summary>
            <unmanaged>GUID_WICPixelFormat40bppCMYKAlpha</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format56bpp6ChannelsAlpha">
            <summary>Constant Format56bpp6ChannelsAlpha.</summary>
            <unmanaged>GUID_WICPixelFormat56bpp6ChannelsAlpha</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format32bppPBGRA">
            <summary>Constant Format32bppPBGRA.</summary>
            <unmanaged>GUID_WICPixelFormat32bppPBGRA</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format48bppBGR">
            <summary>Constant Format48bppBGR.</summary>
            <unmanaged>GUID_WICPixelFormat48bppBGR</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format128bppPRGBAFloat">
            <summary>Constant Format128bppPRGBAFloat.</summary>
            <unmanaged>GUID_WICPixelFormat128bppPRGBAFloat</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format32bppRGBA">
            <summary>Constant Format32bppRGBA.</summary>
            <unmanaged>GUID_WICPixelFormat32bppRGBA</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format64bppRGBHalf">
            <summary>Constant Format64bppRGBHalf.</summary>
            <unmanaged>GUID_WICPixelFormat64bppRGBHalf</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format8bppAlpha">
            <summary>Constant Format8bppAlpha.</summary>
            <unmanaged>GUID_WICPixelFormat8bppAlpha</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format32bpp4Channels">
            <summary>Constant Format32bpp4Channels.</summary>
            <unmanaged>GUID_WICPixelFormat32bpp4Channels</unmanaged>
        </member>
        <member name="F:SharpDX.WIC.PixelFormat.Format2bppIndexed">
            <summary>Constant Format2bppIndexed.</summary>
            <unmanaged>GUID_WICPixelFormat2bppIndexed</unmanaged>
        </member>
        <member name="M:SharpDX.WIC.PixelFormat.GetBitsPerPixel(System.Guid)">
            <summary>
            Gets the number of bits per pixel for a particular pixel format.
            </summary>
            <param name="guid">The pixel format guid.</param>
            <returns>The number of bits per pixel. If the pixel format guid is invalid, returns 0</returns>
        </member>
        <member name="M:SharpDX.WIC.PixelFormat.GetStride(System.Guid,System.Int32)">
            <summary>
            Gets the stride in bytes from a pixel format and a width..
            </summary>
            <param name="guid">The pixel format guid.</param>
            <param name="width">The width.</param>
            <returns>The number of bytes per row.</returns>
        </member>
        <member name="T:SharpDX.WIC.Bitmap">
            <summary>	
            Defines methods that add the concept of writeability and static in-memory representations of bitmaps to <see cref="T:SharpDX.WIC.BitmapSource"/>.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmap']/*"/>	
            <unmanaged>IWICBitmap</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.BitmapSource">
            <summary>	
            Exposes methods that refers to a source from which pixels are retrieved, but cannot be written back to.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapSource']/*"/>	
            <unmanaged>IWICBitmapSource</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapSource.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.BitmapSource"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.WIC.BitmapSource.GetSize(System.Int32@,System.Int32@)">
            <summary>	
            Retrieves the pixel width and height of the bitmap.	
            </summary>	
            <param name="widthRef"><para>A reference that receives the pixel width of the bitmap.</para></param>	
            <param name="heightRef"><para>A reference that receives the pixel height of the bitmap</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapSource::GetSize']/*"/>	
            <unmanaged>HRESULT IWICBitmapSource::GetSize([Out] unsigned int* puiWidth,[Out] unsigned int* puiHeight)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapSource.GetPixelFormat(System.Guid@)">
            <summary>	
            Retrieves the pixel format of the bitmap source..	
            </summary>	
            <param name="pixelFormatRef"><para>Receives the pixel format <see cref="T:System.Guid"/> the bitmap is stored in. For a list of available pixel formats, see the Native Pixel Formats topic.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The pixel format returned by this method is not necessarily the pixel format the image is stored as. The codec may perform a format conversion from the storage pixel format to an output pixel format.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapSource::GetPixelFormat']/*"/>	
            <unmanaged>HRESULT IWICBitmapSource::GetPixelFormat([Out] GUID* pPixelFormat)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapSource.GetResolution(System.Double@,System.Double@)">
            <summary>	
            Retrieves the sampling rate between pixels and physical world measurements.	
            </summary>	
            <param name="dpiXRef"><para>A reference that receives the x-axis dpi resolution.</para></param>	
            <param name="dpiYRef"><para>A reference that receives the y-axis dpi resolution.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            Some formats, such as GIF and ICO, do not have full DPI support. For GIF, this method calculates the DPI values from the aspect ratio, using a base DPI of (96.0, 96.0). The ICO format does not support DPI at all, and the method always returns (96.0,96.0) for ICO images.Additionally, WIC itself does not transform images based on the DPI values in an image. It is up to the caller to transform an image based on the resolution returned.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapSource::GetResolution']/*"/>	
            <unmanaged>HRESULT IWICBitmapSource::GetResolution([Out] double* pDpiX,[Out] double* pDpiY)</unmanaged>	
        </member>
        <!-- Badly formed XML comment ignored for member "M:SharpDX.WIC.BitmapSource.CopyPalette(SharpDX.WIC.Palette)" -->
        <member name="M:SharpDX.WIC.BitmapSource.CopyPixels(System.Nullable{SharpDX.DrawingRectangle},System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            Instructs the object to produce pixels.	
            </summary>	
            <param name="rectangleRef"><para>The rectangle to copy. A <c>null</c> value specifies the entire bitmap.</para></param>	
            <param name="stride"><para>The stride of the bitmap</para></param>	
            <param name="bufferSize"><para>The size of the buffer.</para></param>	
            <param name="bufferRef"><para>A reference to the buffer.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            CopyPixels is one of the two main image processing routines (the other being Lock) triggering the actual processing.  It instructs the object to produce pixels according to its algorithm - this may involve decoding a portion of a JPEG stored on disk, copying a block of memory, or even analytically computing a complex gradient.  The algorithm is completely dependent on the object implementing the interface.The caller can restrict the operation to a rectangle of interest (ROI) using the prc parameter.  The ROI sub-rectangle must be fully contained in the bounds of the bitmap.  Specifying a <c>null</c> ROI implies that the whole bitmap should be returned.The caller controls the memory management and must provide an output buffer (pbBuffer) for the results of the copy along with the buffer's bounds (cbBufferSize).  The cbStride parameter defines the count of bytes between two vertically adjacent pixels in the output buffer.  The caller must ensure that there is sufficient buffer to complete the call based on the width, height and pixel format of the bitmap and the sub-rectangle provided to the copy method.If the caller needs to perform numerous copies of an expensive <see cref="T:SharpDX.WIC.BitmapSource"/> such as a JPEG, it is recommended to create an in-memory <see cref="T:SharpDX.WIC.Bitmap"/> first.Codec Developer RemarksThe callee must only write to the first (prc-&gt;Width*bitsperpixel+7)/8 bytes of each line of the output buffer (in this case, a line is a consecutive string of cbStride bytes).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapSource::CopyPixels']/*"/>	
            <unmanaged>HRESULT IWICBitmapSource::CopyPixels([In, Optional] const WICRect* prc,[In] unsigned int cbStride,[In] unsigned int cbBufferSize,[In] void* pbBuffer)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapSource.CopyPixels(SharpDX.DrawingRectangle,System.Int32,SharpDX.DataStream)">
            <summary>
            Copies the pixels.
            </summary>
            <param name="rectangle">The rectangle.</param>
            <param name="stride">The stride.</param>
            <param name="output">The output stream.</param>
            <returns></returns>
            <unmanaged>HRESULT IWICBitmapSource::CopyPixels([In, Optional] const WICRect* prc,[In] unsigned int cbStride,[In] unsigned int cbBufferSize,[In] void* pbBuffer)</unmanaged>
        </member>
        <member name="M:SharpDX.WIC.BitmapSource.CopyPixels(System.Int32,SharpDX.DataStream)">
            <summary>
            Copies the pixels.
            </summary>
            <param name="stride">The stride.</param>
            <param name="output">The output stream.</param>
            <returns></returns>
            <unmanaged>HRESULT IWICBitmapSource::CopyPixels([In, Optional] const WICRect* prc,[In] unsigned int cbStride,[In] unsigned int cbBufferSize,[In] void* pbBuffer)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.BitmapSource.PixelFormat">
            <summary>	
            Retrieves the pixel format of the bitmap source..	
            </summary>	
            <remarks>	
            The pixel format returned by this method is not necessarily the pixel format the image is stored as. The codec may perform a format conversion from the storage pixel format to an output pixel format.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapSource::GetPixelFormat']/*"/>	
            <unmanaged>GetPixelFormat</unmanaged>	
            <unmanaged>HRESULT IWICBitmapSource::GetPixelFormat([Out] GUID* pPixelFormat)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.BitmapSource.Size">
            <summary>
            Gets the size.
            </summary>
            <unmanaged>HRESULT IWICBitmapSource::GetSize([Out] unsigned int* puiWidth,[Out] unsigned int* puiHeight)</unmanaged>
        </member>
        <member name="M:SharpDX.WIC.Bitmap.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.Bitmap"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <!-- Badly formed XML comment ignored for member "M:SharpDX.WIC.Bitmap.Lock(System.Nullable{SharpDX.DrawingRectangle},SharpDX.WIC.BitmapLockFlags)" -->
        <member name="M:SharpDX.WIC.Bitmap.SetPalette(SharpDX.WIC.Palette)">
            <summary>	
            Provides access for palette modifications.	
            </summary>	
            <param name="paletteRef"><para>The palette to use for conversion.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmap::SetPalette']/*"/>	
            <unmanaged>HRESULT IWICBitmap::SetPalette([In, Optional] IWICPalette* pIPalette)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.Bitmap.SetResolution(System.Double,System.Double)">
            <summary>	
            Changes the physical resolution of the image.	
            </summary>	
            <param name="dpiX"><para>The horizontal resolution.</para></param>	
            <param name="dpiY"><para>The vertical resolution.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            This method has no effect on the actual pixels or samples stored in the bitmap.  Instead the interpretation of the sampling rate is modified.  This means that a 96 DPI image which is 96 pixels wide is one inch.  If the physical resolution is modified to 48 DPI, then the bitmap is considered to be 2 inches wide but has the same number of pixels.   If the resolution is less than REAL_EPSILON (1.192092896e-07F) the error code WINCODEC_ERR_INVALIDPARAMETER is returned.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmap::SetResolution']/*"/>	
            <unmanaged>HRESULT IWICBitmap::SetResolution([In] double dpiX,[In] double dpiY)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.Bitmap.#ctor(SharpDX.WIC.ImagingFactory,System.Int32,System.Int32,System.Guid,SharpDX.WIC.BitmapCreateCacheOption)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.Bitmap"/> class.
            </summary>
            <param name="factory">The factory.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="pixelFormat">The pixel format. <see cref="T:SharpDX.WIC.PixelFormat"/> for a list of valid formats. </param>
            <param name="option">The option.</param>
            <unmanaged>HRESULT IWICImagingFactory::CreateBitmap([In] unsigned int uiWidth,[In] unsigned int uiHeight,[In] const GUID&amp; pixelFormat,[In] WICBitmapCreateCacheOption option,[Out, Fast] IWICBitmap** ppIBitmap)</unmanaged>
        </member>
        <member name="M:SharpDX.WIC.Bitmap.#ctor(SharpDX.WIC.ImagingFactory,System.Int32,System.Int32,System.Guid,SharpDX.DataRectangle)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.Bitmap"/> class from a memory location using <see cref="T:SharpDX.DataRectangle"/>.
            </summary>
            <param name="factory">The factory.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="pixelFormat">The pixel format.</param>
            <param name="dataRectangle">The data rectangle.</param>
            <unmanaged>HRESULT IWICImagingFactory::CreateBitmapFromMemory([In] unsigned int uiWidth,[In] unsigned int uiHeight,[In] const GUID&amp; pixelFormat,[In] unsigned int cbStride,[In] unsigned int cbBufferSize,[In] void* pbBuffer,[Out, Fast] IWICBitmap** ppIBitmap)</unmanaged>
        </member>
        <member name="M:SharpDX.WIC.Bitmap.#ctor(SharpDX.WIC.ImagingFactory,SharpDX.WIC.BitmapSource,SharpDX.WIC.BitmapCreateCacheOption)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.Bitmap"/> class from a <see cref="T:SharpDX.WIC.BitmapSource"/>
            </summary>
            <param name="factory">The factory.</param>
            <param name="bitmapSource">The bitmap source ref.</param>
            <param name="option">The option.</param>
            <unmanaged>HRESULT IWICImagingFactory::CreateBitmapFromSource([In, Optional] IWICBitmapSource* pIBitmapSource,[In] WICBitmapCreateCacheOption option,[Out, Fast] IWICBitmap** ppIBitmap)</unmanaged>
        </member>
        <member name="M:SharpDX.WIC.Bitmap.#ctor(SharpDX.WIC.ImagingFactory,SharpDX.WIC.BitmapSource,SharpDX.DrawingRectangle)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.Bitmap"/> class from a <see cref="T:SharpDX.WIC.BitmapSource"/>.
            </summary>
            <param name="factory">The factory.</param>
            <param name="bitmapSource">The bitmap source.</param>
            <param name="rectangle">The rectangle.</param>
            <unmanaged>HRESULT IWICImagingFactory::CreateBitmapFromSourceRect([In, Optional] IWICBitmapSource* pIBitmapSource,[In] unsigned int x,[In] unsigned int y,[In] unsigned int width,[In] unsigned int height,[Out, Fast] IWICBitmap** ppIBitmap)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.Bitmap.Palette">
            <summary>	
            Provides access for palette modifications.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmap::SetPalette']/*"/>	
            <unmanaged>SetPalette</unmanaged>	
            <unmanaged>HRESULT IWICBitmap::SetPalette([In, Optional] IWICPalette* pIPalette)</unmanaged>
        </member>
        <member name="T:SharpDX.WIC.BitmapClipper">
            <summary>	
            Exposes methods that produce a clipped version of the input bitmap for a specified rectangular region of interest.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapClipper']/*"/>	
            <unmanaged>IWICBitmapClipper</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapClipper.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.BitmapClipper"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.WIC.BitmapClipper.Initialize(SharpDX.WIC.BitmapSource,SharpDX.DrawingRectangle)">
            <summary>	
            Initializes the bitmap clipper with the provided parameters.	
            </summary>	
            <param name="sourceRef"><para>he input bitmap source.</para></param>	
            <param name="rectangleRef"><para>The rectangle of the bitmap source to clip.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapClipper::Initialize']/*"/>	
            <unmanaged>HRESULT IWICBitmapClipper::Initialize([In, Optional] IWICBitmapSource* pISource,[In] const WICRect* prc)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapClipper.#ctor(SharpDX.WIC.ImagingFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.BitmapClipper"/> class.
            </summary>
            <param name="factory">The factory.</param>
        </member>
        <member name="T:SharpDX.WIC.BitmapCodecInfo">
            <summary>	
            Exposes methods that provide information about a particular codec.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapCodecInfo']/*"/>	
            <unmanaged>IWICBitmapCodecInfo</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.ComponentInfo">
            <summary>	
            Exposes methods that provide component information.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICComponentInfo']/*"/>	
            <unmanaged>IWICComponentInfo</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ComponentInfo.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.ComponentInfo"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.WIC.ComponentInfo.GetComponentType(SharpDX.WIC.ComponentType@)">
            <summary>	
            Retrieves the component's <see cref="T:SharpDX.WIC.ComponentType"/>.	
            </summary>	
            <param name="typeRef">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICComponentInfo::GetComponentType']/*"/>	
            <unmanaged>HRESULT IWICComponentInfo::GetComponentType([Out] WICComponentType* pType)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ComponentInfo.GetCLSID(System.Guid@)">
            <summary>	
            Retrieves the component's class identifier (CLSID)	
            </summary>	
            <param name="clsidRef"><para>A reference that receives the component's CLSID.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICComponentInfo::GetCLSID']/*"/>	
            <unmanaged>HRESULT IWICComponentInfo::GetCLSID([Out] GUID* pclsid)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ComponentInfo.GetSigningStatus(System.Int32@)">
            <summary>	
            Retrieves the signing status of the component.	
            </summary>	
            <param name="statusRef"><para>A reference that receives the <see cref="T:SharpDX.WIC.ComponentSigning"/> status of the component.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            Signing is unused by WIC. Therefore, all components <see cref="F:SharpDX.WIC.ComponentSigning.Signed"/>.This function can be used to determine whether a component has no binary component or has been added to the disabled components list in the registry.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICComponentInfo::GetSigningStatus']/*"/>	
            <unmanaged>HRESULT IWICComponentInfo::GetSigningStatus([Out] unsigned int* pStatus)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ComponentInfo.GetAuthor(System.Int32,System.IntPtr,System.Int32@)">
            <summary>	
            Retrieves the name of component's author.	
            </summary>	
            <param name="cchAuthor"><para>The size of the wzAuthor buffer.</para></param>	
            <param name="author"><para>A reference that receives the name of the component's author. The locale of the string depends on the value that the codec wrote to the registry at install time. For built-in components, these strings are always in English.</para></param>	
            <param name="cchActualRef"><para>A reference that receives the actual length of the component's authors name. The author name is optional; if an author name is not specified by the component, the length returned is 0.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            If cchAuthor is 0 and wzAuthor is <c>null</c>, the required buffer size is returned in pccchActual.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICComponentInfo::GetAuthor']/*"/>	
            <unmanaged>HRESULT IWICComponentInfo::GetAuthor([In] unsigned int cchAuthor,[In] void* wzAuthor,[Out] unsigned int* pcchActual)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ComponentInfo.GetVendorGUID(System.Guid@)">
            <summary>	
            Retrieves the vendor <see cref="T:System.Guid"/>.	
            </summary>	
            <param name="guidVendorRef"><para>A reference that receives the component's vendor <see cref="T:System.Guid"/>.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICComponentInfo::GetVendorGUID']/*"/>	
            <unmanaged>HRESULT IWICComponentInfo::GetVendorGUID([Out] GUID* pguidVendor)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ComponentInfo.GetVersion(System.Int32,System.IntPtr,System.Int32@)">
            <summary>	
            Retrieves the component's version.	
            </summary>	
            <param name="cchVersion"><para>The size of the wzVersion buffer.</para></param>	
            <param name="version"><para>A reference that receives a culture invariant string of the component's version.</para></param>	
            <param name="cchActualRef"><para>A reference that receives the actual length of the component's version. The version is optional; if a value is not specified by the component, the length returned is 0.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            All built-in components return "1.0.0.0", except for pixel formats, which do not have a version.If cchAuthor is 0 and wzAuthor is <c>null</c>, the required buffer size is returned in pccchActual.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICComponentInfo::GetVersion']/*"/>	
            <unmanaged>HRESULT IWICComponentInfo::GetVersion([In] unsigned int cchVersion,[In] void* wzVersion,[Out] unsigned int* pcchActual)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ComponentInfo.GetSpecVersion(System.Int32,System.IntPtr,System.Int32@)">
            <summary>	
            Retrieves the component's specification version.	
            </summary>	
            <param name="cchSpecVersion"><para>The size of the wzSpecVersion buffer.</para></param>	
            <param name="specVersion"><para>When this method returns, contain a culture invarient string of the component's specification version. The version form is NN.NN.NN.NN.</para></param>	
            <param name="cchActualRef"><para>A reference that receives the actual length of the component's specification version. The specification version is optional; if a value is not specified by the component, the length returned is 0.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            All built-in components return "1.0.0.0", except for pixel formats, which do not have a spec version.If cchAuthor is 0 and wzAuthor is <c>null</c>, the required buffer size is returned in pccchActual.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICComponentInfo::GetSpecVersion']/*"/>	
            <unmanaged>HRESULT IWICComponentInfo::GetSpecVersion([In] unsigned int cchSpecVersion,[In] void* wzSpecVersion,[Out] unsigned int* pcchActual)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ComponentInfo.GetFriendlyName(System.Int32,System.IntPtr,System.Int32@)">
            <summary>	
            Retrieves the component's friendly name, which is a human-readable display name for the component.	
            </summary>	
            <param name="cchFriendlyName"><para>The size of the wzFriendlyName buffer.</para></param>	
            <param name="friendlyName"><para>A reference that receives the friendly name of the component. The locale of the string depends on the value that the codec wrote to the registry at install time. For built-in components, these strings are always in English.</para></param>	
            <param name="cchActualRef"><para>A reference that receives the actual length of the component's friendly name.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            If cchFriendlyName is 0 and wzFriendlyName is <c>null</c>, the required buffer size is returned in pccchActual.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICComponentInfo::GetFriendlyName']/*"/>	
            <unmanaged>HRESULT IWICComponentInfo::GetFriendlyName([In] unsigned int cchFriendlyName,[In] void* wzFriendlyName,[Out] unsigned int* pcchActual)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ComponentInfo.#ctor(SharpDX.WIC.ImagingFactory,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.ComponentInfo"/> class.
            </summary>
            <param name="factory">The factory.</param>
            <param name="clsidComponent">The CLSID component.</param>
        </member>
        <member name="P:SharpDX.WIC.ComponentInfo.ComponentType">
            <summary>	
            Retrieves the component's <see cref="T:SharpDX.WIC.ComponentType"/>.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICComponentInfo::GetComponentType']/*"/>	
            <unmanaged>GetComponentType</unmanaged>	
            <unmanaged>HRESULT IWICComponentInfo::GetComponentType([Out] WICComponentType* pType)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.ComponentInfo.CLSID">
            <summary>	
            Retrieves the component's class identifier (CLSID)	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICComponentInfo::GetCLSID']/*"/>	
            <unmanaged>GetCLSID</unmanaged>	
            <unmanaged>HRESULT IWICComponentInfo::GetCLSID([Out] GUID* pclsid)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.ComponentInfo.SigningStatus">
            <summary>	
            Retrieves the signing status of the component.	
            </summary>	
            <remarks>	
            Signing is unused by WIC. Therefore, all components <see cref="F:SharpDX.WIC.ComponentSigning.Signed"/>.This function can be used to determine whether a component has no binary component or has been added to the disabled components list in the registry.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICComponentInfo::GetSigningStatus']/*"/>	
            <unmanaged>GetSigningStatus</unmanaged>	
            <unmanaged>HRESULT IWICComponentInfo::GetSigningStatus([Out] unsigned int* pStatus)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.ComponentInfo.VendorGUID">
            <summary>	
            Retrieves the vendor <see cref="T:System.Guid"/>.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICComponentInfo::GetVendorGUID']/*"/>	
            <unmanaged>GetVendorGUID</unmanaged>	
            <unmanaged>HRESULT IWICComponentInfo::GetVendorGUID([Out] GUID* pguidVendor)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.ComponentInfo.Author">
            <summary>
            Gets the author.
            </summary>
            <unmanaged>HRESULT IWICComponentInfo::GetAuthor([In] unsigned int cchAuthor,[InOut, Buffer, Optional] wchar_t* wzAuthor,[Out] unsigned int* pcchActual)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.ComponentInfo.Version">
            <summary>
            Gets the version.
            </summary>
            <unmanaged>HRESULT IWICComponentInfo::GetVersion([In] unsigned int cchVersion,[InOut, Buffer, Optional] wchar_t* wzVersion,[Out] unsigned int* pcchActual)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.ComponentInfo.SpecVersion">
            <summary>
            Gets the spec version.
            </summary>
            <unmanaged>HRESULT IWICComponentInfo::GetSpecVersion([In] unsigned int cchSpecVersion,[InOut, Buffer, Optional] wchar_t* wzSpecVersion,[Out] unsigned int* pcchActual)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.ComponentInfo.FriendlyName">
            <summary>
            Gets the friendly name.
            </summary>
            <value>
            The name of the friendly.
            </value>
            <unmanaged>HRESULT IWICComponentInfo::GetFriendlyName([In] unsigned int cchFriendlyName,[InOut, Buffer, Optional] wchar_t* wzFriendlyName,[Out] unsigned int* pcchActual)</unmanaged>
        </member>
        <member name="M:SharpDX.WIC.BitmapCodecInfo.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.BitmapCodecInfo"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.WIC.BitmapCodecInfo.GetContainerFormat(System.Guid@)">
            <summary>	
            Retrieves the container <see cref="T:System.Guid"/> associated with the codec.	
            </summary>	
            <param name="guidContainerFormatRef"><para>Receives the container <see cref="T:System.Guid"/>.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapCodecInfo::GetContainerFormat']/*"/>	
            <unmanaged>HRESULT IWICBitmapCodecInfo::GetContainerFormat([Out] GUID* pguidContainerFormat)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapCodecInfo.GetPixelFormats(System.Int32,System.Guid[],System.Int32@)">
            <summary>	
            Retrieves the pixel formats the codec supports.	
            </summary>	
            <param name="formats"><para>The size of the pguidPixelFormats array. Use 0 on first call to determine the needed array size.</para></param>	
            <param name="guidPixelFormatsRef"><para>Receives the supported pixel formats. Use <c>null</c> on first call to determine needed array size.</para></param>	
            <param name="actualRef"><para>The array size needed to retrieve all supported pixel formats.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The usage pattern for this method is a two call process. The first call retrieves the array size needed to retrieve all the supported pixel formats by calling it with cFormats set to 0 and pguidPixelFormats set to <c>null</c>. This call sets pcActual to the array size needed. Once the needed array size is determined, a second GetPixelFormats call with pguidPixelFormats set to an array of the appropriate size will retrieve the pixel formats.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapCodecInfo::GetPixelFormats']/*"/>	
            <unmanaged>HRESULT IWICBitmapCodecInfo::GetPixelFormats([In] unsigned int cFormats,[In, Buffer] GUID* pguidPixelFormats,[Out] unsigned int* pcActual)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapCodecInfo.GetColorManagementVersion(System.Int32,System.IntPtr,System.Int32@)">
            <summary>	
            Retrieves the color manangement version number the codec supports.	
            </summary>	
            <param name="cchColorManagementVersion"><para>The size of the version buffer. Use 0 on first call to determine needed buffer size.</para></param>	
            <param name="colorManagementVersion"><para>Receives the color management version number. Use <c>null</c> on first call to determine needed buffer size.</para></param>	
            <param name="cchActualRef"><para>The actual buffer size needed to retrieve the full color management version number.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The usage pattern for this method is a two call process. The first call retrieves the buffer size needed to retrieve the full color management version number by calling it with cchColorManagementVersion set to 0 and wzColorManagementVersion set to <c>null</c>. This call sets pcchActual to the buffer size needed. Once the needed buffer size is determined, a second GetColorManagementVersion call with cchColorManagementVersion set to the buffer size and wzColorManagementVersion set to a buffer of the appropriate size will retrieve the pixel formats.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapCodecInfo::GetColorManagementVersion']/*"/>	
            <unmanaged>HRESULT IWICBitmapCodecInfo::GetColorManagementVersion([In] unsigned int cchColorManagementVersion,[In] void* wzColorManagementVersion,[Out] unsigned int* pcchActual)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapCodecInfo.GetDeviceManufacturer(System.Int32,System.IntPtr,System.Int32@)">
            <summary>	
            Retrieves the name of the device manufacture associated with the codec.	
            </summary>	
            <param name="cchDeviceManufacturer"><para>The size of the device manufacture's name. Use 0 on first call to determine needed buffer size.</para></param>	
            <param name="deviceManufacturer"><para>Receives the device manufacture's name. Use <c>null</c> on first call to determine needed buffer size.</para></param>	
            <param name="cchActualRef"><para>The actual buffer size needed to retrieve the device manufacture's name.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The usage pattern for this method is a two call process. The first call retrieves the buffer size needed to retrieve the full color management version number by calling it with cchDeviceManufacturer set to 0 and wzDeviceManufacturer set to <c>null</c>. This call sets pcchActual to the buffer size needed. Once the needed buffer size is determined, a second GetDeviceManufacturer call with cchDeviceManufacturer set to the buffer size and wzDeviceManufacturer set to a buffer of the appropriate size will retrieve the pixel formats.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapCodecInfo::GetDeviceManufacturer']/*"/>	
            <unmanaged>HRESULT IWICBitmapCodecInfo::GetDeviceManufacturer([In] unsigned int cchDeviceManufacturer,[In] void* wzDeviceManufacturer,[Out] unsigned int* pcchActual)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapCodecInfo.GetDeviceModels(System.Int32,System.IntPtr,System.Int32@)">
            <summary>	
            Retrieves a comma delimited list of device models associated with the codec.	
            </summary>	
            <param name="cchDeviceModels"><para>The size of the device models buffer. Use 0 on first call to determine needed buffer size.</para></param>	
            <param name="deviceModels"><para>Receives a comma delimited list of device model names associated with the codec. Use <c>null</c> on first call to determine needed buffer size.</para></param>	
            <param name="cchActualRef"><para>The actual buffer size needed to retrieve all of the device model names.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The usage pattern for this method is a two call process. The first call retrieves the buffer size needed to retrieve the full color management version number by calling it with cchDeviceModels set to 0 and wzDeviceModels set to <c>null</c>. This call sets pcchActual to the buffer size needed. Once the needed buffer size is determined, a second GetDeviceModels call with cchDeviceModels set to the buffer size and wzDeviceModels set to a buffer of the appropriate size will retrieve the pixel formats.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapCodecInfo::GetDeviceModels']/*"/>	
            <unmanaged>HRESULT IWICBitmapCodecInfo::GetDeviceModels([In] unsigned int cchDeviceModels,[In] void* wzDeviceModels,[Out] unsigned int* pcchActual)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapCodecInfo.GetMimeTypes(System.Int32,System.IntPtr,System.Int32@)">
            <summary>	
            Retrieves a comma delimited sequence of mime types associated with the codec.	
            </summary>	
            <param name="cchMimeTypes"><para>The size of the mime types buffer.  Use 0 on first call to determine needed buffer size.</para></param>	
            <param name="mimeTypes"><para>Receives the mime types associated with the codec. Use <c>null</c> on first call to determine needed buffer size.</para></param>	
            <param name="cchActualRef"><para>The actual buffer size needed to retrieve all mime types associated with the codec.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The usage pattern for this method is a two call process. The first call retrieves the buffer size needed to retrieve the full color management version number by calling it with cchMimeTypes set to 0 and wzMimeTypes set to <c>null</c>. This call sets pcchActual to the buffer size needed. Once the needed buffer size is determined, a second GetMimeTypes call with cchMimeTypes set to the buffer size and wzMimeTypes set to a buffer of the appropriate size will retrieve the pixel formats.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapCodecInfo::GetMimeTypes']/*"/>	
            <unmanaged>HRESULT IWICBitmapCodecInfo::GetMimeTypes([In] unsigned int cchMimeTypes,[In] void* wzMimeTypes,[Out] unsigned int* pcchActual)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapCodecInfo.GetFileExtensions(System.Int32,System.IntPtr,System.Int32@)">
            <summary>	
            Retrieves a comma delimited list of the file name extensions associated with the codec.	
            </summary>	
            <param name="cchFileExtensions"><para>The size of the file name extension buffer. Use 0 on first call to determine needed buffer size.</para></param>	
            <param name="fileExtensions"><para>Receives a comma delimited list  of file name extensions associated with the codec. Use <c>null</c> on first call to determine needed buffer size.</para></param>	
            <param name="cchActualRef"><para>The actual buffer size needed to retrieve all file name extensions associated with the codec. </para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The default extension for an image encoder is the first item in the list of returned extensions.The usage pattern for this method is a two call process. The first call retrieves the buffer size needed to retrieve the full color management version number by calling it with cchFileExtensions set to 0 and wzFileExtensions set to <c>null</c>. This call sets pcchActual to the buffer size needed. Once the needed buffer size is determined, a second GetFileExtensions call with cchFileExtensions set to the buffer size and wzFileExtensions set to a buffer of the appropriate size will retrieve the pixel formats.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapCodecInfo::GetFileExtensions']/*"/>	
            <unmanaged>HRESULT IWICBitmapCodecInfo::GetFileExtensions([In] unsigned int cchFileExtensions,[In] void* wzFileExtensions,[Out] unsigned int* pcchActual)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapCodecInfo.IsAnimationSupported_(System.Boolean@)">
            <summary>	
            Retrieves a value indicating whether the codec supports animation.	
            </summary>	
            <param name="fSupportAnimationRef"><para>Receives TRUE if the codec supports images with timing information; otherwise, <see cref="F:SharpDX.Result.False"/>. </para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapCodecInfo::DoesSupportAnimation']/*"/>	
            <unmanaged>HRESULT IWICBitmapCodecInfo::DoesSupportAnimation([Out] BOOL* pfSupportAnimation)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapCodecInfo.IsChromakeySupported_(System.Boolean@)">
            <summary>	
            Retrieves a value indicating whether the codec supports chromakeys.	
            </summary>	
            <param name="fSupportChromakeyRef"><para>Receives TRUE if the codec supports chromakeys; otherwise, <see cref="F:SharpDX.Result.False"/>.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapCodecInfo::DoesSupportChromakey']/*"/>	
            <unmanaged>HRESULT IWICBitmapCodecInfo::DoesSupportChromakey([Out] BOOL* pfSupportChromakey)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapCodecInfo.IsLosslessSupported_(System.Boolean@)">
            <summary>	
            Retrieves a value indicating whether the codec supports lossless formats.	
            </summary>	
            <param name="fSupportLosslessRef"><para>Receives TRUE if the codec supports lossless formats; otherwise, <see cref="F:SharpDX.Result.False"/>.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapCodecInfo::DoesSupportLossless']/*"/>	
            <unmanaged>HRESULT IWICBitmapCodecInfo::DoesSupportLossless([Out] BOOL* pfSupportLossless)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapCodecInfo.IsMultiframeSupported_(System.Boolean@)">
            <summary>	
            Retrieves a value indicating whether the codec supports multi frame images.	
            </summary>	
            <param name="fSupportMultiframeRef"><para>Receives TRUE if the codec supports multi frame images; otherwise, <see cref="F:SharpDX.Result.False"/>.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapCodecInfo::DoesSupportMultiframe']/*"/>	
            <unmanaged>HRESULT IWICBitmapCodecInfo::DoesSupportMultiframe([Out] BOOL* pfSupportMultiframe)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapCodecInfo.MatchesMimeType(System.String)">
            <summary>	
            Retrieves a value indicating whether the given mime type matches the mime type of the codec.	
            </summary>	
            <param name="mimeType"><para>The mime type to compare.</para></param>	
            <returns><para>Receives TRUE if the mime types match; otherwise, <see cref="F:SharpDX.Result.False"/>.</para></returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapCodecInfo::MatchesMimeType']/*"/>	
            <unmanaged>HRESULT IWICBitmapCodecInfo::MatchesMimeType([In] const wchar_t* wzMimeType,[Out] BOOL* pfMatches)</unmanaged>	
        </member>
        <member name="P:SharpDX.WIC.BitmapCodecInfo.ContainerFormat">
            <summary>	
            Retrieves the container <see cref="T:System.Guid"/> associated with the codec.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapCodecInfo::GetContainerFormat']/*"/>	
            <unmanaged>GetContainerFormat</unmanaged>	
            <unmanaged>HRESULT IWICBitmapCodecInfo::GetContainerFormat([Out] GUID* pguidContainerFormat)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.BitmapCodecInfo.IsAnimationSupported">
            <summary>	
            Retrieves a value indicating whether the codec supports animation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapCodecInfo::DoesSupportAnimation']/*"/>	
            <unmanaged>DoesSupportAnimation</unmanaged>	
            <unmanaged>HRESULT IWICBitmapCodecInfo::DoesSupportAnimation([Out] BOOL* pfSupportAnimation)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.BitmapCodecInfo.IsChromakeySupported">
            <summary>	
            Retrieves a value indicating whether the codec supports chromakeys.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapCodecInfo::DoesSupportChromakey']/*"/>	
            <unmanaged>DoesSupportChromakey</unmanaged>	
            <unmanaged>HRESULT IWICBitmapCodecInfo::DoesSupportChromakey([Out] BOOL* pfSupportChromakey)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.BitmapCodecInfo.IsLosslessSupported">
            <summary>	
            Retrieves a value indicating whether the codec supports lossless formats.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapCodecInfo::DoesSupportLossless']/*"/>	
            <unmanaged>DoesSupportLossless</unmanaged>	
            <unmanaged>HRESULT IWICBitmapCodecInfo::DoesSupportLossless([Out] BOOL* pfSupportLossless)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.BitmapCodecInfo.IsMultiframeSupported">
            <summary>	
            Retrieves a value indicating whether the codec supports multi frame images.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapCodecInfo::DoesSupportMultiframe']/*"/>	
            <unmanaged>DoesSupportMultiframe</unmanaged>	
            <unmanaged>HRESULT IWICBitmapCodecInfo::DoesSupportMultiframe([Out] BOOL* pfSupportMultiframe)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.BitmapCodecInfo.PixelFormats">
            <summary>
            Gets the pixel formats the codec supports.
            </summary>
        </member>
        <member name="P:SharpDX.WIC.BitmapCodecInfo.ColorManagementVersion">
            <summary>
            Gets the color manangement version number the codec supports.
            </summary>
        </member>
        <member name="P:SharpDX.WIC.BitmapCodecInfo.DeviceManufacturer">
            <summary>
            Gets the name of the device manufacture associated with the codec.
            </summary>
        </member>
        <member name="P:SharpDX.WIC.BitmapCodecInfo.DeviceModels">
            <summary>
            Gets a comma delimited list of device models associated with the codec.
            </summary>
        </member>
        <member name="P:SharpDX.WIC.BitmapCodecInfo.MimeTypes">
            <summary>
            Gets a comma delimited sequence of mime types associated with the codec.
            </summary>
        </member>
        <member name="P:SharpDX.WIC.BitmapCodecInfo.FileExtensions">
            <summary>
            Gets a comma delimited list of the file name extensions associated with the codec.
            </summary>
        </member>
        <member name="T:SharpDX.WIC.BitmapCodecProgressNotification">
            <summary>	
            When a codec is performing an I/O operation such as CopyPixels on a large image, it may take several seconds or even minutes to complete. When end users are unable to interrupt a long-running operation, they may think the application has hung. Users will often close an application, or even restart their computers, in an attempt to regain control of their computer when an application becomes unresponsive.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapCodecProgressNotification']/*"/>	
            <unmanaged>IWICBitmapCodecProgressNotification</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapCodecProgressNotification.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.BitmapCodecProgressNotification"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.WIC.BitmapCodecProgressNotification.RegisterProgressNotification(SharpDX.FunctionCallback,System.IntPtr,System.Int32)">
            <summary>	
            Registers a progress notification callback function.	
            </summary>	
            <param name="fnProgressNotificationRef"><para>A function reference to the application defined progress notification callback function. See ProgressNotificationCallback for the callback signature.</para></param>	
            <param name="vDataRef"><para>A reference to component data for the callback method.</para></param>	
            <param name="progressFlags"><para>The <see cref="T:SharpDX.WIC.ProgressOperation"/> and <see cref="T:SharpDX.WIC.ProgressNotification"/> flags to use for progress notification.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            Applications can only register a single callback. Subsequent registration calls will replace the previously registered callback. To unregister a callback, pass in <c>null</c> or register a new callback function.Progress is reported in an increasing order between 0.0 and 1.0.  If dwProgressFlags includes <see cref="F:SharpDX.WIC.ProgressNotification.Begin"/>, the callback is guaranteed to be called with progress 0.0. If dwProgressFlags includes <see cref="F:SharpDX.WIC.ProgressNotification.End"/>, the callback is guaranteed to be called with progress 1.0.WICProgressNotificationFrequent increases the frequency in which the callback is called. If an operation is expected to take more than 30 seconds, <see cref="F:SharpDX.WIC.ProgressNotification.Frequent"/> should be added to dwProgressFlags.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapCodecProgressNotification::RegisterProgressNotification']/*"/>	
            <unmanaged>HRESULT IWICBitmapCodecProgressNotification::RegisterProgressNotification([In, Optional] __function__stdcall* pfnProgressNotification,[In, Optional] void* pvData,[In] unsigned int dwProgressFlags)</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.BitmapDecoder">
            <summary>	
            Exposes methods that represent a decoder.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapDecoder']/*"/>	
            <unmanaged>IWICBitmapDecoder</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapDecoder.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.BitmapDecoder"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.WIC.BitmapDecoder.QueryCapability_(System.IntPtr)">
            <summary>	
            Retrieves the capabilities of the decoder based on the specified stream.	
            </summary>	
            <param name="streamRef"><para>The stream to retrieve the decoder capabilities from.</para></param>	
            <returns><para>The <see cref="T:SharpDX.WIC.BitmapDecoderCapabilities"/> of the decoder.</para></returns>	
            <remarks>	
            Custom decoder implementations should save the current position of the specified <see cref="T:SharpDX.Win32.IStream"/>, read whatever information is necessary in order to determine which capabilities it can provide for the supplied stream, and restore the stream position.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapDecoder::QueryCapability']/*"/>	
            <unmanaged>HRESULT IWICBitmapDecoder::QueryCapability([In, Optional] IStream* pIStream,[Out] WICBitmapDecoderCapabilities* pdwCapability)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapDecoder.Initialize_(System.IntPtr,SharpDX.WIC.DecodeOptions)">
            <summary>	
            Initializes the decoder with the provided stream.	
            </summary>	
            <param name="streamRef"><para>The stream to use for initialization.</para> <para>The stream contains the encoded pixels which are decoded each time the CopyPixels method on the <see cref="T:SharpDX.WIC.BitmapFrameDecode"/> interface (see GetFrame) is invoked.</para></param>	
            <param name="cacheOptions"><para>The <see cref="T:SharpDX.WIC.DecodeOptions"/> to use for initialization.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapDecoder::Initialize']/*"/>	
            <unmanaged>HRESULT IWICBitmapDecoder::Initialize([In, Optional] IStream* pIStream,[In] WICDecodeOptions cacheOptions)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapDecoder.GetContainerFormat(System.Guid@)">
            <summary>	
            Retrieves the image's container format.	
            </summary>	
            <param name="guidContainerFormatRef"><para>A reference that receives the image's container format <see cref="T:System.Guid"/>.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapDecoder::GetContainerFormat']/*"/>	
            <unmanaged>HRESULT IWICBitmapDecoder::GetContainerFormat([Out] GUID* pguidContainerFormat)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapDecoder.GetDecoderInfo(SharpDX.WIC.BitmapDecoderInfo@)">
            <summary>	
            Retrieves an <see cref="T:SharpDX.WIC.BitmapDecoderInfo"/> for the image.	
            </summary>	
            <param name="decoderInfoOut">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapDecoder::GetDecoderInfo']/*"/>	
            <unmanaged>HRESULT IWICBitmapDecoder::GetDecoderInfo([Out] IWICBitmapDecoderInfo** ppIDecoderInfo)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapDecoder.CopyPalette(SharpDX.WIC.Palette)">
            <summary>	
            Copies the decoder's <see cref="T:SharpDX.WIC.Palette"/> .	
            </summary>	
            <param name="paletteRef">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            CopyPalette returns a global palette (a palette that applies to all the frames in the image) if there is one; otherwise, it returns WINCODEC_ERR_PALETTEUNAVAILABLE. If an image doesn't have a global palette, it may still have a frame-level palette, which can be retrieved using IWICBitmapFrameDecode::CopyPalette.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapDecoder::CopyPalette']/*"/>	
            <unmanaged>HRESULT IWICBitmapDecoder::CopyPalette([In, Optional] IWICPalette* pIPalette)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapDecoder.GetMetadataQueryReader(SharpDX.WIC.MetadataQueryReader@)">
            <summary>	
            Retrieves the metadata query reader from the decoder.	
            </summary>	
            <param name="metadataQueryReaderOut"><para>Receives a reference to the decoder's <see cref="T:SharpDX.WIC.MetadataQueryReader"/>.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapDecoder::GetMetadataQueryReader']/*"/>	
            <unmanaged>HRESULT IWICBitmapDecoder::GetMetadataQueryReader([Out] IWICMetadataQueryReader** ppIMetadataQueryReader)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapDecoder.GetPreview(SharpDX.WIC.BitmapSource@)">
            <summary>	
            Retrieves a preview image, if supported.	
            </summary>	
            <param name="bitmapSourceOut"><para>Receives a reference to the preview bitmap if supported.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            Not all formats support previews. Only the native Microsoft?Windows Digital Photo (WDP) codec support previews.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapDecoder::GetPreview']/*"/>	
            <unmanaged>HRESULT IWICBitmapDecoder::GetPreview([Out] IWICBitmapSource** ppIBitmapSource)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapDecoder.GetColorContexts(System.Int32,SharpDX.WIC.ColorContext[],System.Int32@)">
            <summary>	
            Retrieves the <see cref="T:SharpDX.WIC.ColorContext"/> objects of the image.	
            </summary>	
            <param name="count">No documentation.</param>	
            <param name="colorContextsOut">No documentation.</param>	
            <param name="actualCountRef">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapDecoder::GetColorContexts']/*"/>	
            <unmanaged>HRESULT IWICBitmapDecoder::GetColorContexts([In] unsigned int cCount,[Out, Buffer, Optional] IWICColorContext** ppIColorContexts,[Out] unsigned int* pcActualCount)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapDecoder.GetThumbnail(SharpDX.WIC.BitmapSource@)">
            <summary>	
            Retrieves a bitmap thumbnail of the image, if one exists	
            </summary>	
            <param name="thumbnailOut"><para>Receives a reference to the <see cref="T:SharpDX.WIC.BitmapSource"/> of the thumbnail.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            None of the native formats support global thumbnails. Joint Photographic Experts Group (JPEG), Tagged Image File Format (TIFF), and Microsoft?Windows Digital Photo (WDP) support frame level thumbnails that can be accessed through a frame's GetThumbnail method.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapDecoder::GetThumbnail']/*"/>	
            <unmanaged>HRESULT IWICBitmapDecoder::GetThumbnail([Out] IWICBitmapSource** ppIThumbnail)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapDecoder.GetFrameCount(System.Int32@)">
            <summary>	
            Retrieves the total number of frames in the image.	
            </summary>	
            <param name="countRef"><para>A reference that receives the total number of frames in the image.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapDecoder::GetFrameCount']/*"/>	
            <unmanaged>HRESULT IWICBitmapDecoder::GetFrameCount([Out] unsigned int* pCount)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapDecoder.GetFrame(System.Int32)">
            <summary>	
            Retrieves the specified frame of the image.	
            </summary>	
            <param name="index"><para>The particular frame to retrieve.</para></param>	
            <returns><para>A reference that receives a reference to the <see cref="T:SharpDX.WIC.BitmapFrameDecode"/>.</para></returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapDecoder::GetFrame']/*"/>	
            <unmanaged>HRESULT IWICBitmapDecoder::GetFrame([In] unsigned int index,[Out] IWICBitmapFrameDecode** ppIBitmapFrame)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapDecoder.#ctor(SharpDX.WIC.BitmapDecoderInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.BitmapDecoder"/> class from a <see cref="T:SharpDX.WIC.BitmapDecoderInfo"/>.
            </summary>
            <param name="bitmapDecoderInfo">The bitmap decoder info.</param>
            <unmanaged>HRESULT IWICBitmapDecoderInfo::CreateInstance([Out, Fast] IWICBitmapDecoder** ppIBitmapDecoder)</unmanaged>
        </member>
        <member name="M:SharpDX.WIC.BitmapDecoder.#ctor(SharpDX.WIC.ImagingFactory,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.BitmapDecoder"/> class from a guid. <see cref="T:SharpDX.WIC.BitmapDecoderGuids"/> for a list of default supported decoder.
            </summary>
            <param name="factory">The factory.</param>
            <param name="containerFormatGuid">The container format GUID.</param>
            <unmanaged>HRESULT IWICImagingFactory::CreateDecoder([In] const GUID&amp; guidContainerFormat,[In, Optional] const GUID* pguidVendor,[Out, Fast] IWICBitmapDecoder** ppIDecoder)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapDecoder.#ctor(SharpDX.WIC.ImagingFactory,System.Guid,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.BitmapDecoder"/> class.
            </summary>
            <param name="factory">The factory.</param>
            <param name="containerFormatGuid">The container format GUID.</param>
            <param name="guidVendorRef">The GUID vendor ref.</param>
            <unmanaged>HRESULT IWICImagingFactory::CreateDecoder([In] const GUID&amp; guidContainerFormat,[In, Optional] const GUID* pguidVendor,[Out, Fast] IWICBitmapDecoder** ppIDecoder)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapDecoder.#ctor(SharpDX.WIC.ImagingFactory,SharpDX.Win32.IStream,SharpDX.WIC.DecodeOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.BitmapDecoder"/> class from a <see cref="T:SharpDX.Win32.IStream"/>.
            </summary>
            <param name="factory">The factory.</param>
            <param name="streamRef">The stream ref.</param>
            <param name="metadataOptions">The metadata options.</param>
            <unmanaged>HRESULT IWICImagingFactory::CreateDecoderFromStream([In, Optional] IStream* pIStream,[In, Optional] const GUID* pguidVendor,[In] WICDecodeOptions metadataOptions,[Out, Fast] IWICBitmapDecoder** ppIDecoder)</unmanaged>
        </member>
        <member name="M:SharpDX.WIC.BitmapDecoder.#ctor(SharpDX.WIC.ImagingFactory,SharpDX.Win32.IStream,System.Guid,SharpDX.WIC.DecodeOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.BitmapDecoder"/> class from a <see cref="T:SharpDX.Win32.IStream"/>.
            </summary>
            <param name="factory">The factory.</param>
            <param name="streamRef">The stream ref.</param>
            <param name="guidVendorRef">The GUID vendor ref.</param>
            <param name="metadataOptions">The metadata options.</param>
            <unmanaged>HRESULT IWICImagingFactory::CreateDecoderFromStream([In, Optional] IStream* pIStream,[In, Optional] const GUID* pguidVendor,[In] WICDecodeOptions metadataOptions,[Out, Fast] IWICBitmapDecoder** ppIDecoder)</unmanaged>
        </member>
        <member name="M:SharpDX.WIC.BitmapDecoder.#ctor(SharpDX.WIC.ImagingFactory,System.String,SharpDX.WIC.DecodeOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.BitmapDecoder"/> class from a file in read mode.
            </summary>
            <param name="factory">The factory.</param>
            <param name="filename">The filename.</param>
            <param name="metadataOptions">The metadata options.</param>
            <unmanaged>HRESULT IWICImagingFactory::CreateDecoderFromFilename([In] const wchar_t* wzFilename,[In, Optional] const GUID* pguidVendor,[In] unsigned int dwDesiredAccess,[In] WICDecodeOptions metadataOptions,[Out, Fast] IWICBitmapDecoder** ppIDecoder)</unmanaged>
        </member>
        <member name="M:SharpDX.WIC.BitmapDecoder.#ctor(SharpDX.WIC.ImagingFactory,System.String,SharpDX.IO.NativeFileAccess,SharpDX.WIC.DecodeOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.BitmapDecoder"/> class from a file.
            </summary>
            <param name="factory">The factory.</param>
            <param name="filename">The filename.</param>
            <param name="desiredAccess">The desired access.</param>
            <param name="metadataOptions">The metadata options.</param>
            <unmanaged>HRESULT IWICImagingFactory::CreateDecoderFromFilename([In] const wchar_t* wzFilename,[In, Optional] const GUID* pguidVendor,[In] unsigned int dwDesiredAccess,[In] WICDecodeOptions metadataOptions,[Out, Fast] IWICBitmapDecoder** ppIDecoder)</unmanaged>
        </member>
        <member name="M:SharpDX.WIC.BitmapDecoder.#ctor(SharpDX.WIC.ImagingFactory,System.String,System.Nullable{System.Guid},SharpDX.IO.NativeFileAccess,SharpDX.WIC.DecodeOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.BitmapDecoder"/> class from a file.
            </summary>
            <param name="factory">The factory.</param>
            <param name="filename">The filename.</param>
            <param name="guidVendorRef">The GUID vendor ref.</param>
            <param name="desiredAccess">The desired access.</param>
            <param name="metadataOptions">The metadata options.</param>
            <unmanaged>HRESULT IWICImagingFactory::CreateDecoderFromFilename([In] const wchar_t* wzFilename,[In, Optional] const GUID* pguidVendor,[In] unsigned int dwDesiredAccess,[In] WICDecodeOptions metadataOptions,[Out, Fast] IWICBitmapDecoder** ppIDecoder)</unmanaged>
        </member>
        <member name="M:SharpDX.WIC.BitmapDecoder.QueryCapability(SharpDX.Win32.IStream)">
            <summary>
            Queries the capabilities of the decoder based on the specified stream.
            </summary>
            <param name="stream">The stream to retrieve the decoder capabilities from..</param>
            <returns>Capabilities of the decoder</returns>
            <unmanaged>HRESULT IWICBitmapDecoder::QueryCapability([In, Optional] IStream* pIStream,[Out] WICBitmapDecoderCapabilities* pdwCapability)</unmanaged>
        </member>
        <member name="M:SharpDX.WIC.BitmapDecoder.Initialize(SharpDX.Win32.IStream,SharpDX.WIC.DecodeOptions)">
            <summary>
            Initializes the decoder with the provided stream.
            </summary>
            <param name="stream">The stream to use for initialization.</param>
            <param name="cacheOptions">The cache options.</param>
            <returns>If the method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it throws an exception.</returns>
            <unmanaged>HRESULT IWICBitmapDecoder::Initialize([In, Optional] IStream* pIStream,[In] WICDecodeOptions cacheOptions)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.BitmapDecoder.ContainerFormat">
            <summary>	
            Retrieves the image's container format.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapDecoder::GetContainerFormat']/*"/>	
            <unmanaged>GetContainerFormat</unmanaged>	
            <unmanaged>HRESULT IWICBitmapDecoder::GetContainerFormat([Out] GUID* pguidContainerFormat)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.BitmapDecoder.DecoderInfo">
            <summary>	
            Retrieves an <see cref="T:SharpDX.WIC.BitmapDecoderInfo"/> for the image.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapDecoder::GetDecoderInfo']/*"/>	
            <unmanaged>GetDecoderInfo</unmanaged>	
            <unmanaged>HRESULT IWICBitmapDecoder::GetDecoderInfo([Out] IWICBitmapDecoderInfo** ppIDecoderInfo)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.BitmapDecoder.MetadataQueryReader">
            <summary>	
            Retrieves the metadata query reader from the decoder.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapDecoder::GetMetadataQueryReader']/*"/>	
            <unmanaged>GetMetadataQueryReader</unmanaged>	
            <unmanaged>HRESULT IWICBitmapDecoder::GetMetadataQueryReader([Out] IWICMetadataQueryReader** ppIMetadataQueryReader)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.BitmapDecoder.Preview">
            <summary>	
            Retrieves a preview image, if supported.	
            </summary>	
            <remarks>	
            Not all formats support previews. Only the native Microsoft?Windows Digital Photo (WDP) codec support previews.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapDecoder::GetPreview']/*"/>	
            <unmanaged>GetPreview</unmanaged>	
            <unmanaged>HRESULT IWICBitmapDecoder::GetPreview([Out] IWICBitmapSource** ppIBitmapSource)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.BitmapDecoder.Thumbnail">
            <summary>	
            Retrieves a bitmap thumbnail of the image, if one exists	
            </summary>	
            <remarks>	
            None of the native formats support global thumbnails. Joint Photographic Experts Group (JPEG), Tagged Image File Format (TIFF), and Microsoft?Windows Digital Photo (WDP) support frame level thumbnails that can be accessed through a frame's GetThumbnail method.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapDecoder::GetThumbnail']/*"/>	
            <unmanaged>GetThumbnail</unmanaged>	
            <unmanaged>HRESULT IWICBitmapDecoder::GetThumbnail([Out] IWICBitmapSource** ppIThumbnail)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.BitmapDecoder.FrameCount">
            <summary>	
            Retrieves the total number of frames in the image.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapDecoder::GetFrameCount']/*"/>	
            <unmanaged>GetFrameCount</unmanaged>	
            <unmanaged>HRESULT IWICBitmapDecoder::GetFrameCount([Out] unsigned int* pCount)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.BitmapDecoder.ColorContexts">
            <summary>
            Gets the <see cref="T:SharpDX.WIC.ColorContext"/> objects of the image.
            </summary>
            <unmanaged>HRESULT IWICBitmapDecoder::GetColorContexts([In] unsigned int cCount,[Out, Buffer, Optional] IWICColorContext** ppIColorContexts,[Out] unsigned int* pcActualCount)</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.BitmapDecoderInfo">
            <summary>	
            Exposes methods that provide information about a decoder.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapDecoderInfo']/*"/>	
            <unmanaged>IWICBitmapDecoderInfo</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapDecoderInfo.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.BitmapDecoderInfo"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.WIC.BitmapDecoderInfo.GetPatterns(System.Int32,SharpDX.WIC.BitmapPattern[],System.Int32@,System.Int32@)">
            <summary>	
            Retrieves the file pattern signatures supported by the decoder.	
            </summary>	
            <param name="sizePatterns"><para>The array size of the pPatterns array.</para></param>	
            <param name="patternsRef"><para>Receives a list of <see cref="T:SharpDX.WIC.BitmapPattern"/> objects supported by the decoder.</para></param>	
            <param name="atternCountRef"><para>Receives the number of patterns the decoder supports.</para></param>	
            <param name="patternsActualRef"><para>Receives the actual buffer size needed to retrieve all pattern signatures supported by the decoder. </para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            To retrieve all pattern signatures, this method should first be called with pPatterns set to <c>null</c> to retrieve the actual buffer size needed through pcbPatternsActual. Once the needed buffer size is known, allocate a buffer of the needed size and call GetPatterns again with the allocated buffer.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapDecoderInfo::GetPatterns']/*"/>	
            <unmanaged>HRESULT IWICBitmapDecoderInfo::GetPatterns([In] unsigned int cbSizePatterns,[Out, Buffer, Optional] WICBitmapPattern* pPatterns,[Out] unsigned int* pcPatterns,[Out] unsigned int* pcbPatternsActual)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapDecoderInfo.MatchesPattern_(System.IntPtr)">
            <summary>	
            Retrieves a value that indicates whether the codec recognizes the pattern within a specified stream.	
            </summary>	
            <param name="streamRef"><para>The stream to pattern match within.</para></param>	
            <returns><para>A reference that receives TRUE if the patterns match; otherwise, <see cref="F:SharpDX.Result.False"/>.</para></returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapDecoderInfo::MatchesPattern']/*"/>	
            <unmanaged>HRESULT IWICBitmapDecoderInfo::MatchesPattern([In, Optional] IStream* pIStream,[Out] BOOL* pfMatches)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapDecoderInfo.CreateInstance(SharpDX.WIC.BitmapDecoder)">
            <summary>	
            Creates a new <see cref="T:SharpDX.WIC.BitmapDecoder"/> instance.	
            </summary>	
            <param name="bitmapDecoderOut">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapDecoderInfo::CreateInstance']/*"/>	
            <unmanaged>HRESULT IWICBitmapDecoderInfo::CreateInstance([Out, Fast] IWICBitmapDecoder** ppIBitmapDecoder)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapDecoderInfo.MatchesPattern(SharpDX.Win32.IStream)">
            <summary>
            Retrieves a value that indicates whether the codec recognizes the pattern within a specified stream.
            </summary>
            <param name="stream">The stream to pattern match within.</param>
            <returns><c>true</c> if the patterns match; otherwise, <c>false</c>.</returns>
            <unmanaged>HRESULT IWICBitmapDecoderInfo::MatchesPattern([In, Optional] IStream* pIStream,[Out] BOOL* pfMatches)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.BitmapDecoderInfo.Patterns">
            <summary>
            Gets the file pattern signatures supported by the decoder.
            </summary>
            <unmanaged>HRESULT IWICBitmapDecoderInfo::GetPatterns([In] unsigned int cbSizePatterns,[Out, Buffer, Optional] WICBitmapPattern* pPatterns,[Out] unsigned int* pcPatterns,[Out] unsigned int* pcbPatternsActual)</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.BitmapEncoder">
            <summary>	
            Defines methods for setting an encoder's properties such as thumbnails, frames, and palettes.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapEncoder']/*"/>	
            <unmanaged>IWICBitmapEncoder</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapEncoder.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.BitmapEncoder"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.WIC.BitmapEncoder.Initialize_(System.IntPtr,SharpDX.WIC.BitmapEncoderCacheOption)">
            <summary>	
            Initializes the encoder with an <see cref="T:SharpDX.Win32.IStream"/> which tells the encoder where to encode the bits.	
            </summary>	
            <param name="streamRef">No documentation.</param>	
            <param name="cacheOption">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapEncoder::Initialize']/*"/>	
            <unmanaged>HRESULT IWICBitmapEncoder::Initialize([In, Optional] IStream* pIStream,[In] WICBitmapEncoderCacheOption cacheOption)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapEncoder.GetContainerFormat(System.Guid@)">
            <summary>	
            Retrieves the encoder's container format.	
            </summary>	
            <param name="guidContainerFormatRef"><para>A reference that receives the encoder's container format <see cref="T:System.Guid"/>.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapEncoder::GetContainerFormat']/*"/>	
            <unmanaged>HRESULT IWICBitmapEncoder::GetContainerFormat([Out] GUID* pguidContainerFormat)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapEncoder.GetEncoderInfo(SharpDX.WIC.BitmapEncoderInfo@)">
            <summary>	
            Retrieves an <see cref="T:SharpDX.WIC.BitmapEncoderInfo"/> for the encoder.	
            </summary>	
            <param name="encoderInfoOut">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapEncoder::GetEncoderInfo']/*"/>	
            <unmanaged>HRESULT IWICBitmapEncoder::GetEncoderInfo([Out] IWICBitmapEncoderInfo** ppIEncoderInfo)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapEncoder.SetColorContexts(System.Int32,SharpDX.WIC.ColorContext[])">
            <summary>	
            Sets the <see cref="T:SharpDX.WIC.ColorContext"/> objects for the encoder.	
            </summary>	
            <param name="count">No documentation.</param>	
            <param name="colorContextOut">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapEncoder::SetColorContexts']/*"/>	
            <unmanaged>HRESULT IWICBitmapEncoder::SetColorContexts([In] unsigned int cCount,[In, Buffer] IWICColorContext** ppIColorContext)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapEncoder.SetColorContexts(System.Int32,SharpDX.ComArray{SharpDX.WIC.ColorContext})">
            <summary>	
            Sets the <see cref="T:SharpDX.WIC.ColorContext"/> objects for the encoder.	
            </summary>	
            <param name="count">No documentation.</param>	
            <param name="colorContextOut">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapEncoder::SetColorContexts']/*"/>	
            <unmanaged>HRESULT IWICBitmapEncoder::SetColorContexts([In] unsigned int cCount,[In, Buffer] IWICColorContext** ppIColorContext)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapEncoder.SetPalette(SharpDX.WIC.Palette)">
            <summary>	
            Sets the global palette for the image.	
            </summary>	
            <param name="paletteRef"><para>The <see cref="T:SharpDX.WIC.Palette"/> to use as the global palette.</para></param>	
            <returns>Returns <see cref="F:SharpDX.Result.Ok"/> if successful, or an error value otherwise.Returns WINCODEC_ERR_UNSUPPORTEDOPERATION if the feature is not supported by the encoder.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapEncoder::SetPalette']/*"/>	
            <unmanaged>HRESULT IWICBitmapEncoder::SetPalette([In, Optional] IWICPalette* pIPalette)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapEncoder.SetThumbnail(SharpDX.WIC.BitmapSource)">
            <summary>	
            Sets the global thumbnail for the image.	
            </summary>	
            <param name="thumbnailRef"><para>The <see cref="T:SharpDX.WIC.BitmapSource"/> to set as the global thumbnail.</para></param>	
            <returns>Returns <see cref="F:SharpDX.Result.Ok"/> if successful, or an error value otherwise.Returns WINCODEC_ERR_UNSUPPORTEDOPERATION if the feature is not supported by the encoder.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapEncoder::SetThumbnail']/*"/>	
            <unmanaged>HRESULT IWICBitmapEncoder::SetThumbnail([In, Optional] IWICBitmapSource* pIThumbnail)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapEncoder.SetPreview(SharpDX.WIC.BitmapSource)">
            <summary>	
            Sets the global preview for the image.	
            </summary>	
            <param name="previewRef"><para>The <see cref="T:SharpDX.WIC.BitmapSource"/> to use as the global preview.</para></param>	
            <returns>Returns <see cref="F:SharpDX.Result.Ok"/> if successful, or an error value otherwise.Returns WINCODEC_ERR_UNSUPPORTEDOPERATION if the feature is not supported by the encoder.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapEncoder::SetPreview']/*"/>	
            <unmanaged>HRESULT IWICBitmapEncoder::SetPreview([In, Optional] IWICBitmapSource* pIPreview)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapEncoder.CreateNewFrame(SharpDX.WIC.BitmapFrameEncode,SharpDX.Win32.PropertyBag)">
            <summary>	
            Creates a new <see cref="T:SharpDX.WIC.BitmapFrameEncode"/> instance.	
            </summary>	
            <param name="frameEncodeOut">No documentation.</param>	
            <param name="encoderOptionsOut">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The parameter ppIEncoderOptions can be used to receive an <see cref="T:SharpDX.Win32.PropertyBag"/> that can then be used to specify encoder options. This is done by passing a reference to a NULLIPropertyBag2 reference in ppIEncoderOptions. You should then set your desired encoder options on the <see cref="T:SharpDX.Win32.PropertyBag"/> returned, and pass this <see cref="T:SharpDX.Win32.PropertyBag"/> to <see cref="M:SharpDX.WIC.BitmapFrameEncode.Initialize(SharpDX.Win32.PropertyBag)"/>.Note??Do not pass in a reference to an initialized <see cref="T:SharpDX.Win32.PropertyBag"/>. The reference will be overwritten, and the original <see cref="T:SharpDX.Win32.PropertyBag"/> will not be freed.Otherwise, you can pass <c>null</c> in ppIEncoderOptions if you do not intend to specify encoder options.See Encoding Overview for an example of how to set encoder options.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapEncoder::CreateNewFrame']/*"/>	
            <unmanaged>HRESULT IWICBitmapEncoder::CreateNewFrame([Out, Fast] IWICBitmapFrameEncode** ppIFrameEncode,[Out, Fast] IPropertyBag2** ppIEncoderOptions)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapEncoder.Commit">
            <summary>	
            Commits all changes for the image and closes the stream.	
            </summary>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            To finalize an image, both the frame Commit and the encoder Commit must be called. However, only call the encoder  Commit method after all frames have been committed.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapEncoder::Commit']/*"/>	
            <unmanaged>HRESULT IWICBitmapEncoder::Commit()</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapEncoder.GetMetadataQueryWriter(SharpDX.WIC.MetadataQueryWriter@)">
            <summary>	
            Retrieves a metadata query writer for the encoder.	
            </summary>	
            <param name="metadataQueryWriterOut"><para>When this method returns, contains a reference to the encoder's metadata query writer.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapEncoder::GetMetadataQueryWriter']/*"/>	
            <unmanaged>HRESULT IWICBitmapEncoder::GetMetadataQueryWriter([Out] IWICMetadataQueryWriter** ppIMetadataQueryWriter)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapEncoder.#ctor(SharpDX.WIC.ImagingFactory,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.BitmapEncoder"/> class.
            </summary>
            <param name="factory">The factory.</param>
            <param name="containerFormatGuid">The container format GUID. List from <see cref="T:SharpDX.WIC.ContainerFormatGuids"/> </param>
            <unmanaged>HRESULT IWICImagingFactory::CreateEncoder([In] const GUID&amp; guidContainerFormat,[In, Optional] const GUID* pguidVendor,[Out] IWICBitmapEncoder** ppIEncoder)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapEncoder.#ctor(SharpDX.WIC.ImagingFactory,System.Guid,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.BitmapEncoder"/> class.
            </summary>
            <param name="factory">The factory.</param>
            <param name="containerFormatGuid">The container format GUID. List from <see cref="T:SharpDX.WIC.ContainerFormatGuids"/></param>
            <param name="guidVendorRef">The GUID vendor ref.</param>
            <unmanaged>HRESULT IWICImagingFactory::CreateEncoder([In] const GUID&amp; guidContainerFormat,[In, Optional] const GUID* pguidVendor,[Out] IWICBitmapEncoder** ppIEncoder)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapEncoder.Initialize(SharpDX.Win32.IStream)">
            <summary>
            Initializes the encoder with the provided stream.
            </summary>
            <param name="stream">The stream to use for initialization.</param>
            <returns>If the method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it throws an exception.</returns>
            <unmanaged>HRESULT IWICBitmapEncoder::Initialize([In, Optional] IStream* pIStream,[In] WICBitmapEncoderCacheOption cacheOption)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapEncoder.SetColorContexts(SharpDX.WIC.ColorContext[])">
            <summary>
            Sets the <see cref="T:SharpDX.WIC.ColorContext"/> objects for the encoder.
            </summary>
            <param name="colorContextOut">The color contexts to set for the encoder.</param>
            <returns>If the method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it throws an exception.</returns>
            <unmanaged>HRESULT IWICBitmapEncoder::SetColorContexts([In] unsigned int cCount,[In, Buffer] IWICColorContext** ppIColorContext)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.BitmapEncoder.ContainerFormat">
            <summary>	
            Retrieves the encoder's container format.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapEncoder::GetContainerFormat']/*"/>	
            <unmanaged>GetContainerFormat</unmanaged>	
            <unmanaged>HRESULT IWICBitmapEncoder::GetContainerFormat([Out] GUID* pguidContainerFormat)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.BitmapEncoder.EncoderInfo">
            <summary>	
            Retrieves an <see cref="T:SharpDX.WIC.BitmapEncoderInfo"/> for the encoder.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapEncoder::GetEncoderInfo']/*"/>	
            <unmanaged>GetEncoderInfo</unmanaged>	
            <unmanaged>HRESULT IWICBitmapEncoder::GetEncoderInfo([Out] IWICBitmapEncoderInfo** ppIEncoderInfo)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.BitmapEncoder.Palette">
            <summary>	
            Sets the global palette for the image.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapEncoder::SetPalette']/*"/>	
            <unmanaged>SetPalette</unmanaged>	
            <unmanaged>HRESULT IWICBitmapEncoder::SetPalette([In, Optional] IWICPalette* pIPalette)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.BitmapEncoder.Thumbnail">
            <summary>	
            Sets the global thumbnail for the image.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapEncoder::SetThumbnail']/*"/>	
            <unmanaged>SetThumbnail</unmanaged>	
            <unmanaged>HRESULT IWICBitmapEncoder::SetThumbnail([In, Optional] IWICBitmapSource* pIThumbnail)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.BitmapEncoder.Preview">
            <summary>	
            Sets the global preview for the image.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapEncoder::SetPreview']/*"/>	
            <unmanaged>SetPreview</unmanaged>	
            <unmanaged>HRESULT IWICBitmapEncoder::SetPreview([In, Optional] IWICBitmapSource* pIPreview)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.BitmapEncoder.MetadataQueryWriter">
            <summary>	
            Retrieves a metadata query writer for the encoder.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapEncoder::GetMetadataQueryWriter']/*"/>	
            <unmanaged>GetMetadataQueryWriter</unmanaged>	
            <unmanaged>HRESULT IWICBitmapEncoder::GetMetadataQueryWriter([Out] IWICMetadataQueryWriter** ppIMetadataQueryWriter)</unmanaged>
        </member>
        <member name="T:SharpDX.WIC.BitmapEncoderInfo">
            <summary>	
            Exposes methods that provide information about an encoder.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapEncoderInfo']/*"/>	
            <unmanaged>IWICBitmapEncoderInfo</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapEncoderInfo.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.BitmapEncoderInfo"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.WIC.BitmapEncoderInfo.CreateInstance(SharpDX.WIC.BitmapEncoder@)">
            <summary>	
            Creates a new <see cref="T:SharpDX.WIC.BitmapEncoder"/> instance.	
            </summary>	
            <param name="bitmapEncoderOut">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapEncoderInfo::CreateInstance']/*"/>	
            <unmanaged>HRESULT IWICBitmapEncoderInfo::CreateInstance([Out] IWICBitmapEncoder** ppIBitmapEncoder)</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.BitmapFlipRotator">
            <summary>	
            Exposes methods that produce a flipped (horizontal or vertical) and/or rotated (by 90 degree increments) bitmap source. Rotations are done before the flip.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapFlipRotator']/*"/>	
            <unmanaged>IWICBitmapFlipRotator</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapFlipRotator.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.BitmapFlipRotator"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.WIC.BitmapFlipRotator.Initialize(SharpDX.WIC.BitmapSource,SharpDX.WIC.BitmapTransformOptions)">
            <summary>	
            Initializes the bitmap flip rotator with the provided parameters.	
            </summary>	
            <param name="sourceRef"><para>The input bitmap source.</para></param>	
            <param name="options"><para>The <see cref="T:SharpDX.WIC.BitmapTransformOptions"/> to flip or rotate the image.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapFlipRotator::Initialize']/*"/>	
            <unmanaged>HRESULT IWICBitmapFlipRotator::Initialize([In, Optional] IWICBitmapSource* pISource,[In] WICBitmapTransformOptions options)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapFlipRotator.#ctor(SharpDX.WIC.ImagingFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.BitmapFlipRotator"/> class.
            </summary>
            <param name="factory">The factory.</param>
        </member>
        <member name="T:SharpDX.WIC.BitmapFrameDecode">
            <summary>	
            Defines methods for decoding individual image frames of an encoded file.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapFrameDecode']/*"/>	
            <unmanaged>IWICBitmapFrameDecode</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapFrameDecode.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.BitmapFrameDecode"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.WIC.BitmapFrameDecode.GetMetadataQueryReader(SharpDX.WIC.MetadataQueryReader@)">
            <summary>	
            Retrieves a metadata query reader for the frame.	
            </summary>	
            <param name="metadataQueryReaderOut"><para>When this method returns, contains a reference to the frame's metadata query reader.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapFrameDecode::GetMetadataQueryReader']/*"/>	
            <unmanaged>HRESULT IWICBitmapFrameDecode::GetMetadataQueryReader([Out] IWICMetadataQueryReader** ppIMetadataQueryReader)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapFrameDecode.GetColorContexts(System.Int32,SharpDX.WIC.ColorContext[],System.Int32@)">
            <summary>	
            Retrieves the <see cref="T:SharpDX.WIC.ColorContext"/> associated with the image frame.	
            </summary>	
            <param name="count">No documentation.</param>	
            <param name="colorContextsOut">No documentation.</param>	
            <param name="actualCountRef">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapFrameDecode::GetColorContexts']/*"/>	
            <unmanaged>HRESULT IWICBitmapFrameDecode::GetColorContexts([In] unsigned int cCount,[Out, Buffer, Optional] IWICColorContext** ppIColorContexts,[Out] unsigned int* pcActualCount)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapFrameDecode.GetThumbnail(SharpDX.WIC.BitmapSource@)">
            <summary>	
            Retrieves a small preview of the frame, if supported by the codec.	
            </summary>	
            <param name="thumbnailOut"><para>A reference that receives a reference to the <see cref="T:SharpDX.WIC.BitmapSource"/> of the thumbnail.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            Not all formats support thumbnails. Joint Photographic Experts Group (JPEG), Tagged Image File Format (TIFF), and Microsoft?Windows Digital Photo (WDP) support thumbnails.Note to ImplementersIf the codec does not support thumbnails, return WINCODEC_ERROR_CODECNOTHUMBNAIL rather than E_NOTIMPL.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapFrameDecode::GetThumbnail']/*"/>	
            <unmanaged>HRESULT IWICBitmapFrameDecode::GetThumbnail([Out] IWICBitmapSource** ppIThumbnail)</unmanaged>	
        </member>
        <member name="P:SharpDX.WIC.BitmapFrameDecode.MetadataQueryReader">
            <summary>	
            Retrieves a metadata query reader for the frame.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapFrameDecode::GetMetadataQueryReader']/*"/>	
            <unmanaged>GetMetadataQueryReader</unmanaged>	
            <unmanaged>HRESULT IWICBitmapFrameDecode::GetMetadataQueryReader([Out] IWICMetadataQueryReader** ppIMetadataQueryReader)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.BitmapFrameDecode.Thumbnail">
            <summary>	
            Retrieves a small preview of the frame, if supported by the codec.	
            </summary>	
            <remarks>	
            Not all formats support thumbnails. Joint Photographic Experts Group (JPEG), Tagged Image File Format (TIFF), and Microsoft?Windows Digital Photo (WDP) support thumbnails.Note to ImplementersIf the codec does not support thumbnails, return WINCODEC_ERROR_CODECNOTHUMBNAIL rather than E_NOTIMPL.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapFrameDecode::GetThumbnail']/*"/>	
            <unmanaged>GetThumbnail</unmanaged>	
            <unmanaged>HRESULT IWICBitmapFrameDecode::GetThumbnail([Out] IWICBitmapSource** ppIThumbnail)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.BitmapFrameDecode.ColorContexts">
            <summary>
            Gets the <see cref="T:SharpDX.WIC.ColorContext"/> objects of the image.
            </summary>
            <unmanaged>HRESULT IWICBitmapFrameDecode::GetColorContexts([In] unsigned int cCount,[InOut, Buffer, Optional] IWICColorContext** ppIColorContexts,[Out] unsigned int* pcActualCount)</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.BitmapFrameEncode">
            <summary>	
            Represents an encoder's individual image frames.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapFrameEncode']/*"/>	
            <unmanaged>IWICBitmapFrameEncode</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapFrameEncode.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.BitmapFrameEncode"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.WIC.BitmapFrameEncode.Initialize(SharpDX.Win32.PropertyBag)">
            <summary>	
            Initializes the frame encoder using the given properties.	
            </summary>	
            <param name="encoderOptionsRef"><para>The set of properties to use for <see cref="T:SharpDX.WIC.BitmapFrameEncode"/> initialization.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapFrameEncode::Initialize']/*"/>	
            <unmanaged>HRESULT IWICBitmapFrameEncode::Initialize([In, Optional] IPropertyBag2* pIEncoderOptions)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapFrameEncode.SetSize(System.Int32,System.Int32)">
            <summary>	
            Sets the output image dimensions for the frame.	
            </summary>	
            <param name="width"><para>The width of the output image.</para></param>	
            <param name="height"><para>The height of the output image.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapFrameEncode::SetSize']/*"/>	
            <unmanaged>HRESULT IWICBitmapFrameEncode::SetSize([In] unsigned int uiWidth,[In] unsigned int uiHeight)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapFrameEncode.SetResolution(System.Double,System.Double)">
            <summary>	
            Sets the physical resolution of the output image.	
            </summary>	
            <param name="dpiX"><para>The horizontal resolution value.</para></param>	
            <param name="dpiY"><para>The vertical resolution value.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapFrameEncode::SetResolution']/*"/>	
            <unmanaged>HRESULT IWICBitmapFrameEncode::SetResolution([In] double dpiX,[In] double dpiY)</unmanaged>	
        </member>
        <!-- Badly formed XML comment ignored for member "M:SharpDX.WIC.BitmapFrameEncode.SetPixelFormat(System.Guid@)" -->
        <member name="M:SharpDX.WIC.BitmapFrameEncode.SetColorContexts(System.Int32,SharpDX.WIC.ColorContext[])">
            <summary>	
            Sets a given number <see cref="T:SharpDX.WIC.ColorContext"/> profiles to the frame.	
            </summary>	
            <param name="count">No documentation.</param>	
            <param name="colorContextOut">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapFrameEncode::SetColorContexts']/*"/>	
            <unmanaged>HRESULT IWICBitmapFrameEncode::SetColorContexts([In] unsigned int cCount,[In, Buffer] IWICColorContext** ppIColorContext)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapFrameEncode.SetColorContexts(System.Int32,SharpDX.ComArray{SharpDX.WIC.ColorContext})">
            <summary>	
            Sets a given number <see cref="T:SharpDX.WIC.ColorContext"/> profiles to the frame.	
            </summary>	
            <param name="count">No documentation.</param>	
            <param name="colorContextOut">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapFrameEncode::SetColorContexts']/*"/>	
            <unmanaged>HRESULT IWICBitmapFrameEncode::SetColorContexts([In] unsigned int cCount,[In, Buffer] IWICColorContext** ppIColorContext)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapFrameEncode.SetPalette(SharpDX.WIC.Palette)">
            <summary>	
            Sets the <see cref="T:SharpDX.WIC.Palette"/> for indexed pixel formats.	
            </summary>	
            <param name="paletteRef">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            This method does not fail if called on a frame whose pixel format is set to a non-indexed pixel format. The target pixel format is a non-indexed format, the palette will be ignored.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapFrameEncode::SetPalette']/*"/>	
            <unmanaged>HRESULT IWICBitmapFrameEncode::SetPalette([In, Optional] IWICPalette* pIPalette)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapFrameEncode.SetThumbnail(SharpDX.WIC.BitmapSource)">
            <summary>	
            Sets the frame thumbnail if supported by the codec.	
            </summary>	
            <param name="thumbnailRef"><para>The bitmap source to use as the thumbnail.</para></param>	
            <returns>Returns <see cref="F:SharpDX.Result.Ok"/> if successful, or an error value otherwise.Returns WINCODEC_ERR_UNSUPPORTEDOPERATION if the feature is not supported by the encoder.</returns>	
            <remarks>	
            SetThumbnail should be called before calling WritePixels or WriteSource. The thumbnail will not be added to the encoded file if SetThumbnail after a call to WritePixels or WriteSource.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapFrameEncode::SetThumbnail']/*"/>	
            <unmanaged>HRESULT IWICBitmapFrameEncode::SetThumbnail([In, Optional] IWICBitmapSource* pIThumbnail)</unmanaged>	
        </member>
        <!-- Badly formed XML comment ignored for member "M:SharpDX.WIC.BitmapFrameEncode.WritePixels(System.Int32,System.Int32,System.Int32,System.IntPtr)" -->
        <member name="M:SharpDX.WIC.BitmapFrameEncode.WriteSource(SharpDX.WIC.BitmapSource,System.Nullable{SharpDX.DrawingRectangle})">
            <summary>	
            Encodes a bitmap source.	
            </summary>	
            <param name="bitmapSourceRef"><para>The bitmap source to encode.</para></param>	
            <param name="rectangleRef"><para>The size rectangle of the bitmap source.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            If SetSize is not called prior to calling WriteSource, the size given in prc is used if not <c>null</c>. Otherwise, the size of the <see cref="T:SharpDX.WIC.BitmapSource"/> given in pIBitmapSource is used.If SetPixelFormat is not called prior to calling WriteSource, the pixel format of the <see cref="T:SharpDX.WIC.BitmapSource"/> given in pIBitmapSource is used.If SetResolution is not called prior to calling WriteSource, the pixel format of pIBitmapSource is used.If SetPalette is not called prior to calling WriteSource, the target pixel format is indexed, and the pixel format of pIBitmapSource matches the encoder frame's pixel format, then the pIBitmapSource pixel format is used.When encoding a GIF image, if the global palette is set and the frame level palette is not set directly by the user or by a custom independent software vendor (ISV) GIF codec, WriteSource will use the global palette to encode the frame even when pIBitmapSource has a frame level palette.Windows Vista:The source rect width must match the width set through SetSize. Repeated WriteSource calls can be made as long as the total accumulated source rect height is the same as set through SetSize.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapFrameEncode::WriteSource']/*"/>	
            <unmanaged>HRESULT IWICBitmapFrameEncode::WriteSource([In, Optional] IWICBitmapSource* pIBitmapSource,[In, Optional] WICRect* prc)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapFrameEncode.Commit">
            <summary>	
            Commits the frame to the image.	
            </summary>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            To finalize the image, both the frame Commit and the encoder Commit must be called. However, only call the encoder  Commit method after all frames have been committed.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapFrameEncode::Commit']/*"/>	
            <unmanaged>HRESULT IWICBitmapFrameEncode::Commit()</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapFrameEncode.GetMetadataQueryWriter(SharpDX.WIC.MetadataQueryWriter@)">
            <summary>	
            Gets the metadata query writer for the encoder frame.	
            </summary>	
            <param name="metadataQueryWriterOut"><para>When this method returns, contains a reference to metadata query writer for the encoder frame.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapFrameEncode::GetMetadataQueryWriter']/*"/>	
            <unmanaged>HRESULT IWICBitmapFrameEncode::GetMetadataQueryWriter([Out] IWICMetadataQueryWriter** ppIMetadataQueryWriter)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapFrameEncode.#ctor(SharpDX.WIC.BitmapEncoder)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.BitmapFrameEncode"/> class.
            </summary>
            <param name="encoder">The encoder.</param>
            <unmanaged>HRESULT IWICBitmapEncoder::CreateNewFrame([Out] IWICBitmapFrameEncode** ppIFrameEncode,[Out] IPropertyBag2** ppIEncoderOptions)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapFrameEncode.Initialize">
            <summary>
            Initializes this instance.
            </summary>
            <unmanaged>HRESULT IWICBitmapFrameEncode::Initialize([In, Optional] IPropertyBag2* pIEncoderOptions)</unmanaged>
        </member>
        <member name="M:SharpDX.WIC.BitmapFrameEncode.SetColorContexts(SharpDX.WIC.ColorContext[])">
            <summary>
            Sets the <see cref="T:SharpDX.WIC.ColorContext"/> objects for this frame encoder.
            </summary>
            <param name="colorContextOut">The color contexts to set for the encoder.</param>
            <returns>If the method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it throws an exception.</returns>
            <unmanaged>HRESULT IWICBitmapFrameEncode::SetColorContexts([In] unsigned int cCount,[In, Buffer] IWICColorContext** ppIColorContext)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapFrameEncode.WritePixels(System.Int32,SharpDX.DataRectangle)">
            <summary>
            Encodes the frame scanlines.
            </summary>
            <param name="lineCount">The line count.</param>
            <param name="buffer">The buffer.</param>
            <returns></returns>
            <unmanaged>HRESULT IWICBitmapFrameEncode::WritePixels([In] unsigned int lineCount,[In] unsigned int cbStride,[In] unsigned int cbBufferSize,[In, Buffer] unsigned char* pbPixels)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.BitmapFrameEncode.PixelFormat">
            <summary>	
            Requests that the encoder use the specified pixel format.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapFrameEncode::SetPixelFormat']/*"/>	
            <unmanaged>SetPixelFormat</unmanaged>	
            <unmanaged>HRESULT IWICBitmapFrameEncode::SetPixelFormat([InOut] GUID* pPixelFormat)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.BitmapFrameEncode.Palette">
            <summary>	
            Sets the <see cref="T:SharpDX.WIC.Palette"/> for indexed pixel formats.	
            </summary>	
            <remarks>	
            This method does not fail if called on a frame whose pixel format is set to a non-indexed pixel format. The target pixel format is a non-indexed format, the palette will be ignored.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapFrameEncode::SetPalette']/*"/>	
            <unmanaged>SetPalette</unmanaged>	
            <unmanaged>HRESULT IWICBitmapFrameEncode::SetPalette([In, Optional] IWICPalette* pIPalette)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.BitmapFrameEncode.Thumbnail">
            <summary>	
            Sets the frame thumbnail if supported by the codec.	
            </summary>	
            <remarks>	
            SetThumbnail should be called before calling WritePixels or WriteSource. The thumbnail will not be added to the encoded file if SetThumbnail after a call to WritePixels or WriteSource.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapFrameEncode::SetThumbnail']/*"/>	
            <unmanaged>SetThumbnail</unmanaged>	
            <unmanaged>HRESULT IWICBitmapFrameEncode::SetThumbnail([In, Optional] IWICBitmapSource* pIThumbnail)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.BitmapFrameEncode.MetadataQueryWriter">
            <summary>	
            Gets the metadata query writer for the encoder frame.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapFrameEncode::GetMetadataQueryWriter']/*"/>	
            <unmanaged>GetMetadataQueryWriter</unmanaged>	
            <unmanaged>HRESULT IWICBitmapFrameEncode::GetMetadataQueryWriter([Out] IWICMetadataQueryWriter** ppIMetadataQueryWriter)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.BitmapFrameEncode.Options">
            <summary>
            Gets the properties to setup before <see cref="M:SharpDX.WIC.BitmapFrameEncode.Initialize"/>.
            </summary>
        </member>
        <member name="T:SharpDX.WIC.BitmapLock">
            <summary>	
            Exposes methods that support the Lock method.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapLock']/*"/>	
            <unmanaged>IWICBitmapLock</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapLock.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.BitmapLock"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.WIC.BitmapLock.GetSize(System.Int32@,System.Int32@)">
            <summary>	
            Retrieves the width and height, in pixels, of the locked rectangle.	
            </summary>	
            <param name="widthRef"><para>A reference that receives the width of the locked rectangle.</para></param>	
            <param name="heightRef"><para>A reference that receives the height of the locked rectangle.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapLock::GetSize']/*"/>	
            <unmanaged>HRESULT IWICBitmapLock::GetSize([Out] unsigned int* puiWidth,[Out] unsigned int* puiHeight)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapLock.GetStride(System.Int32@)">
            <summary>	
            Provides access to the stride value for the memory.	
            </summary>	
            <param name="strideRef">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            Note the stride value is specific to the <see cref="T:SharpDX.WIC.BitmapLock"/>, not the bitmap.  For example, two consecutive locks on the same rectangle of a bitmap may return different references and stride values, depending on internal implementation.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapLock::GetStride']/*"/>	
            <unmanaged>HRESULT IWICBitmapLock::GetStride([Out] unsigned int* pcbStride)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapLock.GetDataPointer(System.Int32@)">
            <summary>	
            Gets the reference to the top left pixel in the locked rectangle.	
            </summary>	
            <param name="bufferSizeRef"><para>A reference that receives the size of the buffer.</para></param>	
            <returns><para>A reference that receives a reference to the top left pixel in the locked rectangle.</para></returns>	
            <remarks>	
            The reference provided by this method should not be used outside of the lifetime of the lock itself.GetDataPointer is not available in multi-threaded apartment applications.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapLock::GetDataPointer']/*"/>	
            <unmanaged>HRESULT IWICBitmapLock::GetDataPointer([Out] unsigned int* pcbBufferSize,[Out] void** ppbData)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapLock.GetPixelFormat(System.Guid@)">
            <summary>	
            Gets the pixel format of for the locked area of pixels. This can be used to compute the number of bytes-per-pixel in the locked area.	
            </summary>	
            <param name="pixelFormatRef"><para>A reference that receives the pixel format <see cref="T:System.Guid"/> of the locked area.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapLock::GetPixelFormat']/*"/>	
            <unmanaged>HRESULT IWICBitmapLock::GetPixelFormat([Out] GUID* pPixelFormat)</unmanaged>	
        </member>
        <member name="P:SharpDX.WIC.BitmapLock.Stride">
            <summary>	
            Provides access to the stride value for the memory.	
            </summary>	
            <remarks>	
            Note the stride value is specific to the <see cref="T:SharpDX.WIC.BitmapLock"/>, not the bitmap.  For example, two consecutive locks on the same rectangle of a bitmap may return different references and stride values, depending on internal implementation.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapLock::GetStride']/*"/>	
            <unmanaged>GetStride</unmanaged>	
            <unmanaged>HRESULT IWICBitmapLock::GetStride([Out] unsigned int* pcbStride)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.BitmapLock.PixelFormat">
            <summary>	
            Gets the pixel format of for the locked area of pixels. This can be used to compute the number of bytes-per-pixel in the locked area.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapLock::GetPixelFormat']/*"/>	
            <unmanaged>GetPixelFormat</unmanaged>	
            <unmanaged>HRESULT IWICBitmapLock::GetPixelFormat([Out] GUID* pPixelFormat)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.BitmapLock.Size">
            <summary>
            Gets the size.
            </summary>
            <unmanaged>HRESULT IWICBitmapLock::GetSize([Out] unsigned int* puiWidth,[Out] unsigned int* puiHeight)</unmanaged>	
        </member>
        <member name="P:SharpDX.WIC.BitmapLock.Data">
            <summary>
            Gets a pointer to the data.
            </summary>
        </member>
        <member name="T:SharpDX.WIC.BitmapScaler">
            <summary>	
            Represents a resized version of the input bitmap using a resampling or filtering algorithm.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapScaler']/*"/>	
            <unmanaged>IWICBitmapScaler</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapScaler.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.BitmapScaler"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.WIC.BitmapScaler.Initialize(SharpDX.WIC.BitmapSource,System.Int32,System.Int32,SharpDX.WIC.BitmapInterpolationMode)">
            <summary>	
            Initializes the bitmap scaler with the provided parameters.	
            </summary>	
            <param name="sourceRef"><para>The input bitmap source.</para></param>	
            <param name="width"><para>The destination width.</para></param>	
            <param name="height"><para>The desination height.</para></param>	
            <param name="mode"><para>The <see cref="T:SharpDX.WIC.BitmapInterpolationMode"/> to use when scaling.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapScaler::Initialize']/*"/>	
            <unmanaged>HRESULT IWICBitmapScaler::Initialize([In, Optional] IWICBitmapSource* pISource,[In] unsigned int uiWidth,[In] unsigned int uiHeight,[In] WICBitmapInterpolationMode mode)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapScaler.#ctor(SharpDX.WIC.ImagingFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.BitmapScaler"/> class.
            </summary>
            <param name="factory">The factory.</param>
        </member>
        <member name="T:SharpDX.WIC.BitmapSourceTransform">
            <summary>	
            Though optional, we highly recommend that every decoder implement this interface on your frame-level decoding class, because it can provide major performance benefits.  When an application requests a specific region of interest, size, orientation, or pixel format, instead of just decoding the whole image at full resolution and then applying the requested transforms, Windows Imaging Component (WIC) calls IUnknown::QueryInterface for this interface on the <see cref="T:SharpDX.WIC.BitmapFrameDecode"/> object.  If the frame decoder supports it, WIC calls the appropriate method or methods to determine whether the frame decoder can perform the requested transform or determine the closest size or pixel format the decoder can provide to the one requested.  If the decoder can perform the requested transform or transforms, WIC invokes CopyPixels with the appropriate parameters.  If the decoder can perform some, but not all of the requested transforms, WIC asks the decoder to perform those that it can, and uses the WIC transform objects (<see cref="T:SharpDX.WIC.BitmapScaler"/>, <see cref="T:SharpDX.WIC.BitmapClipper"/>, <see cref="T:SharpDX.WIC.BitmapFlipRotator"/>, and <see cref="T:SharpDX.WIC.FormatConverter"/>) to perform the remaining transforms that could not be performed by the frame decoder on the result of the CopyPixels call.  If the decoder doesn't support <see cref="T:SharpDX.WIC.BitmapSourceTransform"/>, then WIC must use the transform objects to perform all of the transforms. It's usually much more efficient for the decoder to perform transforms during the decoding process than it is to decode the entire image and then perform the transforms. This is especially true for operations such as scaling to a much smaller size or pixel format conversions.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapSourceTransform']/*"/>	
            <unmanaged>IWICBitmapSourceTransform</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapSourceTransform.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.BitmapSourceTransform"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.WIC.BitmapSourceTransform.CopyPixels(System.Nullable{SharpDX.DrawingRectangle},System.Int32,System.Int32,System.Nullable{System.Guid},SharpDX.WIC.BitmapTransformOptions,System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            Copies pixel data using the supplied input parameters.	
            </summary>	
            <param name="rectangleRef"><para>The rectangle of pixels to copy.</para></param>	
            <param name="width"><para>The width to scale the source bitmap. This parameter must equal the value obtainable through <see cref="M:SharpDX.WIC.BitmapSourceTransform.GetClosestSize(System.Int32@,System.Int32@)"/>.</para></param>	
            <param name="height"><para>The height to scale the source bitmap. This parameter must equal the value obtainable through <see cref="M:SharpDX.WIC.BitmapSourceTransform.GetClosestSize(System.Int32@,System.Int32@)"/>.</para></param>	
            <param name="guidDstFormatRef"><para> The <see cref="T:System.Guid"/> of desired pixel format in which the pixels should be returned.  </para> <para>This <see cref="T:System.Guid"/> must be a format obtained through an GetClosestPixelFormat call.</para></param>	
            <param name="dstTransform"><para> The desired rotation or flip to perform prior to the pixel copy. </para> <para>The transform must be an operation supported by an DoesSupportTransform call.</para> <para>If a dstTransform is specified, nStride is the transformed stride and is based on the pguidDstFormat pixel format, not the original source's pixel format.</para></param>	
            <param name="nStride"><para>The stride of the destination buffer.</para></param>	
            <param name="bufferSize"><para>The size of the destination buffer.</para></param>	
            <param name="bufferRef"><para>The output buffer.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            Codec Developer RemarksFor codec developer implementation details for this method, see Implementing <see cref="T:SharpDX.WIC.BitmapSourceTransform"/>.When multiple transform operations are requested, the result is dependent on the order in which the operations are performed. To ensure predictability and consistency across CODECs, it's important that all CODECs perform these operations in the same order. The recommended order of these operations is:Scale Crop Flip/RotatePixel format conversion can be performed at any time, since it has no effect on the other transforms.The first parameter, prc is used to specify the region of interest for clipping the image. By convention, scaling is performed before clipping so, if the image is to be scaled as well as clipped, the region of interest should be determined after the image has been scaled.If a dstTransform is specified, the stride is the transformed stride, and is based on the pixelFormat specified in the CopyPixels call, not the original frame's pixel format.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapSourceTransform::CopyPixels']/*"/>	
            <unmanaged>HRESULT IWICBitmapSourceTransform::CopyPixels([In, Optional] const WICRect* prc,[In] unsigned int uiWidth,[In] unsigned int uiHeight,[In, Optional] GUID* pguidDstFormat,[In] WICBitmapTransformOptions dstTransform,[In] unsigned int nStride,[In] unsigned int cbBufferSize,[In] void* pbBuffer)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapSourceTransform.GetClosestSize(System.Int32@,System.Int32@)">
            <summary>	
            Returns the closest dimensions the implementation can natively scale to given the desired dimensions.	
            </summary>	
            <param name="widthRef"><para>The desired width. A reference that receives the closest supported width.</para></param>	
            <param name="heightRef"><para>The desired height.A reference that receives the closest supported height.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapSourceTransform::GetClosestSize']/*"/>	
            <unmanaged>HRESULT IWICBitmapSourceTransform::GetClosestSize([InOut] unsigned int* puiWidth,[InOut] unsigned int* puiHeight)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapSourceTransform.GetClosestPixelFormat(System.Guid@)">
            <summary>	
            Retrieves the closest pixel format to which the implementation of <see cref="T:SharpDX.WIC.BitmapSourceTransform"/> can natively copy pixels, given a desired format.	
            </summary>	
            <param name="guidDstFormatRef">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapSourceTransform::GetClosestPixelFormat']/*"/>	
            <unmanaged>HRESULT IWICBitmapSourceTransform::GetClosestPixelFormat([InOut] GUID* pguidDstFormat)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapSourceTransform.IsSupportingTransform(SharpDX.WIC.BitmapTransformOptions,System.Boolean@)">
            <summary>	
            Determines whether a specific transform option is supported natively by the implementation of the <see cref="T:SharpDX.WIC.BitmapSourceTransform"/> interface.	
            </summary>	
            <param name="dstTransform">No documentation.</param>	
            <param name="fIsSupportedRef">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICBitmapSourceTransform::DoesSupportTransform']/*"/>	
            <unmanaged>HRESULT IWICBitmapSourceTransform::DoesSupportTransform([In] WICBitmapTransformOptions dstTransform,[Out] BOOL* pfIsSupported)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.BitmapSourceTransform.CopyPixels(System.Int32,System.Int32,System.Int32,SharpDX.DataStream)">
            <summary>
            Copies pixel data using the supplied input parameters.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="stride">The stride.</param>
            <param name="output">The output.</param>
            <returns></returns>
            <unmanaged>HRESULT IWICBitmapSourceTransform::CopyPixels([In, Optional] const WICRect* prc,[In] unsigned int uiWidth,[In] unsigned int uiHeight,[In, Optional] GUID* pguidDstFormat,[In] WICBitmapTransformOptions dstTransform,[In] unsigned int nStride,[In] unsigned int cbBufferSize,[In] void* pbBuffer)</unmanaged>
        </member>
        <member name="M:SharpDX.WIC.BitmapSourceTransform.CopyPixels(System.Int32,System.Int32,SharpDX.WIC.BitmapTransformOptions,System.Int32,SharpDX.DataStream)">
            <summary>
            Copies pixel data using the supplied input parameters.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="dstTransform">The DST transform.</param>
            <param name="stride">The stride.</param>
            <param name="output">The output.</param>
            <returns></returns>
            <unmanaged>HRESULT IWICBitmapSourceTransform::CopyPixels([In, Optional] const WICRect* prc,[In] unsigned int uiWidth,[In] unsigned int uiHeight,[In, Optional] GUID* pguidDstFormat,[In] WICBitmapTransformOptions dstTransform,[In] unsigned int nStride,[In] unsigned int cbBufferSize,[In] void* pbBuffer)</unmanaged>
        </member>
        <member name="M:SharpDX.WIC.BitmapSourceTransform.CopyPixels(System.Int32,System.Int32,System.Guid,SharpDX.WIC.BitmapTransformOptions,System.Int32,SharpDX.DataStream)">
            <summary>
            Copies pixel data using the supplied input parameters.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="guidDstFormat">The GUID DST format.</param>
            <param name="dstTransform">The DST transform.</param>
            <param name="stride">The stride.</param>
            <param name="output">The output.</param>
            <returns></returns>
            <unmanaged>HRESULT IWICBitmapSourceTransform::CopyPixels([In, Optional] const WICRect* prc,[In] unsigned int uiWidth,[In] unsigned int uiHeight,[In, Optional] GUID* pguidDstFormat,[In] WICBitmapTransformOptions dstTransform,[In] unsigned int nStride,[In] unsigned int cbBufferSize,[In] void* pbBuffer)</unmanaged>
        </member>
        <member name="M:SharpDX.WIC.BitmapSourceTransform.CopyPixels(SharpDX.DrawingRectangle,System.Int32,System.Int32,System.Guid,SharpDX.WIC.BitmapTransformOptions,System.Int32,SharpDX.DataStream)">
            <summary>
            Copies pixel data using the supplied input parameters.
            </summary>
            <param name="rectangle">The rectangle.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="guidDstFormat">The GUID DST format.</param>
            <param name="dstTransform">The DST transform.</param>
            <param name="stride">The stride.</param>
            <param name="output">The output.</param>
            <returns></returns>
            <unmanaged>HRESULT IWICBitmapSourceTransform::CopyPixels([In, Optional] const WICRect* prc,[In] unsigned int uiWidth,[In] unsigned int uiHeight,[In, Optional] GUID* pguidDstFormat,[In] WICBitmapTransformOptions dstTransform,[In] unsigned int nStride,[In] unsigned int cbBufferSize,[In] void* pbBuffer)</unmanaged>
        </member>
        <member name="M:SharpDX.WIC.BitmapSourceTransform.GetClosestSize(SharpDX.DrawingSize@)">
            <summary>
            Returns the closest dimensions the implementation can natively scale to given the desired dimensions.
            </summary>
            <param name="size">The size.</param>
            <returns></returns>
            <unmanaged>HRESULT IWICBitmapSourceTransform::GetClosestSize([InOut] unsigned int* puiWidth,[InOut] unsigned int* puiHeight)</unmanaged>
        </member>
        <member name="T:SharpDX.WIC.ColorContext">
            <summary>	
            Exposes methods for color management.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICColorContext']/*"/>	
            <unmanaged>IWICColorContext</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ColorContext.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.ColorContext"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.WIC.ColorContext.InitializeFromFilename(System.String)">
            <summary>	
            Initializes the color context from the given file.	
            </summary>	
            <param name="filename">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICColorContext::InitializeFromFilename']/*"/>	
            <unmanaged>HRESULT IWICColorContext::InitializeFromFilename([In] const wchar_t* wzFilename)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ColorContext.InitializeFromMemory(System.IntPtr,System.Int32)">
            <summary>	
            Initializes the color context from a memory block.	
            </summary>	
            <param name="bufferRef"><para>The buffer used to initialize the <see cref="T:SharpDX.WIC.ColorContext"/>.</para></param>	
            <param name="bufferSize"><para>The size of the pbBuffer buffer.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICColorContext::InitializeFromMemory']/*"/>	
            <unmanaged>HRESULT IWICColorContext::InitializeFromMemory([In] const void* pbBuffer,[In] unsigned int cbBufferSize)</unmanaged>	
        </member>
        <!-- Badly formed XML comment ignored for member "M:SharpDX.WIC.ColorContext.InitializeFromExifColorSpace(System.Int32)" -->
        <member name="M:SharpDX.WIC.ColorContext.GetTypeInfo(SharpDX.WIC.ColorContextType@)">
            <summary>	
            Retrieves the color context type.	
            </summary>	
            <param name="typeRef"><para>A reference that receives the <see cref="T:SharpDX.WIC.ColorContextType"/> of the color context.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICColorContext::GetType']/*"/>	
            <unmanaged>HRESULT IWICColorContext::GetType([Out] WICColorContextType* pType)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ColorContext.GetProfileBytes(System.Int32,System.IntPtr,System.Int32@)">
            <summary>	
            Retrieves the color context profile.	
            </summary>	
            <param name="buffer"><para>The size of the pbBuffer buffer.</para></param>	
            <param name="bufferRef"><para>A reference that receives the color context profile.</para></param>	
            <param name="actualRef"><para>A reference that receives the actual buffer size needed to retrieve the entire color context profile.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICColorContext::GetProfileBytes']/*"/>	
            <unmanaged>HRESULT IWICColorContext::GetProfileBytes([In] unsigned int cbBuffer,[In] void* pbBuffer,[Out] unsigned int* pcbActual)</unmanaged>	
        </member>
        <!-- Badly formed XML comment ignored for member "M:SharpDX.WIC.ColorContext.GetExifColorSpace(System.Int32@)" -->
        <member name="M:SharpDX.WIC.ColorContext.#ctor(SharpDX.WIC.ImagingFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.ColorContext"/> class.
            </summary>
            <param name="factory">The factory.</param>
            <unmanaged>HRESULT IWICImagingFactory::CreateColorContext([Out, Fast] IWICColorContext** ppIWICColorContext)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ColorContext.InitializeFromMemory(SharpDX.DataStream)">
            <summary>
            Initializes from memory.
            </summary>
            <param name="dataStream">The data stream.</param>
            <returns></returns>
            <unmanaged>HRESULT IWICColorContext::InitializeFromMemory([In] const void* pbBuffer,[In] unsigned int cbBufferSize)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.ColorContext.TypeInfo">
            <summary>	
            Retrieves the color context type.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICColorContext::GetType']/*"/>	
            <unmanaged>GetType</unmanaged>	
            <unmanaged>HRESULT IWICColorContext::GetType([Out] WICColorContextType* pType)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.ColorContext.ExifColorSpace">
            <summary>	
            Retrieves the Exchangeable Image File (EXIF) color space color context.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICColorContext::GetExifColorSpace']/*"/>	
            <unmanaged>GetExifColorSpace</unmanaged>	
            <unmanaged>HRESULT IWICColorContext::GetExifColorSpace([Out] unsigned int* pValue)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.ColorContext.Profile">
            <summary>
            Gets the color context profile.
            </summary>
        </member>
        <member name="T:SharpDX.WIC.ColorTransform">
            <summary>	
            Exposes methods that transforms an <see cref="T:SharpDX.WIC.BitmapSource"/> from one color context to another.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICColorTransform']/*"/>	
            <unmanaged>IWICColorTransform</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ColorTransform.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.ColorTransform"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.WIC.ColorTransform.Initialize(SharpDX.WIC.BitmapSource,SharpDX.WIC.ColorContext,SharpDX.WIC.ColorContext,System.Guid)">
            <summary>	
            Initializes an <see cref="T:SharpDX.WIC.ColorTransform"/> with a <see cref="T:SharpDX.WIC.BitmapSource"/> and transforms it from one <see cref="T:SharpDX.WIC.ColorContext"/> to another.	
            </summary>	
            <param name="bitmapSourceRef">No documentation.</param>	
            <param name="contextSourceRef">No documentation.</param>	
            <param name="contextDestRef">No documentation.</param>	
            <param name="ixelFmtDestRef">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICColorTransform::Initialize']/*"/>	
            <unmanaged>HRESULT IWICColorTransform::Initialize([In, Optional] IWICBitmapSource* pIBitmapSource,[In, Optional] IWICColorContext* pIContextSource,[In, Optional] IWICColorContext* pIContextDest,[In] const GUID&amp; pixelFmtDest)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ColorTransform.#ctor(SharpDX.WIC.ImagingFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.ColorTransform"/> class.
            </summary>
            <param name="factory">The factory.</param>
            <unmanaged>HRESULT IWICImagingFactory::CreateColorTransformer([Out, Fast] IWICColorTransform** ppIWICColorTransform)</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.DevelopRaw">
            <summary>	
            Exposes methods that provide access to the capabilites of a raw codec format.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw']/*"/>	
            <unmanaged>IWICDevelopRaw</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.DevelopRaw.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.DevelopRaw"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.WIC.DevelopRaw.QueryRawCapabilitiesInfo(SharpDX.WIC.RawCapabilitiesInfo@)">
            <summary>	
            Retrieves information about which capabilities are supported for a raw image.	
            </summary>	
            <param name="infoRef"><para>A reference that receives <see cref="T:SharpDX.WIC.RawCapabilitiesInfo"/> that provides the capabilities supported by the raw image.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            It is recommended that a codec report that a capability is supported even if the results at the outer range limits are not of perfect quality.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::QueryRawCapabilitiesInfo']/*"/>	
            <unmanaged>HRESULT IWICDevelopRaw::QueryRawCapabilitiesInfo([In] WICRawCapabilitiesInfo* pInfo)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.DevelopRaw.LoadParameterSet(SharpDX.WIC.RawParameterSet)">
            <summary>	
            Sets the desired <see cref="T:SharpDX.WIC.RawParameterSet"/> option.	
            </summary>	
            <param name="parameterSet">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::LoadParameterSet']/*"/>	
            <unmanaged>HRESULT IWICDevelopRaw::LoadParameterSet([In] WICRawParameterSet ParameterSet)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.DevelopRaw.GetCurrentParameterSet(SharpDX.Win32.PropertyBag@)">
            <summary>	
            Gets the current set of parameters.	
            </summary>	
            <param name="currentParameterSetOut"><para>A reference that receives a reference to the current set of parameters.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::GetCurrentParameterSet']/*"/>	
            <unmanaged>HRESULT IWICDevelopRaw::GetCurrentParameterSet([Out] IPropertyBag2** ppCurrentParameterSet)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.DevelopRaw.SetExposureCompensation(System.Double)">
            <summary>	
            Sets the exposure compensation stop value.	
            </summary>	
            <param name="ev"><para>The exposure compensation value. The value range for exposure compensation is -5.0 through +5.0, which equates to 10 full stops.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            It is recommended that a codec report that this method is supported even if the results at the outer range limits are not of perfect quality.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::SetExposureCompensation']/*"/>	
            <unmanaged>HRESULT IWICDevelopRaw::SetExposureCompensation([In] double ev)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.DevelopRaw.GetExposureCompensation(System.Double@)">
            <summary>	
            Gets the exposure compensation stop value of the raw image.	
            </summary>	
            <param name="eVRef"><para>A reference that receives the exposure compensation stop value. The default is the "as-shot" setting.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::GetExposureCompensation']/*"/>	
            <unmanaged>HRESULT IWICDevelopRaw::GetExposureCompensation([Out] double* pEV)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.DevelopRaw.SetWhitePointRGB(System.Int32,System.Int32,System.Int32)">
            <summary>	
            Sets the white point RGB values.	
            </summary>	
            <param name="red"><para>The red white point value.</para></param>	
            <param name="green"><para>The green white point value.</para></param>	
            <param name="blue"><para>The blue white point value.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            Due to other white point setting methods (e.g. SetWhitePointKelvin), care must be taken by codec implementers to ensure proper interoperability. For instance, if the caller sets via a named white point then the codec implementer may whis to disable reading back the correspoinding Kelvin temperature. In specific cases where the codec implementer wishes to deny a given action because of previous calls, WINCODEC_ERR_WRONGSTATE should be returned.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::SetWhitePointRGB']/*"/>	
            <unmanaged>HRESULT IWICDevelopRaw::SetWhitePointRGB([In] unsigned int Red,[In] unsigned int Green,[In] unsigned int Blue)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.DevelopRaw.GetWhitePointRGB(System.Int32@,System.Int32@,System.Int32@)">
            <summary>	
            Gets the white point RGB values.	
            </summary>	
            <param name="redRef"><para>A reference that receives the red white point value.</para></param>	
            <param name="greenRef"><para>A reference that receives the green white point value.</para></param>	
            <param name="blueRef"><para>A reference that receives the blue white point value.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::GetWhitePointRGB']/*"/>	
            <unmanaged>HRESULT IWICDevelopRaw::GetWhitePointRGB([Out] unsigned int* pRed,[Out] unsigned int* pGreen,[Out] unsigned int* pBlue)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.DevelopRaw.SetNamedWhitePoint(SharpDX.WIC.NamedWhitePoint)">
            <summary>	
            Sets the named white point of the raw file.	
            </summary>	
            <param name="whitePoint"><para>A bitwise combination of the enumeration values.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            If the named white points are not supported by the raw image or the raw file contains named white points that are not supported by this API, the codec implementer should still mark this capability as supported.If the named white points are not supported by the raw image, a best effort should be made to adjust the image to the named white point even when it isn't a pre-defined white point of the raw file.If the raw file containes named white points not supported by this API, the codec implementer should support the named white points in the API.Due to other white point setting methods (e.g. SetWhitePointKelvin), care must be taken by codec implementers to ensure proper interoperability. For instance, if the caller sets via a named white point then the codec implementer may whis to disable reading back the correspoinding Kelvin temperature. In specific cases where the codec implementer wishes to deny a given action because of previous calls, WINCODEC_ERR_WRONGSTATE should be returned.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::SetNamedWhitePoint']/*"/>	
            <unmanaged>HRESULT IWICDevelopRaw::SetNamedWhitePoint([In] WICNamedWhitePoint WhitePoint)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.DevelopRaw.GetNamedWhitePoint(SharpDX.WIC.NamedWhitePoint@)">
            <summary>	
            Gets the named white point of the raw image.	
            </summary>	
            <param name="whitePointRef"><para>A reference that receives the bitwise combination of the enumeration values.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            If the named white points are not supported by the raw image or the raw file contains named white points that are not supported by this API, the codec implementer should still mark this capability as supported.If the named white points are not supported by the raw image, a best effort should be made to adjust the image to the named white point even when it isn't a pre-defined white point of the raw file.If the raw file containes named white points not supported by this API, the codec implementer should support the named white points in <see cref="T:SharpDX.WIC.NamedWhitePoint"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::GetNamedWhitePoint']/*"/>	
            <unmanaged>HRESULT IWICDevelopRaw::GetNamedWhitePoint([Out] WICNamedWhitePoint* pWhitePoint)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.DevelopRaw.SetWhitePointKelvin(System.Int32)">
            <summary>	
            Sets the white point Kelvin value.	
            </summary>	
            <param name="whitePointKelvin"><para>The white point Kelvin value. Acceptable Kelvin values are 1,500 through 30,000.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            Codec implementers should faithfully adjust the color temperature within the range supported natively by the raw image. For values outside the native support range, the codec implementer should provide a best effort representation of the image at that color temperature.Codec implementers should return WINCODEC_ERR_VALUEOUTOFRANGE if the value is out of defined acceptable range.Codec implementers must ensure proper interoperability with other white point setting methods such as SetWhitePointRGB. For example, if the caller sets the white point via SetNamedWhitePoint then the codec implementer may want to disable reading back the correspoinding Kelvin temperature. In specific cases where the codec implementer wants to deny a given action because of previous calls, WINCODEC_ERR_WRONGSTATE should be returned.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::SetWhitePointKelvin']/*"/>	
            <unmanaged>HRESULT IWICDevelopRaw::SetWhitePointKelvin([In] unsigned int WhitePointKelvin)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.DevelopRaw.GetWhitePointKelvin(System.Int32@)">
            <summary>	
            Gets the white point Kelvin temperature of the raw image.	
            </summary>	
            <param name="whitePointKelvinRef"><para>A reference that receives the white point Kelvin temperature of the raw image. The default is the "as-shot" setting value.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::GetWhitePointKelvin']/*"/>	
            <unmanaged>HRESULT IWICDevelopRaw::GetWhitePointKelvin([Out] unsigned int* pWhitePointKelvin)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.DevelopRaw.GetKelvinRangeInfo(System.Int32@,System.Int32@,System.Int32@)">
            <summary>	
            Gets the information about the current Kelvin range of the raw image.	
            </summary>	
            <param name="minKelvinTempRef"><para>A reference that receives the minimum Kelvin temperature.</para></param>	
            <param name="maxKelvinTempRef"><para>A reference that receives the maximum Kelvin temperature. </para></param>	
            <param name="kelvinTempStepValueRef"><para>A reference that receives the Kelvin step value.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::GetKelvinRangeInfo']/*"/>	
            <unmanaged>HRESULT IWICDevelopRaw::GetKelvinRangeInfo([Out] unsigned int* pMinKelvinTemp,[Out] unsigned int* pMaxKelvinTemp,[Out] unsigned int* pKelvinTempStepValue)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.DevelopRaw.SetContrast(System.Double)">
            <summary>	
            Sets the contrast value of the raw image.	
            </summary>	
            <param name="contrast"><para>The contrast value of the raw image.  The default value is the "as-shot" setting. The value range for contrast is 0.0 through 1.0. The 0.0 lower limit represents no contrast applied to the image, while the 1.0 upper limit represents the highest amount of contrast that can be applied.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The codec implementer must determine what the upper range value represents and must determine how to map the value to their image processing routines.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::SetContrast']/*"/>	
            <unmanaged>HRESULT IWICDevelopRaw::SetContrast([In] double Contrast)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.DevelopRaw.GetContrast(System.Double@)">
            <summary>	
            Gets the contrast value of the raw image.	
            </summary>	
            <param name="contrastRef"><para>A reference that receives the contrast value of the raw image. The default value is the "as-shot" setting. The value range for contrast is 0.0 through 1.0. The 0.0 lower limit represents no contrast applied to the image, while the 1.0 upper limit represents the highest amount of contrast that can be applied.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::GetContrast']/*"/>	
            <unmanaged>HRESULT IWICDevelopRaw::GetContrast([Out] double* pContrast)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.DevelopRaw.SetGamma(System.Double)">
            <summary>	
            Sets the desired gamma value.	
            </summary>	
            <param name="gamma"><para>The desired gamma value.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::SetGamma']/*"/>	
            <unmanaged>HRESULT IWICDevelopRaw::SetGamma([In] double Gamma)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.DevelopRaw.GetGamma(System.Double@)">
            <summary>	
            Gets the current gamma setting of the raw image.	
            </summary>	
            <param name="gammaRef"><para>A reference that receives the current gamma setting.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::GetGamma']/*"/>	
            <unmanaged>HRESULT IWICDevelopRaw::GetGamma([Out] double* pGamma)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.DevelopRaw.SetSharpness(System.Double)">
            <summary>	
            Sets the sharpness value of the raw image.	
            </summary>	
            <param name="sharpness"><para>The sharpness value of the raw image. The default value is the "as-shot" setting. The value range for sharpness is 0.0 through 1.0. The 0.0 lower limit represents no sharpening applied to the image, while the 1.0 upper limit represents the highest amount of sharpness that can be applied.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The codec implementer must determine what the upper range value represents and must determine how to map the value to their image processing routines.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::SetSharpness']/*"/>	
            <unmanaged>HRESULT IWICDevelopRaw::SetSharpness([In] double Sharpness)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.DevelopRaw.GetSharpness(System.Double@)">
            <summary>	
            Gets the sharpness value of the raw image.	
            </summary>	
            <param name="sharpnessRef"><para>A reference that receives the sharpness value of the raw image. The default value is the "as-shot" setting. The value range for sharpness is 0.0 through 1.0. The 0.0 lower limit represents no sharpening applied to the image, while the 1.0 upper limit represents the highest amount of sharpness that can be applied.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::GetSharpness']/*"/>	
            <unmanaged>HRESULT IWICDevelopRaw::GetSharpness([Out] double* pSharpness)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.DevelopRaw.SetSaturation(System.Double)">
            <summary>	
            Sets the saturation value of the raw image.	
            </summary>	
            <param name="saturation"><para>The saturation value of the raw image. The value range for saturation is 0.0 through 1.0. A value of 0.0 represents an image with a fully de-saturated image, while a value of 1.0 represents the highest amount of saturation that can be applied.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The codec implementer must determine what the upper range value represents and must determine how to map the value to their image processing routines.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::SetSaturation']/*"/>	
            <unmanaged>HRESULT IWICDevelopRaw::SetSaturation([In] double Saturation)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.DevelopRaw.GetSaturation(System.Double@)">
            <summary>	
            Gets the saturation value of the raw image.	
            </summary>	
            <param name="saturationRef"><para>A reference that receives the saturation value of the raw image. The default value is the "as-shot" setting. The value range for saturation is 0.0 through 1.0. A value of 0.0 represents an image with a fully de-saturated image, while a value of 1.0 represents the highest amount of saturation that can be applied.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::GetSaturation']/*"/>	
            <unmanaged>HRESULT IWICDevelopRaw::GetSaturation([Out] double* pSaturation)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.DevelopRaw.SetTint(System.Double)">
            <summary>	
            Sets the tint value of the raw image.	
            </summary>	
            <param name="tint"><para>The tint value of the raw image. The default value is the "as-shot" setting if it exists or 0.0. The value range for sharpness is -1.0 through +1.0. The -1.0 lower limit represents a full green bias to the image, while the 1.0 upper limit represents a full magenta bias.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The codec implementer must determine what the outer range values represent and must determine how to map the values to their image processing routines.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::SetTint']/*"/>	
            <unmanaged>HRESULT IWICDevelopRaw::SetTint([In] double Tint)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.DevelopRaw.GetTint(System.Double@)">
            <summary>	
            Gets the tint value of the raw image.	
            </summary>	
            <param name="tintRef"><para>A reference that receives the tint value of the raw image. The default value is the "as-shot" setting if it exists or 0.0. The value range for sharpness is -1.0 through +1.0. The -1.0 lower limit represents a full green bias to the image, while the 1.0 upper limit represents a full magenta bias.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::GetTint']/*"/>	
            <unmanaged>HRESULT IWICDevelopRaw::GetTint([Out] double* pTint)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.DevelopRaw.SetNoiseReduction(System.Double)">
            <summary>	
            Sets the noise reduction value of the raw image.	
            </summary>	
            <param name="noiseReduction"><para>The noise reduction value of the raw image.  The default value is the "as-shot" setting if it exists or 0.0. The value range for noise reduction is 0.0 through 1.0. The 0.0 lower limit represents no noise reduction applied to the image, while the 1.0 upper limit represents highest noise reduction amount that can be applied.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The codec implementer must determine what the upper range value represents and must determine how to map the value to their image processing routines.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::SetNoiseReduction']/*"/>	
            <unmanaged>HRESULT IWICDevelopRaw::SetNoiseReduction([In] double NoiseReduction)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.DevelopRaw.GetNoiseReduction(System.Double@)">
            <summary>	
            Gets the noise reduction value of the raw image.	
            </summary>	
            <param name="noiseReductionRef"><para>A reference that receives the noise reduction value of the raw image.  The default value is the "as-shot" setting if it exists or 0.0. The value range for noise reduction is 0.0 through 1.0. The 0.0 lower limit represents no noise reduction applied to the image, while the 1.0 upper limit represents full highest noise reduction amount that can be applied.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::GetNoiseReduction']/*"/>	
            <unmanaged>HRESULT IWICDevelopRaw::GetNoiseReduction([Out] double* pNoiseReduction)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.DevelopRaw.SetDestinationColorContext(SharpDX.WIC.ColorContext)">
            <summary>	
            Sets the destination color context.	
            </summary>	
            <param name="colorContextRef"><para>The destination color context.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::SetDestinationColorContext']/*"/>	
            <unmanaged>HRESULT IWICDevelopRaw::SetDestinationColorContext([In, Optional] IWICColorContext* pColorContext)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.DevelopRaw.SetToneCurve(System.Int32,SharpDX.WIC.RawToneCurve[])">
            <summary>	
            Sets the tone curve for the raw image.	
            </summary>	
            <param name="toneCurveSize"><para>The size of the pToneCurve structure.</para></param>	
            <param name="toneCurveRef"><para>The desired tone curve.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::SetToneCurve']/*"/>	
            <unmanaged>HRESULT IWICDevelopRaw::SetToneCurve([In] unsigned int cbToneCurveSize,[In, Buffer] const WICRawToneCurve* pToneCurve)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.DevelopRaw.GetToneCurve(System.Int32,SharpDX.WIC.RawToneCurve[],System.IntPtr)">
            <summary>	
            Gets the tone curve of the raw image.	
            </summary>	
            <param name="toneCurveBufferSize"><para>The size of the pToneCurve buffer.</para></param>	
            <param name="toneCurveRef"><para>A reference that receives the <see cref="T:SharpDX.WIC.RawToneCurve"/> of the raw image.</para></param>	
            <param name="actualToneCurveBufferSizeRef"><para>A reference that receives the size needed to obtain the tone curve structure.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::GetToneCurve']/*"/>	
            <unmanaged>HRESULT IWICDevelopRaw::GetToneCurve([In] unsigned int cbToneCurveBufferSize,[Out, Buffer, Optional] WICRawToneCurve* pToneCurve,[InOut, Optional] unsigned int* pcbActualToneCurveBufferSize)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.DevelopRaw.SetRotation(System.Double)">
            <summary>	
            Sets the desired rotation angle.	
            </summary>	
            <param name="rotation"><para>The desired rotation angle.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::SetRotation']/*"/>	
            <unmanaged>HRESULT IWICDevelopRaw::SetRotation([In] double Rotation)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.DevelopRaw.GetRotation(System.Double@)">
            <summary>	
            Gets the current rotation angle.	
            </summary>	
            <param name="rotationRef"><para>A reference that receives the current rotation angle.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::GetRotation']/*"/>	
            <unmanaged>HRESULT IWICDevelopRaw::GetRotation([Out] double* pRotation)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.DevelopRaw.SetRenderMode(SharpDX.WIC.RawRenderMode)">
            <summary>	
            Sets the current <see cref="T:SharpDX.WIC.RawRenderMode"/>.	
            </summary>	
            <param name="renderMode">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::SetRenderMode']/*"/>	
            <unmanaged>HRESULT IWICDevelopRaw::SetRenderMode([In] WICRawRenderMode RenderMode)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.DevelopRaw.GetRenderMode(SharpDX.WIC.RawRenderMode@)">
            <summary>	
            Gets the current <see cref="T:SharpDX.WIC.RawRenderMode"/>.	
            </summary>	
            <param name="renderModeRef">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::GetRenderMode']/*"/>	
            <unmanaged>HRESULT IWICDevelopRaw::GetRenderMode([Out] WICRawRenderMode* pRenderMode)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.DevelopRaw.SetNotificationCallback(SharpDX.WIC.DevelopRawNotificationCallback)">
            <summary>	
            Sets the notification callback method.	
            </summary>	
            <param name="callbackRef"><para>Pointer to the notification callback method.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::SetNotificationCallback']/*"/>	
            <unmanaged>HRESULT IWICDevelopRaw::SetNotificationCallback([In, Optional] IWICDevelopRawNotificationCallback* pCallback)</unmanaged>	
        </member>
        <member name="P:SharpDX.WIC.DevelopRaw.CurrentParameterSet">
            <summary>	
            Gets the current set of parameters.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::GetCurrentParameterSet']/*"/>	
            <unmanaged>GetCurrentParameterSet</unmanaged>	
            <unmanaged>HRESULT IWICDevelopRaw::GetCurrentParameterSet([Out] IPropertyBag2** ppCurrentParameterSet)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.DevelopRaw.ExposureCompensation">
            <summary>	
            Gets the exposure compensation stop value of the raw image.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::GetExposureCompensation']/*"/>	
            <unmanaged>GetExposureCompensation</unmanaged>	
            <unmanaged>HRESULT IWICDevelopRaw::GetExposureCompensation([Out] double* pEV)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.DevelopRaw.NamedWhitePoint">
            <summary>	
            Gets the named white point of the raw image.	
            </summary>	
            <remarks>	
            If the named white points are not supported by the raw image or the raw file contains named white points that are not supported by this API, the codec implementer should still mark this capability as supported.If the named white points are not supported by the raw image, a best effort should be made to adjust the image to the named white point even when it isn't a pre-defined white point of the raw file.If the raw file containes named white points not supported by this API, the codec implementer should support the named white points in <see cref="T:SharpDX.WIC.NamedWhitePoint"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::GetNamedWhitePoint']/*"/>	
            <unmanaged>GetNamedWhitePoint</unmanaged>	
            <unmanaged>HRESULT IWICDevelopRaw::GetNamedWhitePoint([Out] WICNamedWhitePoint* pWhitePoint)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.DevelopRaw.WhitePointKelvin">
            <summary>	
            Gets the white point Kelvin temperature of the raw image.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::GetWhitePointKelvin']/*"/>	
            <unmanaged>GetWhitePointKelvin</unmanaged>	
            <unmanaged>HRESULT IWICDevelopRaw::GetWhitePointKelvin([Out] unsigned int* pWhitePointKelvin)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.DevelopRaw.Contrast">
            <summary>	
            Gets the contrast value of the raw image.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::GetContrast']/*"/>	
            <unmanaged>GetContrast</unmanaged>	
            <unmanaged>HRESULT IWICDevelopRaw::GetContrast([Out] double* pContrast)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.DevelopRaw.Gamma">
            <summary>	
            Gets the current gamma setting of the raw image.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::GetGamma']/*"/>	
            <unmanaged>GetGamma</unmanaged>	
            <unmanaged>HRESULT IWICDevelopRaw::GetGamma([Out] double* pGamma)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.DevelopRaw.Sharpness">
            <summary>	
            Gets the sharpness value of the raw image.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::GetSharpness']/*"/>	
            <unmanaged>GetSharpness</unmanaged>	
            <unmanaged>HRESULT IWICDevelopRaw::GetSharpness([Out] double* pSharpness)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.DevelopRaw.Saturation">
            <summary>	
            Gets the saturation value of the raw image.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::GetSaturation']/*"/>	
            <unmanaged>GetSaturation</unmanaged>	
            <unmanaged>HRESULT IWICDevelopRaw::GetSaturation([Out] double* pSaturation)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.DevelopRaw.Tint">
            <summary>	
            Gets the tint value of the raw image.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::GetTint']/*"/>	
            <unmanaged>GetTint</unmanaged>	
            <unmanaged>HRESULT IWICDevelopRaw::GetTint([Out] double* pTint)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.DevelopRaw.NoiseReduction">
            <summary>	
            Gets the noise reduction value of the raw image.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::GetNoiseReduction']/*"/>	
            <unmanaged>GetNoiseReduction</unmanaged>	
            <unmanaged>HRESULT IWICDevelopRaw::GetNoiseReduction([Out] double* pNoiseReduction)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.DevelopRaw.DestinationColorContext">
            <summary>	
            Sets the destination color context.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::SetDestinationColorContext']/*"/>	
            <unmanaged>SetDestinationColorContext</unmanaged>	
            <unmanaged>HRESULT IWICDevelopRaw::SetDestinationColorContext([In, Optional] IWICColorContext* pColorContext)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.DevelopRaw.Rotation">
            <summary>	
            Gets the current rotation angle.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::GetRotation']/*"/>	
            <unmanaged>GetRotation</unmanaged>	
            <unmanaged>HRESULT IWICDevelopRaw::GetRotation([Out] double* pRotation)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.DevelopRaw.RenderMode">
            <summary>	
            Gets the current <see cref="T:SharpDX.WIC.RawRenderMode"/>.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::GetRenderMode']/*"/>	
            <unmanaged>GetRenderMode</unmanaged>	
            <unmanaged>HRESULT IWICDevelopRaw::GetRenderMode([Out] WICRawRenderMode* pRenderMode)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.DevelopRaw.NotificationCallback">
            <summary>	
            Sets the notification callback method.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRaw::SetNotificationCallback']/*"/>	
            <unmanaged>SetNotificationCallback</unmanaged>	
            <unmanaged>HRESULT IWICDevelopRaw::SetNotificationCallback([In, Optional] IWICDevelopRawNotificationCallback* pCallback)</unmanaged>
        </member>
        <member name="T:SharpDX.WIC.DevelopRawNotificationCallback">
            <summary>	
            Flags used to by <see cref="T:SharpDX.WIC.DevelopRawNotificationCallback"/> to indicate which members have changed.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRawNotificationCallback']/*"/>	
            <unmanaged>IWICDevelopRawNotificationCallback</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.DevelopRawNotificationCallback.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.DevelopRawNotificationCallback"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.WIC.DevelopRawNotificationCallback.Notify(System.Int32)">
            <summary>	
            An application-defined callback method used for raw image parameter change notifications.	
            </summary>	
            <param name="notificationMask"><para>A set of <see cref="T:SharpDX.WIC.DevelopRawNotificationCallback"/> Constants parameter notification flags.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICDevelopRawNotificationCallback::Notify']/*"/>	
            <unmanaged>HRESULT IWICDevelopRawNotificationCallback::Notify([In] unsigned int NotificationMask)</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.EnumMetadataItem">
            <summary>	
            Exposes methods that provide enumeration services for individual metadata items.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICEnumMetadataItem']/*"/>	
            <unmanaged>IWICEnumMetadataItem</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.EnumMetadataItem.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.EnumMetadataItem"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.WIC.EnumMetadataItem.Skip(System.Int32)">
            <summary>	
            Skips to given number of objects.	
            </summary>	
            <param name="celt"><para>The number of objects to skip.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICEnumMetadataItem::Skip']/*"/>	
            <unmanaged>HRESULT IWICEnumMetadataItem::Skip([In] unsigned int celt)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.EnumMetadataItem.Reset">
            <summary>	
            Resets the current position to the beginning of the enumeration.	
            </summary>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICEnumMetadataItem::Reset']/*"/>	
            <unmanaged>HRESULT IWICEnumMetadataItem::Reset()</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.EnumMetadataItem.Clone(SharpDX.WIC.EnumMetadataItem@)">
            <summary>	
            Creates a copy of the current <see cref="T:SharpDX.WIC.EnumMetadataItem"/>.	
            </summary>	
            <param name="enumMetadataItemOut">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICEnumMetadataItem::Clone']/*"/>	
            <unmanaged>HRESULT IWICEnumMetadataItem::Clone([Out] IWICEnumMetadataItem** ppIEnumMetadataItem)</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.FastMetadataEncoder">
            <summary>	
            Exposes methods used for in-place metadata editing. A fast metadata encoder enables you to add and remove metadata to an image without having to fully re-encode the image.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICFastMetadataEncoder']/*"/>	
            <unmanaged>IWICFastMetadataEncoder</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.FastMetadataEncoder.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.FastMetadataEncoder"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.WIC.FastMetadataEncoder.Commit">
            <summary>	
            Finalizes metadata changes to the image stream.	
            </summary>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            If the commit fails and returns WINCODEC_ERR_STREAMNOTAVAILABLE, ensure that the image decoder was loaded using the <see cref="F:SharpDX.WIC.DecodeOptions.CacheOnDemand"/> option. A fast metadata encoder is not supported when the decoder is created using the <see cref="F:SharpDX.WIC.DecodeOptions.CacheOnLoad"/> option.If the commit fails for any reason, you will need to re-encode the image to ensure the new metadata is added to the image.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICFastMetadataEncoder::Commit']/*"/>	
            <unmanaged>HRESULT IWICFastMetadataEncoder::Commit()</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.FastMetadataEncoder.GetMetadataQueryWriter(SharpDX.WIC.MetadataQueryWriter@)">
            <summary>	
            Retrieves a metadata query writer for fast metadata encoding.	
            </summary>	
            <param name="metadataQueryWriterOut"><para>When this method returns, contains a reference to the fast metadata encoder's metadata query writer.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICFastMetadataEncoder::GetMetadataQueryWriter']/*"/>	
            <unmanaged>HRESULT IWICFastMetadataEncoder::GetMetadataQueryWriter([Out] IWICMetadataQueryWriter** ppIMetadataQueryWriter)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.FastMetadataEncoder.#ctor(SharpDX.WIC.ImagingFactory,SharpDX.WIC.BitmapDecoder)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.FastMetadataEncoder"/> class from a <see cref="T:SharpDX.WIC.BitmapDecoder"/>
            </summary>
            <param name="factory">The factory.</param>
            <param name="decoder">The decoder.</param>
        </member>
        <member name="M:SharpDX.WIC.FastMetadataEncoder.#ctor(SharpDX.WIC.ImagingFactory,SharpDX.WIC.BitmapFrameDecode)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.FastMetadataEncoder"/> class from a <see cref="T:SharpDX.WIC.BitmapFrameDecode"/>
            </summary>
            <param name="factory">The factory.</param>
            <param name="frameDecoder">The frame decoder.</param>
        </member>
        <member name="P:SharpDX.WIC.FastMetadataEncoder.MetadataQueryWriter">
            <summary>	
            Retrieves a metadata query writer for fast metadata encoding.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICFastMetadataEncoder::GetMetadataQueryWriter']/*"/>	
            <unmanaged>GetMetadataQueryWriter</unmanaged>	
            <unmanaged>HRESULT IWICFastMetadataEncoder::GetMetadataQueryWriter([Out] IWICMetadataQueryWriter** ppIMetadataQueryWriter)</unmanaged>
        </member>
        <member name="T:SharpDX.WIC.FormatConverter">
            <summary>	
            Represents an <see cref="T:SharpDX.WIC.BitmapSource"/> that provides converts the image data from one pixel format to another, handling dithering and halftoning to indexed formats, palette translation and alpha thresholding.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICFormatConverter']/*"/>	
            <unmanaged>IWICFormatConverter</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.FormatConverter.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.FormatConverter"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.WIC.FormatConverter.Initialize(SharpDX.WIC.BitmapSource,System.Guid,SharpDX.WIC.BitmapDitherType,SharpDX.WIC.Palette,System.Double,SharpDX.WIC.BitmapPaletteType)">
            <summary>	
            Initializes the format converter.	
            </summary>	
            <param name="sourceRef"><para>The input bitmap to convert</para></param>	
            <param name="dstFormat"><para>The destination pixel format <see cref="T:System.Guid"/>.</para></param>	
            <param name="dither"><para>The <see cref="T:SharpDX.WIC.BitmapDitherType"/> used for conversion.</para></param>	
            <param name="paletteRef"><para>The palette to use for conversion.</para></param>	
            <param name="alphaThresholdPercent"><para>The alpha threshold to use for conversion.</para></param>	
            <param name="paletteTranslate"><para>The palette translation type to use for conversion.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            If you do not have a predefined palette, you must first create one. Use InitializeFromBitmap to create the palette object, then pass it in along with your other parameters.dither, pIPalette, alphaThresholdPercent, and paletteTranslate are used to mitigate color loss when converting to a reduced bit-depth format. For conversions that do not need these settings, the following parameters values should be used: dither set to <see cref="F:SharpDX.WIC.BitmapDitherType.None"/>, pIPalette set to <c>null</c>, alphaThresholdPercent set to 0.0f, and paletteTranslate set to <see cref="F:SharpDX.WIC.BitmapPaletteType.Custom"/>.The basic algorithm involved when using an ordered dither requires a fixed palette, found in the <see cref="T:SharpDX.WIC.BitmapPaletteType"/> enumeration, in a specific order. Often, the actual palette provided for the output may have a different ordering or some slight variation in the actual colors.  This is the case when using the Microsoft?Windows palette which has slight differences among versions of Windows. To provide for this, a palette and a palette translation are given to the format converter.  The pIPalette is the actual destination palette to be used and the paletteTranslate is a fixed palette.  Once the conversion is complete, the colors are mapped from the fixed palette to the actual colors in pIPalette using a nearest color matching algorithm.If colors in pIPalette do not closely match those in paletteTranslate, the mapping may produce undesireable results.WICBitmapDitherTypeOrdered4x4 can be useful in format conversions from 8-bit formats to 5- or 6-bit formats as there is no way to accurately convert color data.WICBitmapDitherTypeErrorDiffusion selects the error diffusion algorithm and may be used with any palette.  If an arbitrary palette is provided, WICBitmapPaletteCustom should be passed in as the paletteTranslate.  Error diffusion often provides superior results compared to the ordered dithering algorithms especially when combined with the optimized palette generation functionality on the <see cref="T:SharpDX.WIC.Palette"/>.When converting a bitmap which has an alpha channel, such as a Portable Network Graphics (PNG), to 8bpp, the alpha channel is normally ignored.  Any pixels which were transparent in the original bitmap show up as black in the final output because both transparent and black have pixel values of zero in the respective formats.Some 8bpp content can contains an alpha color; for instance, the Graphics Interchange Format (GIF) format allows for a single palette entry to be used as a transparent color. For this type of content, alphaThresholdPercent specifies what percentage of transparency should map to the transparent color. Because the alpha value is directly proportional to the opacity (not transparency) of a pixel, the alphaThresholdPercent indicates what level of opacity is mapped to the fully transparent color.  For instance, 9.8% implies that any pixel with an alpha value of less than 25 will be mapped to the transparent color.  A value of 100% maps all pixels which are not fully opaque to the transparent color. Note that the palette should provide a transparent color. If it does not, the 'transparent' color will be the one closest to zero - often black.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICFormatConverter::Initialize']/*"/>	
            <unmanaged>HRESULT IWICFormatConverter::Initialize([In, Optional] IWICBitmapSource* pISource,[In] const GUID&amp; dstFormat,[In] WICBitmapDitherType dither,[In, Optional] IWICPalette* pIPalette,[In] double alphaThresholdPercent,[In] WICBitmapPaletteType paletteTranslate)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.FormatConverter.CanConvert(System.Guid,System.Guid)">
            <summary>	
            Determines if the source pixel format can be converted to the destination pixel format.	
            </summary>	
            <param name="srcPixelFormat"><para>The source pixel format.</para></param>	
            <param name="dstPixelFormat"><para>The destionation pixel format.</para></param>	
            <returns><para>A reference that receives a value indicating whether the source pixel format can be converted to the destination pixel format.</para></returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICFormatConverter::CanConvert']/*"/>	
            <unmanaged>HRESULT IWICFormatConverter::CanConvert([In] const GUID&amp; srcPixelFormat,[In] const GUID&amp; dstPixelFormat,[Out] BOOL* pfCanConvert)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.FormatConverter.#ctor(SharpDX.WIC.FormatConverterInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.FormatConverter"/> class.
            </summary>
            <param name="converterInfo">The converter info.</param>
        </member>
        <member name="M:SharpDX.WIC.FormatConverter.Initialize(SharpDX.WIC.BitmapSource,System.Guid)">
            <summary>
            Initializes this instance with the specified bitmap source and format
            </summary>
            <param name="sourceRef">The source ref.</param>
            <param name="dstFormat">The destination format.</param>
            <returns></returns>
        </member>
        <member name="M:SharpDX.WIC.FormatConverter.#ctor(SharpDX.WIC.ImagingFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.FormatConverter"/> class.
            </summary>
            <param name="factory">The factory.</param>
        </member>
        <member name="T:SharpDX.WIC.FormatConverterInfo">
            <summary>	
            Exposes methods that provide information about a pixel format converter.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICFormatConverterInfo']/*"/>	
            <unmanaged>IWICFormatConverterInfo</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.FormatConverterInfo.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.FormatConverterInfo"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.WIC.FormatConverterInfo.GetPixelFormats(System.Int32,System.IntPtr,System.Int32@)">
            <summary>	
            Retrieves a list of GUIDs that signify which pixel formats the converter supports.	
            </summary>	
            <param name="formats"><para>The size of the pPixelFormatGUIDs array.</para></param>	
            <param name="pixelFormatGUIDsRef"><para>Pointer to a <see cref="T:System.Guid"/> array that receives the pixel formats the converter supports.</para></param>	
            <param name="actualRef"><para>The actual array size needed to retrieve all pixel formats supported by the converter.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The format converter does not necessarily guarantee symmetricality with respect to conversion; that is, a converter may be able to convert FROM a particular format without actually being able to convert TO a particular format. In order to test symmetricality, use CanConvert.To determine the number of pixel formats a coverter can handle, set cFormats to 0 and pPixelFormatGUIDs to <c>null</c>. The converter will fill pcActual with the number of formats supported by that converter.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICFormatConverterInfo::GetPixelFormats']/*"/>	
            <unmanaged>HRESULT IWICFormatConverterInfo::GetPixelFormats([In] unsigned int cFormats,[In] void* pPixelFormatGUIDs,[Out] unsigned int* pcActual)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.FormatConverterInfo.CreateInstance(SharpDX.WIC.FormatConverter)">
            <summary>	
            Creates a new <see cref="T:SharpDX.WIC.FormatConverter"/> instance.	
            </summary>	
            <param name="converterOut">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICFormatConverterInfo::CreateInstance']/*"/>	
            <unmanaged>HRESULT IWICFormatConverterInfo::CreateInstance([Out, Fast] IWICFormatConverter** ppIConverter)</unmanaged>	
        </member>
        <member name="P:SharpDX.WIC.FormatConverterInfo.PixelFormats">
            <summary>
            Gets the supported pixel formats.
            </summary>
        </member>
        <member name="T:SharpDX.WIC.ImageEncoder">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICImageEncoder']/*"/>	
            <unmanaged>IWICImageEncoder</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ImageEncoder.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.ImageEncoder"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.WIC.ImageEncoder.WriteFrame(SharpDX.Direct2D1.Image,SharpDX.WIC.BitmapFrameEncode,SharpDX.WIC.ImageParameters@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="imageRef">No documentation.</param>	
            <param name="frameEncodeRef">No documentation.</param>	
            <param name="imageParametersRef">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICImageEncoder::WriteFrame']/*"/>	
            <unmanaged>HRESULT IWICImageEncoder::WriteFrame([In] ID2D1Image* pImage,[In] IWICBitmapFrameEncode* pFrameEncode,[In] const WICImageParameters* pImageParameters)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ImageEncoder.WriteFrameThumbnail(SharpDX.Direct2D1.Image,SharpDX.WIC.BitmapFrameEncode,SharpDX.WIC.ImageParameters@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="imageRef">No documentation.</param>	
            <param name="frameEncodeRef">No documentation.</param>	
            <param name="imageParametersRef">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICImageEncoder::WriteFrameThumbnail']/*"/>	
            <unmanaged>HRESULT IWICImageEncoder::WriteFrameThumbnail([In] ID2D1Image* pImage,[In] IWICBitmapFrameEncode* pFrameEncode,[In] const WICImageParameters* pImageParameters)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ImageEncoder.WriteThumbnail(SharpDX.Direct2D1.Image,SharpDX.WIC.BitmapEncoder,SharpDX.WIC.ImageParameters@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="imageRef">No documentation.</param>	
            <param name="encoderRef">No documentation.</param>	
            <param name="imageParametersRef">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICImageEncoder::WriteThumbnail']/*"/>	
            <unmanaged>HRESULT IWICImageEncoder::WriteThumbnail([In] ID2D1Image* pImage,[In] IWICBitmapEncoder* pEncoder,[In] const WICImageParameters* pImageParameters)</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.ImagingFactory">
            <summary>	
            Exposes methods used to create components for the Windows Imaging Component (WIC) such as decoders, encoders and pixel format converters.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICImagingFactory']/*"/>	
            <unmanaged>IWICImagingFactory</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ImagingFactory.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.ImagingFactory"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="F:SharpDX.WIC.ImagingFactory.WICImagingFactoryClsid">
            <summary>Constant WICImagingFactoryClsid.</summary>
            <unmanaged>CLSID_WICImagingFactory</unmanaged>
        </member>
        <member name="M:SharpDX.WIC.ImagingFactory.CreateDecoderFromFilename(System.String,System.Nullable{System.Guid},System.Int32,SharpDX.WIC.DecodeOptions,SharpDX.WIC.BitmapDecoder)">
            <summary>	
            Creates a new instance of the <see cref="T:SharpDX.WIC.BitmapDecoder"/> class based on the given file.	
            </summary>	
            <param name="filename">No documentation.</param>	
            <param name="guidVendorRef">No documentation.</param>	
            <param name="desiredAccess">No documentation.</param>	
            <param name="metadataOptions">No documentation.</param>	
            <param name="decoderOut">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICImagingFactory::CreateDecoderFromFilename']/*"/>	
            <unmanaged>HRESULT IWICImagingFactory::CreateDecoderFromFilename([In] const wchar_t* wzFilename,[In, Optional] const GUID* pguidVendor,[In] unsigned int dwDesiredAccess,[In] WICDecodeOptions metadataOptions,[Out, Fast] IWICBitmapDecoder** ppIDecoder)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ImagingFactory.CreateDecoderFromStream_(System.IntPtr,System.Nullable{System.Guid},SharpDX.WIC.DecodeOptions,SharpDX.WIC.BitmapDecoder)">
            <summary>	
            Creates a new instance of the <see cref="T:SharpDX.WIC.BitmapDecoder"/> class based on the given <see cref="T:SharpDX.Win32.IStream"/>.	
            </summary>	
            <param name="streamRef">No documentation.</param>	
            <param name="guidVendorRef">No documentation.</param>	
            <param name="metadataOptions">No documentation.</param>	
            <param name="decoderOut">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICImagingFactory::CreateDecoderFromStream']/*"/>	
            <unmanaged>HRESULT IWICImagingFactory::CreateDecoderFromStream([In, Optional] IStream* pIStream,[In, Optional] const GUID* pguidVendor,[In] WICDecodeOptions metadataOptions,[Out, Fast] IWICBitmapDecoder** ppIDecoder)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ImagingFactory.CreateDecoderFromFileHandle(System.IntPtr,System.Nullable{System.Guid},SharpDX.WIC.DecodeOptions,SharpDX.WIC.BitmapDecoder)">
            <summary>	
            Creates a new instance of the <see cref="T:SharpDX.WIC.BitmapDecoder"/> based on the given file handle.	
            </summary>	
            <param name="hFile">No documentation.</param>	
            <param name="guidVendorRef">No documentation.</param>	
            <param name="metadataOptions">No documentation.</param>	
            <param name="decoderOut">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            When a decoder is created using this method, the file handle must remain alive during the lifetime of the decoder.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICImagingFactory::CreateDecoderFromFileHandle']/*"/>	
            <unmanaged>HRESULT IWICImagingFactory::CreateDecoderFromFileHandle([In] ULONG_PTR hFile,[In, Optional] const GUID* pguidVendor,[In] WICDecodeOptions metadataOptions,[Out, Fast] IWICBitmapDecoder** ppIDecoder)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ImagingFactory.CreateComponentInfo(System.Guid,SharpDX.WIC.ComponentInfo)">
            <summary>	
            Creates a new instance of the <see cref="T:SharpDX.WIC.ComponentInfo"/> class for the given component class identifier (CLSID).	
            </summary>	
            <param name="clsidComponent">No documentation.</param>	
            <param name="infoOut">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICImagingFactory::CreateComponentInfo']/*"/>	
            <unmanaged>HRESULT IWICImagingFactory::CreateComponentInfo([In] const GUID&amp; clsidComponent,[Out, Fast] IWICComponentInfo** ppIInfo)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ImagingFactory.CreateDecoder(System.Guid,System.Nullable{System.Guid},SharpDX.WIC.BitmapDecoder)">
            <summary>	
            Creates a new instance of the <see cref="T:SharpDX.WIC.BitmapDecoder"/> interface.	
            </summary>	
            <param name="guidContainerFormat">No documentation.</param>	
            <param name="guidVendorRef">No documentation.</param>	
            <param name="decoderOut">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICImagingFactory::CreateDecoder']/*"/>	
            <unmanaged>HRESULT IWICImagingFactory::CreateDecoder([In] const GUID&amp; guidContainerFormat,[In, Optional] const GUID* pguidVendor,[Out, Fast] IWICBitmapDecoder** ppIDecoder)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ImagingFactory.CreateEncoder(System.Guid,System.Nullable{System.Guid},SharpDX.WIC.BitmapEncoder)">
            <summary>	
            Creates a new instance of the <see cref="T:SharpDX.WIC.BitmapEncoder"/> class.	
            </summary>	
            <param name="guidContainerFormat">No documentation.</param>	
            <param name="guidVendorRef">No documentation.</param>	
            <param name="encoderOut">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            Other values may be available for both guidContainerFormat and pguidVendor depending on the installed WIC-enabled encoders. The values listed are those that are natively supported by the operating system.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICImagingFactory::CreateEncoder']/*"/>	
            <unmanaged>HRESULT IWICImagingFactory::CreateEncoder([In] const GUID&amp; guidContainerFormat,[In, Optional] const GUID* pguidVendor,[Out, Fast] IWICBitmapEncoder** ppIEncoder)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ImagingFactory.CreatePalette(SharpDX.WIC.Palette)">
            <summary>	
            Creates a new instance of the <see cref="T:SharpDX.WIC.Palette"/> class.	
            </summary>	
            <param name="paletteOut">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICImagingFactory::CreatePalette']/*"/>	
            <unmanaged>HRESULT IWICImagingFactory::CreatePalette([Out, Fast] IWICPalette** ppIPalette)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ImagingFactory.CreateFormatConverter(SharpDX.WIC.FormatConverter)">
            <summary>	
            Creates a new instance of the <see cref="T:SharpDX.WIC.FormatConverter"/> class.	
            </summary>	
            <param name="formatConverterOut">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICImagingFactory::CreateFormatConverter']/*"/>	
            <unmanaged>HRESULT IWICImagingFactory::CreateFormatConverter([Out, Fast] IWICFormatConverter** ppIFormatConverter)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ImagingFactory.CreateBitmapScaler(SharpDX.WIC.BitmapScaler)">
            <summary>	
            Creates a new instance of an <see cref="T:SharpDX.WIC.BitmapScaler"/>.	
            </summary>	
            <param name="bitmapScalerOut">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICImagingFactory::CreateBitmapScaler']/*"/>	
            <unmanaged>HRESULT IWICImagingFactory::CreateBitmapScaler([Out, Fast] IWICBitmapScaler** ppIBitmapScaler)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ImagingFactory.CreateBitmapClipper(SharpDX.WIC.BitmapClipper)">
            <summary>	
            Creates a new instance of an <see cref="T:SharpDX.WIC.BitmapClipper"/> object.	
            </summary>	
            <param name="bitmapClipperOut">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICImagingFactory::CreateBitmapClipper']/*"/>	
            <unmanaged>HRESULT IWICImagingFactory::CreateBitmapClipper([Out, Fast] IWICBitmapClipper** ppIBitmapClipper)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ImagingFactory.CreateBitmapFlipRotator(SharpDX.WIC.BitmapFlipRotator)">
            <summary>	
            Creates a new instance of an <see cref="T:SharpDX.WIC.BitmapFlipRotator"/> object.	
            </summary>	
            <param name="bitmapFlipRotatorOut">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICImagingFactory::CreateBitmapFlipRotator']/*"/>	
            <unmanaged>HRESULT IWICImagingFactory::CreateBitmapFlipRotator([Out, Fast] IWICBitmapFlipRotator** ppIBitmapFlipRotator)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ImagingFactory.CreateStream(SharpDX.WIC.WICStream)">
            <summary>	
            Creates a new instance of the <see cref="T:SharpDX.WIC.WICStream"/> class.	
            </summary>	
            <param name="wICStreamOut">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICImagingFactory::CreateStream']/*"/>	
            <unmanaged>HRESULT IWICImagingFactory::CreateStream([Out, Fast] IWICStream** ppIWICStream)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ImagingFactory.CreateColorContext(SharpDX.WIC.ColorContext)">
            <summary>	
            Creates a new instance of the <see cref="T:SharpDX.WIC.ColorContext"/> class.	
            </summary>	
            <param name="wICColorContextOut">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICImagingFactory::CreateColorContext']/*"/>	
            <unmanaged>HRESULT IWICImagingFactory::CreateColorContext([Out, Fast] IWICColorContext** ppIWICColorContext)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ImagingFactory.CreateColorTransformer(SharpDX.WIC.ColorTransform)">
            <summary>	
            Creates a new instance of the <see cref="T:SharpDX.WIC.ColorTransform"/> class.	
            </summary>	
            <param name="wICColorTransformOut">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICImagingFactory::CreateColorTransformer']/*"/>	
            <unmanaged>HRESULT IWICImagingFactory::CreateColorTransformer([Out, Fast] IWICColorTransform** ppIWICColorTransform)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ImagingFactory.CreateBitmap(System.Int32,System.Int32,System.Guid,SharpDX.WIC.BitmapCreateCacheOption,SharpDX.WIC.Bitmap)">
            <summary>	
            Creates an <see cref="T:SharpDX.WIC.Bitmap"/> object.	
            </summary>	
            <param name="width">No documentation.</param>	
            <param name="height">No documentation.</param>	
            <param name="ixelFormatRef">No documentation.</param>	
            <param name="option">No documentation.</param>	
            <param name="bitmapOut">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICImagingFactory::CreateBitmap']/*"/>	
            <unmanaged>HRESULT IWICImagingFactory::CreateBitmap([In] unsigned int uiWidth,[In] unsigned int uiHeight,[In] const GUID&amp; pixelFormat,[In] WICBitmapCreateCacheOption option,[Out, Fast] IWICBitmap** ppIBitmap)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ImagingFactory.CreateBitmapFromSource(SharpDX.WIC.BitmapSource,SharpDX.WIC.BitmapCreateCacheOption,SharpDX.WIC.Bitmap)">
            <summary>	
            Creates a <see cref="T:SharpDX.WIC.Bitmap"/> from a <see cref="T:SharpDX.WIC.BitmapSource"/>.	
            </summary>	
            <param name="bitmapSourceRef">No documentation.</param>	
            <param name="option">No documentation.</param>	
            <param name="bitmapOut">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICImagingFactory::CreateBitmapFromSource']/*"/>	
            <unmanaged>HRESULT IWICImagingFactory::CreateBitmapFromSource([In, Optional] IWICBitmapSource* pIBitmapSource,[In] WICBitmapCreateCacheOption option,[Out, Fast] IWICBitmap** ppIBitmap)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ImagingFactory.CreateBitmapFromSourceRect(SharpDX.WIC.BitmapSource,System.Int32,System.Int32,System.Int32,System.Int32,SharpDX.WIC.Bitmap)">
            <summary>	
            Creates an <see cref="T:SharpDX.WIC.Bitmap"/> from a specified rectangle of an <see cref="T:SharpDX.WIC.BitmapSource"/>.	
            </summary>	
            <param name="bitmapSourceRef">No documentation.</param>	
            <param name="x">No documentation.</param>	
            <param name="y">No documentation.</param>	
            <param name="width">No documentation.</param>	
            <param name="height">No documentation.</param>	
            <param name="bitmapOut">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICImagingFactory::CreateBitmapFromSourceRect']/*"/>	
            <unmanaged>HRESULT IWICImagingFactory::CreateBitmapFromSourceRect([In, Optional] IWICBitmapSource* pIBitmapSource,[In] unsigned int x,[In] unsigned int y,[In] unsigned int width,[In] unsigned int height,[Out, Fast] IWICBitmap** ppIBitmap)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ImagingFactory.CreateBitmapFromMemory(System.Int32,System.Int32,System.Guid,System.Int32,System.Int32,System.IntPtr,SharpDX.WIC.Bitmap)">
            <summary>	
            Creates an <see cref="T:SharpDX.WIC.Bitmap"/> from a memory block.	
            </summary>	
            <param name="width">No documentation.</param>	
            <param name="height">No documentation.</param>	
            <param name="ixelFormatRef">No documentation.</param>	
            <param name="stride">No documentation.</param>	
            <param name="bufferSize">No documentation.</param>	
            <param name="bufferRef">No documentation.</param>	
            <param name="bitmapOut">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICImagingFactory::CreateBitmapFromMemory']/*"/>	
            <unmanaged>HRESULT IWICImagingFactory::CreateBitmapFromMemory([In] unsigned int uiWidth,[In] unsigned int uiHeight,[In] const GUID&amp; pixelFormat,[In] unsigned int cbStride,[In] unsigned int cbBufferSize,[In] void* pbBuffer,[Out, Fast] IWICBitmap** ppIBitmap)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ImagingFactory.CreateBitmapFromHBITMAP(System.IntPtr,System.IntPtr,SharpDX.WIC.BitmapAlphaChannelOption,SharpDX.WIC.Bitmap)">
            <summary>	
            Creates an <see cref="T:SharpDX.WIC.Bitmap"/> from a bitmap handle.	
            </summary>	
            <param name="hBitmap">No documentation.</param>	
            <param name="hPalette">No documentation.</param>	
            <param name="options">No documentation.</param>	
            <param name="bitmapOut">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICImagingFactory::CreateBitmapFromHBITMAP']/*"/>	
            <unmanaged>HRESULT IWICImagingFactory::CreateBitmapFromHBITMAP([In] HBITMAP hBitmap,[In, Optional] HPALETTE hPalette,[In] WICBitmapAlphaChannelOption options,[Out, Fast] IWICBitmap** ppIBitmap)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ImagingFactory.CreateBitmapFromHICON(System.IntPtr,SharpDX.WIC.Bitmap)">
            <summary>	
            Creates an <see cref="T:SharpDX.WIC.Bitmap"/> from an icon handle.	
            </summary>	
            <param name="hIcon">No documentation.</param>	
            <param name="bitmapOut">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICImagingFactory::CreateBitmapFromHICON']/*"/>	
            <unmanaged>HRESULT IWICImagingFactory::CreateBitmapFromHICON([In] HICON hIcon,[Out, Fast] IWICBitmap** ppIBitmap)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ImagingFactory.CreateComponentEnumerator(System.Int32,System.Int32,SharpDX.ComObject)">
            <summary>	
            Creates an <see cref="T:SharpDX.ComObject"/> object of the specified component types.	
            </summary>	
            <param name="componentTypes">No documentation.</param>	
            <param name="options">No documentation.</param>	
            <param name="enumUnknownOut">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            Component types must be enumerated seperately. Combinations of component types and <see cref="F:SharpDX.WIC.ComponentType.AllComponents"/> are unsupported.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICImagingFactory::CreateComponentEnumerator']/*"/>	
            <unmanaged>HRESULT IWICImagingFactory::CreateComponentEnumerator([In] unsigned int componentTypes,[In] unsigned int options,[Out, Fast] IEnumUnknown** ppIEnumUnknown)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ImagingFactory.CreateFastMetadataEncoderFromDecoder(SharpDX.WIC.BitmapDecoder,SharpDX.WIC.FastMetadataEncoder)">
            <summary>	
            Creates a new instance of the fast metadata encoder based on the given <see cref="T:SharpDX.WIC.BitmapDecoder"/>.	
            </summary>	
            <param name="decoderRef">No documentation.</param>	
            <param name="fastEncoderOut">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The native image formats provided by Windows Imaging Component (WIC) do not support metadata at the decoder level. WIC codecs only support metadata on image frames. To create a fast metadata encoder from an image frame, see the image factory's CreateFastMetadataEncoderFromFrameDecode method.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICImagingFactory::CreateFastMetadataEncoderFromDecoder']/*"/>	
            <unmanaged>HRESULT IWICImagingFactory::CreateFastMetadataEncoderFromDecoder([In, Optional] IWICBitmapDecoder* pIDecoder,[Out, Fast] IWICFastMetadataEncoder** ppIFastEncoder)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ImagingFactory.CreateFastMetadataEncoderFromFrameDecode(SharpDX.WIC.BitmapFrameDecode,SharpDX.WIC.FastMetadataEncoder)">
            <summary>	
            Creates a new instance of the fast metadata encoder based on the given image frame.	
            </summary>	
            <param name="frameDecoderRef"><para>The <see cref="T:SharpDX.WIC.BitmapFrameDecode"/> to create the <see cref="T:SharpDX.WIC.FastMetadataEncoder"/> from.</para></param>	
            <param name="fastEncoderOut"><para>When this method returns, contains a reference to a new fast metadata encoder.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICImagingFactory::CreateFastMetadataEncoderFromFrameDecode']/*"/>	
            <unmanaged>HRESULT IWICImagingFactory::CreateFastMetadataEncoderFromFrameDecode([In, Optional] IWICBitmapFrameDecode* pIFrameDecoder,[Out, Fast] IWICFastMetadataEncoder** ppIFastEncoder)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ImagingFactory.CreateQueryWriter(System.Guid,System.Nullable{System.Guid},SharpDX.WIC.MetadataQueryWriter)">
            <summary>	
            Creates a new instance of a query writer.	
            </summary>	
            <param name="guidMetadataFormat"><para>The <see cref="T:System.Guid"/> for the desired metadata format. </para></param>	
            <param name="guidVendorRef"><para>The <see cref="T:System.Guid"/> for the preferred metadata writer vendor. Use <c>null</c> if no preferred vendor.</para></param>	
            <param name="queryWriterOut"><para>When this method returns, contains a reference to a new <see cref="T:SharpDX.WIC.MetadataQueryWriter"/>.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICImagingFactory::CreateQueryWriter']/*"/>	
            <unmanaged>HRESULT IWICImagingFactory::CreateQueryWriter([In] const GUID&amp; guidMetadataFormat,[In, Optional] const GUID* pguidVendor,[Out, Fast] IWICMetadataQueryWriter** ppIQueryWriter)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ImagingFactory.CreateQueryWriterFromReader(SharpDX.WIC.MetadataQueryReader,System.Nullable{System.Guid},SharpDX.WIC.MetadataQueryWriter)">
            <summary>	
            Creates a new instance of a query writer based on the given query reader. The query writer will be pre-populated with metadata from the query reader.	
            </summary>	
            <param name="queryReaderRef"><para>The <see cref="T:SharpDX.WIC.MetadataQueryReader"/> to create the <see cref="T:SharpDX.WIC.MetadataQueryWriter"/> from.</para></param>	
            <param name="guidVendorRef"><para>The <see cref="T:System.Guid"/> for the preferred metadata writer vendor. Use <c>null</c> if no preferred vendor.</para></param>	
            <param name="queryWriterOut"><para>When this method returns, contains a reference to a new metadata writer.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICImagingFactory::CreateQueryWriterFromReader']/*"/>	
            <unmanaged>HRESULT IWICImagingFactory::CreateQueryWriterFromReader([In, Optional] IWICMetadataQueryReader* pIQueryReader,[In, Optional] const GUID* pguidVendor,[Out, Fast] IWICMetadataQueryWriter** ppIQueryWriter)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ImagingFactory.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.ImagingFactory"/> class.
            </summary>
        </member>
        <member name="T:SharpDX.WIC.ImagingFactory2">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICImagingFactory2']/*"/>	
            <unmanaged>IWICImagingFactory2</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ImagingFactory2.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.ImagingFactory2"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.WIC.ImagingFactory2.CreateImageEncoder(SharpDX.Direct2D1.DeviceContext,SharpDX.WIC.ImageEncoder@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="d2DDeviceContextRef">No documentation.</param>	
            <param name="wICImageEncoderOut">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICImagingFactory2::CreateImageEncoder']/*"/>	
            <unmanaged>HRESULT IWICImagingFactory2::CreateImageEncoder([In] ID2D1DeviceContext* pD2DDeviceContext,[In] IWICImageEncoder** ppWICImageEncoder)</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.MetadataQueryReader">
            <summary>	
            Exposes methods for retrieving metadata blocks and items from a decoder or its image frames using a metadata query expression.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICMetadataQueryReader']/*"/>	
            <unmanaged>IWICMetadataQueryReader</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.MetadataQueryReader.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.MetadataQueryReader"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.WIC.MetadataQueryReader.GetContainerFormat(System.Guid@)">
            <summary>	
            Gets the metadata query readers container format.	
            </summary>	
            <param name="guidContainerFormatRef"><para>Pointer that receives the cointainer format <see cref="T:System.Guid"/>.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICMetadataQueryReader::GetContainerFormat']/*"/>	
            <unmanaged>HRESULT IWICMetadataQueryReader::GetContainerFormat([Out] GUID* pguidContainerFormat)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.MetadataQueryReader.GetLocation(System.Int32,System.IntPtr,System.Int32@)">
            <summary>	
            Retrieves the current path relative to the root metadata block.	
            </summary>	
            <param name="cchMaxLength"><para>The length of the wzNamespace buffer.</para></param>	
            <param name="@namespace"><para>Pointer that receives the current namespace location.</para></param>	
            <param name="cchActualLengthRef"><para>The actual buffer length that was needed to retrieve the current namespace location.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            If the query reader is relative to the top of the metadata hierarchy it will return an empty string.If the query reader is relative to a nested metadata block this method will return the path to the current query reader.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICMetadataQueryReader::GetLocation']/*"/>	
            <unmanaged>HRESULT IWICMetadataQueryReader::GetLocation([In] unsigned int cchMaxLength,[In] void* wzNamespace,[Out] unsigned int* pcchActualLength)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.MetadataQueryReader.GetMetadataByName(System.String,System.IntPtr)">
            <summary>	
            Retrieves the metadata block or item identified by a metadata query expression.	
            </summary>	
            <param name="name"><para>The query expression to the requested metadata block or item.</para></param>	
            <param name="varValueRef"><para>When this method returns, contains the metadata block or item requested.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            GetMetadataByName uses metadata query expressions to access embedded metadata. For more information on the metadata query language, see the Metadata Query Language Overview.If multiple blocks or items exist that are expressed by the same query expression, the first metadata block or item found will be returned.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICMetadataQueryReader::GetMetadataByName']/*"/>	
            <unmanaged>HRESULT IWICMetadataQueryReader::GetMetadataByName([In] const wchar_t* wzName,[InOut, Optional] PROPVARIANT* pvarValue)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.MetadataQueryReader.GetEnumerator">
            <summary>	
            Gets an enumerator of all metadata items at the current relative location within the metadata hierachy.	
            </summary>	
            <returns><para>When this method returns, contais a reference to an enumerator that contains the metadata items.</para></returns>	
            <remarks>	
            If a metadata item is a nested metadata block it will be passed back as a VT_UNKNOWN; otherwise, the "name" of the property will be passed back as a VT_LPWSTR. The enumerator does not enumerate content within nested metadata blocks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICMetadataQueryReader::GetEnumerator']/*"/>	
            <unmanaged>HRESULT IWICMetadataQueryReader::GetEnumerator([Out] void** ppIEnumString)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.MetadataQueryReader.GetMetadataByName(System.String)">
            <summary>
            Gets the metadata value by name.
            </summary>
            <param name="name">The name.</param>
            <returns>Value of the metadata</returns>
            <unmanaged>HRESULT IWICMetadataQueryReader::GetMetadataByName([In] const wchar_t* wzName,[InOut, Optional] PROPVARIANT* pvarValue)</unmanaged>
        </member>
        <member name="M:SharpDX.WIC.MetadataQueryReader.Dump(System.IO.TextWriter,System.Int32)">
            <summary>
            Dumps all metadatas.
            </summary>
            <param name="writer">The text writer output.</param>
            <param name="level">The level of tabulations.</param>
            <remarks>
            This is a simple helper method to dump metadata stored in this instance.
            </remarks>
        </member>
        <member name="P:SharpDX.WIC.MetadataQueryReader.ContainerFormat">
            <summary>	
            Gets the metadata query readers container format.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICMetadataQueryReader::GetContainerFormat']/*"/>	
            <unmanaged>GetContainerFormat</unmanaged>	
            <unmanaged>HRESULT IWICMetadataQueryReader::GetContainerFormat([Out] GUID* pguidContainerFormat)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.MetadataQueryReader.Enumerator">
            <summary>
            Gets the enumerator on the metadata names.
            </summary>
        </member>
        <member name="P:SharpDX.WIC.MetadataQueryReader.Location">
            <summary>
            Gets the location.
            </summary>
            <unmanaged>HRESULT IWICMetadataQueryReader::GetLocation([In] unsigned int cchMaxLength,[InOut, Buffer, Optional] wchar_t* wzNamespace,[Out] unsigned int* pcchActualLength)</unmanaged>
        </member>
        <member name="T:SharpDX.WIC.MetadataQueryWriter">
            <summary>	
            Exposes methods for setting or removing metadata blocks and items to an encoder or its image frames using a metadata query expression.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICMetadataQueryWriter']/*"/>	
            <unmanaged>IWICMetadataQueryWriter</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.MetadataQueryWriter.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.MetadataQueryWriter"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.WIC.MetadataQueryWriter.SetMetadataByName(System.String,System.IntPtr)">
            <summary>	
            Sets a metadata item to a specific location.	
            </summary>	
            <param name="name"><para>The name of the metadata item.</para></param>	
            <param name="varValueRef"><para>The metadata to set.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            SetMetadataByName uses metadata query expressions to remove metadata. For more information on the metadata query language, see the Metadata Query Language Overview.If the value set is a nested metadata block then use variant type VT_UNKNOWN and pvarValue pointing to the <see cref="T:SharpDX.WIC.MetadataQueryWriter"/> of the new metadata block.   The ordering of metadata items is at the discretion of the query writer since relative locations are not specified.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICMetadataQueryWriter::SetMetadataByName']/*"/>	
            <unmanaged>HRESULT IWICMetadataQueryWriter::SetMetadataByName([In] const wchar_t* wzName,[In] const void* pvarValue)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.MetadataQueryWriter.RemoveMetadataByName(System.String)">
            <summary>	
            Removes a metadata item from a specific location using a metadata query expression.	
            </summary>	
            <param name="name"><para>The name of the metadata item to remove.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            RemoveMetadataByName uses metadata query expressions to remove metadata. For more information on the metadata query language, see the Metadata Query Language Overview.If the metadata item is a metadata block, it is removed from the metadata hierarchy.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICMetadataQueryWriter::RemoveMetadataByName']/*"/>	
            <unmanaged>HRESULT IWICMetadataQueryWriter::RemoveMetadataByName([In] const wchar_t* wzName)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.MetadataQueryWriter.#ctor(SharpDX.WIC.ImagingFactory,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.MetadataQueryWriter"/> class.
            </summary>
            <param name="factory">The factory.</param>
            <param name="guidMetadataFormat">The GUID metadata format.</param>
        </member>
        <member name="M:SharpDX.WIC.MetadataQueryWriter.#ctor(SharpDX.WIC.ImagingFactory,System.Guid,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.MetadataQueryWriter"/> class.
            </summary>
            <param name="factory">The factory.</param>
            <param name="guidMetadataFormat">The GUID metadata format.</param>
            <param name="guidVendorRef">The GUID vendor ref.</param>
            <unmanaged>HRESULT IWICImagingFactory::CreateQueryWriter([In] const GUID&amp; guidMetadataFormat,[In, Optional] const GUID* pguidVendor,[Out, Fast] IWICMetadataQueryWriter** ppIQueryWriter)</unmanaged>
        </member>
        <member name="M:SharpDX.WIC.MetadataQueryWriter.#ctor(SharpDX.WIC.ImagingFactory,SharpDX.WIC.MetadataQueryReader)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.MetadataQueryWriter"/> class from a <see cref="T:SharpDX.WIC.MetadataQueryReader"/>.
            </summary>
            <param name="factory">The factory.</param>
            <param name="metadataQueryReader">The metadata query reader.</param>
        </member>
        <member name="M:SharpDX.WIC.MetadataQueryWriter.#ctor(SharpDX.WIC.ImagingFactory,SharpDX.WIC.MetadataQueryReader,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.MetadataQueryWriter"/> class from a <see cref="T:SharpDX.WIC.MetadataQueryReader"/>.
            </summary>
            <param name="factory">The factory.</param>
            <param name="metadataQueryReader">The metadata query reader.</param>
            <param name="guidVendorRef">The GUID vendor ref.</param>
        </member>
        <member name="M:SharpDX.WIC.MetadataQueryWriter.SetMetadataByName(System.String,System.Object)">
            <summary>
            Sets the value for a metadata name
            </summary>
            <param name="name">The name of the metadata.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="T:SharpDX.WIC.Palette">
            <summary>	
            Exposes methods for accessing and building a color table, primarily for indexed pixel formats.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICPalette']/*"/>	
            <unmanaged>IWICPalette</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.Palette.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.Palette"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.WIC.Palette.Initialize(SharpDX.WIC.BitmapPaletteType,System.Boolean)">
            <summary>	
            Initializes the palette to one of the pre-defined palettes specified by <see cref="T:SharpDX.WIC.BitmapPaletteType"/> and optionally adds a transparent color.	
            </summary>	
            <param name="ePaletteType">No documentation.</param>	
            <param name="fAddTransparentColor">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICPalette::InitializePredefined']/*"/>	
            <unmanaged>HRESULT IWICPalette::InitializePredefined([In] WICBitmapPaletteType ePaletteType,[In] BOOL fAddTransparentColor)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.Palette.Initialize(System.Int32[],System.Int32)">
            <summary>	
            Initializes a palette to the custom color entries provided.	
            </summary>	
            <param name="colorsRef"><para>Pointer to the color array.</para></param>	
            <param name="count"><para>The number of colors in pColors.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            If a transparent color is required, it should be provided as part of the custom entries.The entry count is limited to 256.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICPalette::InitializeCustom']/*"/>	
            <unmanaged>HRESULT IWICPalette::InitializeCustom([In, Buffer] unsigned int* pColors,[In] unsigned int cCount)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.Palette.Initialize(SharpDX.WIC.BitmapSource,System.Int32,System.Boolean)">
            <summary>	
            Initializes a palette using a computed optimized values based on the reference bitmap.	
            </summary>	
            <param name="surfaceRef"><para>Pointer to the source bitmap.</para></param>	
            <param name="count"><para>The number of colors to initialize the palette with.</para></param>	
            <param name="fAddTransparentColor"><para>A value to indicate whether to add a transparent color.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The resulting palette contains the specified number of colors which best represent the colors present in the bitmap. The algorithm operates on the opaque RGB color value of each pixel in the reference bitmap and hence ignores any alpha values. If a transparent color is required, set the fAddTransparentColor parameter to TRUE and one fewer optimized color will be computed, reducing the colorCount, and a fully transparent color entry will be added.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICPalette::InitializeFromBitmap']/*"/>	
            <unmanaged>HRESULT IWICPalette::InitializeFromBitmap([In, Optional] IWICBitmapSource* pISurface,[In] unsigned int cCount,[In] BOOL fAddTransparentColor)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.Palette.Initialize(SharpDX.WIC.Palette)">
            <summary>	
            Initialize the palette based on a given palette.	
            </summary>	
            <param name="paletteRef"><para>Pointer to the source palette.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICPalette::InitializeFromPalette']/*"/>	
            <unmanaged>HRESULT IWICPalette::InitializeFromPalette([In, Optional] IWICPalette* pIPalette)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.Palette.GetTypeInfo(SharpDX.WIC.BitmapPaletteType@)">
            <summary>	
            Retrieves the <see cref="T:SharpDX.WIC.BitmapPaletteType"/> that describes the palette.	
            </summary>	
            <param name="ePaletteTypeRef">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            WICBitmapPaletteCustom is used for palettes initialized from both InitializeCustom and InitializeFromBitmap. There is no distinction is made between optimized and custom palettes.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICPalette::GetType']/*"/>	
            <unmanaged>HRESULT IWICPalette::GetType([Out] WICBitmapPaletteType* pePaletteType)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.Palette.GetColorCount(System.Int32@)">
            <summary>	
            Retrieves the number of colors in the color table.	
            </summary>	
            <param name="countRef"><para>Pointer that receives the number of colors in the color table.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICPalette::GetColorCount']/*"/>	
            <unmanaged>HRESULT IWICPalette::GetColorCount([Out] unsigned int* pcCount)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.Palette.GetColors(System.Int32,System.Int32[],System.Int32@)">
            <summary>	
            Fills out the supplied color array with the colors from the internal color table. The color array should be sized according to the return results from GetColorCount.	
            </summary>	
            <param name="count">No documentation.</param>	
            <param name="colorsRef">No documentation.</param>	
            <param name="actualColorsRef">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICPalette::GetColors']/*"/>	
            <unmanaged>HRESULT IWICPalette::GetColors([In] unsigned int cCount,[Out, Buffer] unsigned int* pColors,[Out] unsigned int* pcActualColors)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.Palette.IsBlackWhite_(System.Boolean@)">
            <summary>	
            Retrieves a value that describes whether the palette is black and white.	
            </summary>	
            <param name="fIsBlackWhiteRef"><para>Pointer that receives TRUE if the palette is black and white; otherwise, <see cref="F:SharpDX.Result.False"/>.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICPalette::IsBlackWhite']/*"/>	
            <unmanaged>HRESULT IWICPalette::IsBlackWhite([Out] BOOL* pfIsBlackWhite)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.Palette.IsGrayscale_(System.Boolean@)">
            <summary>	
            Retrieves a value that describes whether a palette is grayscale.	
            </summary>	
            <param name="fIsGrayscaleRef"><para>Pointer that receives TRUE if the palette is grayscale; otherwise <see cref="F:SharpDX.Result.False"/>.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICPalette::IsGrayscale']/*"/>	
            <unmanaged>HRESULT IWICPalette::IsGrayscale([Out] BOOL* pfIsGrayscale)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.Palette.HasAlpha(System.Boolean@)">
            <summary>	
            Retrieves a value that describes whether the palette contains an alpha transparent color.	
            </summary>	
            <param name="fHasAlphaRef"><para>Pointer that receives TRUE if the palette contains a transparent color; otherwise, <see cref="F:SharpDX.Result.False"/>.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICPalette::HasAlpha']/*"/>	
            <unmanaged>HRESULT IWICPalette::HasAlpha([Out] BOOL* pfHasAlpha)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.Palette.#ctor(SharpDX.WIC.ImagingFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.Palette"/> class.
            </summary>
            <param name="factory">The factory.</param>
            <unmanaged>HRESULT IWICImagingFactory::CreatePalette([Out, Fast] IWICPalette** ppIPalette)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.Palette.Initialize(SharpDX.Color4[])">
            <summary>
            Initializes with the specified colors.
            </summary>
            <param name="colors">The colors.</param>
            <unmanaged>HRESULT IWICPalette::InitializeCustom([In, Buffer] unsigned int* pColors,[In] unsigned int cCount)</unmanaged>	
        </member>
        <member name="P:SharpDX.WIC.Palette.TypeInfo">
            <summary>	
            Retrieves the <see cref="T:SharpDX.WIC.BitmapPaletteType"/> that describes the palette.	
            </summary>	
            <remarks>	
            WICBitmapPaletteCustom is used for palettes initialized from both InitializeCustom and InitializeFromBitmap. There is no distinction is made between optimized and custom palettes.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICPalette::GetType']/*"/>	
            <unmanaged>GetType</unmanaged>	
            <unmanaged>HRESULT IWICPalette::GetType([Out] WICBitmapPaletteType* pePaletteType)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.Palette.ColorCount">
            <summary>	
            Retrieves the number of colors in the color table.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICPalette::GetColorCount']/*"/>	
            <unmanaged>GetColorCount</unmanaged>	
            <unmanaged>HRESULT IWICPalette::GetColorCount([Out] unsigned int* pcCount)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.Palette.IsBlackWhite">
            <summary>	
            Retrieves a value that describes whether the palette is black and white.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICPalette::IsBlackWhite']/*"/>	
            <unmanaged>IsBlackWhite</unmanaged>	
            <unmanaged>HRESULT IWICPalette::IsBlackWhite([Out] BOOL* pfIsBlackWhite)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.Palette.IsGrayscale">
            <summary>	
            Retrieves a value that describes whether a palette is grayscale.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICPalette::IsGrayscale']/*"/>	
            <unmanaged>IsGrayscale</unmanaged>	
            <unmanaged>HRESULT IWICPalette::IsGrayscale([Out] BOOL* pfIsGrayscale)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.Palette.Colors">
            <summary>
            Gets the colors.
            </summary>
            <unmanaged>HRESULT IWICPalette::GetColors([In] unsigned int cCount,[Out, Buffer] unsigned int* pColors,[Out] unsigned int* pcActualColors)</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.PixelFormatInfo">
            <summary>	
            Exposes methods that provide information about a pixel format.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICPixelFormatInfo']/*"/>	
            <unmanaged>IWICPixelFormatInfo</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.PixelFormatInfo.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.PixelFormatInfo"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.WIC.PixelFormatInfo.GetFormatGUID(System.Guid@)">
            <summary>	
            Gets the pixel format <see cref="T:System.Guid"/>.	
            </summary>	
            <param name="formatRef"><para>Pointer that receives the pixel format <see cref="T:System.Guid"/>.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICPixelFormatInfo::GetFormatGUID']/*"/>	
            <unmanaged>HRESULT IWICPixelFormatInfo::GetFormatGUID([Out] GUID* pFormat)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.PixelFormatInfo.GetColorContext(SharpDX.WIC.ColorContext@)">
            <summary>	
            Gets the pixel format's <see cref="T:SharpDX.WIC.ColorContext"/>.	
            </summary>	
            <param name="colorContextOut">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICPixelFormatInfo::GetColorContext']/*"/>	
            <unmanaged>HRESULT IWICPixelFormatInfo::GetColorContext([Out] IWICColorContext** ppIColorContext)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.PixelFormatInfo.GetBitsPerPixel(System.Int32@)">
            <summary>	
            Gets the bits per pixel (BPP) of the pixel format.	
            </summary>	
            <param name="bitsPerPixelRef"><para>Pointer that receives the BPP of the pixel format.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICPixelFormatInfo::GetBitsPerPixel']/*"/>	
            <unmanaged>HRESULT IWICPixelFormatInfo::GetBitsPerPixel([Out] unsigned int* puiBitsPerPixel)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.PixelFormatInfo.GetChannelCount(System.Int32@)">
            <summary>	
            Gets the number of channels the pixel format contains.	
            </summary>	
            <param name="channelCountRef"><para>Pointer that receives the channel count.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICPixelFormatInfo::GetChannelCount']/*"/>	
            <unmanaged>HRESULT IWICPixelFormatInfo::GetChannelCount([Out] unsigned int* puiChannelCount)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.PixelFormatInfo.GetChannelMask(System.Int32,System.Int32,System.IntPtr,System.Int32@)">
            <summary>	
            Gets the pixel format's channel mask.	
            </summary>	
            <param name="channelIndex"><para>The index to the channel mask to retrieve.</para></param>	
            <param name="maskBuffer"><para>The size of the pbMaskBuffer buffer.</para></param>	
            <param name="maskBufferRef"><para>Pointer to the mask buffer.</para></param>	
            <param name="actualRef"><para>The actual buffer size needed to obtain the channel mask.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICPixelFormatInfo::GetChannelMask']/*"/>	
            <unmanaged>HRESULT IWICPixelFormatInfo::GetChannelMask([In] unsigned int uiChannelIndex,[In] unsigned int cbMaskBuffer,[In] void* pbMaskBuffer,[Out] unsigned int* pcbActual)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.PixelFormatInfo.GetChannelMask(System.Int32)">
            <summary>
            Gets the channel mask.
            </summary>
            <param name="channelIndex">Index of the channel.</param>
            <returns></returns>
            <unmanaged>HRESULT IWICPixelFormatInfo::GetChannelMask([In] unsigned int uiChannelIndex,[In] unsigned int cbMaskBuffer,[In] void* pbMaskBuffer,[Out] unsigned int* pcbActual)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.PixelFormatInfo.FormatGUID">
            <summary>	
            Gets the pixel format <see cref="T:System.Guid"/>.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICPixelFormatInfo::GetFormatGUID']/*"/>	
            <unmanaged>GetFormatGUID</unmanaged>	
            <unmanaged>HRESULT IWICPixelFormatInfo::GetFormatGUID([Out] GUID* pFormat)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.PixelFormatInfo.ColorContext">
            <summary>	
            Gets the pixel format's <see cref="T:SharpDX.WIC.ColorContext"/>.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICPixelFormatInfo::GetColorContext']/*"/>	
            <unmanaged>GetColorContext</unmanaged>	
            <unmanaged>HRESULT IWICPixelFormatInfo::GetColorContext([Out] IWICColorContext** ppIColorContext)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.PixelFormatInfo.BitsPerPixel">
            <summary>	
            Gets the bits per pixel (BPP) of the pixel format.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICPixelFormatInfo::GetBitsPerPixel']/*"/>	
            <unmanaged>GetBitsPerPixel</unmanaged>	
            <unmanaged>HRESULT IWICPixelFormatInfo::GetBitsPerPixel([Out] unsigned int* puiBitsPerPixel)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.PixelFormatInfo.ChannelCount">
            <summary>	
            Gets the number of channels the pixel format contains.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICPixelFormatInfo::GetChannelCount']/*"/>	
            <unmanaged>GetChannelCount</unmanaged>	
            <unmanaged>HRESULT IWICPixelFormatInfo::GetChannelCount([Out] unsigned int* puiChannelCount)</unmanaged>
        </member>
        <member name="T:SharpDX.WIC.PixelFormatInfo2">
            <summary>	
            Extends <see cref="T:SharpDX.WIC.PixelFormatInfo"/> by providing additional information about a pixel format.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICPixelFormatInfo2']/*"/>	
            <unmanaged>IWICPixelFormatInfo2</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.PixelFormatInfo2.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.PixelFormatInfo2"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.WIC.PixelFormatInfo2.IsSupportingTransparency_(System.Boolean@)">
            <summary>	
            Returns whether the format supports transparent pixels.	
            </summary>	
            <param name="fSupportsTransparencyRef"><para>Returns TRUE if the pixel format supports transparency; otherwise, false.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICPixelFormatInfo2::SupportsTransparency']/*"/>	
            <unmanaged>HRESULT IWICPixelFormatInfo2::SupportsTransparency([Out] BOOL* pfSupportsTransparency)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.PixelFormatInfo2.GetNumericRepresentation(SharpDX.WIC.PixelFormatNumericRepresentation@)">
            <summary>	
            HRESULT GetNumericRepresentation( [out]??<see cref="T:SharpDX.WIC.PixelFormatNumericRepresentation"/> *pNumericRepresentation	
            );	
            </summary>	
            <param name="numericRepresentationRef"><para>Returns the <see cref="T:SharpDX.WIC.PixelFormatNumericRepresentation"/> of the pixel format.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICPixelFormatInfo2::GetNumericRepresentation']/*"/>	
            <unmanaged>HRESULT IWICPixelFormatInfo2::GetNumericRepresentation([Out] WICPixelFormatNumericRepresentation* pNumericRepresentation)</unmanaged>	
        </member>
        <member name="P:SharpDX.WIC.PixelFormatInfo2.IsSupportingTransparency">
            <summary>	
            Returns whether the format supports transparent pixels.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICPixelFormatInfo2::SupportsTransparency']/*"/>	
            <unmanaged>SupportsTransparency</unmanaged>	
            <unmanaged>HRESULT IWICPixelFormatInfo2::SupportsTransparency([Out] BOOL* pfSupportsTransparency)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.PixelFormatInfo2.NumericRepresentation">
            <summary>	
            HRESULT GetNumericRepresentation( [out]??<see cref="T:SharpDX.WIC.PixelFormatNumericRepresentation"/> *pNumericRepresentation	
            );	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICPixelFormatInfo2::GetNumericRepresentation']/*"/>	
            <unmanaged>GetNumericRepresentation</unmanaged>	
            <unmanaged>HRESULT IWICPixelFormatInfo2::GetNumericRepresentation([Out] WICPixelFormatNumericRepresentation* pNumericRepresentation)</unmanaged>
        </member>
        <member name="T:SharpDX.WIC.ProgressCallback">
            <summary>	
            IWICProgressCallback interface is documented only for compliance; its use is not recommended and may be altered or unavailable in the future. Instead, and use RegisterProgressNotification.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICProgressCallback']/*"/>	
            <unmanaged>IWICProgressCallback</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ProgressCallback.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.ProgressCallback"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.WIC.ProgressCallback.Notify(System.Int32,SharpDX.WIC.ProgressOperation,System.Double)">
            <summary>	
            Notify method is documented only for compliance; its use is not recommended and may be altered or unavailable in the future. Instead, and use RegisterProgressNotification.	
            </summary>	
            <param name="frameNum">No documentation.</param>	
            <param name="operation">No documentation.</param>	
            <param name="dblProgress">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICProgressCallback::Notify']/*"/>	
            <unmanaged>HRESULT IWICProgressCallback::Notify([In] unsigned int uFrameNum,[In] WICProgressOperation operation,[In] double dblProgress)</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.ProgressiveLevelControl">
            <summary>	
            Exposes methods for obtaining information about and controlling progressive decoding.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICProgressiveLevelControl']/*"/>	
            <unmanaged>IWICProgressiveLevelControl</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ProgressiveLevelControl.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.ProgressiveLevelControl"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.WIC.ProgressiveLevelControl.GetLevelCount(System.Int32@)">
            <summary>	
            Gets the number of levels of progressive decoding supported by the CODEC.	
            </summary>	
            <param name="levelsRef"><para>Indicates the number of levels supported by the CODEC.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            Users should not use this function to iterate through the progressive levels of a progressive JPEG image. JPEG progressive levels are determined by the image and do not have a fixed level count. Using this method will force the application to wait for all progressive levels to be downloaded before it can return. Instead, applications should use the following code to iterate through the progressive levels of a progressive JPEG image.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICProgressiveLevelControl::GetLevelCount']/*"/>	
            <unmanaged>HRESULT IWICProgressiveLevelControl::GetLevelCount([Out] unsigned int* pcLevels)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ProgressiveLevelControl.GetCurrentLevel(System.Int32@)">
            <summary>	
            Gets the last level set by the SetCurrentLevel call.	
            </summary>	
            <param name="nLevelRef">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICProgressiveLevelControl::GetCurrentLevel']/*"/>	
            <unmanaged>HRESULT IWICProgressiveLevelControl::GetCurrentLevel([Out] unsigned int* pnLevel)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.ProgressiveLevelControl.SetCurrentLevel(System.Int32)">
            <summary>	
            Specifies the level to retrieve on the next call to CopyPixels.	
            </summary>	
            <param name="nLevel">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            A call does not have to request every level supported. If a caller requests level 1, without having previously requested level 0, the bits returned by the next call to CopyPixels will include both levels.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICProgressiveLevelControl::SetCurrentLevel']/*"/>	
            <unmanaged>HRESULT IWICProgressiveLevelControl::SetCurrentLevel([In] unsigned int nLevel)</unmanaged>	
        </member>
        <member name="P:SharpDX.WIC.ProgressiveLevelControl.LevelCount">
            <summary>	
            Gets the number of levels of progressive decoding supported by the CODEC.	
            </summary>	
            <remarks>	
            Users should not use this function to iterate through the progressive levels of a progressive JPEG image. JPEG progressive levels are determined by the image and do not have a fixed level count. Using this method will force the application to wait for all progressive levels to be downloaded before it can return. Instead, applications should use the following code to iterate through the progressive levels of a progressive JPEG image.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICProgressiveLevelControl::GetLevelCount']/*"/>	
            <unmanaged>GetLevelCount</unmanaged>	
            <unmanaged>HRESULT IWICProgressiveLevelControl::GetLevelCount([Out] unsigned int* pcLevels)</unmanaged>
        </member>
        <member name="P:SharpDX.WIC.ProgressiveLevelControl.CurrentLevel">
            <summary>	
            Gets the last level set by the SetCurrentLevel call.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICProgressiveLevelControl::GetCurrentLevel']/*"/>	
            <unmanaged>GetCurrentLevel</unmanaged>	
            <unmanaged>HRESULT IWICProgressiveLevelControl::GetCurrentLevel([Out] unsigned int* pnLevel)</unmanaged>
        </member>
        <member name="T:SharpDX.WIC.WICStream">
            <summary>	
            Represents a Windows Imaging Component (WIC) stream for referencing imaging and metadata content.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICStream']/*"/>	
            <unmanaged>IWICStream</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.WICStream.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.WICStream"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.WIC.WICStream.InitializeFromIStream_(System.IntPtr)">
            <summary>	
            Initializes a stream from another stream. Access rights are inherited from the underlying stream.	
            </summary>	
            <param name="streamRef"><para>The initialize stream.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICStream::InitializeFromIStream']/*"/>	
            <unmanaged>HRESULT IWICStream::InitializeFromIStream([In, Optional] IStream* pIStream)</unmanaged>	
        </member>
        <!-- Badly formed XML comment ignored for member "M:SharpDX.WIC.WICStream.InitializeFromFilename(System.String,System.Int32)" -->
        <member name="M:SharpDX.WIC.WICStream.InitializeFromMemory(System.IntPtr,System.Int32)">
            <summary>	
            Initializes a stream to treat a block of memory as a stream. The stream cannot grow beyond the buffer size.	
            </summary>	
            <param name="bufferRef"><para>Pointer to the buffer used to initialize the stream.</para></param>	
            <param name="bufferSize"><para>The size of buffer.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            This method should be avoided whenever possible. The caller is responsible for ensuring the memory block is valid for the lifetime of the stream when using InitializeFromMemory.  A workaround for this behavior is to create an <see cref="T:SharpDX.Win32.IStream"/> and use InitializeFromIStream to create the <see cref="T:SharpDX.WIC.WICStream"/>.If you require a growable memory stream, use CreateStreamOnHGlobal.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICStream::InitializeFromMemory']/*"/>	
            <unmanaged>HRESULT IWICStream::InitializeFromMemory([In] void* pbBuffer,[In] unsigned int cbBufferSize)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.WICStream.InitializeFromIStreamRegion_(System.IntPtr,System.Int64,System.Int64)">
            <summary>	
            Initializes the stream as a substream of another stream.	
            </summary>	
            <param name="streamRef"><para>Pointer to the input stream.</para></param>	
            <param name="ulOffset"><para>The stream offset used to create the new stream.</para></param>	
            <param name="ulMaxSize"><para>The maximum size of the stream.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The stream functions with its own stream position, independent of the underlying stream but restricted to a region.  All seek positions are relative to the sub region.  It is allowed, though not recommended, to have multiple writable sub streams overlapping the same range.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IWICStream::InitializeFromIStreamRegion']/*"/>	
            <unmanaged>HRESULT IWICStream::InitializeFromIStreamRegion([In, Optional] IStream* pIStream,[In] ULARGE_INTEGER ulOffset,[In] ULARGE_INTEGER ulMaxSize)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.WICStream.#ctor(SharpDX.WIC.ImagingFactory,System.String,SharpDX.IO.NativeFileAccess)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.WICStream"/> class from a file.
            </summary>
            <param name="factory">The factory.</param>
            <param name="fileName">Name of the file.</param>
            <param name="fileAccess">The file access.</param>
            <unmanaged>HRESULT IWICImagingFactory::CreateStream([Out, Fast] IWICStream** ppIWICStream)</unmanaged>	
            <unmanaged>HRESULT IWICStream::InitializeFromFilename([In] const wchar_t* wzFileName,[In] unsigned int dwDesiredAccess)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.WICStream.#ctor(SharpDX.WIC.ImagingFactory,System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.WICStream"/> class from a <see cref="T:SharpDX.Win32.IStream"/>.
            </summary>
            <param name="factory">The factory.</param>
            <param name="stream">The stream.</param>
            <unmanaged>HRESULT IWICImagingFactory::CreateStream([Out, Fast] IWICStream** ppIWICStream)</unmanaged>	
            <unmanaged>HRESULT IWICStream::InitializeFromFilename([In] const wchar_t* wzFileName,[In] unsigned int dwDesiredAccess)</unmanaged>	
        </member>
        <member name="M:SharpDX.WIC.WICStream.#ctor(SharpDX.WIC.ImagingFactory,SharpDX.DataStream)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.WICStream"/> class from an unmanaged memory through a <see cref="T:SharpDX.DataStream"/>.
            </summary>
            <param name="factory">The factory.</param>
            <param name="dataStream">The unmanaged memory stream.</param>
            <unmanaged>HRESULT IWICImagingFactory::CreateStream([Out, Fast] IWICStream** ppIWICStream)</unmanaged>	
            <unmanaged>HRESULT IWICStream::InitializeFromFilename([In] const wchar_t* wzFileName,[In] unsigned int dwDesiredAccess)</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.BitmapPattern">
            <summary>	
            Contains members that identify a pattern within an image file which can be used to identify a particular format.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapPattern']/*"/>	
            <unmanaged>WICBitmapPattern</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapPattern.Position">
            <summary>	
            <para>The offset the pattern is located in the file.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapPattern::Position']/*"/>	
            <unmanaged>ULARGE_INTEGER Position</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapPattern.Length">
            <summary>	
            <para>The pattern length.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapPattern::Length']/*"/>	
            <unmanaged>unsigned int Length</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapPattern.Pattern">
            <summary>	
            <para>The actual pattern.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapPattern::Pattern']/*"/>	
            <unmanaged>unsigned char* Pattern</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.BitmapPattern.Mask">
            <summary>	
            <para>The pattern mask.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapPattern::Mask']/*"/>	
            <unmanaged>unsigned char* Mask</unmanaged>	
        </member>
        <member name="P:SharpDX.WIC.BitmapPattern.EndOfStream">
            <summary>	
            <para>The end of the stream.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICBitmapPattern::EndOfStream']/*"/>	
            <unmanaged>BOOL EndOfStream</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.ImageParameters">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICImageParameters']/*"/>	
            <unmanaged>WICImageParameters</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.ImageParameters.PixelFormat">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICImageParameters::PixelFormat']/*"/>	
            <unmanaged>D2D1_PIXEL_FORMAT PixelFormat</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.ImageParameters.DpiX">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICImageParameters::DpiX']/*"/>	
            <unmanaged>float DpiX</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.ImageParameters.DpiY">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICImageParameters::DpiY']/*"/>	
            <unmanaged>float DpiY</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.ImageParameters.Top">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICImageParameters::Top']/*"/>	
            <unmanaged>float Top</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.ImageParameters.Left">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICImageParameters::Left']/*"/>	
            <unmanaged>float Left</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.ImageParameters.PixelWidth">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICImageParameters::PixelWidth']/*"/>	
            <unmanaged>unsigned int PixelWidth</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.ImageParameters.PixelHeight">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICImageParameters::PixelHeight']/*"/>	
            <unmanaged>unsigned int PixelHeight</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.RawCapabilitiesInfo">
            <summary>	
            Defines raw codec capabilites.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawCapabilitiesInfo']/*"/>	
            <unmanaged>WICRawCapabilitiesInfo</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.RawCapabilitiesInfo.CbSize">
            <summary>	
            <para>Size of the <see cref="T:SharpDX.WIC.RawCapabilitiesInfo"/> structure.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawCapabilitiesInfo::cbSize']/*"/>	
            <unmanaged>unsigned int cbSize</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.RawCapabilitiesInfo.CodecMajorVersion">
            <summary>	
            <para>The codec's major version.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawCapabilitiesInfo::CodecMajorVersion']/*"/>	
            <unmanaged>unsigned int CodecMajorVersion</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.RawCapabilitiesInfo.CodecMinorVersion">
            <summary>	
            <para>The codec's minor version.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawCapabilitiesInfo::CodecMinorVersion']/*"/>	
            <unmanaged>unsigned int CodecMinorVersion</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.RawCapabilitiesInfo.ExposureCompensationSupport">
            <summary>	
            <para>The <see cref="T:SharpDX.WIC.RawCapabilities"/> of exposure compensation support.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawCapabilitiesInfo::ExposureCompensationSupport']/*"/>	
            <unmanaged>WICRawCapabilities ExposureCompensationSupport</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.RawCapabilitiesInfo.ContrastSupport">
            <summary>	
            <para>The <see cref="T:SharpDX.WIC.RawCapabilities"/> of contrast support.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawCapabilitiesInfo::ContrastSupport']/*"/>	
            <unmanaged>WICRawCapabilities ContrastSupport</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.RawCapabilitiesInfo.RGBWhitePointSupport">
            <summary>	
            <para>The <see cref="T:SharpDX.WIC.RawCapabilities"/> of RGB white point support.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawCapabilitiesInfo::RGBWhitePointSupport']/*"/>	
            <unmanaged>WICRawCapabilities RGBWhitePointSupport</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.RawCapabilitiesInfo.NamedWhitePointSupport">
            <summary>	
            <para>The <see cref="T:SharpDX.WIC.RawCapabilities"/> of <see cref="T:SharpDX.WIC.NamedWhitePoint"/> support.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawCapabilitiesInfo::NamedWhitePointSupport']/*"/>	
            <unmanaged>WICRawCapabilities NamedWhitePointSupport</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.RawCapabilitiesInfo.NamedWhitePointSupportMask">
            <summary>	
            <para>The <see cref="T:SharpDX.WIC.NamedWhitePoint"/> mask.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawCapabilitiesInfo::NamedWhitePointSupportMask']/*"/>	
            <unmanaged>unsigned int NamedWhitePointSupportMask</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.RawCapabilitiesInfo.KelvinWhitePointSupport">
            <summary>	
            <para>The <see cref="T:SharpDX.WIC.RawCapabilities"/> of kelvin white point support.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawCapabilitiesInfo::KelvinWhitePointSupport']/*"/>	
            <unmanaged>WICRawCapabilities KelvinWhitePointSupport</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.RawCapabilitiesInfo.GammaSupport">
            <summary>	
            <para>The <see cref="T:SharpDX.WIC.RawCapabilities"/> of gamma support.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawCapabilitiesInfo::GammaSupport']/*"/>	
            <unmanaged>WICRawCapabilities GammaSupport</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.RawCapabilitiesInfo.TintSupport">
            <summary>	
            <para>The <see cref="T:SharpDX.WIC.RawCapabilities"/> of tint support.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawCapabilitiesInfo::TintSupport']/*"/>	
            <unmanaged>WICRawCapabilities TintSupport</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.RawCapabilitiesInfo.SaturationSupport">
            <summary>	
            <para>The <see cref="T:SharpDX.WIC.RawCapabilities"/> of saturation support.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawCapabilitiesInfo::SaturationSupport']/*"/>	
            <unmanaged>WICRawCapabilities SaturationSupport</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.RawCapabilitiesInfo.SharpnessSupport">
            <summary>	
            <para>The <see cref="T:SharpDX.WIC.RawCapabilities"/> of sharpness support.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawCapabilitiesInfo::SharpnessSupport']/*"/>	
            <unmanaged>WICRawCapabilities SharpnessSupport</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.RawCapabilitiesInfo.NoiseReductionSupport">
            <summary>	
            <para>The <see cref="T:SharpDX.WIC.RawCapabilities"/> of noise reduction support.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawCapabilitiesInfo::NoiseReductionSupport']/*"/>	
            <unmanaged>WICRawCapabilities NoiseReductionSupport</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.RawCapabilitiesInfo.DestinationColorProfileSupport">
            <summary>	
            <para>The <see cref="T:SharpDX.WIC.RawCapabilities"/> of destination color profile support.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawCapabilitiesInfo::DestinationColorProfileSupport']/*"/>	
            <unmanaged>WICRawCapabilities DestinationColorProfileSupport</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.RawCapabilitiesInfo.ToneCurveSupport">
            <summary>	
            <para>The <see cref="T:SharpDX.WIC.RawCapabilities"/> of tone curve support.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawCapabilitiesInfo::ToneCurveSupport']/*"/>	
            <unmanaged>WICRawCapabilities ToneCurveSupport</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.RawCapabilitiesInfo.RotationSupport">
            <summary>	
            <para>The <see cref="T:SharpDX.WIC.RawRotationCapabilities"/> of rotation support.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawCapabilitiesInfo::RotationSupport']/*"/>	
            <unmanaged>WICRawRotationCapabilities RotationSupport</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.RawCapabilitiesInfo.RenderModeSupport">
            <summary>	
            <para>The <see cref="T:SharpDX.WIC.RawCapabilities"/> of <see cref="T:SharpDX.WIC.RawRenderMode"/> support.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawCapabilitiesInfo::RenderModeSupport']/*"/>	
            <unmanaged>WICRawCapabilities RenderModeSupport</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.RawToneCurve">
            <summary>	
            Represents a raw image tone curve.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawToneCurve']/*"/>	
            <unmanaged>WICRawToneCurve</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.RawToneCurve.CPoints">
            <summary>	
            <para>The number of tone curve points.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawToneCurve::cPoints']/*"/>	
            <unmanaged>unsigned int cPoints</unmanaged>	
        </member>
        <member name="P:SharpDX.WIC.RawToneCurve.APoints">
            <summary>	
            <para>The array of tone curve points.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawToneCurve::aPoints']/*"/>	
            <unmanaged>WICRawToneCurvePoint aPoints[1]</unmanaged>	
        </member>
        <member name="T:SharpDX.WIC.RawToneCurvePoint">
            <summary>	
            Represents a raw image tone curve point.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawToneCurvePoint']/*"/>	
            <unmanaged>WICRawToneCurvePoint</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.RawToneCurvePoint.Input">
            <summary>	
            <para>The tone curve input.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawToneCurvePoint::Input']/*"/>	
            <unmanaged>double Input</unmanaged>	
        </member>
        <member name="F:SharpDX.WIC.RawToneCurvePoint.Output">
            <summary>	
            <para>The tone curve output.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='WICRawToneCurvePoint::Output']/*"/>	
            <unmanaged>double Output</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.PrintControl">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1PrintControl']/*"/>	
            <unmanaged>ID2D1PrintControl</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.PrintControl.#ctor(SharpDX.Direct2D1.Device,SharpDX.WIC.ImagingFactory,SharpDX.ComObject)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.PrintControl"/> class.
            </summary>
            <param name="device">The device.</param>
            <param name="wicFactory">The wic factory.</param>
            <param name="documentTarget">The document target.</param>
            <unmanaged>HRESULT ID2D1Device::CreatePrintControl([In] IWICImagingFactory* wicFactory,[In] IPrintDocumentPackageTarget* documentTarget,[In, Optional] const D2D1_PRINT_CONTROL_PROPERTIES* printControlProperties,[Out] ID2D1PrintControl** printControl)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.PrintControl.#ctor(SharpDX.Direct2D1.Device,SharpDX.WIC.ImagingFactory,SharpDX.ComObject,SharpDX.Direct2D1.PrintControlProperties)">
            <unmanaged>HRESULT ID2D1Device::CreatePrintControl([In] IWICImagingFactory* wicFactory,[In] IPrintDocumentPackageTarget* documentTarget,[In, Optional] const D2D1_PRINT_CONTROL_PROPERTIES* printControlProperties,[Out] ID2D1PrintControl** printControl)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.PrintControl.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.PrintControl"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.PrintControl.AddPage_(SharpDX.Direct2D1.CommandList,SharpDX.DrawingSizeF,System.IntPtr,System.Int64@,System.Int64@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="commandList">No documentation.</param>	
            <param name="pageSize">No documentation.</param>	
            <param name="agePrintTicketStreamRef">No documentation.</param>	
            <param name="tag1">No documentation.</param>	
            <param name="tag2">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1PrintControl::AddPage']/*"/>	
            <unmanaged>HRESULT ID2D1PrintControl::AddPage([In] ID2D1CommandList* commandList,[In] D2D_SIZE_F pageSize,[In, Optional] IStream* pagePrintTicketStream,[Out, Optional] unsigned longlong* tag1,[Out, Optional] unsigned longlong* tag2)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.PrintControl.Close">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1PrintControl::Close']/*"/>	
            <unmanaged>HRESULT ID2D1PrintControl::Close()</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.WicRenderTarget">
            <summary>
            A Wic RenderTarget.
            </summary>
        </member>
        <member name="M:SharpDX.Direct2D1.WicRenderTarget.#ctor(SharpDX.Direct2D1.Factory,SharpDX.WIC.Bitmap,SharpDX.Direct2D1.RenderTargetProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.WicRenderTarget"/> class from a <see cref="T:SharpDX.WIC.Bitmap"/>.
            </summary>
            <param name="factory">The factory.</param>
            <param name="wicBitmap">The wic bitmap.</param>
            <param name="renderTargetProperties">The render target properties.</param>
        </member>
        <member name="T:SharpDX.DirectWrite.BitmapRenderTarget">
            <summary>	
            Encapsulates a 32-bit device independent bitmap and device context, which can be used for rendering glyphs.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteBitmapRenderTarget']/*"/>	
            <unmanaged>IDWriteBitmapRenderTarget</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.BitmapRenderTarget.DrawGlyphRun(System.Single,System.Single,SharpDX.Direct2D1.MeasuringMode,SharpDX.DirectWrite.GlyphRun,SharpDX.DirectWrite.RenderingParams,SharpDX.Color4)">
            <summary>	
            Draws a run of glyphs to a bitmap target at the specified position.	
            </summary>	
            <remarks>	
            You can use the IDWriteBitmapRenderTarget::DrawGlyphRun to render to a bitmap from a custom text renderer that you implement.  The custom text renderer should call this method from within the <see cref="M:SharpDX.DirectWrite.TextRenderer.DrawGlyphRun(System.IntPtr,System.Single,System.Single,SharpDX.DirectWrite.MeasuringMode,SharpDX.DirectWrite.GlyphRun,SharpDX.DirectWrite.GlyphRunDescription,SharpDX.ComObject)" /> callback method as shown in the following code. 	
            <code> STDMETHODIMP GdiTextRenderer::DrawGlyphRun( __maybenull void* clientDrawingContext, FLOAT baselineOriginX, FLOAT baselineOriginY, DWRITE_MEASURING_MODE measuringMode, __in DWRITE_GLYPH_RUN const* glyphRun, __in DWRITE_GLYPH_RUN_DESCRIPTION const* glyphRunDescription, IUnknown* clientDrawingEffect )	
            { HRESULT hr = S_OK; // Pass on the drawing call to the render target to do the real work. RECT dirtyRect = {0}; hr = pRenderTarget_-&gt;DrawGlyphRun( baselineOriginX, baselineOriginY, measuringMode, glyphRun, pRenderingParams_, RGB(0,200,255), &amp;dirtyRect ); return hr;	
            } </code>	
            
            The baselineOriginX, baslineOriginY, measuringMethod, and glyphRun parameters are provided (as arguments) when the callback method is invoked.  The renderingParams, textColor and blackBoxRect are not. Default rendering params can be retrieved by using the <see cref="M:SharpDX.DirectWrite.Factory.CreateMonitorRenderingParams(System.IntPtr,SharpDX.DirectWrite.RenderingParams@)" /> method.  	
            </remarks>	
            <param name="baselineOriginX">The horizontal position of the baseline origin, in DIPs, relative to the upper-left corner of the DIB. </param>
            <param name="baselineOriginY">The vertical position of the baseline origin, in DIPs, relative to the upper-left corner of the DIB. </param>
            <param name="measuringMode">The measuring method for glyphs in the run, used with the other properties to determine the rendering mode. </param>
            <param name="glyphRun">The structure containing the properties of the glyph run. </param>
            <param name="renderingParams">The object that controls rendering behavior. </param>
            <param name="textColor">The foreground color of the text. </param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code. </returns>
            <unmanaged>HRESULT IDWriteBitmapRenderTarget::DrawGlyphRun([None] float baselineOriginX,[None] float baselineOriginY,[None] DWRITE_MEASURING_MODE measuringMode,[In] const DWRITE_GLYPH_RUN* glyphRun,[None] IDWriteRenderingParams* renderingParams,[None] COLORREF textColor,[Out, Optional] RECT* blackBoxRect)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.BitmapRenderTarget.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.DirectWrite.BitmapRenderTarget"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.DirectWrite.BitmapRenderTarget.DrawGlyphRun(System.Single,System.Single,SharpDX.Direct2D1.MeasuringMode,SharpDX.DirectWrite.GlyphRun,SharpDX.DirectWrite.RenderingParams,SharpDX.Color4,SharpDX.Rectangle@)">
            <summary>	
            Draws a run of glyphs to a bitmap target at the specified position.	
            </summary>	
            <param name="baselineOriginX"><para> The horizontal position of the baseline origin, in DIPs, relative to the upper-left corner of the DIB.</para></param>	
            <param name="baselineOriginY"><para> The vertical position of the baseline origin, in DIPs, relative to the upper-left corner of the DIB.</para></param>	
            <param name="measuringMode"><para> The measuring method for glyphs in the run, used with the other properties to determine the rendering mode.</para></param>	
            <param name="glyphRun"><para> The structure containing the properties of the glyph run.</para></param>	
            <param name="renderingParams"><para> The object that controls rendering behavior.</para></param>	
            <param name="textColor"><para> The foreground color of the text.</para></param>	
            <param name="blackBoxRect"><para> The optional rectangle that receives the bounding box (in pixels not DIPs) of all the pixels affected by  drawing the glyph run. The black box rectangle may extend beyond the dimensions of the bitmap.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            You can use the <see cref="M:SharpDX.DirectWrite.BitmapRenderTarget.DrawGlyphRun(System.Single,System.Single,SharpDX.Direct2D1.MeasuringMode,SharpDX.DirectWrite.GlyphRun,SharpDX.DirectWrite.RenderingParams,SharpDX.Color4)"/> to render to a bitmap from a custom text renderer that you implement.  The custom text renderer should call this method from within the <see cref="M:SharpDX.DirectWrite.TextRenderer.DrawGlyphRun(System.Object,System.Single,System.Single,SharpDX.Direct2D1.MeasuringMode,SharpDX.DirectWrite.GlyphRun,SharpDX.DirectWrite.GlyphRunDescription,SharpDX.ComObject)"/> callback method as shown in the following code.<code>	
            STDMETHODIMP GdiTextRenderer::DrawGlyphRun( __maybenull void* clientDrawingContext, FLOAT baselineOriginX, FLOAT baselineOriginY, <see cref="T:SharpDX.Direct2D1.MeasuringMode"/> measuringMode, __in <see cref="T:SharpDX.DirectWrite.GlyphRun"/> const* glyphRun, __in <see cref="T:SharpDX.DirectWrite.GlyphRunDescription"/> const* glyphRunDescription, <see cref="T:SharpDX.ComObject"/>* clientDrawingEffect )	
            { <see cref="T:SharpDX.Result"/> hr = <see cref="F:SharpDX.Result.Ok"/>; // Pass on the drawing call to the render target to do the real work. <see cref="T:SharpDX.Rectangle"/> dirtyRect = {0}; hr = pRenderTarget_-&gt;DrawGlyphRun( baselineOriginX, baselineOriginY, measuringMode, glyphRun, pRenderingParams_, RGB(0,200,255), &amp;dirtyRect ); return hr;	
            }	
            	
            </code>The baselineOriginX, baslineOriginY, measuringMethod, and glyphRun parameters are provided (as arguments) when the callback method is invoked.  The renderingParams, textColor and blackBoxRect are not.Default rendering params can be retrieved by using the <see cref="M:SharpDX.DirectWrite.Factory.CreateMonitorRenderingParams(System.IntPtr,SharpDX.DirectWrite.RenderingParams)"/> method.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteBitmapRenderTarget::DrawGlyphRun']/*"/>	
            <unmanaged>HRESULT IDWriteBitmapRenderTarget::DrawGlyphRun([In] float baselineOriginX,[In] float baselineOriginY,[In] DWRITE_MEASURING_MODE measuringMode,[In] const DWRITE_GLYPH_RUN* glyphRun,[In] IDWriteRenderingParams* renderingParams,[In] COLORREF textColor,[Out, Optional] RECT* blackBoxRect)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.BitmapRenderTarget.GetMemoryDC">
            <summary>	
            Gets a handle to the memory device context.	
            </summary>	
            <returns>Returns a device context handle to the memory device context.</returns>	
            <remarks>	
            An application can use the device context to draw using GDI functions. An application can obtain the bitmap handle (<see cref="T:System.IntPtr"/>) by calling GetCurrentObject. An application that wants information about the underlying bitmap, including a reference to the pixel data, can call GetObject to fill in a DIBSECTION structure. The bitmap is always a 32-bit  top-down DIB.Note that this method takes no parameters and returns an <see cref="T:System.IntPtr"/> variable, not an <see cref="T:SharpDX.Result"/>.<code>	
            memoryHdc = g_pBitmapRenderTarget-&gt;GetMemoryDC();	
            	
            </code>The <see cref="T:System.IntPtr"/> returned here is still owned by the bitmap render targer object and should not be released or deleted by the client.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteBitmapRenderTarget::GetMemoryDC']/*"/>	
            <unmanaged>HDC IDWriteBitmapRenderTarget::GetMemoryDC()</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.BitmapRenderTarget.GetPixelsPerDip">
            <summary>	
            Gets the number of bitmap pixels per DIP.	
            </summary>	
            <returns>The number of bitmap pixels per DIP.</returns>	
            <remarks>	
            A DIP (device-independent pixel) is 1/96 inch. Therefore, this value is the number if pixels per inch divided by 96.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteBitmapRenderTarget::GetPixelsPerDip']/*"/>	
            <unmanaged>float IDWriteBitmapRenderTarget::GetPixelsPerDip()</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.BitmapRenderTarget.SetPixelsPerDip(System.Single)">
            <summary>	
            Sets the number of bitmap pixels per DIP (device-independent pixel). A DIP is 1/96 inch, so this value is the number if pixels per inch divided by 96.	
            </summary>	
            <param name="pixelsPerDip"><para>A value that specifies the number of pixels per DIP.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteBitmapRenderTarget::SetPixelsPerDip']/*"/>	
            <unmanaged>HRESULT IDWriteBitmapRenderTarget::SetPixelsPerDip([In] float pixelsPerDip)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.BitmapRenderTarget.GetCurrentTransform(SharpDX.DirectWrite.Matrix@)">
            <summary>	
            Gets the transform that maps abstract coordinates to DIPs. By default this is the identity  transform. Note that this is unrelated to the world transform of the underlying device context.	
            </summary>	
            <param name="transform"><para>When this method returns, contains a transform matrix.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteBitmapRenderTarget::GetCurrentTransform']/*"/>	
            <unmanaged>HRESULT IDWriteBitmapRenderTarget::GetCurrentTransform([Out] DWRITE_MATRIX* transform)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.BitmapRenderTarget.SetCurrentTransform(System.Nullable{SharpDX.DirectWrite.Matrix})">
            <summary>	
            Sets the transform that maps abstract coordinate to DIPs (device-independent pixel). This does not affect the world transform of the underlying device context.	
            </summary>	
            <param name="transform"><para> Specifies the new transform. This parameter can be <c>null</c>, in which case the identity transform is implied.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteBitmapRenderTarget::SetCurrentTransform']/*"/>	
            <unmanaged>HRESULT IDWriteBitmapRenderTarget::SetCurrentTransform([In, Optional] const DWRITE_MATRIX* transform)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.BitmapRenderTarget.GetSize(SharpDX.DrawingSize@)">
            <summary>	
            Gets the dimensions of the target bitmap.	
            </summary>	
            <param name="size"><para>Returns  the width and height of the bitmap in pixels.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteBitmapRenderTarget::GetSize']/*"/>	
            <unmanaged>HRESULT IDWriteBitmapRenderTarget::GetSize([Out] SIZE* size)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.BitmapRenderTarget.Resize(System.Int32,System.Int32)">
            <summary>	
            Resizes the bitmap.	
            </summary>	
            <param name="width"><para>The new bitmap width, in pixels.</para></param>	
            <param name="height"><para>The new bitmap height, in pixels.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteBitmapRenderTarget::Resize']/*"/>	
            <unmanaged>HRESULT IDWriteBitmapRenderTarget::Resize([In] unsigned int width,[In] unsigned int height)</unmanaged>	
        </member>
        <member name="P:SharpDX.DirectWrite.BitmapRenderTarget.MemoryDC">
            <summary>	
            Gets a handle to the memory device context.	
            </summary>	
            <remarks>	
            An application can use the device context to draw using GDI functions. An application can obtain the bitmap handle (<see cref="T:System.IntPtr"/>) by calling GetCurrentObject. An application that wants information about the underlying bitmap, including a reference to the pixel data, can call GetObject to fill in a DIBSECTION structure. The bitmap is always a 32-bit  top-down DIB.Note that this method takes no parameters and returns an <see cref="T:System.IntPtr"/> variable, not an <see cref="T:SharpDX.Result"/>.<code>	
            memoryHdc = g_pBitmapRenderTarget-&gt;GetMemoryDC();	
            	
            </code>The <see cref="T:System.IntPtr"/> returned here is still owned by the bitmap render targer object and should not be released or deleted by the client.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteBitmapRenderTarget::GetMemoryDC']/*"/>	
            <unmanaged>GetMemoryDC</unmanaged>	
            <unmanaged>HDC IDWriteBitmapRenderTarget::GetMemoryDC()</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.BitmapRenderTarget.PixelsPerDip">
            <summary>	
            Gets the number of bitmap pixels per DIP.	
            </summary>	
            <remarks>	
            A DIP (device-independent pixel) is 1/96 inch. Therefore, this value is the number if pixels per inch divided by 96.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteBitmapRenderTarget::GetPixelsPerDip']/*"/>	
            <unmanaged>GetPixelsPerDip</unmanaged>	
            <unmanaged>float IDWriteBitmapRenderTarget::GetPixelsPerDip()</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.BitmapRenderTarget.CurrentTransform">
            <summary>	
            Gets the transform that maps abstract coordinates to DIPs. By default this is the identity  transform. Note that this is unrelated to the world transform of the underlying device context.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteBitmapRenderTarget::GetCurrentTransform']/*"/>	
            <unmanaged>GetCurrentTransform</unmanaged>	
            <unmanaged>HRESULT IDWriteBitmapRenderTarget::GetCurrentTransform([Out] DWRITE_MATRIX* transform)</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.BitmapRenderTarget.Size">
            <summary>	
            Gets the dimensions of the target bitmap.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteBitmapRenderTarget::GetSize']/*"/>	
            <unmanaged>GetSize</unmanaged>	
            <unmanaged>HRESULT IDWriteBitmapRenderTarget::GetSize([Out] SIZE* size)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.EllipsisTrimming">
            <summary>
            An inline object for trimming, using an ellipsis as the omission sign.
            </summary>
        </member>
        <member name="T:SharpDX.DirectWrite.InlineObjectNative">
            <summary>	
            Wraps an application-defined inline graphic, allowing DWrite to query metrics as if the graphic were a glyph inline with the text.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteInlineObject']/*"/>	
            <unmanaged>IDWriteInlineObject</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.InlineObject">
            <summary>	
            Wraps an application-defined inline graphic, allowing DWrite to query metrics as if the graphic were a glyph inline with the text.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteInlineObject']/*"/>	
            <unmanaged>IDWriteInlineObject</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.InlineObject.Draw(System.Object,SharpDX.DirectWrite.TextRenderer,System.Single,System.Single,System.Boolean,System.Boolean,SharpDX.ComObject)">
            <summary>	
            The application implemented rendering callback (<see cref="M:SharpDX.DirectWrite.TextRenderer.DrawInlineObject(System.Object,System.Single,System.Single,SharpDX.DirectWrite.InlineObject,System.Boolean,System.Boolean,SharpDX.ComObject)"/>) can use this to draw the inline object without needing to cast or query the object type. The text layout does not call this method directly. 	
            </summary>	
            <param name="clientDrawingContext">The drawing context passed to <see cref="M:SharpDX.DirectWrite.TextLayout.Draw_(System.IntPtr,System.IntPtr,System.Single,System.Single)"/>.  This parameter may be NULL. </param>
            <param name="renderer">The same renderer passed to <see cref="M:SharpDX.DirectWrite.TextLayout.Draw_(System.IntPtr,System.IntPtr,System.Single,System.Single)"/> as the object's containing parent.  This is useful if the inline object is recursive such as a nested layout. </param>
            <param name="originX">The x-coordinate at the upper-left corner of the inline object. </param>
            <param name="originY">The y-coordinate at the upper-left corner of the inline object. </param>
            <param name="isSideways">A Boolean flag that indicates whether the object's baseline runs alongside the baseline axis of the line. </param>
            <param name="isRightToLeft">A Boolean flag that indicates whether the object is in a right-to-left context and should be drawn flipped. </param>
            <param name="clientDrawingEffect">The drawing effect set in <see cref="M:SharpDX.DirectWrite.TextLayout.SetDrawingEffect(SharpDX.ComObject,SharpDX.DirectWrite.TextRange)"/>.  Usually this effect is a foreground brush that  is used in glyph drawing. </param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code. </returns>
            <unmanaged>HRESULT IDWriteInlineObject::Draw([None] void* clientDrawingContext,[None] IDWriteTextRenderer* renderer,[None] float originX,[None] float originY,[None] BOOL isSideways,[None] BOOL isRightToLeft,[None] IUnknown* clientDrawingEffect)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.InlineObject.GetBreakConditions(SharpDX.DirectWrite.BreakCondition@,SharpDX.DirectWrite.BreakCondition@)">
            <summary>	
            Layout uses this to determine the line-breaking behavior of the inline object among the text. 	
            </summary>	
            <param name="breakConditionBefore">When this method returns, contains a value which indicates the line-breaking condition between the object and the content immediately preceding it. </param>
            <param name="breakConditionAfter">When this method returns, contains a value which indicates the line-breaking condition between the object and the content immediately following it. </param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code. </returns>
            <unmanaged>HRESULT IDWriteInlineObject::GetBreakConditions([Out] DWRITE_BREAK_CONDITION* breakConditionBefore,[Out] DWRITE_BREAK_CONDITION* breakConditionAfter)</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.InlineObject.Metrics">
            <summary>	
            <see cref="T:SharpDX.DirectWrite.TextLayout"/> calls this callback function to get the measurement of the inline object. 	
            </summary>	
            <returns>a structure describing the geometric measurement of anapplication-defined inline object.  These metrics are in relation to the baseline of the adjacent text. </returns>
            <unmanaged>HRESULT IDWriteInlineObject::GetMetrics([Out] DWRITE_INLINE_OBJECT_METRICS* metrics)</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.InlineObject.OverhangMetrics">
            <summary>	
            TextLayout calls this callback function to get the visible extents (in DIPs) of the inline object. In the case of a simple bitmap, with no padding and no overhang, all the overhangs will simply be zeroes.	
            </summary>	
            <returns>Overshoot of visible extents (in DIPs) outside the object. </returns>
            <unmanaged>HRESULT IDWriteInlineObject::GetOverhangMetrics([Out] DWRITE_OVERHANG_METRICS* overhangs)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.InlineObjectNative.Draw(System.Object,SharpDX.DirectWrite.TextRenderer,System.Single,System.Single,System.Boolean,System.Boolean,SharpDX.ComObject)">
            <summary>	
            The application implemented rendering callback (<see cref="M:SharpDX.DirectWrite.TextRenderer.DrawInlineObject(System.Object,System.Single,System.Single,SharpDX.DirectWrite.InlineObject,System.Boolean,System.Boolean,SharpDX.ComObject)"/>) can use this to draw the inline object without needing to cast or query the object type. The text layout does not call this method directly. 	
            </summary>	
            <param name="clientDrawingContext">The drawing context passed to <see cref="M:SharpDX.DirectWrite.TextLayout.Draw_(System.IntPtr,System.IntPtr,System.Single,System.Single)"/>.  This parameter may be NULL. </param>
            <param name="renderer">The same renderer passed to <see cref="M:SharpDX.DirectWrite.TextLayout.Draw_(System.IntPtr,System.IntPtr,System.Single,System.Single)"/> as the object's containing parent.  This is useful if the inline object is recursive such as a nested layout. </param>
            <param name="originX">The x-coordinate at the upper-left corner of the inline object. </param>
            <param name="originY">The y-coordinate at the upper-left corner of the inline object. </param>
            <param name="isSideways">A Boolean flag that indicates whether the object's baseline runs alongside the baseline axis of the line. </param>
            <param name="isRightToLeft">A Boolean flag that indicates whether the object is in a right-to-left context and should be drawn flipped. </param>
            <param name="clientDrawingEffect">The drawing effect set in <see cref="M:SharpDX.DirectWrite.TextLayout.SetDrawingEffect(SharpDX.ComObject,SharpDX.DirectWrite.TextRange)"/>.  Usually this effect is a foreground brush that  is used in glyph drawing. </param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code. </returns>
            <unmanaged>HRESULT IDWriteInlineObject::Draw([None] void* clientDrawingContext,[None] IDWriteTextRenderer* renderer,[None] float originX,[None] float originY,[None] BOOL isSideways,[None] BOOL isRightToLeft,[None] IUnknown* clientDrawingEffect)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.InlineObjectNative.GetBreakConditions(SharpDX.DirectWrite.BreakCondition@,SharpDX.DirectWrite.BreakCondition@)">
            <summary>	
            Layout uses this to determine the line-breaking behavior of the inline object among the text. 	
            </summary>	
            <param name="breakConditionBefore">When this method returns, contains a value which indicates the line-breaking condition between the object and the content immediately preceding it. </param>
            <param name="breakConditionAfter">When this method returns, contains a value which indicates the line-breaking condition between the object and the content immediately following it. </param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code. </returns>
            <unmanaged>HRESULT IDWriteInlineObject::GetBreakConditions([Out] DWRITE_BREAK_CONDITION* breakConditionBefore,[Out] DWRITE_BREAK_CONDITION* breakConditionAfter)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.InlineObjectNative.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.DirectWrite.InlineObjectNative"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.DirectWrite.InlineObjectNative.Draw__(System.IntPtr,System.IntPtr,System.Single,System.Single,System.Boolean,System.Boolean,System.IntPtr)">
            <summary>	
            The application implemented rendering callback (<see cref="!:SharpDX.DirectWrite.TextRenderer.DrawInlineObject_"/>) can use this to draw the inline object without needing to cast or query the object type. The text layout does not call this method directly.	
            </summary>	
            <param name="clientDrawingContext">No documentation.</param>	
            <param name="renderer">No documentation.</param>	
            <param name="originX">No documentation.</param>	
            <param name="originY">No documentation.</param>	
            <param name="isSideways">No documentation.</param>	
            <param name="isRightToLeft">No documentation.</param>	
            <param name="clientDrawingEffect">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteInlineObject::Draw']/*"/>	
            <unmanaged>HRESULT IDWriteInlineObject::Draw([In, Optional] void* clientDrawingContext,[In] IDWriteTextRenderer* renderer,[In] float originX,[In] float originY,[In] BOOL isSideways,[In] BOOL isRightToLeft,[In, Optional] void* clientDrawingEffect)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.InlineObjectNative.GetMetrics_(SharpDX.DirectWrite.InlineObjectMetrics@)">
            <summary>	
            <see cref="T:SharpDX.DirectWrite.TextLayout"/> calls this callback function to get the measurement of the inline object.	
            </summary>	
            <param name="metrics">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteInlineObject::GetMetrics']/*"/>	
            <unmanaged>HRESULT IDWriteInlineObject::GetMetrics([Out] DWRITE_INLINE_OBJECT_METRICS* metrics)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.InlineObjectNative.GetOverhangMetrics_(SharpDX.DirectWrite.OverhangMetrics@)">
            <summary>	
            TextLayout calls this callback function to get the visible extents (in DIPs) of the inline object. In the case of a simple bitmap, with no padding and no overhang, all the overhangs will simply be zeroes.	
            </summary>	
            <param name="overhangs">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteInlineObject::GetOverhangMetrics']/*"/>	
            <unmanaged>HRESULT IDWriteInlineObject::GetOverhangMetrics([Out] DWRITE_OVERHANG_METRICS* overhangs)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.InlineObjectNative.GetBreakConditions_(SharpDX.DirectWrite.BreakCondition@,SharpDX.DirectWrite.BreakCondition@)">
            <summary>	
            Layout uses this to determine the line-breaking behavior of the inline object among the text.	
            </summary>	
            <param name="breakConditionBefore"><para>When this method returns, contains a value which indicates the line-breaking condition between the object and the content immediately preceding it.</para></param>	
            <param name="breakConditionAfter"><para>When this method returns, contains a value which indicates the line-breaking condition between the object and the content immediately following it.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteInlineObject::GetBreakConditions']/*"/>	
            <unmanaged>HRESULT IDWriteInlineObject::GetBreakConditions([Out] DWRITE_BREAK_CONDITION* breakConditionBefore,[Out] DWRITE_BREAK_CONDITION* breakConditionAfter)</unmanaged>	
        </member>
        <member name="P:SharpDX.DirectWrite.InlineObjectNative.Metrics">
            <summary>	
            <see cref="T:SharpDX.DirectWrite.TextLayout"/> calls this callback function to get the measurement of the inline object. 	
            </summary>	
            <returns>a structure describing the geometric measurement of anapplication-defined inline object.  These metrics are in relation to the baseline of the adjacent text. </returns>
            <unmanaged>HRESULT IDWriteInlineObject::GetMetrics([Out] DWRITE_INLINE_OBJECT_METRICS* metrics)</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.InlineObjectNative.OverhangMetrics">
            <summary>	
            TextLayout calls this callback function to get the visible extents (in DIPs) of the inline object. In the case of a simple bitmap, with no padding and no overhang, all the overhangs will simply be zeroes.	
            </summary>	
            <returns>Overshoot of visible extents (in DIPs) outside the object. </returns>
            <unmanaged>HRESULT IDWriteInlineObject::GetOverhangMetrics([Out] DWRITE_OVERHANG_METRICS* overhangs)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.EllipsisTrimming.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.DirectWrite.EllipsisTrimming"/> class.
            </summary>
            <param name="nativePtr">The native PTR.</param>
        </member>
        <member name="M:SharpDX.DirectWrite.EllipsisTrimming.#ctor(SharpDX.DirectWrite.Factory,SharpDX.DirectWrite.TextFormat)">
            <summary>	
            Creates an inline object for trimming, using an ellipsis as the omission sign. 	
            </summary>	
            <remarks>	
            The ellipsis will be created using the current settings of the format, including base font, style, and any effects. Alternate omission signs can be created by the application by implementing <see cref="T:SharpDX.DirectWrite.InlineObject"/>.  	
            </remarks>
            <param name="factory">a <see cref="T:SharpDX.DirectWrite.Factory"/></param>
            <param name="textFormat">A text format object, created with {{CreateTextFormat}}, used for text layout. </param>
            <unmanaged>HRESULT IDWriteFactory::CreateEllipsisTrimmingSign([None] IDWriteTextFormat* textFormat,[Out] IDWriteInlineObject** trimmingSign)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.Factory">
            <summary>	
            Used to create all subsequent DirectWrite objects. This interface is the root factory interface for all DirectWrite objects.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFactory']/*"/>	
            <unmanaged>IDWriteFactory</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.Factory.#ctor">
            <summary>
            Default Constructor for a <see cref="T:SharpDX.Direct2D1.Factory"/>.
            </summary>
        </member>
        <member name="M:SharpDX.DirectWrite.Factory.#ctor(SharpDX.DirectWrite.FactoryType)">
            <summary>
            Default Constructor for a <see cref="T:SharpDX.Direct2D1.Factory"/>.
            </summary>
        </member>
        <member name="M:SharpDX.DirectWrite.Factory.RegisterFontCollectionLoader(SharpDX.DirectWrite.FontCollectionLoader)">
            <summary>	
            Registers a custom font collection loader with the factory object. 	
            </summary>	
            <remarks>	
            This function registers a font collection loader with DirectWrite. The font collection loader interface, which should be implemented by a singleton object, handles enumerating font files in a font collection given a particular type of key. A given instance can only be registered once. Succeeding attempts will return an error, indicating that it has already been registered. Note that font file loader implementations must not register themselves with DirectWrite inside their constructors, and must not unregister themselves inside their destructors, because registration and unregistraton operations increment and decrement the object reference count respectively. Instead, registration and unregistration with DirectWrite of font file loaders should be performed outside of the font file loader implementation. 	
            </remarks>	
            <param name="fontCollectionLoader">Reference to a <see cref="T:SharpDX.DirectWrite.FontCollectionLoader"/> object to be registered. </param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code. </returns>
            <unmanaged>HRESULT IDWriteFactory::RegisterFontCollectionLoader([None] IDWriteFontCollectionLoader* fontCollectionLoader)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.Factory.UnregisterFontCollectionLoader(SharpDX.DirectWrite.FontCollectionLoader)">
            <summary>	
            Unregisters a custom font collection loader that was previously registered using {{RegisterFontCollectionLoader}}. 	
            </summary>	
            <param name="fontCollectionLoader">Pointer to a <see cref="T:SharpDX.DirectWrite.FontCollectionLoader"/> object to be unregistered. </param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code. </returns>
            <unmanaged>HRESULT IDWriteFactory::UnregisterFontCollectionLoader([None] IDWriteFontCollectionLoader* fontCollectionLoader)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.Factory.RegisterFontFileLoader(SharpDX.DirectWrite.FontFileLoader)">
            <summary>	
            Registers a font file loader with DirectWrite. 	
            </summary>	
            <remarks>	
            This function registers a font file loader with DirectWrite. The font file loader interface, which should be implemented   by a singleton object, handles loading font file resources of a particular type from a key. A given instance can only be registered once. Succeeding attempts will return an error, indicating that it has already been registered. Note that font file loader implementations must not register themselves with DirectWrite inside their constructors, and must not unregister themselves inside their destructors, because registration and unregistraton operations increment and decrement the object reference count respectively. Instead, registration and unregistration with DirectWrite of font file loaders should be performed outside of the font file loader implementation.  	
            </remarks>	
            <param name="fontFileLoader">Pointer to a <see cref="T:SharpDX.DirectWrite.FontFileLoader"/> object for a particular file resource type. </param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code. </returns>
            <unmanaged>HRESULT IDWriteFactory::RegisterFontFileLoader([None] IDWriteFontFileLoader* fontFileLoader)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.Factory.UnregisterFontFileLoader(SharpDX.DirectWrite.FontFileLoader)">
            <summary>	
            Unregisters a font file loader that was previously registered with the DirectWrite font system using {{RegisterFontFileLoader}}. 	
            </summary>	
            <remarks>	
            This function unregisters font file loader callbacks with the DirectWrite font system. You should implement the font file loader interface by a singleton object. Note that font file loader implementations must not register themselves with DirectWrite inside their constructors and must not unregister themselves in their destructors, because registration and unregistraton operations increment and decrement the object reference count respectively. Instead, registration and unregistration of font file loaders with DirectWrite should be performed outside of the font file loader implementation.  	
            </remarks>	
            <param name="fontFileLoader">Pointer to the file loader that was previously registered with the DirectWrite font system using {{RegisterFontFileLoader}}. </param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code. </returns>
            <unmanaged>HRESULT IDWriteFactory::UnregisterFontFileLoader([None] IDWriteFontFileLoader* fontFileLoader)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.Factory.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.DirectWrite.Factory"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.DirectWrite.Factory.GetSystemFontCollection(System.Boolean)">
            <summary>	
            Gets an object which represents the set of installed fonts.	
            </summary>	
            <param name="checkForUpdates"><para>If this parameter is nonzero, the function performs an immediate check for changes to the set of installed fonts. If this parameter is <see cref="F:SharpDX.Result.False"/>, the function will still detect changes if the font cache service is running, but there may be some latency. For example, an application might specify TRUE if it has itself just installed a font and wants to  be sure the font collection contains that font.</para></param>	
            <returns><para>When this method returns, contains the address of a reference to the system font collection object, or <c>null</c> in case of failure.</para></returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFactory::GetSystemFontCollection']/*"/>	
            <unmanaged>HRESULT IDWriteFactory::GetSystemFontCollection([Out] IDWriteFontCollection** fontCollection,[In] BOOL checkForUpdates)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.Factory.CreateCustomFontCollection_(System.IntPtr,System.IntPtr,System.Int32,SharpDX.DirectWrite.FontCollection)">
            <summary>	
            Creates a font collection using a custom font collection loader.	
            </summary>	
            <param name="collectionLoader"><para>An application-defined font collection loader, which must have been previously registered using RegisterFontCollectionLoader.</para></param>	
            <param name="collectionKey"><para>The key used by the loader to identify a collection of font files.  The buffer allocated for this key should at least be the size of collectionKeySize.</para></param>	
            <param name="collectionKeySize"><para>The size, in bytes, of the collection key.</para></param>	
            <param name="fontCollection"><para>Contains  an address of a reference to the system font collection object if the method succeeds, or <c>null</c> in case of failure.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFactory::CreateCustomFontCollection']/*"/>	
            <unmanaged>HRESULT IDWriteFactory::CreateCustomFontCollection([In] IDWriteFontCollectionLoader* collectionLoader,[In, Buffer] const void* collectionKey,[In] unsigned int collectionKeySize,[Out, Fast] IDWriteFontCollection** fontCollection)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.Factory.RegisterFontCollectionLoader_(System.IntPtr)">
            <summary>	
            Registers a custom font collection loader with the factory object.	
            </summary>	
            <param name="fontCollectionLoader"><para>Pointer to a <see cref="T:SharpDX.DirectWrite.FontCollectionLoader"/> object to be registered.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            This function registers a font collection loader with DirectWrite. The font collection loader interface, which should be implemented by a singleton object, handles enumerating font files in a font collection given a particular type of key. A given instance can only be registered once. Succeeding attempts will return an error, indicating that it has already been registered. Note that font file loader implementations must not register themselves with DirectWrite inside their constructors, and must not unregister themselves inside their destructors, because registration and unregistraton operations increment and decrement the object reference count respectively. Instead, registration and unregistration with DirectWrite of font file loaders should be performed outside of the font file loader implementation.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFactory::RegisterFontCollectionLoader']/*"/>	
            <unmanaged>HRESULT IDWriteFactory::RegisterFontCollectionLoader([In] IDWriteFontCollectionLoader* fontCollectionLoader)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.Factory.UnregisterFontCollectionLoader_(System.IntPtr)">
            <summary>	
            Unregisters a custom font collection loader that was previously registered using RegisterFontCollectionLoader.	
            </summary>	
            <param name="fontCollectionLoader">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFactory::UnregisterFontCollectionLoader']/*"/>	
            <unmanaged>HRESULT IDWriteFactory::UnregisterFontCollectionLoader([In] IDWriteFontCollectionLoader* fontCollectionLoader)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.Factory.CreateFontFileReference(System.String,System.Nullable{System.Int64},SharpDX.DirectWrite.FontFile)">
            <summary>	
            Creates a font file reference object from a local font file.	
            </summary>	
            <param name="filePath"><para>An array of characters that contains the absolute file path for the font file. Subsequent operations on the constructed object may fail if the user provided filePath doesn't correspond to a valid file on the disk.</para></param>	
            <param name="lastWriteTime"><para>The last modified time of the input file path. If the parameter is omitted, the function will access the font file to obtain its last write time. You should specify this value to avoid extra disk access. Subsequent operations on the constructed object may fail if the user provided lastWriteTime doesn't match the file on the disk.</para></param>	
            <param name="fontFile"><para>When this method returns, contains an address of a reference to the newly created font file reference object, or <c>null</c> in case of failure.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFactory::CreateFontFileReference']/*"/>	
            <unmanaged>HRESULT IDWriteFactory::CreateFontFileReference([In] const wchar_t* filePath,[In, Optional] const FILETIME* lastWriteTime,[Out, Fast] IDWriteFontFile** fontFile)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.Factory.CreateCustomFontFileReference_(System.IntPtr,System.Int32,System.IntPtr,SharpDX.DirectWrite.FontFile)">
            <summary>	
            Creates a reference to an application-specific font file resource.	
            </summary>	
            <param name="fontFileReferenceKey"><para>A font file reference key that uniquely identifies the font file resource during the lifetime of fontFileLoader.</para></param>	
            <param name="fontFileReferenceKeySize"><para>The size of the font file reference key in bytes.</para></param>	
            <param name="fontFileLoader"><para>The font file loader that will be used by the font system to load data from the file identified by fontFileReferenceKey.</para></param>	
            <param name="fontFile"><para>Contains an address of a reference to the newly created font file object when this method succeeds, or <c>null</c> in case of failure.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            This function is provided for cases when an application or a document needs to use a private font without having to install it on the system. fontFileReferenceKey has to be unique only in the scope of the fontFileLoader used in this call.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFactory::CreateCustomFontFileReference']/*"/>	
            <unmanaged>HRESULT IDWriteFactory::CreateCustomFontFileReference([In, Buffer] const void* fontFileReferenceKey,[In] unsigned int fontFileReferenceKeySize,[In] IDWriteFontFileLoader* fontFileLoader,[Out, Fast] IDWriteFontFile** fontFile)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.Factory.CreateFontFace(SharpDX.DirectWrite.FontFaceType,System.Int32,SharpDX.DirectWrite.FontFile[],System.Int32,SharpDX.DirectWrite.FontSimulations,SharpDX.DirectWrite.FontFace)">
            <summary>	
            Creates an object that represents a font face.	
            </summary>	
            <param name="fontFaceType"><para>A value that indicates the type of file format of the font face.</para></param>	
            <param name="numberOfFiles"><para>The number of font files, in element count, required to represent the font face.</para></param>	
            <param name="fontFiles"><para>A font file object representing the font face.  Because <see cref="T:SharpDX.DirectWrite.FontFace"/> maintains its own references to the input font file objects, you may release them after this call.</para></param>	
            <param name="faceIndex"><para>The zero-based index of a font face, in cases when the font files contain a collection of font faces. If the font files contain a single face, this value should be zero.</para></param>	
            <param name="fontFaceSimulationFlags"><para>A value that indicates which, if any, font face simulation flags for algorithmic means of making text bold or italic are applied to the current font face.</para></param>	
            <param name="fontFace"><para>When this method returns, contains an address of a reference to the newly created font face object, or <c>null</c> in case of failure.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFactory::CreateFontFace']/*"/>	
            <unmanaged>HRESULT IDWriteFactory::CreateFontFace([In] DWRITE_FONT_FACE_TYPE fontFaceType,[In] unsigned int numberOfFiles,[In, Buffer] const IDWriteFontFile** fontFiles,[In] unsigned int faceIndex,[In] DWRITE_FONT_SIMULATIONS fontFaceSimulationFlags,[Out, Fast] IDWriteFontFace** fontFace)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.Factory.CreateFontFace(SharpDX.DirectWrite.FontFaceType,System.Int32,SharpDX.ComArray{SharpDX.DirectWrite.FontFile},System.Int32,SharpDX.DirectWrite.FontSimulations,SharpDX.DirectWrite.FontFace)">
            <summary>	
            Creates an object that represents a font face.	
            </summary>	
            <param name="fontFaceType"><para>A value that indicates the type of file format of the font face.</para></param>	
            <param name="numberOfFiles"><para>The number of font files, in element count, required to represent the font face.</para></param>	
            <param name="fontFiles"><para>A font file object representing the font face.  Because <see cref="T:SharpDX.DirectWrite.FontFace"/> maintains its own references to the input font file objects, you may release them after this call.</para></param>	
            <param name="faceIndex"><para>The zero-based index of a font face, in cases when the font files contain a collection of font faces. If the font files contain a single face, this value should be zero.</para></param>	
            <param name="fontFaceSimulationFlags"><para>A value that indicates which, if any, font face simulation flags for algorithmic means of making text bold or italic are applied to the current font face.</para></param>	
            <param name="fontFace"><para>When this method returns, contains an address of a reference to the newly created font face object, or <c>null</c> in case of failure.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFactory::CreateFontFace']/*"/>	
            <unmanaged>HRESULT IDWriteFactory::CreateFontFace([In] DWRITE_FONT_FACE_TYPE fontFaceType,[In] unsigned int numberOfFiles,[In, Buffer] const IDWriteFontFile** fontFiles,[In] unsigned int faceIndex,[In] DWRITE_FONT_SIMULATIONS fontFaceSimulationFlags,[Out, Fast] IDWriteFontFace** fontFace)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.Factory.CreateRenderingParams(SharpDX.DirectWrite.RenderingParams)">
            <summary>	
            Creates a rendering parameters object with default settings for the primary monitor. Different monitors may have different rendering parameters, for more information see the How to Add Support for Multiple Monitors topic.	
            </summary>	
            <param name="renderingParams">No documentation.</param>	
            <returns>Standard <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFactory::CreateRenderingParams']/*"/>	
            <unmanaged>HRESULT IDWriteFactory::CreateRenderingParams([Out, Fast] IDWriteRenderingParams** renderingParams)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.Factory.CreateMonitorRenderingParams(System.IntPtr,SharpDX.DirectWrite.RenderingParams)">
            <summary>	
            Creates a rendering parameters object with default settings for the specified monitor. In most cases, this is the preferred way to create a rendering parameters object.	
            </summary>	
            <param name="monitor"><para>A handle for the specified monitor.</para></param>	
            <param name="renderingParams"><para>When this method returns, contains an address of a reference to the rendering parameters object created by this method.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFactory::CreateMonitorRenderingParams']/*"/>	
            <unmanaged>HRESULT IDWriteFactory::CreateMonitorRenderingParams([In] HMONITOR monitor,[Out, Fast] IDWriteRenderingParams** renderingParams)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.Factory.CreateCustomRenderingParams(System.Single,System.Single,System.Single,SharpDX.DirectWrite.PixelGeometry,SharpDX.DirectWrite.RenderingMode,SharpDX.DirectWrite.RenderingParams)">
            <summary>	
            Creates a rendering parameters object with the specified properties.	
            </summary>	
            <param name="gamma"><para>The gamma level to be set for the new rendering parameters object.</para></param>	
            <param name="enhancedContrast"><para>The enhanced contrast level to be set for the new rendering parameters object.</para></param>	
            <param name="clearTypeLevel"><para>The ClearType level to be set for the new rendering parameters object.</para></param>	
            <param name="pixelGeometry"><para>Represents the internal structure of a device pixel (that is, the physical arrangement of red, green, and blue color components) that is assumed for purposes of rendering text.</para></param>	
            <param name="renderingMode"><para>A value that represents the method (for example, ClearType natural quality) for rendering glyphs.</para></param>	
            <param name="renderingParams"><para>When this method returns, contains an address of a reference to the newly created rendering parameters object.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFactory::CreateCustomRenderingParams']/*"/>	
            <unmanaged>HRESULT IDWriteFactory::CreateCustomRenderingParams([In] float gamma,[In] float enhancedContrast,[In] float clearTypeLevel,[In] DWRITE_PIXEL_GEOMETRY pixelGeometry,[In] DWRITE_RENDERING_MODE renderingMode,[Out, Fast] IDWriteRenderingParams** renderingParams)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.Factory.RegisterFontFileLoader_(System.IntPtr)">
            <summary>	
            Registers a font file loader with DirectWrite.	
            </summary>	
            <param name="fontFileLoader"><para>Pointer to a <see cref="T:SharpDX.DirectWrite.FontFileLoader"/> object for a particular file resource type.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            This function registers a font file loader with DirectWrite. The font file loader interface, which should be implemented   by a singleton object, handles loading font file resources of a particular type from a key. A given instance can only be registered once. Succeeding attempts will return an error, indicating that it has already been registered. Note that font file loader implementations must not register themselves with DirectWrite inside their constructors, and must not unregister themselves inside their destructors, because registration and unregistraton operations increment and decrement the object reference count respectively. Instead, registration and unregistration with DirectWrite of font file loaders should be performed outside of the font file loader implementation.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFactory::RegisterFontFileLoader']/*"/>	
            <unmanaged>HRESULT IDWriteFactory::RegisterFontFileLoader([In] IDWriteFontFileLoader* fontFileLoader)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.Factory.UnregisterFontFileLoader_(System.IntPtr)">
            <summary>	
            Unregisters a font file loader that was previously registered with the DirectWrite font system using RegisterFontFileLoader.	
            </summary>	
            <param name="fontFileLoader">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            This function unregisters font file loader callbacks with the DirectWrite font system. You should implement the font file loader interface by a singleton object. Note that font file loader implementations must not register themselves with DirectWrite inside their constructors and must not unregister themselves in their destructors, because registration and unregistraton operations increment and decrement the object reference count respectively. Instead, registration and unregistration of font file loaders with DirectWrite should be performed outside of the font file loader implementation.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFactory::UnregisterFontFileLoader']/*"/>	
            <unmanaged>HRESULT IDWriteFactory::UnregisterFontFileLoader([In] IDWriteFontFileLoader* fontFileLoader)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.Factory.CreateTextFormat(System.String,SharpDX.DirectWrite.FontCollection,SharpDX.DirectWrite.FontWeight,SharpDX.DirectWrite.FontStyle,SharpDX.DirectWrite.FontStretch,System.Single,System.String,SharpDX.DirectWrite.TextFormat)">
            <summary>	
            Creates a text format object used for text layout.	
            </summary>	
            <param name="fontFamilyName"><para>An array of characters that contains the name of the font family</para></param>	
            <param name="fontCollection"><para>A reference to a font collection object. When this is <c>null</c>, indicates the system font collection.</para></param>	
            <param name="fontWeight"><para>A value that indicates the font weight for the text object created by this method.</para></param>	
            <param name="fontStyle"><para>A value that indicates the font style for the text object created by this method.</para></param>	
            <param name="fontStretch"><para>A value that indicates the font stretch for the text object created by this method.</para></param>	
            <param name="fontSize"><para>The logical size of the font in DIP ("device-independent pixel") units. A DIP equals 1/96 inch.</para></param>	
            <param name="localeName"><para>An array of characters that contains the locale name.</para></param>	
            <param name="textFormat"><para>When this method returns, contains an address of a reference to a  newly created text format object, or <c>null</c> in case of failure.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFactory::CreateTextFormat']/*"/>	
            <unmanaged>HRESULT IDWriteFactory::CreateTextFormat([In] const wchar_t* fontFamilyName,[In, Optional] IDWriteFontCollection* fontCollection,[In] DWRITE_FONT_WEIGHT fontWeight,[In] DWRITE_FONT_STYLE fontStyle,[In] DWRITE_FONT_STRETCH fontStretch,[In] float fontSize,[In] const wchar_t* localeName,[Out, Fast] IDWriteTextFormat** textFormat)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.Factory.CreateTypography(SharpDX.DirectWrite.Typography)">
            <summary>	
            Creates a typography object for use in a text layout.	
            </summary>	
            <param name="typography"><para>When this method returns, contains the address of  a reference to a newly created typography object, or <c>null</c> in case of failure.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFactory::CreateTypography']/*"/>	
            <unmanaged>HRESULT IDWriteFactory::CreateTypography([Out, Fast] IDWriteTypography** typography)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.Factory.GetGdiInterop(SharpDX.DirectWrite.GdiInterop@)">
            <summary>	
            Creates an object that is used for interoperability with GDI.	
            </summary>	
            <param name="gdiInterop"><para>When this method returns, contains an address of a reference to a GDI interop object if successful, or <c>null</c> in case of failure.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFactory::GetGdiInterop']/*"/>	
            <unmanaged>HRESULT IDWriteFactory::GetGdiInterop([Out] IDWriteGdiInterop** gdiInterop)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.Factory.CreateTextLayout(System.String,System.Int32,SharpDX.DirectWrite.TextFormat,System.Single,System.Single,SharpDX.DirectWrite.TextLayout)">
            <summary>	
            Takes a string, text format, and associated constraints, and produces an object that represents the fully analyzed and formatted result.	
            </summary>	
            <param name="text"><para>An array of characters that contains the string to create a new <see cref="T:SharpDX.DirectWrite.TextLayout"/> object from. This array must be of length stringLength and can contain embedded <c>null</c> characters.</para></param>	
            <param name="stringLength"><para>The number of characters in  the string.</para></param>	
            <param name="textFormat"><para>A reference to an object that indicates the format to apply to the string.</para></param>	
            <param name="maxWidth"><para>The width of the layout box.</para></param>	
            <param name="maxHeight"><para>The height of the layout box.</para></param>	
            <param name="textLayout"><para>When this method returns, contains an address of a reference to the resultant text layout object.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFactory::CreateTextLayout']/*"/>	
            <unmanaged>HRESULT IDWriteFactory::CreateTextLayout([In, Buffer] const wchar_t* string,[In] unsigned int stringLength,[In] IDWriteTextFormat* textFormat,[In] float maxWidth,[In] float maxHeight,[Out, Fast] IDWriteTextLayout** textLayout)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.Factory.CreateGdiCompatibleTextLayout(System.String,System.Int32,SharpDX.DirectWrite.TextFormat,System.Single,System.Single,System.Single,System.Nullable{SharpDX.DirectWrite.Matrix},System.Boolean,SharpDX.DirectWrite.TextLayout)">
            <summary>	
            Takes a string, format, and associated constraints, and produces an object representing the result, formatted for a particular display resolution and measuring mode.	
            </summary>	
            <param name="text"><para>An array of characters that contains the string to create a new <see cref="T:SharpDX.DirectWrite.TextLayout"/> object from. This array must be of length stringLength and can contain embedded <c>null</c> characters.</para></param>	
            <param name="stringLength"><para>The length of the string, in character count.</para></param>	
            <param name="textFormat"><para>The text formatting object to apply to the string.</para></param>	
            <param name="layoutWidth"><para>The width of the layout box.</para></param>	
            <param name="layoutHeight"><para>The height of the layout box.</para></param>	
            <param name="pixelsPerDip"><para>The number of physical pixels per DIP (device independent pixel). For example, if rendering onto a 96 DPI device pixelsPerDip is 1. If rendering onto a 120 DPI device pixelsPerDip is 1.25 (120/96).</para></param>	
            <param name="transform"><para>An optional transform applied to the glyphs and their positions. This transform is applied after the scaling specifies the font size and pixels per DIP.</para></param>	
            <param name="useGdiNatural"><para> Instructs the text layout to use the same metrics as GDI bi-level text when set to <see cref="F:SharpDX.Result.False"/>. When set to TRUE, instructs the text layout to use the same metrics as text measured by GDI using a font created with CLEARTYPE_NATURAL_QUALITY. </para></param>	
            <param name="textLayout"><para>When this method returns, contains an address to the reference of the resultant text layout object.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The resulting text layout should only be used for the intended resolution, and for cases where text scalability is desired CreateTextLayout should be used instead.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFactory::CreateGdiCompatibleTextLayout']/*"/>	
            <unmanaged>HRESULT IDWriteFactory::CreateGdiCompatibleTextLayout([In, Buffer] const wchar_t* string,[In] unsigned int stringLength,[In] IDWriteTextFormat* textFormat,[In] float layoutWidth,[In] float layoutHeight,[In] float pixelsPerDip,[In, Optional] const DWRITE_MATRIX* transform,[In] BOOL useGdiNatural,[Out, Fast] IDWriteTextLayout** textLayout)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.Factory.CreateEllipsisTrimmingSign(SharpDX.DirectWrite.TextFormat,SharpDX.DirectWrite.InlineObject)">
            <summary>	
            Creates an inline object for trimming, using an ellipsis as the omission sign.	
            </summary>	
            <param name="textFormat"><para>A text format object, created with CreateTextFormat, used for text layout.</para></param>	
            <param name="trimmingSign"><para>When this method returns, contains an address of a reference to the omission (that is, ellipsis trimming) sign created by this method.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The ellipsis will be created using the current settings of the format, including base font, style, and any effects. Alternate omission signs can be created by the application by implementing <see cref="T:SharpDX.DirectWrite.InlineObject"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFactory::CreateEllipsisTrimmingSign']/*"/>	
            <unmanaged>HRESULT IDWriteFactory::CreateEllipsisTrimmingSign([In] IDWriteTextFormat* textFormat,[Out, Fast] IDWriteInlineObject** trimmingSign)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.Factory.CreateTextAnalyzer(SharpDX.DirectWrite.TextAnalyzer)">
            <summary>	
            Returns an interface for performing text analysis.	
            </summary>	
            <param name="textAnalyzer"><para>When this method returns, contains an address of  a reference to the newly created text analyzer object.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFactory::CreateTextAnalyzer']/*"/>	
            <unmanaged>HRESULT IDWriteFactory::CreateTextAnalyzer([Out, Fast] IDWriteTextAnalyzer** textAnalyzer)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.Factory.CreateNumberSubstitution(SharpDX.DirectWrite.NumberSubstitutionMethod,System.String,System.Boolean,SharpDX.DirectWrite.NumberSubstitution)">
            <summary>	
            Creates a number substitution object using a locale name, substitution method, and an indicator  whether to ignore user overrides (use NLS defaults for the given culture instead).	
            </summary>	
            <param name="substitutionMethod"><para>A value that specifies how to apply number substitution on digits and related punctuation.</para></param>	
            <param name="localeName"><para>The name of the locale to be used in the numberSubstitution object.</para></param>	
            <param name="ignoreUserOverride"><para>A Boolean flag that indicates whether to ignore user overrides.</para></param>	
            <param name="numberSubstitution"><para>When this method returns, contains an address to  a reference to the number substitution object created by this method.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFactory::CreateNumberSubstitution']/*"/>	
            <unmanaged>HRESULT IDWriteFactory::CreateNumberSubstitution([In] DWRITE_NUMBER_SUBSTITUTION_METHOD substitutionMethod,[In] const wchar_t* localeName,[In] BOOL ignoreUserOverride,[Out, Fast] IDWriteNumberSubstitution** numberSubstitution)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.Factory.CreateGlyphRunAnalysis(SharpDX.DirectWrite.GlyphRun,System.Single,System.Nullable{SharpDX.DirectWrite.Matrix},SharpDX.DirectWrite.RenderingMode,SharpDX.Direct2D1.MeasuringMode,System.Single,System.Single,SharpDX.DirectWrite.GlyphRunAnalysis)">
            <summary>	
            Creates a glyph run analysis object, which encapsulates information used to render a glyph run.	
            </summary>	
            <param name="glyphRun"><para>A structure that contains the properties of the glyph run (font face, advances, and so on).</para></param>	
            <param name="pixelsPerDip"><para>Number of physical pixels per DIP (device independent pixel). For example, if rendering onto a 96 DPI bitmap then pixelsPerDip is 1. If rendering onto a 120 DPI bitmap then pixelsPerDip is 1.25.</para></param>	
            <param name="transform"><para>Optional transform applied to the glyphs and their positions. This transform is applied after the scaling specified the emSize and pixelsPerDip.</para></param>	
            <param name="renderingMode"><para>A value that specifies the rendering mode, which must be one of the raster rendering modes (that is, not default and not outline).</para></param>	
            <param name="measuringMode"><para>Specifies the measuring mode to use with glyphs.</para></param>	
            <param name="baselineOriginX"><para>The horizontal position (X-coordinate) of the baseline origin, in DIPs.</para></param>	
            <param name="baselineOriginY"><para>Vertical position (Y-coordinate) of the baseline origin, in DIPs.</para></param>	
            <param name="glyphRunAnalysis"><para>When this method returns, contains an address of a reference to the newly created glyph run analysis object.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The glyph run analysis object contains the results of analyzing the glyph run, including the positions of all the glyphs and references to all of the rasterized glyphs in the font cache.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFactory::CreateGlyphRunAnalysis']/*"/>	
            <unmanaged>HRESULT IDWriteFactory::CreateGlyphRunAnalysis([In] const DWRITE_GLYPH_RUN* glyphRun,[In] float pixelsPerDip,[In, Optional] const DWRITE_MATRIX* transform,[In] DWRITE_RENDERING_MODE renderingMode,[In] DWRITE_MEASURING_MODE measuringMode,[In] float baselineOriginX,[In] float baselineOriginY,[Out, Fast] IDWriteGlyphRunAnalysis** glyphRunAnalysis)</unmanaged>	
        </member>
        <member name="P:SharpDX.DirectWrite.Factory.GdiInterop">
            <summary>	
            Creates an object that is used for interoperability with GDI.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFactory::GetGdiInterop']/*"/>	
            <unmanaged>GetGdiInterop</unmanaged>	
            <unmanaged>HRESULT IDWriteFactory::GetGdiInterop([Out] IDWriteGdiInterop** gdiInterop)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.FontCollection">
            <summary>	
            An object that encapsulates a set of fonts, such as the set of fonts installed on the system, or the set of fonts in a particular directory. The font collection API can be used to discover what font families and fonts are available, and to obtain some metadata about the fonts.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontCollection']/*"/>	
            <unmanaged>IDWriteFontCollection</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontCollection.#ctor(SharpDX.DirectWrite.Factory,SharpDX.DirectWrite.FontCollectionLoader,SharpDX.DataStream)">
            <summary>	
            Creates a font collection using a custom font collection loader. 	
            </summary>	
            <param name="factory">A reference to a DirectWrite factory <see cref="T:SharpDX.DirectWrite.Factory"/></param>
            <param name="collectionLoader">An application-defined font collection loader, which must have been previously registered using <see cref="M:SharpDX.DirectWrite.Factory.RegisterFontCollectionLoader_(System.IntPtr)"/>. </param>
            <param name="collectionKey">The key used by the loader to identify a collection of font files.  The buffer allocated for this key should at least be the size of collectionKeySize. </param>
            <unmanaged>HRESULT IDWriteFactory::CreateCustomFontCollection([None] IDWriteFontCollectionLoader* collectionLoader,[In, Buffer] const void* collectionKey,[None] int collectionKeySize,[Out] IDWriteFontCollection** fontCollection)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.FontCollection.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.DirectWrite.FontCollection"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontCollection.GetFontFamilyCount">
            <summary>	
            Gets the number of font families in the collection.	
            </summary>	
            <returns>The number of font families in the collection.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontCollection::GetFontFamilyCount']/*"/>	
            <unmanaged>unsigned int IDWriteFontCollection::GetFontFamilyCount()</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontCollection.GetFontFamily(System.Int32)">
            <summary>	
            Creates a font family object given a zero-based font family index.	
            </summary>	
            <param name="index"><para>Zero-based index of the font family.</para></param>	
            <returns><para>When this method returns, contains the address of   a reference to the newly created font family object.</para></returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontCollection::GetFontFamily']/*"/>	
            <unmanaged>HRESULT IDWriteFontCollection::GetFontFamily([In] unsigned int index,[Out] IDWriteFontFamily** fontFamily)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontCollection.FindFamilyName(System.String,System.Int32@)">
            <summary>	
            Finds the font family with the specified family name.	
            </summary>	
            <param name="familyName"><para>An array of characters, which is null-terminated, containing the name of the font family. The name is not case-sensitive but must otherwise exactly match a family name in the collection.</para></param>	
            <param name="index"><para>When this method returns, contains the zero-based index of the matching font family if the family name was found; otherwise, UINT_MAX.</para></param>	
            <returns><para>When this method returns, TRUE if the family name exists; otherwise, <see cref="F:SharpDX.Result.False"/>.</para></returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontCollection::FindFamilyName']/*"/>	
            <unmanaged>HRESULT IDWriteFontCollection::FindFamilyName([In] const wchar_t* familyName,[Out] unsigned int* index,[Out] BOOL* exists)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontCollection.GetFontFromFontFace(SharpDX.DirectWrite.FontFace)">
            <summary>	
            Gets the font object that corresponds to the same physical font as the specified font face object. The specified physical font must belong  to the font collection.	
            </summary>	
            <param name="fontFace"><para>A font face object that specifies the physical font.</para></param>	
            <returns><para>When this method returns, contains the address of a reference to the newly created font object if successful; otherwise, <c>null</c>.</para></returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontCollection::GetFontFromFontFace']/*"/>	
            <unmanaged>HRESULT IDWriteFontCollection::GetFontFromFontFace([In] IDWriteFontFace* fontFace,[Out] IDWriteFont** font)</unmanaged>	
        </member>
        <member name="P:SharpDX.DirectWrite.FontCollection.FontFamilyCount">
            <summary>	
            Gets the number of font families in the collection.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontCollection::GetFontFamilyCount']/*"/>	
            <unmanaged>GetFontFamilyCount</unmanaged>	
            <unmanaged>unsigned int IDWriteFontCollection::GetFontFamilyCount()</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.FontCollectionLoader">
            <summary>	
            Used to construct a collection of fonts given a particular type of key.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontCollectionLoader']/*"/>	
            <unmanaged>IDWriteFontCollectionLoader</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontCollectionLoader.CreateEnumeratorFromKey(SharpDX.DirectWrite.Factory,SharpDX.DataStream)">
            <summary>	
            Creates a font file enumerator object that encapsulates a collection of font files. The font system calls back to this interface to create a font collection. 	
            </summary>	
            <param name="factory">Pointer to the <see cref="T:SharpDX.DirectWrite.Factory"/> object that was used to create the current font collection. </param>
            <param name="collectionKey">A font collection key that uniquely identifies the collection of font files within the scope of the font collection loader being used. The buffer allocated for this key must be at least  the size, in bytes, specified by collectionKeySize. </param>
            <returns>a reference to the newly created font file enumerator.</returns>
            <unmanaged>HRESULT IDWriteFontCollectionLoader::CreateEnumeratorFromKey([None] IDWriteFactory* factory,[In, Buffer] const void* collectionKey,[None] int collectionKeySize,[Out] IDWriteFontFileEnumerator** fontFileEnumerator)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.FontCollectionLoaderShadow">
            <summary>
            Internal FontCollectionLoader Callback
            </summary>
        </member>
        <member name="T:SharpDX.DirectWrite.FontCollectionLoaderShadow.FontCollectionLoaderVtbl.CreateEnumeratorFromKeyDelegate">
            <unmanaged>HRESULT IDWriteFontCollectionLoader::CreateEnumeratorFromKey([None] IDWriteFactory* factory,[In, Buffer] const void* collectionKey,[None] int collectionKeySize,[Out] IDWriteFontFileEnumerator** fontFileEnumerator)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.FontFace">
            <summary>	
            Represents an absolute reference to a font face which contains font face type, appropriate file references,  face identification data and various font data such as metrics, names and glyph outlines.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFace']/*"/>	
            <unmanaged>IDWriteFontFace</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontFace.#ctor(SharpDX.DirectWrite.Factory,SharpDX.DirectWrite.FontFaceType,SharpDX.DirectWrite.FontFile[],System.Int32,SharpDX.DirectWrite.FontSimulations)">
            <summary>	
            Creates an object that represents a font face. 	
            </summary>	
            <param name="factory">A reference to a DirectWrite factory <see cref="T:SharpDX.DirectWrite.Factory"/></param>
            <param name="fontFaceType">A value that indicates the type of file format of the font face. </param>
            <param name="fontFiles">A font file object representing the font face. Because<see cref="T:SharpDX.DirectWrite.FontFace"/> maintains its own references to the input font file objects, you may release them after this call. </param>
            <param name="faceIndex">The zero-based index of a font face, in cases when the font files contain a collection of font faces. If the font files contain a single face, this value should be zero. </param>
            <param name="fontFaceSimulationFlags">A value that indicates which, if any, font face simulation flags for algorithmic means of making text bold or italic are applied to the current font face. </param>
            <unmanaged>HRESULT IDWriteFactory::CreateFontFace([None] DWRITE_FONT_FACE_TYPE fontFaceType,[None] int numberOfFiles,[In, Buffer] const IDWriteFontFile** fontFiles,[None] int faceIndex,[None] DWRITE_FONT_SIMULATIONS fontFaceSimulationFlags,[Out] IDWriteFontFace** fontFace)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.FontFace.#ctor(SharpDX.DirectWrite.Font)">
            <summary>	
            Creates a font face object for the font. 	
            </summary>	
            <param name="font">the <see cref="T:SharpDX.DirectWrite.Font"/> to create the FontFace from.</param>
            <unmanaged>HRESULT IDWriteFont::CreateFontFace([Out] IDWriteFontFace** fontFace)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.FontFace.GetDesignGlyphMetrics(System.Int16[],System.Boolean)">
            <summary>	
            Obtains ideal (resolution-independent) glyph metrics in font design units.  	
            </summary>	
            <remarks>	
            Design glyph metrics are used for glyph positioning. 	
            </remarks>	
            <param name="glyphIndices">An array of glyph indices for which to compute  metrics. The array must contain at least as many elements as specified by glyphCount. </param>
            <param name="isSideways">Indicates whether the font is being used in a sideways run. This can affect the glyph metrics if the font has oblique simulation because sideways oblique simulation differs from non-sideways oblique simulation </param>
            <returns>an array of <see cref="T:SharpDX.DirectWrite.GlyphMetrics"/> structures. </returns>
            <unmanaged>HRESULT IDWriteFontFace::GetDesignGlyphMetrics([In, Buffer] const short* glyphIndices,[None] int glyphCount,[Out, Buffer] DWRITE_GLYPH_METRICS* glyphMetrics,[None] BOOL isSideways)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.FontFace.GetGdiCompatibleGlyphMetrics(System.Single,System.Single,System.Nullable{SharpDX.DirectWrite.Matrix},System.Boolean,System.Int16[],System.Boolean)">
            <summary>	
            Obtains glyph metrics in font design units with the return values compatible with what GDI would produce.	
            </summary>	
            <param name="fontSize">The ogical size of the font in DIP units. </param>
            <param name="pixelsPerDip">The number of physical pixels per DIP. </param>
            <param name="transform">An optional transform applied to the glyphs and their positions. This transform is applied after the scaling specified by the font size and pixelsPerDip. </param>
            <param name="useGdiNatural">When set to FALSE, the metrics are the same as the metrics of GDI aliased text.  When set to TRUE, the metrics are the same as the metrics of text measured by GDI using a font created with CLEARTYPE_NATURAL_QUALITY. </param>
            <param name="glyphIndices">An array of glyph indices for which to compute the metrics. </param>
            <param name="isSideways">A BOOL value that indicates whether the font is being used in a sideways run.  This can affect the glyph metrics if the font has oblique simulation because sideways oblique simulation differs from non-sideways oblique simulation. </param>
            <returns>An array of <see cref="T:SharpDX.DirectWrite.GlyphMetrics" /> structures filled by this function. The metrics are in font design units. </returns>
            <unmanaged>HRESULT IDWriteFontFace::GetGdiCompatibleGlyphMetrics([None] float emSize,[None] float pixelsPerDip,[In, Optional] const DWRITE_MATRIX* transform,[None] BOOL useGdiNatural,[In, Buffer] const short* glyphIndices,[None] int glyphCount,[Out, Buffer] DWRITE_GLYPH_METRICS* glyphMetrics,[None] BOOL isSideways)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.FontFace.GetGlyphIndices(System.Int32[])">
            <summary>	
            Returns the nominal mapping of UCS4 Unicode code points to glyph indices as defined by the font 'CMAP' table. 	
            </summary>	
            <remarks>	
            Note that this mapping is primarily provided for line layout engines built on top of the physical font API. Because of OpenType glyph substitution and line layout character substitution, the nominal conversion does not always correspond to how a Unicode string will map to glyph indices when rendering using a particular font face. Also, note that Unicode variant selectors provide for alternate mappings for character to glyph. This call will always return the default variant.  	
            </remarks>	
            <param name="codePoints">An array of USC4 code points from which to obtain nominal glyph indices. The array must be allocated and be able to contain the number of elements specified by codePointCount. </param>
            <returns>a reference to an array of nominal glyph indices filled by this function.</returns>
            <unmanaged>HRESULT IDWriteFontFace::GetGlyphIndices([In, Buffer] const int* codePoints,[None] int codePointCount,[Out, Buffer] short* glyphIndices)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.FontFace.GetFiles">
            <summary>	
            Obtains the font files representing a font face. 	
            </summary>	
            <remarks>	
            The IDWriteFontFace::GetFiles method should be called twice.  The first time you call GetFilesfontFiles should be NULL. When the method returns, numberOfFiles receives the number of font files that represent the font face. Then, call the method a second time, passing the numberOfFiles value that was output the first call, and a non-null buffer of the correct size to store the <see cref="T:SharpDX.DirectWrite.FontFile"/> references. 	
            </remarks>	
            <returns>An array that stores references to font files representing the font face. This parameter can be NULL if the user wants only the number of files representing the font face. This API increments reference count of the font file references returned according to COM conventions, and the client should release them when finished. </returns>
            <unmanaged>HRESULT IDWriteFontFace::GetFiles([InOut] int* numberOfFiles,[Out, Buffer, Optional] IDWriteFontFile** fontFiles)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.FontFace.TryGetFontTable(System.Int32,SharpDX.DataStream@,System.IntPtr@)">
            <summary>	
            Finds the specified OpenType font table if it exists and returns a reference to it. The function accesses the underlying font data through the <see cref="T:SharpDX.DirectWrite.FontFileStream" /> interface implemented by the font file loader. 	
            </summary>	
            <remarks>	
            The context for the same tag may be different for each call, so each one must be held and released separately.  	
            </remarks>	
            <param name="openTypeTableTag">The four-character tag of a OpenType font table to find. Use the DWRITE_MAKE_OPENTYPE_TAG macro to create it as an UINT32. Unlike GDI, it does not support the special TTCF and null tags to access the whole font. </param>
            <param name="tableData">When this method returns, contains the address of  a reference to the base of the table in memory. The reference is valid only as long as the font face used to get the font table still exists; (not any other font face, even if it actually refers to the same physical font).</param>
            <param name="tableContext">When this method returns, the address of a reference to  the opaque context, which must be freed by calling {{ReleaseFontTable}}. The context actually comes from the lower-level <see cref="T:SharpDX.DirectWrite.FontFileStream" />, which may be implemented by the application or DWrite itself. It is possible for a NULL tableContext to be returned, especially if the implementation performs direct memory mapping on the whole file. Nevertheless, always release it later, and do not use it as a test for function success. The same table can be queried multiple times, but because each returned context can be different, you must release each context separately.  </param>
            <returns>TRUE if the font table exists; otherwise, FALSE. </returns>
            <unmanaged>HRESULT IDWriteFontFace::TryGetFontTable([In] int openTypeTableTag,[Out, Buffer] const void** tableData,[Out] int* tableSize,[Out] void** tableContext,[Out] BOOL* exists)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.FontFace.GetGlyphRunOutline(System.Single,System.Int16[],System.Single[],SharpDX.DirectWrite.GlyphOffset[],System.Boolean,System.Boolean,SharpDX.Direct2D1.SimplifiedGeometrySink)">
            <summary>	
            Computes the outline of a run of glyphs by calling back to the outline sink interface. 	
            </summary>	
            <param name="emSize">The logical size of the font in DIP units. A DIP ("device-independent pixel") equals 1/96 inch. </param>
            <param name="glyphIndices">An array of glyph indices. The glyphs are in logical order and the advance direction depends on the isRightToLeft parameter. The array must be allocated and be able to contain the number of elements specified by glyphCount. </param>
            <param name="glyphAdvances">An optional array of glyph advances in DIPs. The advance of a glyph is the amount to advance the position (in the direction of the baseline) after drawing the glyph. glyphAdvances contains the number of elements specified by glyphIndices.Length. </param>
            <param name="glyphOffsets">An optional array of glyph offsets, each of which specifies the offset along the baseline and offset perpendicular to the baseline of a glyph relative to the current pen position.   glyphOffsets contains the number of elements specified by glyphIndices.Length. </param>
            <param name="isSideways">If TRUE, the ascender of the glyph runs alongside the baseline. If FALSE, the glyph ascender runs perpendicular to the baseline. For example, an English alphabet on a vertical baseline would have isSideways set to FALSE. A client can render a vertical run by setting isSideways to TRUE and rotating the resulting geometry 90 degrees to the right using a transform. The isSideways and isRightToLeft parameters cannot both be true. </param>
            <param name="isRightToLeft">The visual order of the glyphs. If this parameter is FALSE, then glyph advances are from left to right. If TRUE, the advance direction is right to left. By default, the advance direction is left to right. </param>
            <param name="geometrySink">A reference to the interface that is called back to perform outline drawing operations. </param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code. </returns>
            <unmanaged>HRESULT IDWriteFontFace::GetGlyphRunOutline([None] float emSize,[In, Buffer] const short* glyphIndices,[In, Buffer, Optional] const float* glyphAdvances,[In, Buffer, Optional] const DWRITE_GLYPH_OFFSET* glyphOffsets,[None] int glyphCount,[None] BOOL isSideways,[None] BOOL isRightToLeft,[None] IDWriteGeometrySink* geometrySink)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.FontFace.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.DirectWrite.FontFace"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontFace.GetFaceType">
            <summary>	
            Obtains the file format type of a font face.	
            </summary>	
            <returns>A value that indicates the type of format for the font face (such as Type 1, TrueType, vector, or bitmap).</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFace::GetType']/*"/>	
            <unmanaged>DWRITE_FONT_FACE_TYPE IDWriteFontFace::GetType()</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontFace.GetFiles(System.Int32@,SharpDX.DirectWrite.FontFile[])">
            <summary>	
            Obtains the font files representing a font face.	
            </summary>	
            <param name="numberOfFiles"><para>If fontFiles is <c>null</c>, receives the number of files representing the font face.  Otherwise, the number of font files being requested should be passed.  See the Remarks section below for more information.</para></param>	
            <param name="fontFiles"><para>When this method returns, contains a reference to a user-provided array that stores references to font files representing the font face. This parameter can be <c>null</c> if the user wants only the number of files representing the font face. This API increments reference count of the font file references returned according to COM conventions, and the client should release them when finished.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The <see cref="M:SharpDX.DirectWrite.FontFace.GetFiles"/> method should be called twice.  The first time you call GetFilesfontFiles should be <c>null</c>. When the method returns, numberOfFiles receives the number of font files that represent the font face.Then, call the method a second time, passing the numberOfFiles value that was output the first call, and a non-null buffer of the correct size to store the <see cref="T:SharpDX.DirectWrite.FontFile"/> references.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFace::GetFiles']/*"/>	
            <unmanaged>HRESULT IDWriteFontFace::GetFiles([InOut] unsigned int* numberOfFiles,[Out, Buffer, Optional] IDWriteFontFile** fontFiles)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontFace.GetIndex">
            <summary>	
            Obtains the index of a font face in the context of its font files.	
            </summary>	
            <returns>The zero-based index of a font face in cases when the font files contain a collection of font faces. If the font files contain a single face, this value is zero.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFace::GetIndex']/*"/>	
            <unmanaged>unsigned int IDWriteFontFace::GetIndex()</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontFace.GetSimulations">
            <summary>	
            Obtains the algorithmic style simulation flags of a font face.	
            </summary>	
            <returns>Font face simulation flags for algorithmic means of making text bold or italic.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFace::GetSimulations']/*"/>	
            <unmanaged>DWRITE_FONT_SIMULATIONS IDWriteFontFace::GetSimulations()</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontFace.IsSymbolFont_">
            <summary>	
            Determines whether the font is a symbol font.	
            </summary>	
            <returns>Returns TRUE if the font is a symbol font, otherwise <see cref="F:SharpDX.Result.False"/>.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFace::IsSymbolFont']/*"/>	
            <unmanaged>BOOL IDWriteFontFace::IsSymbolFont()</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontFace.GetMetrics(SharpDX.DirectWrite.FontMetrics@)">
            <summary>	
            Obtains design units and common metrics for the font face. These metrics are applicable to all the glyphs within a font face and are used by applications for layout calculations.	
            </summary>	
            <param name="fontFaceMetrics"><para>When this method returns, a?<see cref="T:SharpDX.DirectWrite.FontMetrics"/> structure that holds metrics (such as ascent, descent, or cap height) for the current font face element. The metrics returned by this function are in font design units.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFace::GetMetrics']/*"/>	
            <unmanaged>void IDWriteFontFace::GetMetrics([Out] DWRITE_FONT_METRICS* fontFaceMetrics)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontFace.GetGlyphCount">
            <summary>	
            Obtains the number of glyphs in the font face.	
            </summary>	
            <returns>The number of glyphs in the font face.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFace::GetGlyphCount']/*"/>	
            <unmanaged>unsigned short IDWriteFontFace::GetGlyphCount()</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontFace.GetDesignGlyphMetrics(System.Int16[],System.Int32,SharpDX.DirectWrite.GlyphMetrics[],System.Boolean)">
            <summary>	
            Obtains ideal (resolution-independent) glyph metrics in font design units.	
            </summary>	
            <param name="glyphIndices"><para> An array of glyph indices for which to compute  metrics. The array must contain at least as many elements as specified by glyphCount.</para></param>	
            <param name="glyphCount"><para>The number of elements in the glyphIndices array.</para></param>	
            <param name="glyphMetrics"><para>When this method returns, contains an array of <see cref="T:SharpDX.DirectWrite.GlyphMetrics"/> structures.  glyphMetrics must be initialized with an empty buffer that contains at least as many elements as glyphCount. The metrics returned by this function are in font design units.</para></param>	
            <param name="isSideways"><para>Indicates whether the font is being used in a sideways run. This can affect the glyph metrics if the font has oblique simulation because sideways oblique simulation differs from non-sideways oblique simulation</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            Design glyph metrics are used for glyph positioning.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFace::GetDesignGlyphMetrics']/*"/>	
            <unmanaged>HRESULT IDWriteFontFace::GetDesignGlyphMetrics([In, Buffer] const unsigned short* glyphIndices,[In] unsigned int glyphCount,[Out, Buffer] DWRITE_GLYPH_METRICS* glyphMetrics,[In] BOOL isSideways)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontFace.GetGlyphIndices(System.Int32[],System.Int32,System.Int16[])">
            <summary>	
            Returns the nominal mapping of UCS4 Unicode code points to glyph indices as defined by the font 'CMAP' table.	
            </summary>	
            <param name="codePoints"><para>An array of USC4 code points from which to obtain nominal glyph indices. The array must be allocated and be able to contain the number of elements specified by codePointCount.</para></param>	
            <param name="codePointCount"><para>The number of elements in the codePoints array.</para></param>	
            <param name="glyphIndices"><para>When this method returns, contains a reference to an array of nominal glyph indices filled by this function.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            Note that this mapping is primarily provided for line layout engines built on top of the physical font API. Because of OpenType glyph substitution and line layout character substitution, the nominal conversion does not always correspond to how a Unicode string will map to glyph indices when rendering using a particular font face. Also, note that Unicode variant selectors provide for alternate mappings for character to glyph. This call will always return the default variant.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFace::GetGlyphIndicesW']/*"/>	
            <unmanaged>HRESULT IDWriteFontFace::GetGlyphIndicesW([In, Buffer] const unsigned int* codePoints,[In] unsigned int codePointCount,[Out, Buffer] unsigned short* glyphIndices)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontFace.TryGetFontTable(System.Int32,System.IntPtr,System.Int32@,System.IntPtr@,System.Boolean@)">
            <summary>	
            Finds the specified OpenType font table if it exists and returns a reference to it. The function accesses the underlying font data through the <see cref="T:SharpDX.DirectWrite.FontFileStream"/> interface implemented by the font file loader.	
            </summary>	
            <param name="openTypeTableTag">No documentation.</param>	
            <param name="tableData">No documentation.</param>	
            <param name="tableSize">No documentation.</param>	
            <param name="tableContext">No documentation.</param>	
            <param name="exists">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The context for the same tag may be different for each call, so each one must be held and released separately.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFace::TryGetFontTable']/*"/>	
            <unmanaged>HRESULT IDWriteFontFace::TryGetFontTable([In] unsigned int openTypeTableTag,[Out, Buffer] const void** tableData,[Out] unsigned int* tableSize,[Out] void** tableContext,[Out] BOOL* exists)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontFace.ReleaseFontTable(System.IntPtr)">
            <summary>	
            Releases the table obtained earlier from TryGetFontTable.	
            </summary>	
            <param name="tableContext">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFace::ReleaseFontTable']/*"/>	
            <unmanaged>void IDWriteFontFace::ReleaseFontTable([In] void* tableContext)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontFace.GetGlyphRunOutline_(System.Single,System.Int16[],System.Single[],SharpDX.DirectWrite.GlyphOffset[],System.Int32,System.Boolean,System.Boolean,System.IntPtr)">
            <summary>	
            Computes the outline of a run of glyphs by calling back to the outline sink interface.	
            </summary>	
            <param name="emSize"><para>The logical size of the font in DIP units. A DIP ("device-independent pixel") equals 1/96 inch.</para></param>	
            <param name="glyphIndices"><para>An array of glyph indices. The glyphs are in logical order and the advance direction depends on the isRightToLeft parameter. The array must be allocated and be able to contain the number of elements specified by glyphCount.</para></param>	
            <param name="glyphAdvances"><para>An optional array of glyph advances in DIPs. The advance of a glyph is the amount to advance the position (in the direction of the baseline) after drawing the glyph. glyphAdvances contains the number of elements specified by glyphCount.</para></param>	
            <param name="glyphOffsets"><para>An optional array of glyph offsets, each of which specifies the offset along the baseline and offset perpendicular to the baseline of a glyph relative to the current pen position.   glyphOffsets contains the number of elements specified by glyphCount.</para></param>	
            <param name="glyphCount"><para>The number of glyphs in the run.</para></param>	
            <param name="isSideways"><para>If TRUE, the ascender of the glyph runs alongside the baseline. If <see cref="F:SharpDX.Result.False"/>, the glyph ascender runs perpendicular to the baseline. For example, an English alphabet on a vertical baseline would have isSideways set to <see cref="F:SharpDX.Result.False"/>.</para> <para>A client can render a vertical run by setting isSideways to TRUE and rotating the resulting geometry 90 degrees to the right using a transform. The isSideways and isRightToLeft parameters cannot both be true.</para></param>	
            <param name="isRightToLeft"><para>The visual order of the glyphs. If this parameter is <see cref="F:SharpDX.Result.False"/>, then glyph advances are from left to right. If TRUE, the advance direction is right to left. By default, the advance direction is left to right.</para></param>	
            <param name="geometrySink"><para>A reference to the interface that is called back to perform outline drawing operations.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFace::GetGlyphRunOutline']/*"/>	
            <unmanaged>HRESULT IDWriteFontFace::GetGlyphRunOutline([In] float emSize,[In, Buffer] const unsigned short* glyphIndices,[In, Buffer, Optional] const float* glyphAdvances,[In, Buffer, Optional] const DWRITE_GLYPH_OFFSET* glyphOffsets,[In] unsigned int glyphCount,[In] BOOL isSideways,[In] BOOL isRightToLeft,[In] ID2D1SimplifiedGeometrySink* geometrySink)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontFace.GetRecommendedRenderingMode(System.Single,System.Single,SharpDX.Direct2D1.MeasuringMode,SharpDX.DirectWrite.RenderingParams)">
            <summary>	
            Determines the recommended rendering mode for the font, using the specified size and rendering parameters.	
            </summary>	
            <param name="emSize"><para>The logical size of the font in DIP units. A DIP ("device-independent pixel") equals 1/96 inch.</para></param>	
            <param name="pixelsPerDip"><para>The number of physical pixels per DIP. For example, if the DPI of the rendering surface is 96, this  value is 1.0f. If the DPI is 120, this value is 120.0f/96.</para></param>	
            <param name="measuringMode"><para>The measuring method that will be used for glyphs in the font. Renderer implementations may choose different rendering modes for different measuring methods, for example: </para>  <see cref="F:SharpDX.DirectWrite.RenderingMode.CleartypeNatural"/> for <see cref="F:SharpDX.Direct2D1.MeasuringMode.Natural"/>  <see cref="F:SharpDX.DirectWrite.RenderingMode.CleartypeGdiClassic"/> for <see cref="F:SharpDX.Direct2D1.MeasuringMode.GdiClassic"/>  <see cref="F:SharpDX.DirectWrite.RenderingMode.CleartypeGdiNatural"/> for <see cref="F:SharpDX.Direct2D1.MeasuringMode.GdiNatural"/></param>	
            <param name="renderingParams"><para>A reference to an object that contains rendering settings such as gamma level, enhanced contrast, and ClearType level. This parameter is necessary in case the rendering parameters  object overrides the rendering mode.</para></param>	
            <returns><para>When this method returns, contains a value that indicates the recommended rendering mode to use.</para></returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFace::GetRecommendedRenderingMode']/*"/>	
            <unmanaged>HRESULT IDWriteFontFace::GetRecommendedRenderingMode([In] float emSize,[In] float pixelsPerDip,[In] DWRITE_MEASURING_MODE measuringMode,[In] IDWriteRenderingParams* renderingParams,[Out] DWRITE_RENDERING_MODE* renderingMode)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontFace.GetGdiCompatibleMetrics(System.Single,System.Single,System.Nullable{SharpDX.DirectWrite.Matrix})">
            <summary>	
            Obtains design units and common metrics for the font face. These metrics are applicable to all the glyphs within a fontface and are used by applications for layout calculations.	
            </summary>	
            <param name="emSize"><para>The logical size of the font in DIP units.</para></param>	
            <param name="pixelsPerDip"><para>The number of physical pixels per DIP.</para></param>	
            <param name="transform"><para>An optional transform applied to the glyphs and their positions. This transform is applied after the scaling specified by the font size and pixelsPerDip.</para></param>	
            <returns><para>A reference to a <see cref="T:SharpDX.DirectWrite.FontMetrics"/> structure to fill in. The metrics returned by this function are in font design units.</para></returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFace::GetGdiCompatibleMetrics']/*"/>	
            <unmanaged>HRESULT IDWriteFontFace::GetGdiCompatibleMetrics([In] float emSize,[In] float pixelsPerDip,[In, Optional] const DWRITE_MATRIX* transform,[Out] DWRITE_FONT_METRICS* fontFaceMetrics)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontFace.GetGdiCompatibleGlyphMetrics(System.Single,System.Single,System.Nullable{SharpDX.DirectWrite.Matrix},System.Boolean,System.Int16[],System.Int32,SharpDX.DirectWrite.GlyphMetrics[],System.Boolean)">
            <summary>	
            Obtains glyph metrics in font design units with the return values compatible with what GDI would produce.	
            </summary>	
            <param name="emSize"><para>The ogical size of the font in DIP units.</para></param>	
            <param name="pixelsPerDip"><para>The number of physical pixels per DIP.</para></param>	
            <param name="transform"><para>An optional transform applied to the glyphs and their positions. This transform is applied after the scaling specified by the font size and pixelsPerDip.</para></param>	
            <param name="useGdiNatural"><para>When set to <see cref="F:SharpDX.Result.False"/>, the metrics are the same as the metrics of GDI aliased text.  When set to TRUE, the metrics are the same as the metrics of text measured by GDI using a font created with CLEARTYPE_NATURAL_QUALITY.</para></param>	
            <param name="glyphIndices"><para>An array of glyph indices for which to compute the metrics.</para></param>	
            <param name="glyphCount"><para>The number of elements in the glyphIndices array.</para></param>	
            <param name="glyphMetrics"><para>An array of <see cref="T:SharpDX.DirectWrite.GlyphMetrics"/> structures filled by this function. The metrics are in font design units.</para></param>	
            <param name="isSideways"><para>A <see cref="T:System.Boolean"/> value that indicates whether the font is being used in a sideways run.  This can affect the glyph metrics if the font has oblique simulation because sideways oblique simulation differs from non-sideways oblique simulation.</para></param>	
            <returns>Standard <see cref="T:SharpDX.Result"/> error code. If any of the input glyph indices are outside of the valid glyph index range for the current font face, E_INVALIDARG will be returned.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFace::GetGdiCompatibleGlyphMetrics']/*"/>	
            <unmanaged>HRESULT IDWriteFontFace::GetGdiCompatibleGlyphMetrics([In] float emSize,[In] float pixelsPerDip,[In, Optional] const DWRITE_MATRIX* transform,[In] BOOL useGdiNatural,[In, Buffer] const unsigned short* glyphIndices,[In] unsigned int glyphCount,[Out, Buffer] DWRITE_GLYPH_METRICS* glyphMetrics,[In] BOOL isSideways)</unmanaged>	
        </member>
        <member name="P:SharpDX.DirectWrite.FontFace.FaceType">
            <summary>	
            Obtains the file format type of a font face.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFace::GetType']/*"/>	
            <unmanaged>GetType</unmanaged>	
            <unmanaged>DWRITE_FONT_FACE_TYPE IDWriteFontFace::GetType()</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.FontFace.Index">
            <summary>	
            Obtains the index of a font face in the context of its font files.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFace::GetIndex']/*"/>	
            <unmanaged>GetIndex</unmanaged>	
            <unmanaged>unsigned int IDWriteFontFace::GetIndex()</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.FontFace.Simulations">
            <summary>	
            Obtains the algorithmic style simulation flags of a font face.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFace::GetSimulations']/*"/>	
            <unmanaged>GetSimulations</unmanaged>	
            <unmanaged>DWRITE_FONT_SIMULATIONS IDWriteFontFace::GetSimulations()</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.FontFace.IsSymbolFont">
            <summary>	
            Determines whether the font is a symbol font.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFace::IsSymbolFont']/*"/>	
            <unmanaged>IsSymbolFont</unmanaged>	
            <unmanaged>BOOL IDWriteFontFace::IsSymbolFont()</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.FontFace.Metrics">
            <summary>	
            Obtains design units and common metrics for the font face. These metrics are applicable to all the glyphs within a font face and are used by applications for layout calculations.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFace::GetMetrics']/*"/>	
            <unmanaged>GetMetrics</unmanaged>	
            <unmanaged>void IDWriteFontFace::GetMetrics([Out] DWRITE_FONT_METRICS* fontFaceMetrics)</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.FontFace.GlyphCount">
            <summary>	
            Obtains the number of glyphs in the font face.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFace::GetGlyphCount']/*"/>	
            <unmanaged>GetGlyphCount</unmanaged>	
            <unmanaged>unsigned short IDWriteFontFace::GetGlyphCount()</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.FontFeature">
            <summary>	
            Specifies properties used to identify and execute typographic features in the current font face.	
            </summary>	
            <remarks>	
            A non-zero value generally enables the feature execution, while the zero value disables it. A feature requiring a selector uses this value to indicate the selector index.The OpenType standard provides access to typographic features available in the font by means of a feature tag with the associated parameters. The OpenType feature tag is a 4-byte identifier of the registered name of a feature. For example, the 'kern' feature name tag is used to identify the 'Kerning' feature in OpenType font. Similarly, the OpenType feature tag for 'Standard Ligatures' and 'Fractions' is 'liga' and 'frac' respectively. Since a single run can be associated with more than one typographic features, the Text String API accepts typographic settings for a run as a list of features and are executed in the order they are specified.The value of the tag member represents the OpenType name tag of the feature, while the param value represents additional parameter for the execution of the feature referred by the tag member. Both nameTag and parameter are stored as little endian, the same convention followed by GDI.  Most features treat the Param value as a binary value that indicates whether to turn the execution of the feature on or off, with it being off by default in the majority of cases. Some features, however, treat this value as an integral value representing the integer index to the list of alternate results it may produce during the execution; for instance, the feature 'Stylistic Alternates' or 'salt' uses the parameter value as an index to the list of alternate substituting glyphs it could produce for a specified glyph.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontFeature.#ctor(SharpDX.DirectWrite.FontFeatureTag,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.DirectWrite.FontFeature"/> struct.
            </summary>
            <param name="nameTag">The name tag.</param>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeature.NameTag">
            <summary>	
            <para>The feature OpenType name identifier.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE::nameTag']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG nameTag</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeature.Parameter">
            <summary>	
            <para>The execution parameter of the feature.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE::parameter']/*"/>	
            <unmanaged>unsigned int parameter</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.FontFile">
            <summary>	
            Represents a font file. Applications  such as font managers or font viewers can call <see cref="M:SharpDX.DirectWrite.FontFile.Analyze(System.Boolean@,SharpDX.DirectWrite.FontFileType@,SharpDX.DirectWrite.FontFaceType@,System.Int32@)"/> to find out if a particular file is a font file, and whether it is a font type that is supported by the font system.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFile']/*"/>	
            <unmanaged>IDWriteFontFile</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontFile.#ctor(SharpDX.DirectWrite.Factory,System.String)">
            <summary>	
            Creates a font file reference object from a local font file. 	
            </summary>	
            <param name="factory">A reference to a DirectWrite factory <see cref="T:SharpDX.DirectWrite.Factory"/></param>
            <param name="filePath">An array of characters that contains the absolute file path for the font file. Subsequent operations on the constructed object may fail if the user provided filePath doesn't correspond to a valid file on the disk. </param>
            <unmanaged>HRESULT IDWriteFactory::CreateFontFileReference([In] const wchar_t* filePath,[In, Optional] const __int64* lastWriteTime,[Out] IDWriteFontFile** fontFile)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.FontFile.#ctor(SharpDX.DirectWrite.Factory,System.String,System.Nullable{System.Int64})">
            <summary>	
            Creates a font file reference object from a local font file. 	
            </summary>	
            <param name="factory">A reference to a DirectWrite factory <see cref="T:SharpDX.DirectWrite.Factory"/></param>
            <param name="filePath">An array of characters that contains the absolute file path for the font file. Subsequent operations on the constructed object may fail if the user provided filePath doesn't correspond to a valid file on the disk. </param>
            <param name="lastWriteTime">The last modified time of the input file path. If the parameter is omitted, the function will access the font file to obtain its last write time. You should specify this value to avoid extra disk access. Subsequent operations on the constructed object may fail if the user provided lastWriteTime doesn't match the file on the disk. </param>
            <unmanaged>HRESULT IDWriteFactory::CreateFontFileReference([In] const wchar_t* filePath,[In, Optional] const __int64* lastWriteTime,[Out] IDWriteFontFile** fontFile)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.FontFile.#ctor(SharpDX.DirectWrite.Factory,System.IntPtr,System.Int32,SharpDX.DirectWrite.FontFileLoader)">
            <summary>
            Creates a reference to an application-specific font file resource.
            </summary>
            <param name="factory">A reference to a DirectWrite factory <see cref="T:SharpDX.DirectWrite.Factory"/></param>
            <param name="fontFileReferenceKey">A font file reference key that uniquely identifies the font file resource during the lifetime of fontFileLoader.</param>
            <param name="fontFileReferenceKeySize">The size of the font file reference key in bytes.</param>
            <param name="fontFileLoader">The font file loader that will be used by the font system to load data from the file identified by fontFileReferenceKey.</param>
            <remarks>
            This function is provided for cases when an application or a document needs to use a private font without having to install it on the system. fontFileReferenceKey has to be unique only in the scope of the fontFileLoader used in this call.
            </remarks>
            <unmanaged>HRESULT IDWriteFactory::CreateCustomFontFileReference([In, Buffer] const void* fontFileReferenceKey,[None] int fontFileReferenceKeySize,[None] IDWriteFontFileLoader* fontFileLoader,[Out] IDWriteFontFile** fontFile)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.FontFile.GetReferenceKey">
            <summary>	
            Obtains the reference to the reference key of a font file. The returned reference is valid until the font file object is released.  	
            </summary>	
            <returns>the reference to the reference key of a font file. </returns>
            <unmanaged>HRESULT IDWriteFontFile::GetReferenceKey([Out, Buffer] const void** fontFileReferenceKey,[Out] int* fontFileReferenceKeySize)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.FontFile.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.DirectWrite.FontFile"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontFile.GetReferenceKey(System.IntPtr,System.Int32@)">
            <summary>	
            Obtains the reference to the reference key of a font file. The returned reference is valid until the font file object is released.	
            </summary>	
            <param name="fontFileReferenceKey"><para>When this method returns, contains an address of  a reference to the font file reference key. Note that the reference value is only valid until the font file object it is obtained from is released. This parameter is passed uninitialized.</para></param>	
            <param name="fontFileReferenceKeySize"><para>When this method returns, contains the size of the font file reference key in bytes. This parameter is passed uninitialized.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFile::GetReferenceKey']/*"/>	
            <unmanaged>HRESULT IDWriteFontFile::GetReferenceKey([Out, Buffer] const void** fontFileReferenceKey,[Out] unsigned int* fontFileReferenceKeySize)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontFile.GetLoader(SharpDX.DirectWrite.FontFileLoader@)">
            <summary>	
            Obtains the file loader associated with a font file object.	
            </summary>	
            <param name="fontFileLoader"><para>When this method returns, contains the address of  a reference to the font file loader associated with the font file object.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFile::GetLoader']/*"/>	
            <unmanaged>HRESULT IDWriteFontFile::GetLoader([Out] IDWriteFontFileLoader** fontFileLoader)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontFile.Analyze(System.Boolean@,SharpDX.DirectWrite.FontFileType@,SharpDX.DirectWrite.FontFaceType@,System.Int32@)">
            <summary>	
            Analyzes a file and returns whether it represents a font, and whether the font type is supported by the font system.	
            </summary>	
            <param name="isSupportedFontType"><para>TRUE if the font type is supported by the font system; otherwise, <see cref="F:SharpDX.Result.False"/>.</para></param>	
            <param name="fontFileType"><para>When this method returns, contains a value that indicates the type of the font file. Note that even if  isSupportedFontType is <see cref="F:SharpDX.Result.False"/>, the fontFileType value may be different from <see cref="F:SharpDX.DirectWrite.FontFileType.Unknown"/>.</para></param>	
            <param name="fontFaceType"><para>When this method returns, contains a value that indicates the type of the font face. If fontFileType is not equal to <see cref="F:SharpDX.DirectWrite.FontFileType.Unknown"/>, then that can be constructed from the font file. </para></param>	
            <param name="numberOfFaces"><para>When this method returns, contains the number of font faces contained in the font file.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            Important??Certain font file types are recognized, but not supported by the font system. For example, the font system will recognize a file as a Type 1 font file but will not be able to construct a font face object from it. In such situations, Analyze will set isSupportedFontType output parameter to <see cref="F:SharpDX.Result.False"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFile::Analyze']/*"/>	
            <unmanaged>HRESULT IDWriteFontFile::Analyze([Out] BOOL* isSupportedFontType,[Out] DWRITE_FONT_FILE_TYPE* fontFileType,[Out, Optional] DWRITE_FONT_FACE_TYPE* fontFaceType,[Out] unsigned int* numberOfFaces)</unmanaged>	
        </member>
        <member name="P:SharpDX.DirectWrite.FontFile.Loader">
            <summary>	
            Obtains the file loader associated with a font file object. 	
            </summary>	
            <unmanaged>HRESULT IDWriteFontFile::GetLoader([Out] IDWriteFontFileLoader** fontFileLoader)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.FontFileEnumerator">
            <summary>	
            Encapsulates a collection of font files. The font system uses this interface to enumerate font files when building a font collection.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFileEnumerator']/*"/>	
            <unmanaged>IDWriteFontFileEnumerator</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontFileEnumerator.MoveNext">
            <summary>	
            Advances to the next font file in the collection. When it is first created, the enumerator is positioned before the first element of the collection and the first call to MoveNext advances to the first file. 	
            </summary>	
            <returns>the value TRUE if the enumerator advances to a file; otherwise, FALSE if the enumerator advances past the last file in the collection.</returns>
            <unmanaged>HRESULT IDWriteFontFileEnumerator::MoveNext([Out] BOOL* hasCurrentFile)</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.FontFileEnumerator.CurrentFontFile">
            <summary>	
            Gets a reference to the current font file. 	
            </summary>	
            <returns>a reference to the newly created <see cref="T:SharpDX.DirectWrite.FontFile"/> object.</returns>
            <unmanaged>HRESULT IDWriteFontFileEnumerator::GetCurrentFontFile([Out] IDWriteFontFile** fontFile)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.FontFileEnumeratorShadow">
            <summary>
            Internal FontFileEnumerator Callback
            </summary>
        </member>
        <member name="M:SharpDX.DirectWrite.FontFileEnumeratorShadow.ToIntPtr(SharpDX.DirectWrite.FontFileEnumerator)">
            <summary>
            Return a pointer to the unamanged version of this callback.
            </summary>
            <param name="callback">The callback.</param>
            <returns>A pointer to a shadow c++ callback</returns>
        </member>
        <member name="T:SharpDX.DirectWrite.FontFileEnumeratorShadow.FontFileEnumeratorVtbl.MoveNextDelegate">
            <summary>	
            Advances to the next font file in the collection. When it is first created, the enumerator is positioned before the first element of the collection and the first call to MoveNext advances to the first file. 	
            </summary>	
            <returns>the value TRUE if the enumerator advances to a file; otherwise, FALSE if the enumerator advances past the last file in the collection.</returns>
            <unmanaged>HRESULT IDWriteFontFileEnumerator::MoveNext([Out] BOOL* hasCurrentFile)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.FontFileEnumeratorShadow.FontFileEnumeratorVtbl.GetCurrentFontFileDelegate">
            <summary>	
            Gets a reference to the current font file. 	
            </summary>	
            <returns>a reference to the newly created <see cref="T:SharpDX.DirectWrite.FontFile"/> object.</returns>
            <unmanaged>HRESULT IDWriteFontFileEnumerator::GetCurrentFontFile([Out] IDWriteFontFile** fontFile)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.FontFileLoader">
            <summary>	
            Handles loading font file resources of a particular type from a font file reference key into a font file stream object.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFileLoader']/*"/>	
            <unmanaged>IDWriteFontFileLoader</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontFileLoader.CreateStreamFromKey(SharpDX.DataStream)">
            <summary>	
            Creates a font file stream object that encapsulates an open file resource. 	
            </summary>	
            <remarks>	
            The resource is closed when the last reference to fontFileStream is released.  	
            </remarks>	
            <param name="fontFileReferenceKey">A reference to a font file reference key that uniquely identifies the font file resource within the scope of the font loader being used. The buffer allocated for this key must at least be the size, in bytes, specified by  fontFileReferenceKeySize. </param>
            <returns>a reference to the newly created <see cref="T:SharpDX.DirectWrite.FontFileStream"/> object. </returns>
            <unmanaged>HRESULT IDWriteFontFileLoader::CreateStreamFromKey([In, Buffer] const void* fontFileReferenceKey,[None] int fontFileReferenceKeySize,[Out] IDWriteFontFileStream** fontFileStream)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.FontFileLoaderShadow">
            <summary>
            Internal FontFileLoader Callback
            </summary>
        </member>
        <member name="M:SharpDX.DirectWrite.FontFileLoaderShadow.ToIntPtr(SharpDX.DirectWrite.FontFileLoader)">
            <summary>
            Return a pointer to the unamanged version of this callback.
            </summary>
            <param name="callback">The callback.</param>
            <returns>A pointer to a shadow c++ callback</returns>
        </member>
        <member name="T:SharpDX.DirectWrite.FontFileLoaderShadow.FontFileLoaderVtbl.CreateStreamFromKeyDelegate">
            <unmanaged>HRESULT IDWriteFontFileLoader::CreateStreamFromKey([In, Buffer] const void* fontFileReferenceKey,[None] int fontFileReferenceKeySize,[Out] IDWriteFontFileStream** fontFileStream)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.FontFileLoaderNative">
            <summary>	
            Handles loading font file resources of a particular type from a font file reference key into a font file stream object.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFileLoader']/*"/>	
            <unmanaged>IDWriteFontFileLoader</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontFileLoaderNative.CreateStreamFromKey(SharpDX.DataStream)">
            <summary>	
            Creates a font file stream object that encapsulates an open file resource. 	
            </summary>	
            <remarks>	
            The resource is closed when the last reference to fontFileStream is released.  	
            </remarks>	
            <param name="fontFileReferenceKey">A reference to a font file reference key that uniquely identifies the font file resource within the scope of the font loader being used. The buffer allocated for this key must at least be the size, in bytes, specified by  fontFileReferenceKeySize. </param>
            <returns>a reference to the newly created <see cref="T:SharpDX.DirectWrite.FontFileStream"/> object. </returns>
            <unmanaged>HRESULT IDWriteFontFileLoader::CreateStreamFromKey([In, Buffer] const void* fontFileReferenceKey,[None] int fontFileReferenceKeySize,[Out] IDWriteFontFileStream** fontFileStream)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.FontFileLoaderNative.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.DirectWrite.FontFileLoaderNative"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontFileLoaderNative.CreateStreamFromKey_(System.IntPtr,System.Int32,SharpDX.DirectWrite.FontFileStream@)">
            <summary>	
            Creates a font file stream object that encapsulates an open file resource.	
            </summary>	
            <param name="fontFileReferenceKey"><para>A reference to a font file reference key that uniquely identifies the font file resource within the scope of the font loader being used. The buffer allocated for this key must at least be the size, in bytes, specified by  fontFileReferenceKeySize.</para></param>	
            <param name="fontFileReferenceKeySize"><para>The size of font file reference key, in bytes.</para></param>	
            <param name="fontFileStream"><para>When this method returns, contains the address of a reference to the newly created <see cref="T:SharpDX.DirectWrite.FontFileStream"/> object.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The resource is closed when the last reference to fontFileStream is released.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFileLoader::CreateStreamFromKey']/*"/>	
            <unmanaged>HRESULT IDWriteFontFileLoader::CreateStreamFromKey([In, Buffer] const void* fontFileReferenceKey,[In] unsigned int fontFileReferenceKeySize,[Out] IDWriteFontFileStream** fontFileStream)</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.FontFileStream">
            <summary>	
            Loads font file data from a custom font file loader.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFileStream']/*"/>	
            <unmanaged>IDWriteFontFileStream</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontFileStream.ReadFileFragment(System.IntPtr@,System.Int64,System.Int64,System.IntPtr@)">
            <summary>	
            Reads a fragment from a font file. 	
            </summary>	
            <remarks>	
            Note that ReadFileFragment implementations must check whether the requested font file fragment is within the file bounds. Otherwise, an error should be returned from ReadFileFragment.   {{DirectWrite}} may invoke <see cref="T:SharpDX.DirectWrite.FontFileStream"/> methods on the same object from multiple threads simultaneously. Therefore, ReadFileFragment implementations that rely on internal mutable state must serialize access to such state across multiple threads. For example, an implementation that uses separate Seek and Read operations to read a file fragment must place the code block containing Seek and Read calls under a lock or a critical section. 	
            </remarks>	
            <param name="fragmentStart">When this method returns, contains an address of a  reference to the start of the font file fragment.  This parameter is passed uninitialized. </param>
            <param name="fileOffset">The offset of the fragment, in bytes, from the beginning of the font file. </param>
            <param name="fragmentSize">The size of the file fragment, in bytes. </param>
            <param name="fragmentContext">When this method returns, contains the address of  </param>
            <returns>a reference to a reference to the client-defined context to be passed to {{ReleaseFileFragment}}. </returns>
            <unmanaged>HRESULT IDWriteFontFileStream::ReadFileFragment([Out, Buffer] const void** fragmentStart,[None] __int64 fileOffset,[None] __int64 fragmentSize,[Out] void** fragmentContext)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.FontFileStream.ReleaseFileFragment(System.IntPtr)">
            <summary>	
            Releases a fragment from a file. 	
            </summary>	
            <param name="fragmentContext">A reference to the client-defined context of a font fragment returned from {{ReadFileFragment}}. </param>
            <unmanaged>void IDWriteFontFileStream::ReleaseFileFragment([None] void* fragmentContext)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.FontFileStream.GetFileSize">
            <summary>	
            Obtains the total size of a file. 	
            </summary>	
            <remarks>	
            Implementing GetFileSize() for asynchronously loaded font files may require downloading the complete file contents. Therefore, this method should be used only for operations that either require a complete font file to be loaded (for example, copying a font file) or that need to make decisions based on the value of the file size (for example, validation against a persisted file size).  	
            </remarks>	
            <returns>the total size of the file. </returns>
            <unmanaged>HRESULT IDWriteFontFileStream::GetFileSize([Out] __int64* fileSize)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.FontFileStream.GetLastWriteTime">
            <summary>	
            Obtains the last modified time of the file.  	
            </summary>	
            <remarks>	
            The "last modified time" is used by DirectWrite font selection algorithms to determine whether one font resource is more up to date than another one. 	
            </remarks>	
            <returns>the last modified time of the file in the format that represents the number of 100-nanosecond intervals since January 1, 1601 (UTC). </returns>
            <unmanaged>HRESULT IDWriteFontFileStream::GetLastWriteTime([Out] __int64* lastWriteTime)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.FontFileStreamShadow">
            <summary>
            Internal FontFileStream Callback
            </summary>
        </member>
        <member name="M:SharpDX.DirectWrite.FontFileStreamShadow.ToIntPtr(SharpDX.DirectWrite.FontFileStream)">
            <summary>
            Return a pointer to the unamanged version of this callback.
            </summary>
            <param name="callback">The callback.</param>
            <returns>A pointer to a shadow c++ callback</returns>
        </member>
        <member name="T:SharpDX.DirectWrite.FontFileStreamShadow.FontFileStreamVtbl.ReadFileFragmentDelegate">
            <unmanaged>HRESULT IDWriteFontFileStream::ReadFileFragment([Out, Buffer] const void** fragmentStart,[None] __int64 fileOffset,[None] __int64 fragmentSize,[Out] void** fragmentContext)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.FontFileStreamShadow.FontFileStreamVtbl.ReleaseFileFragmentDelegate">
            <unmanaged>void IDWriteFontFileStream::ReleaseFileFragment([None] void* fragmentContext)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.FontFileStreamShadow.FontFileStreamVtbl.GetFileSizeDelegate">
            <unmanaged>HRESULT IDWriteFontFileStream::GetFileSize([Out] __int64* fileSize)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.FontFileStreamShadow.FontFileStreamVtbl.GetLastWriteTimeDelegate">
            <unmanaged>HRESULT IDWriteFontFileStream::GetLastWriteTime([Out] __int64* lastWriteTime)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.FontFileStreamNative">
            <summary>	
            Loads font file data from a custom font file loader.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFileStream']/*"/>	
            <unmanaged>IDWriteFontFileStream</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontFileStreamNative.ReadFileFragment(System.IntPtr@,System.Int64,System.Int64,System.IntPtr@)">
            <summary>	
            Reads a fragment from a font file. 	
            </summary>	
            <remarks>	
            Note that ReadFileFragment implementations must check whether the requested font file fragment is within the file bounds. Otherwise, an error should be returned from ReadFileFragment.   {{DirectWrite}} may invoke <see cref="T:SharpDX.DirectWrite.FontFileStream"/> methods on the same object from multiple threads simultaneously. Therefore, ReadFileFragment implementations that rely on internal mutable state must serialize access to such state across multiple threads. For example, an implementation that uses separate Seek and Read operations to read a file fragment must place the code block containing Seek and Read calls under a lock or a critical section. 	
            </remarks>	
            <param name="fragmentStart">When this method returns, contains an address of a  reference to the start of the font file fragment.  This parameter is passed uninitialized. </param>
            <param name="fileOffset">The offset of the fragment, in bytes, from the beginning of the font file. </param>
            <param name="fragmentSize">The size of the file fragment, in bytes. </param>
            <param name="fragmentContext">When this method returns, contains the address of  </param>
            <returns>a reference to a reference to the client-defined context to be passed to {{ReleaseFileFragment}}. </returns>
            <unmanaged>HRESULT IDWriteFontFileStream::ReadFileFragment([Out, Buffer] const void** fragmentStart,[None] __int64 fileOffset,[None] __int64 fragmentSize,[Out] void** fragmentContext)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.FontFileStreamNative.ReleaseFileFragment(System.IntPtr)">
            <summary>	
            Releases a fragment from a file. 	
            </summary>	
            <param name="fragmentContext">A reference to the client-defined context of a font fragment returned from {{ReadFileFragment}}. </param>
            <unmanaged>void IDWriteFontFileStream::ReleaseFileFragment([None] void* fragmentContext)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.FontFileStreamNative.GetFileSize">
            <summary>	
            Obtains the total size of a file. 	
            </summary>	
            <remarks>	
            Implementing GetFileSize() for asynchronously loaded font files may require downloading the complete file contents. Therefore, this method should be used only for operations that either require a complete font file to be loaded (for example, copying a font file) or that need to make decisions based on the value of the file size (for example, validation against a persisted file size).  	
            </remarks>	
            <returns>the total size of the file. </returns>
            <unmanaged>HRESULT IDWriteFontFileStream::GetFileSize([Out] __int64* fileSize)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.FontFileStreamNative.GetLastWriteTime">
            <summary>	
            Obtains the last modified time of the file.  	
            </summary>	
            <remarks>	
            The "last modified time" is used by DirectWrite font selection algorithms to determine whether one font resource is more up to date than another one. 	
            </remarks>	
            <returns>the last modified time of the file in the format that represents the number of 100-nanosecond intervals since January 1, 1601 (UTC). </returns>
            <unmanaged>HRESULT IDWriteFontFileStream::GetLastWriteTime([Out] __int64* lastWriteTime)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.FontFileStreamNative.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.DirectWrite.FontFileStreamNative"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontFileStreamNative.ReadFileFragment_(System.IntPtr@,System.Int64,System.Int64,System.IntPtr@)">
            <summary>	
            Reads a fragment from a font file.	
            </summary>	
            <param name="fragmentStart"><para>When this method returns, contains an address of a  reference to the start of the font file fragment.  This parameter is passed uninitialized.</para></param>	
            <param name="fileOffset"><para>The offset of the fragment, in bytes, from the beginning of the font file.</para></param>	
            <param name="fragmentSize"><para>The size of the file fragment, in bytes.</para></param>	
            <param name="fragmentContext"><para>When this method returns, contains the address of a reference to a reference to the client-defined context to be passed to ReleaseFileFragment.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            Note that ReadFileFragment implementations must check whether the requested font file fragment is within the file bounds. Otherwise, an error should be returned from ReadFileFragment.DirectWrite may invoke <see cref="T:SharpDX.DirectWrite.FontFileStream"/> methods on the same object from multiple threads simultaneously. Therefore, ReadFileFragment implementations that rely on internal mutable state must serialize access to such state across multiple threads. For example, an implementation that uses separate Seek and Read operations to read a file fragment must place the code block containing Seek and Read calls under a lock or a critical section.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFileStream::ReadFileFragment']/*"/>	
            <unmanaged>HRESULT IDWriteFontFileStream::ReadFileFragment([Out] const void** fragmentStart,[In] unsigned longlong fileOffset,[In] unsigned longlong fragmentSize,[Out] void** fragmentContext)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontFileStreamNative.ReleaseFileFragment_(System.IntPtr)">
            <summary>	
            Releases a fragment from a file.	
            </summary>	
            <param name="fragmentContext"><para>A reference to the client-defined context of a font fragment returned from ReadFileFragment.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFileStream::ReleaseFileFragment']/*"/>	
            <unmanaged>void IDWriteFontFileStream::ReleaseFileFragment([In] void* fragmentContext)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontFileStreamNative.GetFileSize_(System.Int64@)">
            <summary>	
            Obtains the total size of a file.	
            </summary>	
            <param name="fileSize"><para>When this method returns, contains the total size of the file.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            Implementing GetFileSize() for asynchronously loaded font files may require downloading the complete file contents. Therefore, this method should be used only for operations that either require a complete font file to be loaded (for example, copying a font file) or that need to make decisions based on the value of the file size (for example, validation against a persisted file size).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFileStream::GetFileSize']/*"/>	
            <unmanaged>HRESULT IDWriteFontFileStream::GetFileSize([Out] unsigned longlong* fileSize)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontFileStreamNative.GetLastWriteTime_(System.Int64@)">
            <summary>	
            Obtains the last modified time of the file.	
            </summary>	
            <param name="lastWriteTime"><para>When this method returns, contains  the last modified time of the file in the format that represents the number of 100-nanosecond intervals since January 1, 1601 (UTC).</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The "last modified time" is used by DirectWrite font selection algorithms to determine whether one font resource is more up to date than another one.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFileStream::GetLastWriteTime']/*"/>	
            <unmanaged>HRESULT IDWriteFontFileStream::GetLastWriteTime([Out] unsigned longlong* lastWriteTime)</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.GdiInterop">
            <summary>	
            Provides interoperability with GDI, such as methods to convert a font face to a <see cref="T:SharpDX.Win32Native.LogFont"/> structure, or to convert a GDI font description into a font face. It is also used to create bitmap render target objects.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteGdiInterop']/*"/>	
            <unmanaged>IDWriteGdiInterop</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.GdiInterop.FromLogFont(System.Object)">
            <summary>	
            Creates a font object that matches the properties specified by the LOGFONT structure. 	
            </summary>	
            <param name="logFont">A structure containing a GDI-compatible font description. </param>
            <returns>a  reference to a newly created <see cref="T:SharpDX.DirectWrite.Font"/>. </returns>
            <unmanaged>HRESULT IDWriteGdiInterop::CreateFontFromLOGFONT([In] const LOGFONTW* logFont,[Out] IDWriteFont** font)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.GdiInterop.ToLogFont(SharpDX.DirectWrite.Font,System.Object)">
            <summary>	
            Initializes a LOGFONT structure based on the GDI-compatible properties of the specified font. 	
            </summary>	
            <remarks>	
            The conversion to a  LOGFONT by using ConvertFontToLOGFONT operates at the logical font level and does not guarantee that it will map to a specific physical font. It is not guaranteed that GDI will select the same physical font for displaying  text formatted by a LOGFONT as the <see cref="T:SharpDX.DirectWrite.Font"/> object that was converted. 	
            </remarks>	
            <param name="font">An <see cref="T:SharpDX.DirectWrite.Font"/> object to be converted into a GDI-compatible LOGFONT structure. </param>
            <param name="logFont">When this method returns, contains a structure that receives a GDI-compatible font description. </param>
            <returns> TRUE if the specified font object is part of the system font collection; otherwise, FALSE. </returns>
            <unmanaged>HRESULT IDWriteGdiInterop::ConvertFontToLOGFONT([None] IDWriteFont* font,[In] LOGFONTW* logFont,[Out] BOOL* isSystemFont)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.GdiInterop.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.DirectWrite.GdiInterop"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.DirectWrite.GdiInterop.CreateFontFromLOGFONT(System.IntPtr,SharpDX.DirectWrite.Font@)">
            <summary>	
            Creates a font object that matches the properties specified by the <see cref="T:SharpDX.Win32Native.LogFont"/> structure.	
            </summary>	
            <param name="logFont"><para>A structure containing a GDI-compatible font description.</para></param>	
            <param name="font"><para>When this method returns, contains an address of a  reference to a newly created <see cref="T:SharpDX.DirectWrite.Font"/> object if successful; otherwise, <c>null</c>.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteGdiInterop::CreateFontFromLOGFONT']/*"/>	
            <unmanaged>HRESULT IDWriteGdiInterop::CreateFontFromLOGFONT([In] const void* logFont,[Out] IDWriteFont** font)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.GdiInterop.ConvertFontToLOGFONT(SharpDX.DirectWrite.Font,System.IntPtr,System.Boolean@)">
            <summary>	
            Initializes a <see cref="T:SharpDX.Win32Native.LogFont"/> structure based on the GDI-compatible properties of the specified font.	
            </summary>	
            <param name="font"><para>An <see cref="T:SharpDX.DirectWrite.Font"/> object to be converted into a GDI-compatible <see cref="T:SharpDX.Win32Native.LogFont"/> structure.</para></param>	
            <param name="logFont"><para>When this method returns, contains a structure that receives a GDI-compatible font description.</para></param>	
            <param name="isSystemFont"><para>When this method returns, contains TRUE if the specified font object is part of the system font collection; otherwise, <see cref="F:SharpDX.Result.False"/>.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The conversion to a  <see cref="T:SharpDX.Win32Native.LogFont"/> by using ConvertFontToLOGFONT operates at the logical font level and does not guarantee that it will map to a specific physical font. It is not guaranteed that GDI will select the same physical font for displaying  text formatted by a <see cref="T:SharpDX.Win32Native.LogFont"/> as the <see cref="T:SharpDX.DirectWrite.Font"/> object that was converted.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteGdiInterop::ConvertFontToLOGFONT']/*"/>	
            <unmanaged>HRESULT IDWriteGdiInterop::ConvertFontToLOGFONT([In] IDWriteFont* font,[In] void* logFont,[Out] BOOL* isSystemFont)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.GdiInterop.ConvertFontFaceToLOGFONT(SharpDX.DirectWrite.FontFace,System.IntPtr)">
            <summary>	
            Initializes a <see cref="T:SharpDX.Win32Native.LogFont"/> structure based on the GDI-compatible properties of the specified font.	
            </summary>	
            <param name="font"><para>An <see cref="T:SharpDX.DirectWrite.FontFace"/> object to be converted into a GDI-compatible <see cref="T:SharpDX.Win32Native.LogFont"/> structure.</para></param>	
            <param name="logFont"><para>When this method returns, contains a reference to a structure that receives a GDI-compatible font description.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The conversion to a  <see cref="T:SharpDX.Win32Native.LogFont"/> by using ConvertFontFaceToLOGFONT operates at the logical font level and does not guarantee that it will map to a specific physical font. It is not guaranteed that GDI will select the same physical font for displaying  text formatted by a <see cref="T:SharpDX.Win32Native.LogFont"/> as the <see cref="T:SharpDX.DirectWrite.Font"/> object that was converted.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteGdiInterop::ConvertFontFaceToLOGFONT']/*"/>	
            <unmanaged>HRESULT IDWriteGdiInterop::ConvertFontFaceToLOGFONT([In] IDWriteFontFace* font,[In] void* logFont)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.GdiInterop.CreateFontFaceFromHdc(System.IntPtr)">
            <summary>	
            Creates an <see cref="T:SharpDX.DirectWrite.FontFace"/> object that corresponds to the currently selected HFONT of the specified <see cref="T:System.IntPtr"/>.	
            </summary>	
            <param name="hdc"><para>A handle to a device context into which a font has been selected. It is assumed that the client has already performed font mapping and that the font selected into the device context is the actual font to be used  for rendering glyphs.</para></param>	
            <returns><para>Contains an address of a reference to  the newly created font face object, or <c>null</c> in case of failure. The font face returned is guaranteed to reference the same physical typeface that would be used for drawing glyphs (but not necessarily characters) using ExtTextOut.</para></returns>	
            <remarks>	
            This function is intended for scenarios in which an application wants to use GDI and Uniscribe 1.x for text layout and shaping, but  DirectWrite for final rendering. This function assumes the client is performing text output using glyph indexes.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteGdiInterop::CreateFontFaceFromHdc']/*"/>	
            <unmanaged>HRESULT IDWriteGdiInterop::CreateFontFaceFromHdc([In] HDC hdc,[Out] IDWriteFontFace** fontFace)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.GdiInterop.CreateBitmapRenderTarget(System.IntPtr,System.Int32,System.Int32)">
            <summary>	
            Creates an object that encapsulates a bitmap and memory DC (device context) which can be used for rendering glyphs.	
            </summary>	
            <param name="hdc"><para>A handle to the optional device context used to create a compatible memory DC (device context).</para></param>	
            <param name="width"><para>The width of the bitmap render target.</para></param>	
            <param name="height"><para>The height of the bitmap render target.</para></param>	
            <returns><para>When this method returns, contains an address of a reference to the newly created <see cref="T:SharpDX.DirectWrite.BitmapRenderTarget"/> object.</para></returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteGdiInterop::CreateBitmapRenderTarget']/*"/>	
            <unmanaged>HRESULT IDWriteGdiInterop::CreateBitmapRenderTarget([In, Optional] HDC hdc,[In] unsigned int width,[In] unsigned int height,[Out] IDWriteBitmapRenderTarget** renderTarget)</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.GlyphRun">
            <summary>	
            Contains the information needed by renderers to draw glyph runs.  All coordinates are in device independent pixels (DIPs).	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_GLYPH_RUN']/*"/>	
            <unmanaged>DWRITE_GLYPH_RUN</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.GlyphRun.FontFacePointer">
            <summary>	
            <para>The physical font face object to draw with.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_GLYPH_RUN::fontFace']/*"/>	
            <unmanaged>IDWriteFontFace* fontFace</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.GlyphRun.FontSize">
            <summary>	
            <para>The logical size of the font in DIPs (equals 1/96 inch), not points.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_GLYPH_RUN::fontEmSize']/*"/>	
            <unmanaged>float fontEmSize</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.GlyphRun.GlyphCount">
            <summary>	
            <para>The number of glyphs in the glyph run.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_GLYPH_RUN::glyphCount']/*"/>	
            <unmanaged>unsigned int glyphCount</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.GlyphRun.GlyphIndicesPointer">
            <summary>	
            <para>A reference to an array of indices to render for the glyph run.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_GLYPH_RUN::glyphIndices']/*"/>	
            <unmanaged>const unsigned short* glyphIndices</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.GlyphRun.GlyphAdvancesPointer">
            <summary>	
            <para>A reference to an array containing glyph advance widths for the glyph run.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_GLYPH_RUN::glyphAdvances']/*"/>	
            <unmanaged>const float* glyphAdvances</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.GlyphRun.GlyphOffsetsPointer">
            <summary>	
            <para>A reference to an array containing glyph offsets for the glyph run.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_GLYPH_RUN::glyphOffsets']/*"/>	
            <unmanaged>const DWRITE_GLYPH_OFFSET* glyphOffsets</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.GlyphRun.BidiLevel">
            <summary>	
            <para>The implicit resolved bidi level of the run. Odd levels indicate right-to-left languages like Hebrew and Arabic, while even levels indicate left-to-right languages like English and Japanese (when written horizontally). For right-to-left languages, the text origin is on the right, and text should be drawn to the left.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_GLYPH_RUN::bidiLevel']/*"/>	
            <unmanaged>unsigned int bidiLevel</unmanaged>	
        </member>
        <member name="P:SharpDX.DirectWrite.GlyphRun.FontFace">
            <summary>
            Gets or sets the <see cref="P:SharpDX.DirectWrite.GlyphRun.FontFace"/> associated with this GlypRun.
            </summary>
            <value>The font face.</value>
        </member>
        <member name="P:SharpDX.DirectWrite.GlyphRun.Indices">
            <summary>
            An array of glyph indices. This array contains <see cref="F:SharpDX.DirectWrite.GlyphRun.GlyphCount"/> elements.
            </summary>
        </member>
        <member name="P:SharpDX.DirectWrite.GlyphRun.Advances">
            <summary>
            An optional array of glyph advances. This array could be null or contains <see cref="F:SharpDX.DirectWrite.GlyphRun.GlyphCount"/> elements.
            </summary>
        </member>
        <member name="P:SharpDX.DirectWrite.GlyphRun.Offsets">
            <summary>
            An optional array of glyph offsets. This array could be null or contains <see cref="F:SharpDX.DirectWrite.GlyphRun.GlyphCount"/> elements.
            </summary>
        </member>
        <member name="P:SharpDX.DirectWrite.GlyphRun.IsSideways">
            <summary>	
            <para>If true, specifies that glyphs are rotated 90 degrees to the left and vertical metrics are used. Vertical writing is achieved by specifying isSideways = true and rotating the entire run 90 degrees to the right via a rotate transform.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_GLYPH_RUN::isSideways']/*"/>	
            <unmanaged>BOOL isSideways</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.GlyphRunAnalysis">
            <summary>	
            Contains low-level information used to render a glyph run.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteGlyphRunAnalysis']/*"/>	
            <unmanaged>IDWriteGlyphRunAnalysis</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.GlyphRunAnalysis.#ctor(SharpDX.DirectWrite.Factory,SharpDX.DirectWrite.GlyphRun,System.Single,SharpDX.DirectWrite.RenderingMode,SharpDX.Direct2D1.MeasuringMode,System.Single,System.Single)">
            <summary>
            Creates a glyph run analysis object, which encapsulates information used to render a glyph run.
            </summary>
            <param name="factory">The factory.</param>
            <param name="glyphRun">A structure that contains the properties of the glyph run (font face, advances, and so on).</param>
            <param name="pixelsPerDip">Number of physical pixels per DIP (device independent pixel). For example, if rendering onto a 96 DPI bitmap then pixelsPerDip is 1. If rendering onto a 120 DPI bitmap then pixelsPerDip is 1.25.</param>
            <param name="renderingMode">A value that specifies the rendering mode, which must be one of the raster rendering modes (that is, not default and not outline).</param>
            <param name="measuringMode">Specifies the measuring mode to use with glyphs.</param>
            <param name="baselineOriginX">The horizontal position (X-coordinate) of the baseline origin, in DIPs.</param>
            <param name="baselineOriginY">Vertical position (Y-coordinate) of the baseline origin, in DIPs.</param>
            <remarks>
            The glyph run analysis object contains the results of analyzing the glyph run, including the positions of all the glyphs and references to all of the rasterized glyphs in the font cache.
            </remarks>
            <unmanaged>HRESULT IDWriteFactory::CreateGlyphRunAnalysis([In] const DWRITE_GLYPH_RUN* glyphRun,[None] float pixelsPerDip,[In, Optional] const DWRITE_MATRIX* transform,[None] DWRITE_RENDERING_MODE renderingMode,[None] DWRITE_MEASURING_MODE measuringMode,[None] float baselineOriginX,[None] float baselineOriginY,[Out] IDWriteGlyphRunAnalysis** glyphRunAnalysis)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.GlyphRunAnalysis.#ctor(SharpDX.DirectWrite.Factory,SharpDX.DirectWrite.GlyphRun,System.Single,System.Nullable{SharpDX.DirectWrite.Matrix},SharpDX.DirectWrite.RenderingMode,SharpDX.Direct2D1.MeasuringMode,System.Single,System.Single)">
            <summary>
            Creates a glyph run analysis object, which encapsulates information used to render a glyph run.
            </summary>
            <param name="factory">The factory.</param>
            <param name="glyphRun">A structure that contains the properties of the glyph run (font face, advances, and so on).</param>
            <param name="pixelsPerDip">Number of physical pixels per DIP (device independent pixel). For example, if rendering onto a 96 DPI bitmap then pixelsPerDip is 1. If rendering onto a 120 DPI bitmap then pixelsPerDip is 1.25.</param>
            <param name="transform">Optional transform applied to the glyphs and their positions. This transform is applied after the scaling specified the emSize and pixelsPerDip.</param>
            <param name="renderingMode">A value that specifies the rendering mode, which must be one of the raster rendering modes (that is, not default and not outline).</param>
            <param name="measuringMode">Specifies the measuring mode to use with glyphs.</param>
            <param name="baselineOriginX">The horizontal position (X-coordinate) of the baseline origin, in DIPs.</param>
            <param name="baselineOriginY">Vertical position (Y-coordinate) of the baseline origin, in DIPs.</param>
            <remarks>
            The glyph run analysis object contains the results of analyzing the glyph run, including the positions of all the glyphs and references to all of the rasterized glyphs in the font cache.
            </remarks>
            <unmanaged>HRESULT IDWriteFactory::CreateGlyphRunAnalysis([In] const DWRITE_GLYPH_RUN* glyphRun,[None] float pixelsPerDip,[In, Optional] const DWRITE_MATRIX* transform,[None] DWRITE_RENDERING_MODE renderingMode,[None] DWRITE_MEASURING_MODE measuringMode,[None] float baselineOriginX,[None] float baselineOriginY,[Out] IDWriteGlyphRunAnalysis** glyphRunAnalysis)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.GlyphRunAnalysis.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.DirectWrite.GlyphRunAnalysis"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.DirectWrite.GlyphRunAnalysis.GetAlphaTextureBounds(SharpDX.DirectWrite.TextureType)">
            <summary>	
            Gets the bounding rectangle of the physical pixels affected by the glyph run.	
            </summary>	
            <param name="textureType"><para>Specifies the type of texture requested. If a bi-level texture is requested, the bounding rectangle includes only bi-level glyphs. Otherwise, the bounding rectangle includes only antialiased glyphs.</para></param>	
            <returns><para>When this method returns, contains the bounding rectangle of the physical pixels affected by the glyph run, or an empty rectangle if there are no glyphs of the specified texture type.</para></returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteGlyphRunAnalysis::GetAlphaTextureBounds']/*"/>	
            <unmanaged>HRESULT IDWriteGlyphRunAnalysis::GetAlphaTextureBounds([In] DWRITE_TEXTURE_TYPE textureType,[Out] RECT* textureBounds)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.GlyphRunAnalysis.CreateAlphaTexture(SharpDX.DirectWrite.TextureType,SharpDX.Rectangle,System.Byte[],System.Int32)">
            <summary>	
            Creates an alpha texture of the specified type for glyphs within a specified bounding rectangle.	
            </summary>	
            <param name="textureType"><para>A value that specifies the type of texture requested. This can be DWRITE_TEXTURE_BILEVEL_1x1 or <see cref="F:SharpDX.DirectWrite.TextureType.Cleartype3x1"/>. If a bi-level texture is requested, the texture contains only bi-level glyphs. Otherwise, the texture contains only antialiased glyphs.</para></param>	
            <param name="textureBounds"><para>The bounding rectangle of the texture, which can be different than the bounding rectangle returned by GetAlphaTextureBounds.</para></param>	
            <param name="alphaValues"><para>When this method returns, contains  the array of alpha values from the texture. The buffer allocated for this array must be at least the size of bufferSize.</para></param>	
            <param name="bufferSize"><para>The size of the alphaValues array, in bytes. The minimum size depends on the dimensions of the rectangle and the type of texture requested.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteGlyphRunAnalysis::CreateAlphaTexture']/*"/>	
            <unmanaged>HRESULT IDWriteGlyphRunAnalysis::CreateAlphaTexture([In] DWRITE_TEXTURE_TYPE textureType,[In] const RECT* textureBounds,[Out, Buffer] unsigned char* alphaValues,[In] unsigned int bufferSize)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.GlyphRunAnalysis.GetAlphaBlendParams(SharpDX.DirectWrite.RenderingParams,System.Single@,System.Single@,System.Single@)">
            <summary>	
            Gets alpha blending properties required for ClearType blending.	
            </summary>	
            <param name="renderingParams"><para>An object that specifies the ClearType level and enhanced contrast, gamma, pixel geometry, and rendering mode. In most cases, the values returned by the output parameters of this method are based on the properties of this object, unless a GDI-compatible rendering mode was specified.</para></param>	
            <param name="blendGamma"><para>When this method returns, contains  the gamma value to use for gamma correction.</para></param>	
            <param name="blendEnhancedContrast"><para>When this method returns, contains the enhanced contrast value to be used for blending.</para></param>	
            <param name="blendClearTypeLevel"><para>When this method returns, contains  the ClearType level used in the alpha blending.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteGlyphRunAnalysis::GetAlphaBlendParams']/*"/>	
            <unmanaged>HRESULT IDWriteGlyphRunAnalysis::GetAlphaBlendParams([In] IDWriteRenderingParams* renderingParams,[Out] float* blendGamma,[Out] float* blendEnhancedContrast,[Out] float* blendClearTypeLevel)</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.GlyphRunDescription">
            <summary>	
            Contains additional properties related to those in <see cref="T:SharpDX.DirectWrite.GlyphRun"/>.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_GLYPH_RUN_DESCRIPTION']/*"/>	
            <unmanaged>DWRITE_GLYPH_RUN_DESCRIPTION</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.GlyphRunDescription.LocaleName">
            <summary>	
            <para>An array of characters containing the locale name associated with this run.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_GLYPH_RUN_DESCRIPTION::localeName']/*"/>	
            <unmanaged>const wchar_t* localeName</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.GlyphRunDescription.Text">
            <summary>	
            <para>An array of characters containing the text associated with the glyphs.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_GLYPH_RUN_DESCRIPTION::string']/*"/>	
            <unmanaged>const wchar_t* string</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.GlyphRunDescription.TextLength">
            <summary>	
            <para>The number of characters in UTF16 code-units. Note that this may be different than the number of glyphs.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_GLYPH_RUN_DESCRIPTION::stringLength']/*"/>	
            <unmanaged>unsigned int stringLength</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.GlyphRunDescription.ClusterMap">
            <summary>	
            <para>An array of indices to the glyph indices array, of the first glyphs of all the glyph clusters of the glyphs to render.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_GLYPH_RUN_DESCRIPTION::clusterMap']/*"/>	
            <unmanaged>const unsigned short* clusterMap</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.GlyphRunDescription.TextPosition">
            <summary>	
            <para>Corresponding text position in the string this glyph run came from.  This is relative to the beginning of the string represented by the <see cref="T:SharpDX.DirectWrite.TextLayout"/> object.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_GLYPH_RUN_DESCRIPTION::textPosition']/*"/>	
            <unmanaged>unsigned int textPosition</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.GlyphRunItem">
            <summary>
            A <see cref="T:SharpDX.DirectWrite.GlyphRunItem"/> Item.
            </summary>
        </member>
        <member name="F:SharpDX.DirectWrite.GlyphRunItem.Index">
            <summary>
            A glyph index
            </summary>
        </member>
        <member name="F:SharpDX.DirectWrite.GlyphRunItem.Advance">
            <summary>
            A glyph advance
            </summary>
        </member>
        <member name="F:SharpDX.DirectWrite.GlyphRunItem.Offset">
            <summary>
            A glyph offset
            </summary>
        </member>
        <member name="T:SharpDX.DirectWrite.InlineObjectShadow">
            <summary>
            Internal InlineObject Callback
            </summary>
        </member>
        <member name="M:SharpDX.DirectWrite.InlineObjectShadow.ToIntPtr(SharpDX.DirectWrite.InlineObject)">
            <summary>
            Return a pointer to the unamanged version of this callback.
            </summary>
            <param name="callback">The callback.</param>
            <returns>A pointer to a shadow c++ callback</returns>
        </member>
        <member name="T:SharpDX.DirectWrite.InlineObjectShadow.InlineObjectVtbl.DrawDelegate">
            <unmanaged>HRESULT IDWriteInlineObject::Draw([None] void* clientDrawingContext,[None] IDWriteTextRenderer* renderer,[None] float originX,[None] float originY,[None] BOOL isSideways,[None] BOOL isRightToLeft,[None] IUnknown* clientDrawingEffect)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.InlineObjectShadow.InlineObjectVtbl.GetMetricsDelegate">
            <unmanaged>HRESULT IDWriteInlineObject::GetMetrics([Out] DWRITE_INLINE_OBJECT_METRICS* metrics)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.InlineObjectShadow.InlineObjectVtbl.GetOverhangMetricsDelegate">
            <unmanaged>HRESULT IDWriteInlineObject::GetOverhangMetrics([Out] DWRITE_OVERHANG_METRICS* overhangs)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.InlineObjectShadow.InlineObjectVtbl.GetBreakConditionsDelegate">
            <unmanaged>HRESULT IDWriteInlineObject::GetBreakConditions([Out] DWRITE_BREAK_CONDITION* breakConditionBefore,[Out] DWRITE_BREAK_CONDITION* breakConditionAfter)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.LineBreakpoint">
            <summary>	
            Line breakpoint characteristics of a character.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_LINE_BREAKPOINT']/*"/>	
            <unmanaged>DWRITE_LINE_BREAKPOINT</unmanaged>	
        </member>
        <member name="P:SharpDX.DirectWrite.LineBreakpoint.BreakConditionBefore">
            <summary>	
            Indicates a breaking condition before the character. 	
            </summary>	
            <unmanaged>byte breakConditionBefore</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.LineBreakpoint.BreakConditionAfter">
            <summary>	
            Indicates a breaking condition after the character. 	
            </summary>	
            <unmanaged>byte breakConditionAfter</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.LineBreakpoint.BreakConditionBefore_">
            <summary>	
            <para>Indicates a breaking condition before the character.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_LINE_BREAKPOINT::breakConditionBefore']/*"/>	
            <unmanaged>unsigned char breakConditionBefore</unmanaged>	
        </member>
        <member name="P:SharpDX.DirectWrite.LineBreakpoint.BreakConditionAfter_">
            <summary>	
            <para>Indicates a breaking condition after the character.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_LINE_BREAKPOINT::breakConditionAfter']/*"/>	
            <unmanaged>unsigned char breakConditionAfter</unmanaged>	
        </member>
        <member name="P:SharpDX.DirectWrite.LineBreakpoint.IsWhitespace">
            <summary>	
            <para>Indicates that the character is some form of whitespace, which may be meaningful for justification.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_LINE_BREAKPOINT::isWhitespace']/*"/>	
            <unmanaged>unsigned char isWhitespace</unmanaged>	
        </member>
        <member name="P:SharpDX.DirectWrite.LineBreakpoint.IsSoftHyphen">
            <summary>	
            <para>Indicates that the character is a soft hyphen, often used to indicate hyphenation points inside words.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_LINE_BREAKPOINT::isSoftHyphen']/*"/>	
            <unmanaged>unsigned char isSoftHyphen</unmanaged>	
        </member>
        <member name="P:SharpDX.DirectWrite.LineBreakpoint.Padding">
            <summary>	
            <para>Reserved for future use.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_LINE_BREAKPOINT::padding']/*"/>	
            <unmanaged>unsigned char padding</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.LocalizedStrings">
            <summary>	
            Represents a collection of strings indexed by locale name.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteLocalizedStrings']/*"/>	
            <unmanaged>IDWriteLocalizedStrings</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.LocalizedStrings.GetLocaleName(System.Int32)">
            <summary>	
            Get the locale name from the language.	
            </summary>	
            <param name="index">Zero-based index of the locale name to be retrieved. </param>
            <returns>The locale name from the language </returns>
            <unmanaged>HRESULT IDWriteLocalizedStrings::GetLocaleName([None] int index,[Out, Buffer] wchar_t* localeName,[None] int size)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.LocalizedStrings.GetString(System.Int32)">
            <summary>	
            Get the string from the language/string pair.
            </summary>	
            <param name="index">Zero-based index of the string from the language/string pair to be retrieved. </param>
            <returns>The locale name from the language </returns>
            <unmanaged>HRESULT IDWriteLocalizedStrings::GetLocaleName([None] int index,[Out, Buffer] wchar_t* localeName,[None] int size)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.LocalizedStrings.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.DirectWrite.LocalizedStrings"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.DirectWrite.LocalizedStrings.GetCount">
            <summary>	
            Gets the number of language/string pairs.	
            </summary>	
            <returns>The number of language/string pairs.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteLocalizedStrings::GetCount']/*"/>	
            <unmanaged>unsigned int IDWriteLocalizedStrings::GetCount()</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.LocalizedStrings.FindLocaleName(System.String,System.Int32@)">
            <summary>	
            Gets the zero-based index of the locale name/string pair with the specified locale name.	
            </summary>	
            <param name="localeName"><para>A null-terminated array of characters containing the locale name to look for.</para></param>	
            <param name="index"><para>The zero-based index of the locale name/string pair. This method initializes index to UINT_MAX.</para></param>	
            <returns><para>When this method returns, contains TRUE if the locale name exists; otherwise, <see cref="F:SharpDX.Result.False"/>. This method initializes exists to <see cref="F:SharpDX.Result.False"/>.</para></returns>	
            <remarks>	
            Note that if the locale name does not exist, the return value is a success and the exists parameter is <see cref="F:SharpDX.Result.False"/>. If you are getting the font family name for a font and the specified locale name does not exist, one option is to set the index to 0 as shown below.  There is always at least one locale for a font family.<code>	
            UINT32 index = 0;	
            <see cref="T:System.Boolean"/> exists = false; wchar_t localeName[LOCALE_NAME_MAX_LENGTH]; if (SUCCEEDED(hr))	
            { // Get the default locale for this user. int defaultLocaleSuccess = GetUserDefaultLocaleName(localeName, LOCALE_NAME_MAX_LENGTH); // If the default locale is returned, find that locale name, otherwise use "en-us". if (defaultLocaleSuccess) { hr = pFamilyNames-&gt;FindLocaleName(localeName, &amp;index, &amp;exists); } if (SUCCEEDED(hr) &amp;&amp; !exists) // if the above find did not find a match, retry with US English { hr = pFamilyNames-&gt;FindLocaleName(L"en-us", &amp;index, &amp;exists); }	
            } // If the specified locale doesn't exist, select the first on the list.	
            if (!exists) index = 0;	
            	
            </code>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteLocalizedStrings::FindLocaleName']/*"/>	
            <unmanaged>HRESULT IDWriteLocalizedStrings::FindLocaleName([In] const wchar_t* localeName,[Out] unsigned int* index,[Out] BOOL* exists)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.LocalizedStrings.GetLocaleNameLength(System.Int32,System.Int32@)">
            <summary>	
            Gets the length in characters (not including the null terminator) of the locale name with the specified index.	
            </summary>	
            <param name="index"><para>Zero-based index of the locale name to be retrieved.</para></param>	
            <param name="length"><para>When this method returns, contains the length in characters of the locale name, not including the null terminator.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteLocalizedStrings::GetLocaleNameLength']/*"/>	
            <unmanaged>HRESULT IDWriteLocalizedStrings::GetLocaleNameLength([In] unsigned int index,[Out] unsigned int* length)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.LocalizedStrings.GetLocaleName(System.Int32,System.IntPtr,System.Int32)">
            <summary>	
            Copies the locale name with the specified index to the specified array.	
            </summary>	
            <param name="index"><para>Zero-based index of the locale name to be retrieved.</para></param>	
            <param name="localeName"><para>When this method returns, contains a character array, which is null-terminated, that receives the locale name from the language/string pair.  The buffer allocated for this array must be at least the size of size, in element count.</para></param>	
            <param name="size"><para>The size of the array in characters. The size must include space for the terminating null character.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteLocalizedStrings::GetLocaleName']/*"/>	
            <unmanaged>HRESULT IDWriteLocalizedStrings::GetLocaleName([In] unsigned int index,[Out, Buffer] wchar_t* localeName,[In] unsigned int size)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.LocalizedStrings.GetStringLength(System.Int32,System.Int32@)">
            <summary>	
            Gets the length in characters (not including the null terminator) of the string with the specified index.	
            </summary>	
            <param name="index"><para>A zero-based index of the language/string pair.</para></param>	
            <param name="length"><para>The length in characters of the string, not including the null terminator, from the language/string pair.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            Use GetStringLength to get the string length before calling the <see cref="M:SharpDX.DirectWrite.LocalizedStrings.GetString(System.Int32)"/> method, as shown in the following code.<code>	
            UINT32 length = 0; // Get the string length.	
            if (SUCCEEDED(hr))	
            { hr = pFamilyNames-&gt;GetStringLength(index, &amp;length);	
            } // Allocate a string big enough to hold the name.	
            wchar_t* name = new (std::nothrow) wchar_t[length+1];	
            if (name == <c>null</c>)	
            { hr = E_OUTOFMEMORY;	
            } // Get the family name.	
            if (SUCCEEDED(hr))	
            { hr = pFamilyNames-&gt;GetString(index, name, length+1);	
            }	
            	
            </code>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteLocalizedStrings::GetStringLength']/*"/>	
            <unmanaged>HRESULT IDWriteLocalizedStrings::GetStringLength([In] unsigned int index,[Out] unsigned int* length)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.LocalizedStrings.GetString(System.Int32,System.IntPtr,System.Int32)">
            <summary>	
            Copies the string with the specified index to the specified array.	
            </summary>	
            <param name="index"><para>The zero-based index of the language/string pair to be examined.</para></param>	
            <param name="stringBuffer"><para>The null terminated array of characters that receives the string from the language/string pair.  The buffer allocated for this array should be at least the size of size. GetStringLength can be used to get the size of the array before using this method.</para></param>	
            <param name="size"><para>The size of the array in characters. The size must include space for the terminating null character. GetStringLength can be used to get the size of the array before using this method.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The string returned must be allocated by the caller.  You can get the size of the string by using the GetStringLength method prior to calling GetString, as shown in the following example.<code>	
            UINT32 length = 0; // Get the string length.	
            if (SUCCEEDED(hr))	
            { hr = pFamilyNames-&gt;GetStringLength(index, &amp;length);	
            } // Allocate a string big enough to hold the name.	
            wchar_t* name = new (std::nothrow) wchar_t[length+1];	
            if (name == <c>null</c>)	
            { hr = E_OUTOFMEMORY;	
            } // Get the family name.	
            if (SUCCEEDED(hr))	
            { hr = pFamilyNames-&gt;GetString(index, name, length+1);	
            }	
            	
            </code>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteLocalizedStrings::GetString']/*"/>	
            <unmanaged>HRESULT IDWriteLocalizedStrings::GetString([In] unsigned int index,[Out, Buffer] wchar_t* stringBuffer,[In] unsigned int size)</unmanaged>	
        </member>
        <member name="P:SharpDX.DirectWrite.LocalizedStrings.Count">
            <summary>	
            Gets the number of language/string pairs.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteLocalizedStrings::GetCount']/*"/>	
            <unmanaged>GetCount</unmanaged>	
            <unmanaged>unsigned int IDWriteLocalizedStrings::GetCount()</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.NumberSubstitution">
            <summary>	
            Holds the appropriate digits and numeric punctuation for a specified locale.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteNumberSubstitution']/*"/>	
            <unmanaged>IDWriteNumberSubstitution</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.NumberSubstitution.#ctor(SharpDX.DirectWrite.Factory,SharpDX.DirectWrite.NumberSubstitutionMethod,System.String,System.Boolean)">
            <summary>	
            Creates a number substitution object using a locale name, substitution method, and an indicator  whether to ignore user overrides (use NLS defaults for the given culture instead). 	
            </summary>	
            <param name="factory">A reference to a DirectWrite factory <see cref="T:SharpDX.DirectWrite.Factory"/></param>
            <param name="substitutionMethod">A value that specifies how to apply number substitution on digits and related punctuation. </param>
            <param name="localeName">The name of the locale to be used in the numberSubstitution object. </param>
            <param name="ignoreUserOverride">A Boolean flag that indicates whether to ignore user overrides. </param>
            <unmanaged>HRESULT IDWriteFactory::CreateNumberSubstitution([In] DWRITE_NUMBER_SUBSTITUTION_METHOD substitutionMethod,[In] const wchar_t* localeName,[In] BOOL ignoreUserOverride,[Out] IDWriteNumberSubstitution** numberSubstitution)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.NumberSubstitution.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.DirectWrite.NumberSubstitution"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="T:SharpDX.DirectWrite.PixelSnapping">
            <summary>	
            Defines the pixel snapping properties such as pixels per DIP(device-independent pixel) and the current transform matrix of a text renderer.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWritePixelSnapping']/*"/>	
            <unmanaged>IDWritePixelSnapping</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.PixelSnapping.IsPixelSnappingDisabled(System.Object)">
            <summary>
            Determines whether pixel snapping is disabled. The recommended default is FALSE,
            unless doing animation that requires subpixel vertical placement.
            </summary>
            <param name="clientDrawingContext">The context passed to IDWriteTextLayout::Draw.</param>
            <returns>Receives TRUE if pixel snapping is disabled or FALSE if it not. </returns>
            <unmanaged>HRESULT IsPixelSnappingDisabled([None] void* clientDrawingContext,[Out] BOOL* isDisabled)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.PixelSnapping.GetCurrentTransform(System.Object)">
            <summary>	
             Gets a transform that maps abstract coordinates to DIPs. 	
            </summary>	
            <param name="clientDrawingContext">The drawing context passed to <see cref="M:SharpDX.DirectWrite.TextLayout.Draw_(System.IntPtr,System.IntPtr,System.Single,System.Single)"/>.</param>
            <returns>a structure which has transform information for  pixel snapping.</returns>
            <unmanaged>HRESULT GetCurrentTransform([None] void* clientDrawingContext,[Out] DWRITE_MATRIX* transform)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.PixelSnapping.GetPixelsPerDip(System.Object)">
            <summary>	
             Gets the number of physical pixels per DIP. 	
            </summary>	
            <remarks>	
             Because a DIP (device-independent pixel) is 1/96 inch,  the pixelsPerDip value is the number of logical pixels per inch divided by 96.	
            </remarks>	
            <param name="clientDrawingContext">The drawing context passed to <see cref="M:SharpDX.DirectWrite.TextLayout.Draw_(System.IntPtr,System.IntPtr,System.Single,System.Single)"/>.</param>
            <returns>the number of physical pixels per DIP</returns>
            <unmanaged>HRESULT GetPixelsPerDip([None] void* clientDrawingContext,[Out] FLOAT* pixelsPerDip)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.PixelSnappingShadow">
            <summary>
            Internal TessellationSink Callback
            </summary>
        </member>
        <member name="T:SharpDX.DirectWrite.PixelSnappingShadow.PixelSnappingVtbl.IsPixelSnappingDisabledDelegate">
            <summary>
            Determines whether pixel snapping is disabled. The recommended default is FALSE,
            unless doing animation that requires subpixel vertical placement.
            </summary>
            <param name="thisPtr">This pointer</param>
            <param name="clientDrawingContext">The context passed to IDWriteTextLayout::Draw.</param>
            <param name="isDisabled">Output disabled</param>
            <returns>Receives TRUE if pixel snapping is disabled or FALSE if it not. </returns>
            <unmanaged>HRESULT IsPixelSnappingDisabled([None] void* clientDrawingContext,[Out] BOOL* isDisabled)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.PixelSnappingShadow.PixelSnappingVtbl.GetCurrentTransformDelegate">
            <summary>	
             Gets a transform that maps abstract coordinates to DIPs. 	
            </summary>
            <param name="thisPtr">This pointer</param>
            <param name="clientDrawingContext">The drawing context passed to <see cref="M:SharpDX.DirectWrite.TextLayout.Draw_(System.IntPtr,System.IntPtr,System.Single,System.Single)"/>.</param>
            <param name="transform">Matrix transform</param>
            <returns>a structure which has transform information for  pixel snapping.</returns>
            <unmanaged>HRESULT GetCurrentTransform([None] void* clientDrawingContext,[Out] DWRITE_MATRIX* transform)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.PixelSnappingShadow.PixelSnappingVtbl.GetPixelsPerDipDelegate">
            <summary>	
             Gets the number of physical pixels per DIP. 	
            </summary>	
            <remarks>	
             Because a DIP (device-independent pixel) is 1/96 inch,  the pixelsPerDip value is the number of logical pixels per inch divided by 96.	
            </remarks>
            <param name="thisPtr">This pointer</param>
            <param name="clientDrawingContext">The drawing context passed to <see cref="M:SharpDX.DirectWrite.TextLayout.Draw_(System.IntPtr,System.IntPtr,System.Single,System.Single)"/>.</param>
            <param name="pixelPerDip">Dip</param>
            <returns>the number of physical pixels per DIP</returns>
            <unmanaged>HRESULT GetPixelsPerDip([None] void* clientDrawingContext,[Out] FLOAT* pixelsPerDip)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.RenderingParams">
            <summary>	
            Represents text rendering settings such as ClearType level, enhanced contrast, and gamma correction for glyph rasterization and filtering.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteRenderingParams']/*"/>	
            <unmanaged>IDWriteRenderingParams</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.RenderingParams.#ctor(SharpDX.DirectWrite.Factory)">
            <summary>	
            Creates a rendering parameters object with default settings for the primary monitor. Different monitors may have different rendering parameters, for more information see the {{How to Add Support for Multiple Monitors}} topic.	
            </summary>	
            <param name="factory">A reference to a DirectWrite factory <see cref="T:SharpDX.DirectWrite.Factory"/></param>
            <unmanaged>HRESULT IDWriteFactory::CreateRenderingParams([Out] IDWriteRenderingParams** renderingParams)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.RenderingParams.#ctor(SharpDX.DirectWrite.Factory,System.IntPtr)">
            <summary>	
            Creates a rendering parameters object with default settings for the specified monitor. In most cases, this is the preferred way to create a rendering parameters object.	
            </summary>	
            <param name="factory">A reference to a DirectWrite factory <see cref="T:SharpDX.DirectWrite.Factory"/></param>
            <param name="monitorHandle">A handle for the specified monitor. </param>
            <unmanaged>HRESULT IDWriteFactory::CreateMonitorRenderingParams([None] void* monitor,[Out] IDWriteRenderingParams** renderingParams)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.RenderingParams.#ctor(SharpDX.DirectWrite.Factory,System.Single,System.Single,System.Single,SharpDX.DirectWrite.PixelGeometry,SharpDX.DirectWrite.RenderingMode)">
            <summary>	
            Creates a rendering parameters object with the specified properties. 	
            </summary>	
            <param name="factory">A reference to a DirectWrite factory <see cref="T:SharpDX.DirectWrite.Factory"/></param>
            <param name="gamma">The gamma level to be set for the new rendering parameters object. </param>
            <param name="enhancedContrast">The enhanced contrast level to be set for the new rendering parameters object. </param>
            <param name="clearTypeLevel">The ClearType level to be set for the new rendering parameters object. </param>
            <param name="pixelGeometry">Represents the internal structure of a device pixel (that is, the physical arrangement of red, green, and blue color components) that is assumed for purposes of rendering text. </param>
            <param name="renderingMode">A value that represents the method (for example, ClearType natural quality) for rendering glyphs. </param>
            <unmanaged>HRESULT IDWriteFactory::CreateCustomRenderingParams([None] float gamma,[None] float enhancedContrast,[None] float clearTypeLevel,[None] DWRITE_PIXEL_GEOMETRY pixelGeometry,[None] DWRITE_RENDERING_MODE renderingMode,[Out] IDWriteRenderingParams** renderingParams)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.RenderingParams.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.DirectWrite.RenderingParams"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.DirectWrite.RenderingParams.GetGamma">
            <summary>	
            Gets the gamma value used for gamma correction. Valid values must be greater than zero and cannot exceed 256.	
            </summary>	
            <returns>Returns the gamma value used for gamma correction. Valid values must be greater than zero and cannot exceed 256.</returns>	
            <remarks>	
            The gamma value is used for gamma correction, which compensates for the non-linear luminosity response of most monitors.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteRenderingParams::GetGamma']/*"/>	
            <unmanaged>float IDWriteRenderingParams::GetGamma()</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.RenderingParams.GetEnhancedContrast">
            <summary>	
            Gets the enhanced contrast property of the rendering parameters object. Valid values are greater than or equal to zero.	
            </summary>	
            <returns>Returns the amount of contrast enhancement. Valid values are greater than or equal to zero.</returns>	
            <remarks>	
            Enhanced contrast is the amount to increase the darkness of text, and typically ranges from 0 to 1. Zero means no contrast enhancement.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteRenderingParams::GetEnhancedContrast']/*"/>	
            <unmanaged>float IDWriteRenderingParams::GetEnhancedContrast()</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.RenderingParams.GetClearTypeLevel">
            <summary>	
            Gets the ClearType level of the rendering parameters object.	
            </summary>	
            <returns>The ClearType level of the rendering parameters object.</returns>	
            <remarks>	
            The ClearType level represents the amount of ClearType ? that is, the degree to which the red, green, and blue subpixels of each pixel are treated differently. Valid values range from zero (meaning no ClearType, which is equivalent to grayscale anti-aliasing) to one (meaning full ClearType)	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteRenderingParams::GetClearTypeLevel']/*"/>	
            <unmanaged>float IDWriteRenderingParams::GetClearTypeLevel()</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.RenderingParams.GetPixelGeometry">
            <summary>	
            Gets the pixel geometry of the rendering parameters object.	
            </summary>	
            <returns>A value that indicates the type of  pixel geometry used in the rendering parameters object.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteRenderingParams::GetPixelGeometry']/*"/>	
            <unmanaged>DWRITE_PIXEL_GEOMETRY IDWriteRenderingParams::GetPixelGeometry()</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.RenderingParams.GetRenderingMode">
            <summary>	
            Gets the rendering mode of the rendering parameters object.	
            </summary>	
            <returns>A value that indicates the rendering mode of the rendering parameters object.</returns>	
            <remarks>	
            By default, the rendering mode is initialized to <see cref="F:SharpDX.DirectWrite.RenderingMode.Default"/>, which means the rendering mode is determined automatically based on the font and size. To determine the recommended rendering mode to use for a given font and size and rendering parameters object, use the <see cref="M:SharpDX.DirectWrite.FontFace.GetRecommendedRenderingMode(System.Single,System.Single,SharpDX.Direct2D1.MeasuringMode,SharpDX.DirectWrite.RenderingParams)"/> method.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteRenderingParams::GetRenderingMode']/*"/>	
            <unmanaged>DWRITE_RENDERING_MODE IDWriteRenderingParams::GetRenderingMode()</unmanaged>	
        </member>
        <member name="P:SharpDX.DirectWrite.RenderingParams.Gamma">
            <summary>	
            Gets the gamma value used for gamma correction. Valid values must be greater than zero and cannot exceed 256.	
            </summary>	
            <remarks>	
            The gamma value is used for gamma correction, which compensates for the non-linear luminosity response of most monitors.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteRenderingParams::GetGamma']/*"/>	
            <unmanaged>GetGamma</unmanaged>	
            <unmanaged>float IDWriteRenderingParams::GetGamma()</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.RenderingParams.EnhancedContrast">
            <summary>	
            Gets the enhanced contrast property of the rendering parameters object. Valid values are greater than or equal to zero.	
            </summary>	
            <remarks>	
            Enhanced contrast is the amount to increase the darkness of text, and typically ranges from 0 to 1. Zero means no contrast enhancement.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteRenderingParams::GetEnhancedContrast']/*"/>	
            <unmanaged>GetEnhancedContrast</unmanaged>	
            <unmanaged>float IDWriteRenderingParams::GetEnhancedContrast()</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.RenderingParams.ClearTypeLevel">
            <summary>	
            Gets the ClearType level of the rendering parameters object.	
            </summary>	
            <remarks>	
            The ClearType level represents the amount of ClearType ? that is, the degree to which the red, green, and blue subpixels of each pixel are treated differently. Valid values range from zero (meaning no ClearType, which is equivalent to grayscale anti-aliasing) to one (meaning full ClearType)	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteRenderingParams::GetClearTypeLevel']/*"/>	
            <unmanaged>GetClearTypeLevel</unmanaged>	
            <unmanaged>float IDWriteRenderingParams::GetClearTypeLevel()</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.RenderingParams.PixelGeometry">
            <summary>	
            Gets the pixel geometry of the rendering parameters object.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteRenderingParams::GetPixelGeometry']/*"/>	
            <unmanaged>GetPixelGeometry</unmanaged>	
            <unmanaged>DWRITE_PIXEL_GEOMETRY IDWriteRenderingParams::GetPixelGeometry()</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.RenderingParams.RenderingMode">
            <summary>	
            Gets the rendering mode of the rendering parameters object.	
            </summary>	
            <remarks>	
            By default, the rendering mode is initialized to <see cref="F:SharpDX.DirectWrite.RenderingMode.Default"/>, which means the rendering mode is determined automatically based on the font and size. To determine the recommended rendering mode to use for a given font and size and rendering parameters object, use the <see cref="M:SharpDX.DirectWrite.FontFace.GetRecommendedRenderingMode(System.Single,System.Single,SharpDX.Direct2D1.MeasuringMode,SharpDX.DirectWrite.RenderingParams)"/> method.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteRenderingParams::GetRenderingMode']/*"/>	
            <unmanaged>GetRenderingMode</unmanaged>	
            <unmanaged>DWRITE_RENDERING_MODE IDWriteRenderingParams::GetRenderingMode()</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.ScriptJustify">
            <summary>
            Defines glyph characteristic information that an application needs to implement justification.
            </summary>
        </member>
        <member name="F:SharpDX.DirectWrite.ScriptJustify.None">
            <summary>
            Justification cannot be applied at the glyph.
            </summary>
        </member>
        <member name="F:SharpDX.DirectWrite.ScriptJustify.ArabicBlank">
            <summary>
            The glyph represents a blank in an Arabic run.
            </summary>
        </member>
        <member name="F:SharpDX.DirectWrite.ScriptJustify.Character">
            <summary>
            An inter-character justification point follows the glyph.
            </summary>
        </member>
        <member name="F:SharpDX.DirectWrite.ScriptJustify.Blank">
            <summary>
            The glyph represents a blank outside an Arabic run.
            </summary>
        </member>
        <member name="F:SharpDX.DirectWrite.ScriptJustify.ArabicNormal">
            <summary>
            Normal middle-of-word glyph that connects to the right (begin).
            </summary>
        </member>
        <member name="F:SharpDX.DirectWrite.ScriptJustify.ArabicKashida">
            <summary>
            Kashida (U+0640) in the middle of the word.
            </summary>
        </member>
        <member name="F:SharpDX.DirectWrite.ScriptJustify.ArabicAlef">
            <summary>
            Final form of an alef-like (U+0627, U+0625, U+0623, U+0622).
            </summary>
        </member>
        <member name="F:SharpDX.DirectWrite.ScriptJustify.ArabicHa">
            <summary>
            Final form of Ha (U+0647).
            </summary>
        </member>
        <member name="F:SharpDX.DirectWrite.ScriptJustify.ArabicRa">
            <summary>
            Final form of Ra (U+0631).
            </summary>
        </member>
        <member name="F:SharpDX.DirectWrite.ScriptJustify.ArabicBa">
            <summary>
            Final form of Ba (U+0628).
            </summary>
        </member>
        <member name="F:SharpDX.DirectWrite.ScriptJustify.ArabicBaRa">
            <summary>
            Ligature of alike (U+0628,U+0631).
            </summary>
        </member>
        <member name="F:SharpDX.DirectWrite.ScriptJustify.ArabicSeen">
            <summary>
            Highest priority: initial shape of Seen class (U+0633).
            </summary>
        </member>
        <member name="F:SharpDX.DirectWrite.ScriptJustify.ArabicSeenMedial">
            <summary>
            Highest priority: medial shape of Seen class (U+0633).
            </summary>
        </member>
        <member name="T:SharpDX.DirectWrite.ShapingGlyphProperties">
            <summary>	
            Contains shaping output properties for an output glyph.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_SHAPING_GLYPH_PROPERTIES']/*"/>	
            <unmanaged>DWRITE_SHAPING_GLYPH_PROPERTIES</unmanaged>	
        </member>
        <member name="P:SharpDX.DirectWrite.ShapingGlyphProperties.Justification">
            <summary>	
            Indicates that the glyph has justification applied. 	
            </summary>	
            <unmanaged>short justification</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.ShapingGlyphProperties.Justification_">
            <summary>	
            <para>Indicates that the glyph has justification applied.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_SHAPING_GLYPH_PROPERTIES::justification']/*"/>	
            <unmanaged>unsigned short justification</unmanaged>	
        </member>
        <member name="P:SharpDX.DirectWrite.ShapingGlyphProperties.IsClusterStart">
            <summary>	
            <para>Indicates that the glyph is the start of a cluster.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_SHAPING_GLYPH_PROPERTIES::isClusterStart']/*"/>	
            <unmanaged>unsigned short isClusterStart</unmanaged>	
        </member>
        <member name="P:SharpDX.DirectWrite.ShapingGlyphProperties.IsDiacritic">
            <summary>	
            <para>Indicates that the glyph is a diacritic mark.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_SHAPING_GLYPH_PROPERTIES::isDiacritic']/*"/>	
            <unmanaged>unsigned short isDiacritic</unmanaged>	
        </member>
        <member name="P:SharpDX.DirectWrite.ShapingGlyphProperties.IsZeroWidthSpace">
            <summary>	
            <para>Indicates that the glyph is a word boundary with no visible space.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_SHAPING_GLYPH_PROPERTIES::isZeroWidthSpace']/*"/>	
            <unmanaged>unsigned short isZeroWidthSpace</unmanaged>	
        </member>
        <member name="P:SharpDX.DirectWrite.ShapingGlyphProperties.Reserved">
            <summary>	
            <para>Reserved for future use.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_SHAPING_GLYPH_PROPERTIES::reserved']/*"/>	
            <unmanaged>unsigned short reserved</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.TextAnalysisSink">
            <summary>	
            This interface is implemented by the text analyzer's client to receive the output of a given text analysis.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextAnalysisSink']/*"/>	
            <unmanaged>IDWriteTextAnalysisSink</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextAnalysisSink.SetScriptAnalysis(System.Int32,System.Int32,SharpDX.DirectWrite.ScriptAnalysis)">
            <summary>	
            Reports script analysis for the specified text range.	
            </summary>	
            <param name="textPosition">The starting position from which to report. </param>
            <param name="textLength">The number of UTF16 units of the reported range. </param>
            <param name="scriptAnalysis">A reference to a structure that contains a zero-based index representation of a writing system script and a value indicating whether additional shaping of text is required. </param>
            <returns>A successful code or error code to stop analysis. </returns>
            <unmanaged>HRESULT IDWriteTextAnalysisSink::SetScriptAnalysis([None] int textPosition,[None] int textLength,[In] const DWRITE_SCRIPT_ANALYSIS* scriptAnalysis)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextAnalysisSink.SetLineBreakpoints(System.Int32,System.Int32,SharpDX.DirectWrite.LineBreakpoint[])">
            <summary>	
            Sets line-break opportunities for each character, starting from the specified position.	
            </summary>	
            <param name="textPosition">The starting text position from which to report. </param>
            <param name="textLength">The number of UTF16 units of the reported range. </param>
            <param name="lineBreakpoints">A reference to a structure that contains breaking conditions set for each character from the starting position to the end of the specified range. </param>
            <returns>A successful code or error code to stop analysis. </returns>
            <unmanaged>HRESULT IDWriteTextAnalysisSink::SetLineBreakpoints([None] int textPosition,[None] int textLength,[In, Buffer] const DWRITE_LINE_BREAKPOINT* lineBreakpoints)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextAnalysisSink.SetBidiLevel(System.Int32,System.Int32,System.Byte,System.Byte)">
            <summary>	
            Sets a bidirectional level on the range, which is  called once per  run change (either explicit or resolved implicit).	
            </summary>	
            <param name="textPosition">The starting position from which to report. </param>
            <param name="textLength">The number of UTF16 units of the reported range. </param>
            <param name="explicitLevel">The explicit level from the paragraph reading direction and any embedded control codes RLE/RLO/LRE/LRO/PDF, which is determined before any additional rules. </param>
            <param name="resolvedLevel">The final implicit level considering the explicit level and characters' natural directionality, after all Bidi rules have been applied. </param>
            <returns>A successful code or error code to stop analysis. </returns>
            <unmanaged>HRESULT IDWriteTextAnalysisSink::SetBidiLevel([None] int textPosition,[None] int textLength,[None] int explicitLevel,[None] int resolvedLevel)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextAnalysisSink.SetNumberSubstitution(System.Int32,System.Int32,SharpDX.DirectWrite.NumberSubstitution)">
            <summary>	
            Sets the number substitution on the text range affected by the text analysis.	
            </summary>	
            <param name="textPosition">The starting position from which to report. </param>
            <param name="textLength">The number of UTF16 units of the reported range. </param>
            <param name="numberSubstitution">An object that holds the appropriate digits and numeric punctuation for a given locale. Use <see cref="M:SharpDX.DirectWrite.Factory.CreateNumberSubstitution(SharpDX.DirectWrite.NumberSubstitutionMethod,System.String,System.Boolean,SharpDX.DirectWrite.NumberSubstitution)"/> to create this object. </param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code. </returns>
            <unmanaged>HRESULT IDWriteTextAnalysisSink::SetNumberSubstitution([None] int textPosition,[None] int textLength,[None] IDWriteNumberSubstitution* numberSubstitution)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.TextAnalysisSinkShadow">
            <summary>
            Internal TextAnalysisSink Callback
            </summary>
        </member>
        <member name="M:SharpDX.DirectWrite.TextAnalysisSinkShadow.ToIntPtr(SharpDX.DirectWrite.TextAnalysisSink)">
            <summary>
            Return a pointer to the unamanged version of this callback.
            </summary>
            <param name="callback">The callback.</param>
            <returns>A pointer to a shadow c++ callback</returns>
        </member>
        <member name="T:SharpDX.DirectWrite.TextAnalysisSinkShadow.TextAnalysisSinkVtbl.SetScriptAnalysisDelegate">
            <unmanaged>HRESULT IDWriteTextAnalysisSink::SetScriptAnalysis([None] int textPosition,[None] int textLength,[In] const DWRITE_SCRIPT_ANALYSIS* scriptAnalysis)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.TextAnalysisSinkShadow.TextAnalysisSinkVtbl.SetLineBreakpointsDelegate">
            <unmanaged>HRESULT IDWriteTextAnalysisSink::SetLineBreakpoints([None] int textPosition,[None] int textLength,[In, Buffer] const DWRITE_LINE_BREAKPOINT* lineBreakpoints)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.TextAnalysisSinkShadow.TextAnalysisSinkVtbl.SetBidiLevelDelegate">
            <unmanaged>HRESULT IDWriteTextAnalysisSink::SetBidiLevel([None] int textPosition,[None] int textLength,[None] int explicitLevel,[None] int resolvedLevel)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.TextAnalysisSinkShadow.TextAnalysisSinkVtbl.SetNumberSubstitutionDelegate">
            <unmanaged>HRESULT IDWriteTextAnalysisSink::SetNumberSubstitution([None] int textPosition,[None] int textLength,[None] IDWriteNumberSubstitution* numberSubstitution)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.TextAnalysisSource">
            <summary>	
            Implemented by the text analyzer's client to provide text to the analyzer. It allows the separation between the logical view of text as a continuous stream of characters identifiable by unique text positions, and the actual memory layout of potentially discrete blocks of text in the client's backing store.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextAnalysisSource']/*"/>	
            <unmanaged>IDWriteTextAnalysisSource</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextAnalysisSource.GetTextAtPosition(System.Int32)">
            <summary>	
            Gets a block of text starting at the specified text position. 	
            </summary>	
            <remarks>	
            Returning NULL indicates the end of text, which is the position after the last character. This function is called iteratively for each consecutive block, tying together several fragmented blocks in the backing store into a virtual contiguous string. Although applications can implement sparse textual content that  maps only part of the backing store, the application must map any text that is in the range passed to any analysis functions. 	
            </remarks>	
            <param name="textPosition">The first position of the piece to obtain. All positions are in UTF16 code units, not whole characters, which matters when supplementary characters are used. </param>      
            <returns>a block of text </returns>
            <unmanaged>HRESULT IDWriteTextAnalysisSource::GetTextAtPosition([None] int textPosition,[Out] const wchar_t** textString,[Out] int* textLength)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextAnalysisSource.GetTextBeforePosition(System.Int32)">
            <summary>	
            Gets a block of text immediately preceding the specified position.	
            </summary>	
            <remarks>	
            NULL indicates no chunk available at the specified position, either because textPosition equals 0,  textPosition is greater than the entire text content length, or the queried position is not mapped into the application's backing store. Although applications can implement sparse textual content that  maps only part of the backing store, the application must map any text that is in the range passed to any analysis functions. 	
            </remarks>	
            <param name="textPosition">The position immediately after the last position of the block of text to obtain. </param>
            <returns>text immediately preceding the specified position </returns>
            <unmanaged>HRESULT IDWriteTextAnalysisSource::GetTextBeforePosition([None] int textPosition,[Out] const wchar_t** textString,[Out] int* textLength)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextAnalysisSource.GetLocaleName(System.Int32,System.Int32@)">
            <summary>
            Gets the locale name on the range affected by the text analysis.
            </summary>
            <param name="textPosition">The text position to examine.</param>
            <param name="textLength">Contains the length of the text being affected by the text analysis up to the next differing locale.</param>
            <returns>
            the locale name on the range affected by the text analysis
            </returns>
            <unmanaged>HRESULT IDWriteTextAnalysisSource::GetLocaleName([None] int textPosition,[Out] int* textLength,[Out] const wchar_t** localeName)</unmanaged>
            <remarks>
            The localeName reference must remain valid until the next call or until the analysis returns.
            </remarks>
        </member>
        <member name="M:SharpDX.DirectWrite.TextAnalysisSource.GetNumberSubstitution(System.Int32,System.Int32@)">
            <summary>	
            Gets the number substitution from the text range affected by the text analysis.	
            </summary>	
            <remarks>	
            Any implementation should return the number substitution with an incremented reference count, and the analysis will release when finished with it (either before the next call or before it returns). However, the sink callback may hold onto it after that. 	
            </remarks>	
            <param name="textPosition">The starting position from which to report. </param>
            <param name="textLength">Contains  the length of the text, in characters, remaining in the text range up to the next differing number substitution. </param>
            <returns>the number substitution from the text range affected by the text analysis.</returns>
            <unmanaged>HRESULT IDWriteTextAnalysisSource::GetNumberSubstitution([None] int textPosition,[Out] int* textLength,[Out] IDWriteNumberSubstitution** numberSubstitution)</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.TextAnalysisSource.ReadingDirection">
            <summary>	
            Gets the paragraph reading direction.	
            </summary>	
            <returns>The reading direction of the current paragraph. </returns>
            <unmanaged>DWRITE_READING_DIRECTION IDWriteTextAnalysisSource::GetParagraphReadingDirection()</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.TextAnalysisSourceShadow">
            <summary>
            Internal TextAnalysisSource Callback
            </summary>
        </member>
        <member name="M:SharpDX.DirectWrite.TextAnalysisSourceShadow.ToIntPtr(SharpDX.DirectWrite.TextAnalysisSource)">
            <summary>
            Return a pointer to the unamanged version of this callback.
            </summary>
            <param name="callback">The callback.</param>
            <returns>A pointer to a shadow c++ callback</returns>
        </member>
        <member name="T:SharpDX.DirectWrite.TextAnalysisSourceShadow.TextAnalysisSourceVtbl.GetTextAtPositionDelegate">
            <unmanaged>HRESULT IDWriteTextAnalysisSource::GetTextAtPosition([None] int textPosition,[Out] const wchar_t** textString,[Out] int* textLength)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.TextAnalysisSourceShadow.TextAnalysisSourceVtbl.GetTextBeforePositionDelegate">
            <unmanaged>HRESULT IDWriteTextAnalysisSource::GetTextBeforePosition([None] int textPosition,[Out] const wchar_t** textString,[Out] int* textLength)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.TextAnalysisSourceShadow.TextAnalysisSourceVtbl.GetParagraphReadingDirectionDelegate">
            <unmanaged>DWRITE_READING_DIRECTION IDWriteTextAnalysisSource::GetParagraphReadingDirection()</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.TextAnalysisSourceShadow.TextAnalysisSourceVtbl.GetLocaleNameDelegate">
            <unmanaged>HRESULT IDWriteTextAnalysisSource::GetLocaleName([None] int textPosition,[Out] int* textLength,[Out] const wchar_t** localeName)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.TextAnalysisSourceShadow.TextAnalysisSourceVtbl.GetNumberSubstitutionDelegate">
            <unmanaged>HRESULT IDWriteTextAnalysisSource::GetNumberSubstitution([None] int textPosition,[Out] int* textLength,[Out] IDWriteNumberSubstitution** numberSubstitution)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.TextAnalyzer">
            <summary>	
            Analyzes various text properties for complex script processing such as bidirectional (bidi) support for languages like Arabic, determination of line break opportunities, glyph placement, and number substitution.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextAnalyzer']/*"/>	
            <unmanaged>IDWriteTextAnalyzer</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextAnalyzer.#ctor(SharpDX.DirectWrite.Factory)">
            <summary>
            Returns an interface for performing text analysis.
            </summary>
            <param name="factory">A reference to a DirectWrite factory <see cref="T:SharpDX.DirectWrite.Factory"/></param>
            <unmanaged>HRESULT IDWriteFactory::CreateTextAnalyzer([Out] IDWriteTextAnalyzer** textAnalyzer)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextAnalyzer.AnalyzeScript(SharpDX.DirectWrite.TextAnalysisSource,System.Int32,System.Int32,SharpDX.DirectWrite.TextAnalysisSink)">
            <summary>
            Analyzes a text range for script boundaries, reading text attributes from the source and reporting the Unicode script ID to the sink  callback {{SetScript}}.
            </summary>
            <param name="analysisSource">A reference to the source object to analyze.</param>
            <param name="textPosition">The starting text position within the source object.</param>
            <param name="textLength">The text length to analyze.</param>
            <param name="analysisSink">A reference to the sink callback object that receives the text analysis.</param>
            <returns>
            If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.
            </returns>
            <unmanaged>HRESULT IDWriteTextAnalyzer::AnalyzeScript([None] IDWriteTextAnalysisSource* analysisSource,[None] int textPosition,[None] int textLength,[None] IDWriteTextAnalysisSink* analysisSink)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextAnalyzer.AnalyzeBidi(SharpDX.DirectWrite.TextAnalysisSource,System.Int32,System.Int32,SharpDX.DirectWrite.TextAnalysisSink)">
            <summary>
            Analyzes a text range for script directionality, reading attributes from the source and reporting levels to the sink callback {{SetBidiLevel}}.
            </summary>
            <param name="analysisSource">A reference to a source object to analyze.</param>
            <param name="textPosition">The starting text position within the source object.</param>
            <param name="textLength">The text length to analyze.</param>
            <param name="analysisSink">A reference to the sink callback object that receives the text analysis.</param>
            <returns>
            If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.
            </returns>
            <unmanaged>HRESULT IDWriteTextAnalyzer::AnalyzeBidi([None] IDWriteTextAnalysisSource* analysisSource,[None] int textPosition,[None] int textLength,[None] IDWriteTextAnalysisSink* analysisSink)</unmanaged>
            <remarks>
            While the function can handle multiple paragraphs, the text range should not arbitrarily split the middle of paragraphs. Otherwise, the returned levels may be wrong, because the Bidi algorithm is meant to apply to the paragraph as a whole.
            </remarks>
        </member>
        <member name="M:SharpDX.DirectWrite.TextAnalyzer.AnalyzeNumberSubstitution(SharpDX.DirectWrite.TextAnalysisSource,System.Int32,System.Int32,SharpDX.DirectWrite.TextAnalysisSink)">
            <summary>
            Analyzes a text range for spans where number substitution is applicable, reading attributes from the source and reporting substitutable ranges to the sink callback {{SetNumberSubstitution}}.
            </summary>
            <param name="analysisSource">The source object to analyze.</param>
            <param name="textPosition">The starting position within the source object.</param>
            <param name="textLength">The length to analyze.</param>
            <param name="analysisSink">A reference to the sink callback object that receives the text analysis.</param>
            <returns>
            If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.
            </returns>
            <unmanaged>HRESULT IDWriteTextAnalyzer::AnalyzeNumberSubstitution([None] IDWriteTextAnalysisSource* analysisSource,[None] int textPosition,[None] int textLength,[None] IDWriteTextAnalysisSink* analysisSink)</unmanaged>
            <remarks>
            Although the function can handle multiple ranges of differing number substitutions, the text ranges should not arbitrarily split the middle of numbers. Otherwise, it will treat the numbers separately and will not translate any intervening punctuation.
            </remarks>
        </member>
        <member name="M:SharpDX.DirectWrite.TextAnalyzer.AnalyzeLineBreakpoints(SharpDX.DirectWrite.TextAnalysisSource,System.Int32,System.Int32,SharpDX.DirectWrite.TextAnalysisSink)">
            <summary>
            Analyzes a text range for potential breakpoint opportunities, reading attributes from the source and reporting breakpoint opportunities to the sink callback {{SetLineBreakpoints}}.
            </summary>
            <param name="analysisSource">A reference to the source object to analyze.</param>
            <param name="textPosition">The starting text position within the source object.</param>
            <param name="textLength">The text length to analyze.</param>
            <param name="analysisSink">A reference to the  sink callback object that receives the text analysis.</param>
            <returns>
            If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.
            </returns>
            <unmanaged>HRESULT IDWriteTextAnalyzer::AnalyzeLineBreakpoints([None] IDWriteTextAnalysisSource* analysisSource,[None] int textPosition,[None] int textLength,[None] IDWriteTextAnalysisSink* analysisSink)</unmanaged>
            <remarks>
            Although the function can handle multiple paragraphs, the text range should not arbitrarily split the middle of paragraphs, unless the specified text span is considered a whole unit. Otherwise, the returned properties for the first and last characters will inappropriately allow breaks.
            </remarks>
        </member>
        <member name="M:SharpDX.DirectWrite.TextAnalyzer.GetGlyphs(System.String,System.Int32,SharpDX.DirectWrite.FontFace,System.Boolean,System.Boolean,SharpDX.DirectWrite.ScriptAnalysis,System.String,SharpDX.DirectWrite.NumberSubstitution,SharpDX.DirectWrite.FontFeature[][],System.Int32[],System.Int32,System.Int16[],SharpDX.DirectWrite.ShapingTextProperties[],System.Int16[],SharpDX.DirectWrite.ShapingGlyphProperties[],System.Int32@)">
            <summary>
            Gets the glyphs (TODO doc)
            </summary>
            <param name="textString">The text string.</param>
            <param name="textLength">Length of the text.</param>
            <param name="fontFace">The font face.</param>
            <param name="isSideways">if set to <c>true</c> [is sideways].</param>
            <param name="isRightToLeft">if set to <c>true</c> [is right to left].</param>
            <param name="scriptAnalysis">The script analysis.</param>
            <param name="localeName">Name of the locale.</param>
            <param name="numberSubstitution">The number substitution.</param>
            <param name="features">The features.</param>
            <param name="featureRangeLengths">The feature range lengths.</param>
            <param name="maxGlyphCount">The max glyph count.</param>
            <param name="clusterMap">The cluster map.</param>
            <param name="textProps">The text props.</param>
            <param name="glyphIndices">The glyph indices.</param>
            <param name="glyphProps">The glyph props.</param>
            <param name="actualGlyphCount">The actual glyph count.</param>
            <returns>
            If the method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>.
            </returns>
            <unmanaged>HRESULT IDWriteTextAnalyzer::GetGlyphs([In, Buffer] const wchar_t* textString,[In] unsigned int textLength,[In] IDWriteFontFace* fontFace,[In] BOOL isSideways,[In] BOOL isRightToLeft,[In] const DWRITE_SCRIPT_ANALYSIS* scriptAnalysis,[In, Buffer, Optional] const wchar_t* localeName,[In, Optional] IDWriteNumberSubstitution* numberSubstitution,[In, Optional] const void** features,[In, Buffer, Optional] const unsigned int* featureRangeLengths,[In] unsigned int featureRanges,[In] unsigned int maxGlyphCount,[Out, Buffer] unsigned short* clusterMap,[Out, Buffer] DWRITE_SHAPING_TEXT_PROPERTIES* textProps,[Out, Buffer] unsigned short* glyphIndices,[Out, Buffer] DWRITE_SHAPING_GLYPH_PROPERTIES* glyphProps,[Out] unsigned int* actualGlyphCount)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextAnalyzer.GetGlyphPlacements(System.String,System.Int16[],SharpDX.DirectWrite.ShapingTextProperties[],System.Int32,System.Int16[],SharpDX.DirectWrite.ShapingGlyphProperties[],System.Int32,SharpDX.DirectWrite.FontFace,System.Single,System.Boolean,System.Boolean,SharpDX.DirectWrite.ScriptAnalysis,System.String,SharpDX.DirectWrite.FontFeature[][],System.Int32[],System.Single[],SharpDX.DirectWrite.GlyphOffset[])">
            <summary>
            Gets the glyph placements.
            </summary>
            <param name="textString">The text string.</param>
            <param name="clusterMap">The cluster map.</param>
            <param name="textProps">The text props.</param>
            <param name="textLength">Length of the text.</param>
            <param name="glyphIndices">The glyph indices.</param>
            <param name="glyphProps">The glyph props.</param>
            <param name="glyphCount">The glyph count.</param>
            <param name="fontFace">The font face.</param>
            <param name="fontEmSize">Size of the font em.</param>
            <param name="isSideways">if set to <c>true</c> [is sideways].</param>
            <param name="isRightToLeft">if set to <c>true</c> [is right to left].</param>
            <param name="scriptAnalysis">The script analysis.</param>
            <param name="localeName">Name of the locale.</param>
            <param name="features">The features.</param>
            <param name="featureRangeLengths">The feature range lengths.</param>
            <param name="glyphAdvances">The glyph advances.</param>
            <param name="glyphOffsets">The glyph offsets.</param>
            <returns>
            If the method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>.
            </returns>
            <unmanaged>HRESULT IDWriteTextAnalyzer::GetGlyphPlacements([In, Buffer] const wchar_t* textString,[In, Buffer] const unsigned short* clusterMap,[In, Buffer] DWRITE_SHAPING_TEXT_PROPERTIES* textProps,[In] unsigned int textLength,[In, Buffer] const unsigned short* glyphIndices,[In, Buffer] const DWRITE_SHAPING_GLYPH_PROPERTIES* glyphProps,[In] unsigned int glyphCount,[In] IDWriteFontFace* fontFace,[In] float fontEmSize,[In] BOOL isSideways,[In] BOOL isRightToLeft,[In] const DWRITE_SCRIPT_ANALYSIS* scriptAnalysis,[In, Buffer, Optional] const wchar_t* localeName,[In, Optional] const void** features,[In, Buffer, Optional] const unsigned int* featureRangeLengths,[In] unsigned int featureRanges,[Out, Buffer] float* glyphAdvances,[Out, Buffer] DWRITE_GLYPH_OFFSET* glyphOffsets)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextAnalyzer.GetGdiCompatibleGlyphPlacements(System.String,System.Int16[],SharpDX.DirectWrite.ShapingTextProperties[],System.Int32,System.Int16[],SharpDX.DirectWrite.ShapingGlyphProperties[],System.Int32,SharpDX.DirectWrite.FontFace,System.Single,System.Single,System.Nullable{SharpDX.DirectWrite.Matrix},System.Boolean,System.Boolean,System.Boolean,SharpDX.DirectWrite.ScriptAnalysis,System.String,SharpDX.DirectWrite.FontFeature[][],System.Int32[],System.Single[],SharpDX.DirectWrite.GlyphOffset[])">
            <summary>
            Gets the GDI compatible glyph placements.
            </summary>
            <param name="textString">The text string.</param>
            <param name="clusterMap">The cluster map.</param>
            <param name="textProps">The text props.</param>
            <param name="textLength">Length of the text.</param>
            <param name="glyphIndices">The glyph indices.</param>
            <param name="glyphProps">The glyph props.</param>
            <param name="glyphCount">The glyph count.</param>
            <param name="fontFace">The font face.</param>
            <param name="fontEmSize">Size of the font em.</param>
            <param name="pixelsPerDip">The pixels per dip.</param>
            <param name="transform">The transform.</param>
            <param name="useGdiNatural">if set to <c>true</c> [use GDI natural].</param>
            <param name="isSideways">if set to <c>true</c> [is sideways].</param>
            <param name="isRightToLeft">if set to <c>true</c> [is right to left].</param>
            <param name="scriptAnalysis">The script analysis.</param>
            <param name="localeName">Name of the locale.</param>
            <param name="features">The features.</param>
            <param name="featureRangeLengths">The feature range lengths.</param>
            <param name="glyphAdvances">The glyph advances.</param>
            <param name="glyphOffsets">The glyph offsets.</param>
            <returns>
            If the method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>.
            </returns>
            <unmanaged>HRESULT IDWriteTextAnalyzer::GetGdiCompatibleGlyphPlacements([In, Buffer] const wchar_t* textString,[In, Buffer] const unsigned short* clusterMap,[In, Buffer] DWRITE_SHAPING_TEXT_PROPERTIES* textProps,[In] unsigned int textLength,[In, Buffer] const unsigned short* glyphIndices,[In, Buffer] const DWRITE_SHAPING_GLYPH_PROPERTIES* glyphProps,[In] unsigned int glyphCount,[In] IDWriteFontFace* fontFace,[In] float fontEmSize,[In] float pixelsPerDip,[In, Optional] const DWRITE_MATRIX* transform,[In] BOOL useGdiNatural,[In] BOOL isSideways,[In] BOOL isRightToLeft,[In] const DWRITE_SCRIPT_ANALYSIS* scriptAnalysis,[In, Buffer, Optional] const wchar_t* localeName,[In, Optional] const void** features,[In, Buffer, Optional] const unsigned int* featureRangeLengths,[In] unsigned int featureRanges,[Out, Buffer] float* glyphAdvances,[Out, Buffer] DWRITE_GLYPH_OFFSET* glyphOffsets)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextAnalyzer.AllocateFeatures(SharpDX.DirectWrite.FontFeature[][])">
            <summary>
            Allocates the features from the jagged array..
            </summary>
            <param name="features">The features.</param>
            <returns>A pointer to the allocated native features or 0 if features is null or empty.</returns>
        </member>
        <member name="M:SharpDX.DirectWrite.TextAnalyzer.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.DirectWrite.TextAnalyzer"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextAnalyzer.AnalyzeScript__(System.IntPtr,System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            Analyzes a text range for script boundaries, reading text attributes from the source and reporting the Unicode script ID to the sink  callback SetScript.	
            </summary>	
            <param name="analysisSource">No documentation.</param>	
            <param name="textPosition">No documentation.</param>	
            <param name="textLength">No documentation.</param>	
            <param name="analysisSink">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextAnalyzer::AnalyzeScript']/*"/>	
            <unmanaged>HRESULT IDWriteTextAnalyzer::AnalyzeScript([In] IDWriteTextAnalysisSource* analysisSource,[In] unsigned int textPosition,[In] unsigned int textLength,[In] IDWriteTextAnalysisSink* analysisSink)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextAnalyzer.AnalyzeBidi__(System.IntPtr,System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            Analyzes a text range for script directionality, reading attributes from the source and reporting levels to the sink callback SetBidiLevel.	
            </summary>	
            <param name="analysisSource">No documentation.</param>	
            <param name="textPosition">No documentation.</param>	
            <param name="textLength">No documentation.</param>	
            <param name="analysisSink">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            While the function can handle multiple paragraphs, the text range should not arbitrarily split the middle of paragraphs. Otherwise, the returned levels may be wrong, because the Bidi algorithm is meant to apply to the paragraph as a whole.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextAnalyzer::AnalyzeBidi']/*"/>	
            <unmanaged>HRESULT IDWriteTextAnalyzer::AnalyzeBidi([In] IDWriteTextAnalysisSource* analysisSource,[In] unsigned int textPosition,[In] unsigned int textLength,[In] IDWriteTextAnalysisSink* analysisSink)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextAnalyzer.AnalyzeNumberSubstitution__(System.IntPtr,System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            Analyzes a text range for spans where number substitution is applicable, reading attributes from the source and reporting substitutable ranges to the sink callback SetNumberSubstitution.	
            </summary>	
            <param name="analysisSource">No documentation.</param>	
            <param name="textPosition">No documentation.</param>	
            <param name="textLength">No documentation.</param>	
            <param name="analysisSink">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            Although the function can handle multiple ranges of differing number substitutions, the text ranges should not arbitrarily split the middle of numbers. Otherwise, it will treat the numbers separately and will not translate any intervening punctuation.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextAnalyzer::AnalyzeNumberSubstitution']/*"/>	
            <unmanaged>HRESULT IDWriteTextAnalyzer::AnalyzeNumberSubstitution([In] IDWriteTextAnalysisSource* analysisSource,[In] unsigned int textPosition,[In] unsigned int textLength,[In] IDWriteTextAnalysisSink* analysisSink)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextAnalyzer.AnalyzeLineBreakpoints__(System.IntPtr,System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            Analyzes a text range for potential breakpoint opportunities, reading attributes from the source and reporting breakpoint opportunities to the sink callback SetLineBreakpoints.	
            </summary>	
            <param name="analysisSource">No documentation.</param>	
            <param name="textPosition">No documentation.</param>	
            <param name="textLength">No documentation.</param>	
            <param name="analysisSink">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            Although the function can handle multiple paragraphs, the text range should not arbitrarily split the middle of paragraphs, unless the specified text span is considered a whole unit. Otherwise, the returned properties for the first and last characters will inappropriately allow breaks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextAnalyzer::AnalyzeLineBreakpoints']/*"/>	
            <unmanaged>HRESULT IDWriteTextAnalyzer::AnalyzeLineBreakpoints([In] IDWriteTextAnalysisSource* analysisSource,[In] unsigned int textPosition,[In] unsigned int textLength,[In] IDWriteTextAnalysisSink* analysisSink)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextAnalyzer.GetGlyphs(System.String,System.Int32,SharpDX.DirectWrite.FontFace,System.Boolean,System.Boolean,SharpDX.DirectWrite.ScriptAnalysis,System.String,SharpDX.DirectWrite.NumberSubstitution,System.IntPtr,System.Int32[],System.Int32,System.Int32,System.Int16[],SharpDX.DirectWrite.ShapingTextProperties[],System.Int16[],SharpDX.DirectWrite.ShapingGlyphProperties[],System.Int32@)">
            <summary>	
            Parses the input text string and maps it to the set of glyphs and associated glyph data according to the font and the writing system's rendering rules.	
            </summary>	
            <param name="textString"><para>An array of characters to convert to glyphs.</para></param>	
            <param name="textLength"><para>The length of textString.</para></param>	
            <param name="fontFace"><para>The font face that is the source of the output glyphs.</para></param>	
            <param name="isSideways"><para>A Boolean flag set to TRUE if the text is intended to be drawn vertically.</para></param>	
            <param name="isRightToLeft"><para>A Boolean flag set to TRUE for right-to-left text.</para></param>	
            <param name="scriptAnalysis"><para>A reference to a Script analysis result from an AnalyzeScript call.</para></param>	
            <param name="localeName"><para>The locale to use when selecting glyphs. For example the same character may map to different glyphs for ja-jp versus zh-chs. If this is <c>null</c>, then the default mapping based on the script is used.</para></param>	
            <param name="numberSubstitution"><para>A reference to an optional number substitution which selects the appropriate glyphs for digits and related numeric characters, depending on the results obtained from AnalyzeNumberSubstitution. Passing <c>null</c> indicates that no substitution is needed and that the digits should receive nominal glyphs.</para></param>	
            <param name="features"><para>An array of references to the sets of typographic  features to use in each feature range.</para></param>	
            <param name="featureRangeLengths"><para>The length of each feature range, in characters.   The sum of all lengths should be equal to textLength.</para></param>	
            <param name="featureRanges"><para>The number of feature ranges.</para></param>	
            <param name="maxGlyphCount"><para>The maximum number of glyphs that can be returned.</para></param>	
            <param name="clusterMap"><para>When this method returns, contains the mapping from character ranges to glyph  ranges.</para></param>	
            <param name="textProps"><para>When this method returns, contains a reference to an array of structures that contains  shaping properties for each character.</para></param>	
            <param name="glyphIndices"><para>The output glyph indices.</para></param>	
            <param name="glyphProps"><para>When this method returns, contains a reference to an array of structures that contain  shaping properties for each output glyph.</para></param>	
            <param name="actualGlyphCount"><para>When this method returns, contains the actual number of glyphs returned if the call succeeds.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            Note that the mapping from characters to glyphs is, in general, many-to-many.  The recommended estimate for the per-glyph output buffers is (3 * textLength / 2 + 16).  This is not guaranteed to be sufficient. The value of the actualGlyphCount parameter is only valid if the call succeeds.  In the event that maxGlyphCount is not big enough, HRESULT_FROM_WIN32(<see cref="F:SharpDX.Win32.ErrorCode.InsufficientBuffer"/>) will be returned.  The application should  allocate a larger buffer and try again.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextAnalyzer::GetGlyphs']/*"/>	
            <unmanaged>HRESULT IDWriteTextAnalyzer::GetGlyphs([In, Buffer] const wchar_t* textString,[In] unsigned int textLength,[In] IDWriteFontFace* fontFace,[In] BOOL isSideways,[In] BOOL isRightToLeft,[In] const DWRITE_SCRIPT_ANALYSIS* scriptAnalysis,[In, Optional] const wchar_t* localeName,[In, Optional] IDWriteNumberSubstitution* numberSubstitution,[In, Optional] const void** features,[In, Buffer, Optional] const unsigned int* featureRangeLengths,[In] unsigned int featureRanges,[In] unsigned int maxGlyphCount,[Out, Buffer] unsigned short* clusterMap,[Out, Buffer] DWRITE_SHAPING_TEXT_PROPERTIES* textProps,[Out, Buffer] unsigned short* glyphIndices,[Out, Buffer] DWRITE_SHAPING_GLYPH_PROPERTIES* glyphProps,[Out] unsigned int* actualGlyphCount)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextAnalyzer.GetGlyphPlacements(System.String,System.Int16[],SharpDX.DirectWrite.ShapingTextProperties[],System.Int32,System.Int16[],SharpDX.DirectWrite.ShapingGlyphProperties[],System.Int32,SharpDX.DirectWrite.FontFace,System.Single,System.Boolean,System.Boolean,SharpDX.DirectWrite.ScriptAnalysis,System.String,System.IntPtr,System.Int32[],System.Int32,System.Single[],SharpDX.DirectWrite.GlyphOffset[])">
            <summary>	
            Places glyphs output from the GetGlyphs method according to the font  and the writing system's rendering rules.	
            </summary>	
            <param name="textString">No documentation.</param>	
            <param name="clusterMap">No documentation.</param>	
            <param name="textProps">No documentation.</param>	
            <param name="textLength">No documentation.</param>	
            <param name="glyphIndices">No documentation.</param>	
            <param name="glyphProps">No documentation.</param>	
            <param name="glyphCount">No documentation.</param>	
            <param name="fontFace">No documentation.</param>	
            <param name="fontEmSize">No documentation.</param>	
            <param name="isSideways">No documentation.</param>	
            <param name="isRightToLeft">No documentation.</param>	
            <param name="scriptAnalysis">No documentation.</param>	
            <param name="localeName">No documentation.</param>	
            <param name="features">No documentation.</param>	
            <param name="featureRangeLengths">No documentation.</param>	
            <param name="featureRanges">No documentation.</param>	
            <param name="glyphAdvances">No documentation.</param>	
            <param name="glyphOffsets">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextAnalyzer::GetGlyphPlacements']/*"/>	
            <unmanaged>HRESULT IDWriteTextAnalyzer::GetGlyphPlacements([In, Buffer] const wchar_t* textString,[In, Buffer] const unsigned short* clusterMap,[In, Buffer] DWRITE_SHAPING_TEXT_PROPERTIES* textProps,[In] unsigned int textLength,[In, Buffer] const unsigned short* glyphIndices,[In, Buffer] const DWRITE_SHAPING_GLYPH_PROPERTIES* glyphProps,[In] unsigned int glyphCount,[In] IDWriteFontFace* fontFace,[In] float fontEmSize,[In] BOOL isSideways,[In] BOOL isRightToLeft,[In] const DWRITE_SCRIPT_ANALYSIS* scriptAnalysis,[In, Optional] const wchar_t* localeName,[In, Optional] const void** features,[In, Buffer, Optional] const unsigned int* featureRangeLengths,[In] unsigned int featureRanges,[Out, Buffer] float* glyphAdvances,[Out, Buffer] DWRITE_GLYPH_OFFSET* glyphOffsets)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextAnalyzer.GetGdiCompatibleGlyphPlacements(System.String,System.Int16[],SharpDX.DirectWrite.ShapingTextProperties[],System.Int32,System.Int16[],SharpDX.DirectWrite.ShapingGlyphProperties[],System.Int32,SharpDX.DirectWrite.FontFace,System.Single,System.Single,System.Nullable{SharpDX.DirectWrite.Matrix},System.Boolean,System.Boolean,System.Boolean,SharpDX.DirectWrite.ScriptAnalysis,System.String,System.IntPtr,System.Int32[],System.Int32,System.Single[],SharpDX.DirectWrite.GlyphOffset[])">
            <summary>	
            Place glyphs output from the GetGlyphs method according to the font  and the writing system's rendering rules.	
            </summary>	
            <param name="textString">No documentation.</param>	
            <param name="clusterMap">No documentation.</param>	
            <param name="textProps">No documentation.</param>	
            <param name="textLength">No documentation.</param>	
            <param name="glyphIndices">No documentation.</param>	
            <param name="glyphProps">No documentation.</param>	
            <param name="glyphCount">No documentation.</param>	
            <param name="fontFace">No documentation.</param>	
            <param name="fontEmSize">No documentation.</param>	
            <param name="pixelsPerDip">No documentation.</param>	
            <param name="transform">No documentation.</param>	
            <param name="useGdiNatural">No documentation.</param>	
            <param name="isSideways">No documentation.</param>	
            <param name="isRightToLeft">No documentation.</param>	
            <param name="scriptAnalysis">No documentation.</param>	
            <param name="localeName">No documentation.</param>	
            <param name="features">No documentation.</param>	
            <param name="featureRangeLengths">No documentation.</param>	
            <param name="featureRanges">No documentation.</param>	
            <param name="glyphAdvances">No documentation.</param>	
            <param name="glyphOffsets">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextAnalyzer::GetGdiCompatibleGlyphPlacements']/*"/>	
            <unmanaged>HRESULT IDWriteTextAnalyzer::GetGdiCompatibleGlyphPlacements([In, Buffer] const wchar_t* textString,[In, Buffer] const unsigned short* clusterMap,[In, Buffer] DWRITE_SHAPING_TEXT_PROPERTIES* textProps,[In] unsigned int textLength,[In, Buffer] const unsigned short* glyphIndices,[In, Buffer] const DWRITE_SHAPING_GLYPH_PROPERTIES* glyphProps,[In] unsigned int glyphCount,[In] IDWriteFontFace* fontFace,[In] float fontEmSize,[In] float pixelsPerDip,[In, Optional] const DWRITE_MATRIX* transform,[In] BOOL useGdiNatural,[In] BOOL isSideways,[In] BOOL isRightToLeft,[In] const DWRITE_SCRIPT_ANALYSIS* scriptAnalysis,[In, Optional] const wchar_t* localeName,[In, Optional] const void** features,[In, Buffer, Optional] const unsigned int* featureRangeLengths,[In] unsigned int featureRanges,[Out, Buffer] float* glyphAdvances,[Out, Buffer] DWRITE_GLYPH_OFFSET* glyphOffsets)</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.TextFormat">
            <summary>	
            The <see cref="T:SharpDX.DirectWrite.TextFormat"/> interface describes the font and paragraph properties used to format text, and it describes locale information.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextFormat']/*"/>	
            <unmanaged>IDWriteTextFormat</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextFormat.#ctor(SharpDX.DirectWrite.Factory,System.String,System.Single)">
            <summary>	
             Creates a text format object used for text layout with normal weight, style and stretch.
            </summary>	
            <param name="factory">an instance of <see cref="T:SharpDX.DirectWrite.Factory"/></param>
            <param name="fontFamilyName">An array of characters that contains the name of the font family</param>
            <param name="fontSize">The logical size of the font in DIP ("device-independent pixel") units. A DIP equals 1/96 inch.</param>
            <unmanaged>HRESULT CreateTextFormat([In] const wchar* fontFamilyName,[None] IDWriteFontCollection* fontCollection,[None] DWRITE_FONT_WEIGHT fontWeight,[None] DWRITE_FONT_STYLE fontStyle,[None] DWRITE_FONT_STRETCH fontStretch,[None] FLOAT fontSize,[In] const wchar* localeName,[Out] IDWriteTextFormat** textFormat)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextFormat.#ctor(SharpDX.DirectWrite.Factory,System.String,SharpDX.DirectWrite.FontWeight,SharpDX.DirectWrite.FontStyle,System.Single)">
            <summary>	
             Creates a text format object used for text layout with normal stretch.
            </summary>	
            <param name="factory">an instance of <see cref="T:SharpDX.DirectWrite.Factory"/></param>
            <param name="fontFamilyName">An array of characters that contains the name of the font family</param>
            <param name="fontWeight">A value that indicates the font weight for the text object created by this method.</param>
            <param name="fontStyle">A value that indicates the font style for the text object created by this method.</param>
            <param name="fontSize">The logical size of the font in DIP ("device-independent pixel") units. A DIP equals 1/96 inch.</param>
            <unmanaged>HRESULT CreateTextFormat([In] const wchar* fontFamilyName,[None] IDWriteFontCollection* fontCollection,[None] DWRITE_FONT_WEIGHT fontWeight,[None] DWRITE_FONT_STYLE fontStyle,[None] DWRITE_FONT_STRETCH fontStretch,[None] FLOAT fontSize,[In] const wchar* localeName,[Out] IDWriteTextFormat** textFormat)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextFormat.#ctor(SharpDX.DirectWrite.Factory,System.String,SharpDX.DirectWrite.FontWeight,SharpDX.DirectWrite.FontStyle,SharpDX.DirectWrite.FontStretch,System.Single)">
            <summary>	
             Creates a text format object used for text layout. 	
            </summary>	
            <param name="factory">an instance of <see cref="T:SharpDX.DirectWrite.Factory"/></param>
            <param name="fontFamilyName">An array of characters that contains the name of the font family</param>
            <param name="fontWeight">A value that indicates the font weight for the text object created by this method.</param>
            <param name="fontStyle">A value that indicates the font style for the text object created by this method.</param>
            <param name="fontStretch">A value that indicates the font stretch for the text object created by this method.</param>
            <param name="fontSize">The logical size of the font in DIP ("device-independent pixel") units. A DIP equals 1/96 inch.</param>
            <unmanaged>HRESULT CreateTextFormat([In] const wchar* fontFamilyName,[None] IDWriteFontCollection* fontCollection,[None] DWRITE_FONT_WEIGHT fontWeight,[None] DWRITE_FONT_STYLE fontStyle,[None] DWRITE_FONT_STRETCH fontStretch,[None] FLOAT fontSize,[In] const wchar* localeName,[Out] IDWriteTextFormat** textFormat)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextFormat.#ctor(SharpDX.DirectWrite.Factory,System.String,SharpDX.DirectWrite.FontCollection,SharpDX.DirectWrite.FontWeight,SharpDX.DirectWrite.FontStyle,SharpDX.DirectWrite.FontStretch,System.Single)">
            <summary>	
             Creates a text format object used for text layout. 	
            </summary>	
            <param name="factory">an instance of <see cref="T:SharpDX.DirectWrite.Factory"/></param>
            <param name="fontFamilyName">An array of characters that contains the name of the font family</param>
            <param name="fontCollection">A pointer to a font collection object. When this is NULL, indicates the system font collection.</param>
            <param name="fontWeight">A value that indicates the font weight for the text object created by this method.</param>
            <param name="fontStyle">A value that indicates the font style for the text object created by this method.</param>
            <param name="fontStretch">A value that indicates the font stretch for the text object created by this method.</param>
            <param name="fontSize">The logical size of the font in DIP ("device-independent pixel") units. A DIP equals 1/96 inch.</param>
            <unmanaged>HRESULT CreateTextFormat([In] const wchar* fontFamilyName,[None] IDWriteFontCollection* fontCollection,[None] DWRITE_FONT_WEIGHT fontWeight,[None] DWRITE_FONT_STYLE fontStyle,[None] DWRITE_FONT_STRETCH fontStretch,[None] FLOAT fontSize,[In] const wchar* localeName,[Out] IDWriteTextFormat** textFormat)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextFormat.#ctor(SharpDX.DirectWrite.Factory,System.String,SharpDX.DirectWrite.FontCollection,SharpDX.DirectWrite.FontWeight,SharpDX.DirectWrite.FontStyle,SharpDX.DirectWrite.FontStretch,System.Single,System.String)">
            <summary>	
             Creates a text format object used for text layout. 	
            </summary>	
            <param name="factory">an instance of <see cref="T:SharpDX.DirectWrite.Factory"/></param>
            <param name="fontFamilyName">An array of characters that contains the name of the font family</param>
            <param name="fontCollection">A pointer to a font collection object. When this is NULL, indicates the system font collection.</param>
            <param name="fontWeight">A value that indicates the font weight for the text object created by this method.</param>
            <param name="fontStyle">A value that indicates the font style for the text object created by this method.</param>
            <param name="fontStretch">A value that indicates the font stretch for the text object created by this method.</param>
            <param name="fontSize">The logical size of the font in DIP ("device-independent pixel") units. A DIP equals 1/96 inch.</param>
            <param name="localeName">An array of characters that contains the locale name.</param>
            <unmanaged>HRESULT CreateTextFormat([In] const wchar* fontFamilyName,[None] IDWriteFontCollection* fontCollection,[None] DWRITE_FONT_WEIGHT fontWeight,[None] DWRITE_FONT_STYLE fontStyle,[None] DWRITE_FONT_STRETCH fontStretch,[None] FLOAT fontSize,[In] const wchar* localeName,[Out] IDWriteTextFormat** textFormat)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextFormat.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.DirectWrite.TextFormat"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <!-- Badly formed XML comment ignored for member "M:SharpDX.DirectWrite.TextFormat.SetTextAlignment(SharpDX.DirectWrite.TextAlignment)" -->
        <member name="M:SharpDX.DirectWrite.TextFormat.SetParagraphAlignment(SharpDX.DirectWrite.ParagraphAlignment)">
            <summary>	
            Sets the alignment option of a paragraph relative to the layout box's top and bottom edge.	
            </summary>	
            <param name="paragraphAlignment"><para>The paragraph alignment option being set for a paragraph; see <see cref="T:SharpDX.DirectWrite.ParagraphAlignment"/> for more information.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextFormat::SetParagraphAlignment']/*"/>	
            <unmanaged>HRESULT IDWriteTextFormat::SetParagraphAlignment([In] DWRITE_PARAGRAPH_ALIGNMENT paragraphAlignment)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextFormat.SetWordWrapping(SharpDX.DirectWrite.WordWrapping)">
            <summary>	
            Sets the word wrapping option.	
            </summary>	
            <param name="wordWrapping"><para>The word wrapping option being set for a paragraph; see <see cref="T:SharpDX.DirectWrite.WordWrapping"/> for more information.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextFormat::SetWordWrapping']/*"/>	
            <unmanaged>HRESULT IDWriteTextFormat::SetWordWrapping([In] DWRITE_WORD_WRAPPING wordWrapping)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextFormat.SetReadingDirection(SharpDX.DirectWrite.ReadingDirection)">
            <summary>	
            Sets the paragraph reading direction.	
            </summary>	
            <param name="readingDirection"><para>The text reading direction (for example, <see cref="F:SharpDX.DirectWrite.ReadingDirection.RightToLeft"/> for languages, such as  Arabic, that read from right to left) for a paragraph.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextFormat::SetReadingDirection']/*"/>	
            <unmanaged>HRESULT IDWriteTextFormat::SetReadingDirection([In] DWRITE_READING_DIRECTION readingDirection)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextFormat.SetFlowDirection(SharpDX.DirectWrite.FlowDirection)">
            <summary>	
            Sets the  paragraph flow direction.	
            </summary>	
            <param name="flowDirection"><para>The paragraph flow direction; see <see cref="T:SharpDX.DirectWrite.FlowDirection"/> for more information.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextFormat::SetFlowDirection']/*"/>	
            <unmanaged>HRESULT IDWriteTextFormat::SetFlowDirection([In] DWRITE_FLOW_DIRECTION flowDirection)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextFormat.SetIncrementalTabStop(System.Single)">
            <summary>	
            Sets a fixed distance between two adjacent tab stops.	
            </summary>	
            <param name="incrementalTabStop"><para>The fixed distance between two adjacent tab stops.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextFormat::SetIncrementalTabStop']/*"/>	
            <unmanaged>HRESULT IDWriteTextFormat::SetIncrementalTabStop([In] float incrementalTabStop)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextFormat.SetTrimming_(SharpDX.DirectWrite.Trimming,System.IntPtr)">
            <summary>	
            Sets trimming options for text overflowing the layout width.	
            </summary>	
            <param name="trimmingOptions"><para>Text trimming options.</para></param>	
            <param name="trimmingSign"><para>Application-defined omission sign. This parameter may be <c>null</c>. See <see cref="T:SharpDX.DirectWrite.InlineObject"/> for more information.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextFormat::SetTrimming']/*"/>	
            <unmanaged>HRESULT IDWriteTextFormat::SetTrimming([In] const DWRITE_TRIMMING* trimmingOptions,[In] IDWriteInlineObject* trimmingSign)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextFormat.SetLineSpacing(SharpDX.DirectWrite.LineSpacingMethod,System.Single,System.Single)">
            <summary>	
            Sets the  line spacing.	
            </summary>	
            <param name="lineSpacingMethod"><para>Specifies how line height is being determined; see <see cref="T:SharpDX.DirectWrite.LineSpacingMethod"/> for more information.</para></param>	
            <param name="lineSpacing"><para>The line height, or distance between one baseline to another.</para></param>	
            <param name="baseline"><para>The distance from top of line to baseline. A reasonable ratio to lineSpacing is 80 percent.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            For the default method, spacing depends solely on the content. For uniform spacing, the specified line height overrides the content.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextFormat::SetLineSpacing']/*"/>	
            <unmanaged>HRESULT IDWriteTextFormat::SetLineSpacing([In] DWRITE_LINE_SPACING_METHOD lineSpacingMethod,[In] float lineSpacing,[In] float baseline)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextFormat.GetTextAlignment">
            <summary>	
            Gets the alignment option of text relative to the layout box's leading and trailing edge.	
            </summary>	
            <returns>Returns the text alignment option of the current paragraph.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextFormat::GetTextAlignment']/*"/>	
            <unmanaged>DWRITE_TEXT_ALIGNMENT IDWriteTextFormat::GetTextAlignment()</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextFormat.GetParagraphAlignment">
            <summary>	
            Gets the alignment option of a paragraph which is  relative to the top and bottom edges of a layout box.	
            </summary>	
            <returns>A value that indicates the current paragraph alignment option.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextFormat::GetParagraphAlignment']/*"/>	
            <unmanaged>DWRITE_PARAGRAPH_ALIGNMENT IDWriteTextFormat::GetParagraphAlignment()</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextFormat.GetWordWrapping">
            <summary>	
            Gets the word wrapping option.	
            </summary>	
            <returns>Returns the word wrapping option; see <see cref="T:SharpDX.DirectWrite.WordWrapping"/> for more information.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextFormat::GetWordWrapping']/*"/>	
            <unmanaged>DWRITE_WORD_WRAPPING IDWriteTextFormat::GetWordWrapping()</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextFormat.GetReadingDirection">
            <summary>	
            Gets the  current reading direction for text in a paragraph.	
            </summary>	
            <returns>A value that indicates the current reading direction for text in a  paragraph.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextFormat::GetReadingDirection']/*"/>	
            <unmanaged>DWRITE_READING_DIRECTION IDWriteTextFormat::GetReadingDirection()</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextFormat.GetFlowDirection">
            <summary>	
            Gets the direction that text lines flow.	
            </summary>	
            <returns>The direction that text lines flow within their parent container.  For example, <see cref="F:SharpDX.DirectWrite.FlowDirection.TopToBottom"/> indicates that text lines are placed from top to bottom.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextFormat::GetFlowDirection']/*"/>	
            <unmanaged>DWRITE_FLOW_DIRECTION IDWriteTextFormat::GetFlowDirection()</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextFormat.GetIncrementalTabStop">
            <summary>	
            Gets the  incremental tab stop position.	
            </summary>	
            <returns>The incremental tab stop value.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextFormat::GetIncrementalTabStop']/*"/>	
            <unmanaged>float IDWriteTextFormat::GetIncrementalTabStop()</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextFormat.GetTrimming(SharpDX.DirectWrite.Trimming@,SharpDX.DirectWrite.InlineObject@)">
            <summary>	
            Gets the trimming options for text that overflows the layout box.	
            </summary>	
            <param name="trimmingOptions"><para>When this method returns, it contains a reference to a <see cref="T:SharpDX.DirectWrite.Trimming"/> structure that holds the text trimming options for the overflowing text.</para></param>	
            <param name="trimmingSign"><para>When this method returns, contains an address of a reference to a trimming omission sign. This parameter may be <c>null</c>.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextFormat::GetTrimming']/*"/>	
            <unmanaged>HRESULT IDWriteTextFormat::GetTrimming([Out] DWRITE_TRIMMING* trimmingOptions,[Out] IDWriteInlineObject** trimmingSign)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextFormat.GetLineSpacing(SharpDX.DirectWrite.LineSpacingMethod@,System.Single@,System.Single@)">
            <summary>	
            Gets the line spacing adjustment set for a multiline text paragraph.	
            </summary>	
            <param name="lineSpacingMethod"><para>A value that indicates how line height is determined.</para></param>	
            <param name="lineSpacing"><para>When this method returns, contains the line height, or  distance between one baseline to another.</para></param>	
            <param name="baseline"><para>When this method returns, contains the distance from top of line to baseline. A reasonable ratio to lineSpacing is 80 percent.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextFormat::GetLineSpacing']/*"/>	
            <unmanaged>HRESULT IDWriteTextFormat::GetLineSpacing([Out] DWRITE_LINE_SPACING_METHOD* lineSpacingMethod,[Out] float* lineSpacing,[Out] float* baseline)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextFormat.GetFontCollection(SharpDX.DirectWrite.FontCollection@)">
            <summary>	
            Gets the current font collection.	
            </summary>	
            <param name="fontCollection"><para>When this method returns, contains an address of a reference to the font collection being used for the current text.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextFormat::GetFontCollection']/*"/>	
            <unmanaged>HRESULT IDWriteTextFormat::GetFontCollection([Out] IDWriteFontCollection** fontCollection)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextFormat.GetFontFamilyNameLength">
            <summary>	
            Gets the length of the font family name.	
            </summary>	
            <returns>The size of the character array, in character count, not including the terminated <c>null</c> character.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextFormat::GetFontFamilyNameLength']/*"/>	
            <unmanaged>unsigned int IDWriteTextFormat::GetFontFamilyNameLength()</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextFormat.GetFontFamilyName(System.IntPtr,System.Int32)">
            <summary>	
            Gets a copy of the font family name.	
            </summary>	
            <param name="fontFamilyName"><para>When this method returns, contains a reference to a character array, which is null-terminated, that receives the current font family name. The buffer allocated for this array should be at least the size, in elements, of nameSize.</para></param>	
            <param name="nameSize"><para>The size of the fontFamilyName character array, in character count, including the terminated <c>null</c> character.  To find the size of fontFamilyName, use GetFontFamilyNameLength.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextFormat::GetFontFamilyName']/*"/>	
            <unmanaged>HRESULT IDWriteTextFormat::GetFontFamilyName([Out, Buffer] wchar_t* fontFamilyName,[In] unsigned int nameSize)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextFormat.GetFontWeight">
            <summary>	
            Gets the font weight of the text.	
            </summary>	
            <returns>A value that indicates the type of weight (such as normal, bold, or black).</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextFormat::GetFontWeight']/*"/>	
            <unmanaged>DWRITE_FONT_WEIGHT IDWriteTextFormat::GetFontWeight()</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextFormat.GetFontStyle">
            <summary>	
            Gets the font style of the text.	
            </summary>	
            <returns>A value which indicates the type of font style (such as  slope or incline).</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextFormat::GetFontStyle']/*"/>	
            <unmanaged>DWRITE_FONT_STYLE IDWriteTextFormat::GetFontStyle()</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextFormat.GetFontStretch">
            <summary>	
            Gets the font stretch of the text.	
            </summary>	
            <returns>A value which indicates the type of font stretch (such as  normal or condensed).</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextFormat::GetFontStretch']/*"/>	
            <unmanaged>DWRITE_FONT_STRETCH IDWriteTextFormat::GetFontStretch()</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextFormat.GetFontSize">
            <summary>	
            Gets the font  size in DIP unites.	
            </summary>	
            <returns>The current font size in DIP units.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextFormat::GetFontSize']/*"/>	
            <unmanaged>float IDWriteTextFormat::GetFontSize()</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextFormat.GetLocaleNameLength">
            <summary>	
            Gets the length of the locale name.	
            </summary>	
            <returns>The size of the character array in character count, not including the terminated <c>null</c> character.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextFormat::GetLocaleNameLength']/*"/>	
            <unmanaged>unsigned int IDWriteTextFormat::GetLocaleNameLength()</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextFormat.GetLocaleName(System.IntPtr,System.Int32)">
            <summary>	
            Gets a copy of the locale name.	
            </summary>	
            <param name="localeName"><para>Contains a character array that receives the current locale name.</para></param>	
            <param name="nameSize"><para>The size of the character array, in character count, including the terminated <c>null</c> character. Use GetLocaleNameLength to get the size of the locale name character array.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextFormat::GetLocaleName']/*"/>	
            <unmanaged>HRESULT IDWriteTextFormat::GetLocaleName([Out, Buffer] wchar_t* localeName,[In] unsigned int nameSize)</unmanaged>	
        </member>
        <member name="P:SharpDX.DirectWrite.TextFormat.FontFamilyName">
            <summary>	
            Gets a copy of the font family name. 	
            </summary>	
            <returns>the current font family name. </returns>
            <unmanaged>HRESULT IDWriteTextFormat::GetFontFamilyName([Out, Buffer] wchar_t* fontFamilyName,[None] int nameSize)</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.TextFormat.LocaleName">
            <summary>	
            Gets a copy of the locale name. 	
            </summary>	
            <returns>the current locale name.</returns>
            <unmanaged>HRESULT IDWriteTextFormat::GetLocaleName([Out, Buffer] wchar_t* localeName,[None] int nameSize)</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.TextFormat.TextAlignment">
            <summary>	
            Gets the alignment option of text relative to the layout box's leading and trailing edge.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextFormat::GetTextAlignment']/*"/>	
            <unmanaged>GetTextAlignment</unmanaged>	
            <unmanaged>DWRITE_TEXT_ALIGNMENT IDWriteTextFormat::GetTextAlignment()</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.TextFormat.ParagraphAlignment">
            <summary>	
            Gets the alignment option of a paragraph which is  relative to the top and bottom edges of a layout box.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextFormat::GetParagraphAlignment']/*"/>	
            <unmanaged>GetParagraphAlignment</unmanaged>	
            <unmanaged>DWRITE_PARAGRAPH_ALIGNMENT IDWriteTextFormat::GetParagraphAlignment()</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.TextFormat.WordWrapping">
            <summary>	
            Gets the word wrapping option.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextFormat::GetWordWrapping']/*"/>	
            <unmanaged>GetWordWrapping</unmanaged>	
            <unmanaged>DWRITE_WORD_WRAPPING IDWriteTextFormat::GetWordWrapping()</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.TextFormat.ReadingDirection">
            <summary>	
            Gets the  current reading direction for text in a paragraph.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextFormat::GetReadingDirection']/*"/>	
            <unmanaged>GetReadingDirection</unmanaged>	
            <unmanaged>DWRITE_READING_DIRECTION IDWriteTextFormat::GetReadingDirection()</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.TextFormat.FlowDirection">
            <summary>	
            Gets the direction that text lines flow.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextFormat::GetFlowDirection']/*"/>	
            <unmanaged>GetFlowDirection</unmanaged>	
            <unmanaged>DWRITE_FLOW_DIRECTION IDWriteTextFormat::GetFlowDirection()</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.TextFormat.IncrementalTabStop">
            <summary>	
            Gets the  incremental tab stop position.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextFormat::GetIncrementalTabStop']/*"/>	
            <unmanaged>GetIncrementalTabStop</unmanaged>	
            <unmanaged>float IDWriteTextFormat::GetIncrementalTabStop()</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.TextFormat.FontCollection">
            <summary>	
            Gets the current font collection.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextFormat::GetFontCollection']/*"/>	
            <unmanaged>GetFontCollection</unmanaged>	
            <unmanaged>HRESULT IDWriteTextFormat::GetFontCollection([Out] IDWriteFontCollection** fontCollection)</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.TextFormat.FontWeight">
            <summary>	
            Gets the font weight of the text.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextFormat::GetFontWeight']/*"/>	
            <unmanaged>GetFontWeight</unmanaged>	
            <unmanaged>DWRITE_FONT_WEIGHT IDWriteTextFormat::GetFontWeight()</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.TextFormat.FontStyle">
            <summary>	
            Gets the font style of the text.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextFormat::GetFontStyle']/*"/>	
            <unmanaged>GetFontStyle</unmanaged>	
            <unmanaged>DWRITE_FONT_STYLE IDWriteTextFormat::GetFontStyle()</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.TextFormat.FontStretch">
            <summary>	
            Gets the font stretch of the text.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextFormat::GetFontStretch']/*"/>	
            <unmanaged>GetFontStretch</unmanaged>	
            <unmanaged>DWRITE_FONT_STRETCH IDWriteTextFormat::GetFontStretch()</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.TextFormat.FontSize">
            <summary>	
            Gets the font  size in DIP unites.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextFormat::GetFontSize']/*"/>	
            <unmanaged>GetFontSize</unmanaged>	
            <unmanaged>float IDWriteTextFormat::GetFontSize()</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.TextLayout">
            <summary>	
            The <see cref="T:SharpDX.DirectWrite.TextLayout"/> interface represents a block of text after it has been fully analyzed and formatted.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout']/*"/>	
            <unmanaged>IDWriteTextLayout</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.#ctor(SharpDX.DirectWrite.Factory,System.String,SharpDX.DirectWrite.TextFormat,System.Single,System.Single)">
            <summary>	
             Takes a string, text format, and associated constraints, and produces an object that represents the fully analyzed and formatted result. 	
            </summary>	
            <param name="factory">an instance of <see cref="T:SharpDX.DirectWrite.Factory"/></param>
            <param name="text">An array of characters that contains the string to create a new <see cref="T:SharpDX.DirectWrite.TextLayout"/> object from. This array must be of length stringLength and can contain embedded NULL characters.</param>
            <param name="textFormat">A pointer to an object that indicates the format to apply to the string.</param>
            <param name="maxWidth">The width of the layout box.</param>
            <param name="maxHeight">The height of the layout box.</param>
            <unmanaged>HRESULT CreateTextLayout([In, Buffer] const wchar* string,[None] UINT32 stringLength,[None] IDWriteTextFormat* textFormat,[None] FLOAT maxWidth,[None] FLOAT maxHeight,[Out] IDWriteTextLayout** textLayout)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.#ctor(SharpDX.DirectWrite.Factory,System.String,SharpDX.DirectWrite.TextFormat,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>	
            Create a Gdi Compatible TextLayout. Takes a string, format, and associated constraints, and produces an object representing the result, formatted for a particular display resolution and measuring mode.  	
            </summary>	
            <remarks>	
            The resulting text layout should only be used for the intended resolution, and for cases where text scalability is desired {{CreateTextLayout}} should be used instead. 	
            </remarks>	
            <param name="factory">an instance of <see cref="T:SharpDX.DirectWrite.Factory"/></param>
            <param name="text">An array of characters that contains the string to create a new <see cref="T:SharpDX.DirectWrite.TextLayout"/> object from. This array must be of length stringLength and can contain embedded NULL characters. </param>
            <param name="textFormat">The text formatting object to apply to the string. </param>
            <param name="layoutWidth">The width of the layout box. </param>
            <param name="layoutHeight">The height of the layout box. </param>
            <param name="pixelsPerDip">The number of physical pixels per DIP (device independent pixel). For example, if rendering onto a 96 DPI device pixelsPerDip is 1. If rendering onto a 120 DPI device pixelsPerDip is 1.25 (120/96). </param>
            <param name="useGdiNatural">Instructs the text layout to use the same metrics as GDI bi-level text when set to FALSE. When set to TRUE, instructs the text layout to use the same metrics as text measured by GDI using a font created with CLEARTYPE_NATURAL_QUALITY.  </param>
            <unmanaged>HRESULT IDWriteFactory::CreateGdiCompatibleTextLayout([In, Buffer] const wchar_t* string,[None] int stringLength,[None] IDWriteTextFormat* textFormat,[None] float layoutWidth,[None] float layoutHeight,[None] float pixelsPerDip,[In, Optional] const DWRITE_MATRIX* transform,[None] BOOL useGdiNatural,[Out] IDWriteTextLayout** textLayout)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.#ctor(SharpDX.DirectWrite.Factory,System.String,SharpDX.DirectWrite.TextFormat,System.Single,System.Single,System.Single,System.Nullable{SharpDX.DirectWrite.Matrix},System.Boolean)">
            <summary>	
            Create a Gdi Compatible TextLayout. Takes a string, format, and associated constraints, and produces an object representing the result, formatted for a particular display resolution and measuring mode.  	
            </summary>	
            <remarks>	
            The resulting text layout should only be used for the intended resolution, and for cases where text scalability is desired {{CreateTextLayout}} should be used instead. 	
            </remarks>	
            <param name="factory">an instance of <see cref="T:SharpDX.DirectWrite.Factory"/></param>
            <param name="text">An array of characters that contains the string to create a new <see cref="T:SharpDX.DirectWrite.TextLayout"/> object from. This array must be of length stringLength and can contain embedded NULL characters. </param>
            <param name="textFormat">The text formatting object to apply to the string. </param>
            <param name="layoutWidth">The width of the layout box. </param>
            <param name="layoutHeight">The height of the layout box. </param>
            <param name="pixelsPerDip">The number of physical pixels per DIP (device independent pixel). For example, if rendering onto a 96 DPI device pixelsPerDip is 1. If rendering onto a 120 DPI device pixelsPerDip is 1.25 (120/96). </param>
            <param name="transform">An optional transform applied to the glyphs and their positions. This transform is applied after the scaling specifies the font size and pixels per DIP. </param>
            <param name="useGdiNatural">Instructs the text layout to use the same metrics as GDI bi-level text when set to FALSE. When set to TRUE, instructs the text layout to use the same metrics as text measured by GDI using a font created with CLEARTYPE_NATURAL_QUALITY.  </param>
            <unmanaged>HRESULT IDWriteFactory::CreateGdiCompatibleTextLayout([In, Buffer] const wchar_t* string,[None] int stringLength,[None] IDWriteTextFormat* textFormat,[None] float layoutWidth,[None] float layoutHeight,[None] float pixelsPerDip,[In, Optional] const DWRITE_MATRIX* transform,[None] BOOL useGdiNatural,[Out] IDWriteTextLayout** textLayout)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.Draw(SharpDX.DirectWrite.TextRenderer,System.Single,System.Single)">
            <summary>	
             Draws text using the specified client drawing context.	
            </summary>	
            <remarks>	
            To draw text with this method, a textLayout object needs to be created by the application using <see cref="M:SharpDX.DirectWrite.Factory.CreateTextLayout(System.String,System.Int32,SharpDX.DirectWrite.TextFormat,System.Single,System.Single,SharpDX.DirectWrite.TextLayout)"/>. After the textLayout object is obtained, the application calls the  IDWriteTextLayout::Draw method  to draw the text, decorations, and inline objects. The actual drawing is done through the callback interface passed in as the textRenderer argument; there, the corresponding DrawGlyphRun API is called. 	
            </remarks>	
            <param name="renderer">Pointer to the set of callback functions used to draw parts of a text string.</param>
            <param name="originX">The x-coordinate of the layout's left side.</param>
            <param name="originY">The y-coordinate of the layout's top side.</param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
            <unmanaged>HRESULT Draw([None] void* clientDrawingContext,[None] IDWriteTextRenderer* renderer,[None] FLOAT originX,[None] FLOAT originY)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.Draw(System.Object,SharpDX.DirectWrite.TextRenderer,System.Single,System.Single)">
            <summary>	
             Draws text using the specified client drawing context.	
            </summary>	
            <remarks>	
            To draw text with this method, a textLayout object needs to be created by the application using <see cref="M:SharpDX.DirectWrite.Factory.CreateTextLayout(System.String,System.Int32,SharpDX.DirectWrite.TextFormat,System.Single,System.Single,SharpDX.DirectWrite.TextLayout)"/>. After the textLayout object is obtained, the application calls the  IDWriteTextLayout::Draw method  to draw the text, decorations, and inline objects. The actual drawing is done through the callback interface passed in as the textRenderer argument; there, the corresponding DrawGlyphRun API is called. 	
            </remarks>	
            <param name="clientDrawingContext">An application-defined drawing context. </param>
            <param name="renderer">Pointer to the set of callback functions used to draw parts of a text string.</param>
            <param name="originX">The x-coordinate of the layout's left side.</param>
            <param name="originY">The y-coordinate of the layout's top side.</param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
            <unmanaged>HRESULT Draw([None] void* clientDrawingContext,[None] IDWriteTextRenderer* renderer,[None] FLOAT originX,[None] FLOAT originY)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.GetClusterMetrics">
            <summary>	
            Retrieves logical properties and measurements of each glyph cluster. 	
            </summary>	
            <remarks>	
            If maxClusterCount is not large enough, then E_NOT_SUFFICIENT_BUFFER, which is equivalent to HRESULT_FROM_WIN32(ERROR_INSUFFICIENT_BUFFER), is returned and actualClusterCount is set to the number of clusters needed.  	
            </remarks>	
            <returns>Returns metrics, such as line-break or total advance width, for a glyph cluster. </returns>
            <unmanaged>HRESULT IDWriteTextLayout::GetClusterMetrics([Out, Buffer, Optional] DWRITE_CLUSTER_METRICS* clusterMetrics,[None] int maxClusterCount,[Out] int* actualClusterCount)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.SetDrawingEffect(SharpDX.ComObject,SharpDX.DirectWrite.TextRange)">
            <summary>	
            Sets the application-defined drawing effect. 	
            </summary>	
            <remarks>	
            An <see cref="T:SharpDX.Direct2D1.Brush"/>, such as a color or gradient brush, can be set as a drawing effect if you are using the <see cref="!:RenderTarget.DrawTextLayout(System.Drawing.PointF,SharpDX.DirectWrite.TextLayout,SharpDX.Direct2D1.Brush,SharpDX.Direct2D1.DrawTextOptions)"/> to draw text and that brush will be used to draw the specified range of text.  This drawing effect is associated with the specified range and will be passed back to the application by way of the callback when the range is drawn at drawing time.  	
            </remarks>	
            <param name="drawingEffect">Application-defined drawing effects that apply to the range. This data object will be passed back to the application's drawing callbacks for final rendering. </param>
            <param name="textRange">The text range to which this change applies. </param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code. </returns>
            <unmanaged>HRESULT IDWriteTextLayout::SetDrawingEffect([None] IUnknown* drawingEffect,[None] DWRITE_TEXT_RANGE textRange)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.GetDrawingEffect(System.Int32)">
            <summary>	
            Gets the application-defined drawing effect at the specified text position. 	
            </summary>	
            <param name="currentPosition">The position of the text whose drawing effect is to be retrieved. </param>
            <returns>a reference to  the current application-defined drawing effect. Usually this effect is a foreground brush that  is used in glyph drawing. </returns>
            <unmanaged>HRESULT IDWriteTextLayout::GetDrawingEffect([None] int currentPosition,[Out] IUnknown** drawingEffect,[Out, Optional] DWRITE_TEXT_RANGE* textRange)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.GetDrawingEffect(System.Int32,SharpDX.DirectWrite.TextRange@)">
            <summary>	
            Gets the application-defined drawing effect at the specified text position. 	
            </summary>	
            <param name="currentPosition">The position of the text whose drawing effect is to be retrieved. </param>
            <param name="textRange">Contains the range of text that has the same  formatting as the text at the position specified by currentPosition.  This means the run has the exact  formatting as the position specified, including but not limited to the drawing effect. </param>
            <returns>a reference to  the current application-defined drawing effect. Usually this effect is a foreground brush that  is used in glyph drawing. </returns>
            <unmanaged>HRESULT IDWriteTextLayout::GetDrawingEffect([None] int currentPosition,[Out] IUnknown** drawingEffect,[Out, Optional] DWRITE_TEXT_RANGE* textRange)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.GetFontCollection(System.Int32)">
            <summary>	
            Gets the font collection associated with the text at the specified position. 	
            </summary>	
            <param name="currentPosition">The position of the text to inspect. </param>
            <returns>a  reference to the current font collection.</returns>
            <unmanaged>HRESULT IDWriteTextLayout::GetFontCollection([None] int currentPosition,[Out] IDWriteFontCollection** fontCollection,[Out, Optional] DWRITE_TEXT_RANGE* textRange)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.GetFontFamilyName(System.Int32)">
            <summary>	
            Gets the font family name of the text at the specified position. 	
            </summary>	
            <param name="currentPosition">The position of the text to examine. </param>
            <returns>the font family name </returns>
            <unmanaged>HRESULT IDWriteTextLayout::GetFontFamilyName([None] int currentPosition,[Out, Buffer] wchar_t* fontFamilyName,[None] int nameSize,[Out, Optional] DWRITE_TEXT_RANGE* textRange)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.GetFontFamilyName(System.Int32,SharpDX.DirectWrite.TextRange@)">
            <summary>	
            Gets the font family name of the text at the specified position. 	
            </summary>	
            <param name="currentPosition">The position of the text to examine. </param>
            <param name="textRange">The range of text that has the same  formatting as the text at the position specified by currentPosition.  This means the run has the exact  formatting as the position specified, including but not limited to the font family name. </param>
            <returns>the font family name </returns>
            <unmanaged>HRESULT IDWriteTextLayout::GetFontFamilyName([None] int currentPosition,[Out, Buffer] wchar_t* fontFamilyName,[None] int nameSize,[Out, Optional] DWRITE_TEXT_RANGE* textRange)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.GetFontSize(System.Int32)">
            <summary>	
            Gets the font em height of the text at the specified position. 	
            </summary>	
            <param name="currentPosition">The position of the text to inspect. </param>
            <returns>the size of the font in ems  of the text at the specified position. </returns>
            <unmanaged>HRESULT IDWriteTextLayout::GetFontSize([None] int currentPosition,[Out] float* fontSize,[Out, Optional] DWRITE_TEXT_RANGE* textRange)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.GetFontStretch(System.Int32)">
            <summary>	
            Gets the font stretch of the text at the specified position. 	
            </summary>	
            <param name="currentPosition">The position of the text to inspect. </param>
            <returns>a value which indicates the type of font stretch (also known as width) being applied at the specified position.</returns>
            <unmanaged>HRESULT IDWriteTextLayout::GetFontStretch([None] int currentPosition,[Out] DWRITE_FONT_STRETCH* fontStretch,[Out, Optional] DWRITE_TEXT_RANGE* textRange)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.GetFontStyle(System.Int32)">
            <summary>	
            Gets the font style (also known as slope) of the text at the specified position. 	
            </summary>	
            <param name="currentPosition">The position of the text to inspect. </param>
            <returns>a value which indicates the type of font style (also known as slope or incline) being applied at the specified position.</returns>
            <unmanaged>HRESULT IDWriteTextLayout::GetFontStyle([None] int currentPosition,[Out] DWRITE_FONT_STYLE* fontStyle,[Out, Optional] DWRITE_TEXT_RANGE* textRange)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.GetFontWeight(System.Int32)">
            <summary>	
            Gets the font weight of the text at the specified position. 	
            </summary>	
            <param name="currentPosition">The position of the text to inspect. </param>
            <returns>a value which indicates the type of font weight being applied at the specified position.</returns>
            <unmanaged>HRESULT IDWriteTextLayout::GetFontWeight([None] int currentPosition,[Out] DWRITE_FONT_WEIGHT* fontWeight,[Out, Optional] DWRITE_TEXT_RANGE* textRange)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.GetInlineObject(System.Int32)">
            <summary>	
            Gets the inline object at the specified position. 	
            </summary>	
            <param name="currentPosition">The specified text position. </param>
            <returns>an application-defined inline object. </returns>
            <unmanaged>HRESULT IDWriteTextLayout::GetInlineObject([None] int currentPosition,[Out] IDWriteInlineObject** inlineObject,[Out, Optional] DWRITE_TEXT_RANGE* textRange)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.GetLineMetrics">
            <summary>	
            Retrieves the information about each individual text line of the  text string. 	
            </summary>	
            <remarks>	
            If maxLineCount is not large enough E_NOT_SUFFICIENT_BUFFER, which is equivalent to HRESULT_FROM_WIN32(ERROR_INSUFFICIENT_BUFFER), is returned and *actualLineCount is set to the number of lines needed.  	
            </remarks>	
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code. </returns>
            <unmanaged>HRESULT IDWriteTextLayout::GetLineMetrics([Out, Buffer, Optional] DWRITE_LINE_METRICS* lineMetrics,[None] int maxLineCount,[Out] int* actualLineCount)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.GetLocaleName(System.Int32)">
            <summary>	
            Gets the locale name of the text at the specified position. 	
            </summary>	
            <param name="currentPosition">The position of the text to inspect. </param>
            <returns>the locale name of the text at the specified position. </returns>
            <unmanaged>HRESULT IDWriteTextLayout::GetLocaleName([None] int currentPosition,[Out, Buffer] wchar_t* localeName,[None] int nameSize,[Out, Optional] DWRITE_TEXT_RANGE* textRange)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.GetLocaleName(System.Int32,SharpDX.DirectWrite.TextRange@)">
            <summary>	
            Gets the locale name of the text at the specified position. 	
            </summary>	
            <param name="currentPosition">The position of the text to inspect. </param>
            <param name="textRange">The range of text that has the same  formatting as the text at the position specified by currentPosition.  This means the run has the exact  formatting as the position specified, including but not limited to the locale name. </param>
            <returns>the locale name of the text at the specified position. </returns>
            <unmanaged>HRESULT IDWriteTextLayout::GetLocaleName([None] int currentPosition,[Out, Buffer] wchar_t* localeName,[None] int nameSize,[Out, Optional] DWRITE_TEXT_RANGE* textRange)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.HasStrikethrough(System.Int32)">
            <summary>	
            Get the strikethrough presence of the text at the specified position. 	
            </summary>	
            <param name="currentPosition">The position of the text to inspect. </param>
            <returns>A Boolean  flag that indicates whether strikethrough is present at the position indicated by currentPosition. </returns>
            <unmanaged>HRESULT IDWriteTextLayout::GetStrikethrough([None] int currentPosition,[Out] BOOL* hasStrikethrough,[Out, Optional] DWRITE_TEXT_RANGE* textRange)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.GetTypography(System.Int32)">
            <summary>	
            Gets the typography setting of the text at the specified position. 	
            </summary>	
            <param name="currentPosition">The position of the text to inspect. </param>
            <returns>a  reference to the current typography setting. </returns>
            <unmanaged>HRESULT IDWriteTextLayout::GetTypography([None] int currentPosition,[Out] IDWriteTypography** typography,[Out, Optional] DWRITE_TEXT_RANGE* textRange)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.HasUnderline(System.Int32)">
            <summary>	
            Gets the underline presence of the text at the specified position. 	
            </summary>	
            <param name="currentPosition">The current text position. </param>
            <returns>A Boolean  flag that indicates whether underline is present at the position indicated by currentPosition. </returns>
            <unmanaged>HRESULT IDWriteTextLayout::GetUnderline([None] int currentPosition,[Out] BOOL* hasUnderline,[Out, Optional] DWRITE_TEXT_RANGE* textRange)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.HitTestTextRange(System.Int32,System.Int32,System.Single,System.Single)">
            <summary>	
            The application calls this function to get a set of hit-test metrics corresponding to a range of text positions. 
            One of the main usages is to implement highlight selection of the text string. 
            The function returns E_NOT_SUFFICIENT_BUFFER, which is equivalent to HRESULT_FROM_WIN32(ERROR_INSUFFICIENT_BUFFER), 
            when the buffer size of hitTestMetrics is too small to hold all the regions calculated by the function. 
            In this situation, the function sets the output value *actualHitTestMetricsCount to the number of geometries calculated. 
            The application is responsible for allocating a new buffer of greater size and calling the function again. 
            A good value to use as an initial value for maxHitTestMetricsCount may be calculated from the following equation: 
            maxHitTestMetricsCount = lineCount * maxBidiReorderingDepth where lineCount is obtained from the value of the output argument *actualLineCount (from the function IDWriteTextLayout::GetLineLengths), and the maxBidiReorderingDepth value from the DWRITE_TEXT_METRICS structure of the output argument *textMetrics (from the function IDWriteFactory::CreateTextLayout). 	
            </summary>	
            <param name="textPosition">The first text position of the specified range. </param>
            <param name="textLength">The number of positions of the specified range. </param>
            <param name="originX">The origin pixel location X at the left of the layout box. This offset is added to the hit-test metrics returned. </param>
            <param name="originY">The origin pixel location Y at the top of the layout box. This offset is added to the hit-test metrics returned. </param>
            <returns>a reference to a buffer of the output geometry fully enclosing the specified position range.  The buffer must be at least as large as maxHitTestMetricsCount. </returns>
            <unmanaged>HRESULT IDWriteTextLayout::HitTestTextRange([None] int textPosition,[None] int textLength,[None] float originX,[None] float originY,[Out, Buffer, Optional] DWRITE_HIT_TEST_METRICS* hitTestMetrics,[None] int maxHitTestMetricsCount,[Out] int* actualHitTestMetricsCount)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.SetInlineObject(SharpDX.DirectWrite.InlineObject,SharpDX.DirectWrite.TextRange)">
            <summary>	
            Sets the inline object. 	
            </summary>	
            <remarks>	
            The application may call this function to specify the set of properties describing an application-defined inline object for specific range.  This inline object applies to the specified range and will be passed back to the application by way of the DrawInlineObject callback when the range is drawn. Any text in that range will be suppressed.  	
            </remarks>	
            <param name="inlineObject">An application-defined inline object.  </param>
            <param name="textRange">Text range to which this change applies. </param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code. </returns>
            <unmanaged>HRESULT IDWriteTextLayout::SetInlineObject([None] IDWriteInlineObject* inlineObject,[None] DWRITE_TEXT_RANGE textRange)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.DirectWrite.TextLayout"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.SetMaxWidth(System.Single)">
            <summary>	
            Sets the layout maximum width.	
            </summary>	
            <param name="maxWidth"><para>A value that indicates the maximum width of the layout box.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::SetMaxWidth']/*"/>	
            <unmanaged>HRESULT IDWriteTextLayout::SetMaxWidth([In] float maxWidth)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.SetMaxHeight(System.Single)">
            <summary>	
            Sets the layout maximum height.	
            </summary>	
            <param name="maxHeight"><para>A value that indicates the maximum height of the layout box. </para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::SetMaxHeight']/*"/>	
            <unmanaged>HRESULT IDWriteTextLayout::SetMaxHeight([In] float maxHeight)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.SetFontCollection(SharpDX.DirectWrite.FontCollection,SharpDX.DirectWrite.TextRange)">
            <summary>	
            Sets the font collection.	
            </summary>	
            <param name="fontCollection"><para>The font collection to set.</para></param>	
            <param name="textRange"><para>Text range to which this change applies.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::SetFontCollection']/*"/>	
            <unmanaged>HRESULT IDWriteTextLayout::SetFontCollection([In] IDWriteFontCollection* fontCollection,[In] DWRITE_TEXT_RANGE textRange)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.SetFontFamilyName(System.String,SharpDX.DirectWrite.TextRange)">
            <summary>	
            Sets null-terminated font family name for text within a specified  text range.	
            </summary>	
            <param name="fontFamilyName"><para>The font family name that applies to the entire text string within the range specified by textRange.</para></param>	
            <param name="textRange"><para>Text range to which this change applies.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::SetFontFamilyName']/*"/>	
            <unmanaged>HRESULT IDWriteTextLayout::SetFontFamilyName([In] const wchar_t* fontFamilyName,[In] DWRITE_TEXT_RANGE textRange)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.SetFontWeight(SharpDX.DirectWrite.FontWeight,SharpDX.DirectWrite.TextRange)">
            <summary>	
            Sets the font weight for text within a text range specified by a <see cref="T:SharpDX.DirectWrite.TextRange"/> structure.	
            </summary>	
            <param name="fontWeight">No documentation.</param>	
            <param name="textRange">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The font weight can be set to one of the predefined font weight values provided in the <see cref="T:SharpDX.DirectWrite.FontWeight"/> enumeration or an integer from 1 to 999.  Values outside this range will cause the method to fail with an E_INVALIDARG return value.The following illustration shows an example of Normal and UltraBold weights for the Palatino Linotype typeface.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::SetFontWeight']/*"/>	
            <unmanaged>HRESULT IDWriteTextLayout::SetFontWeight([In] DWRITE_FONT_WEIGHT fontWeight,[In] DWRITE_TEXT_RANGE textRange)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.SetFontStyle(SharpDX.DirectWrite.FontStyle,SharpDX.DirectWrite.TextRange)">
            <summary>	
            Sets the font style for  text within a text range specified by a <see cref="T:SharpDX.DirectWrite.TextRange"/> structure.	
            </summary>	
            <param name="fontStyle">No documentation.</param>	
            <param name="textRange">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The font style can be set to Normal, Italic or Oblique. The following illustration shows  three styles for the Palatino font.  For more information, see <see cref="T:SharpDX.DirectWrite.FontStyle"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::SetFontStyle']/*"/>	
            <unmanaged>HRESULT IDWriteTextLayout::SetFontStyle([In] DWRITE_FONT_STYLE fontStyle,[In] DWRITE_TEXT_RANGE textRange)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.SetFontStretch(SharpDX.DirectWrite.FontStretch,SharpDX.DirectWrite.TextRange)">
            <summary>	
            Sets the  font stretch for text within a specified text range.	
            </summary>	
            <param name="fontStretch"><para>A value which indicates the type of font stretch for text within the range specified by textRange.</para></param>	
            <param name="textRange"><para>Text range to which this change applies.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::SetFontStretch']/*"/>	
            <unmanaged>HRESULT IDWriteTextLayout::SetFontStretch([In] DWRITE_FONT_STRETCH fontStretch,[In] DWRITE_TEXT_RANGE textRange)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.SetFontSize(System.Single,SharpDX.DirectWrite.TextRange)">
            <summary>	
            Sets the font size in DIP units for text within a specified text range.	
            </summary>	
            <param name="fontSize"><para>The  font size in DIP units to be set for   text in the range specified by textRange. </para></param>	
            <param name="textRange"><para>Text range to which this change applies.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::SetFontSize']/*"/>	
            <unmanaged>HRESULT IDWriteTextLayout::SetFontSize([In] float fontSize,[In] DWRITE_TEXT_RANGE textRange)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.SetUnderline(System.Boolean,SharpDX.DirectWrite.TextRange)">
            <summary>	
            Sets underlining for text within a specified text range.	
            </summary>	
            <param name="hasUnderline"><para>A Boolean flag that indicates whether underline takes place within a specified text range.</para></param>	
            <param name="textRange"><para>Text range to which this change applies.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::SetUnderline']/*"/>	
            <unmanaged>HRESULT IDWriteTextLayout::SetUnderline([In] BOOL hasUnderline,[In] DWRITE_TEXT_RANGE textRange)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.SetStrikethrough(System.Boolean,SharpDX.DirectWrite.TextRange)">
            <summary>	
            Sets strikethrough for text within a specified text range.	
            </summary>	
            <param name="hasStrikethrough"><para>A Boolean flag that indicates whether strikethrough takes place in the range specified by textRange.</para></param>	
            <param name="textRange"><para>Text range to which this change applies.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::SetStrikethrough']/*"/>	
            <unmanaged>HRESULT IDWriteTextLayout::SetStrikethrough([In] BOOL hasStrikethrough,[In] DWRITE_TEXT_RANGE textRange)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.SetDrawingEffect_(System.IntPtr,SharpDX.DirectWrite.TextRange)">
            <summary>	
            Sets the application-defined drawing effect.	
            </summary>	
            <param name="drawingEffect"><para>Application-defined drawing effects that apply to the range. This data object will be passed back to the application's drawing callbacks for final rendering.</para></param>	
            <param name="textRange"><para>The text range to which this change applies.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            An <see cref="T:SharpDX.Direct2D1.Brush"/>, such as a color or gradient brush, can be set as a drawing effect if you are using the <see cref="M:SharpDX.Direct2D1.RenderTarget.DrawTextLayout(SharpDX.DrawingPointF,SharpDX.DirectWrite.TextLayout,SharpDX.Direct2D1.Brush,SharpDX.Direct2D1.DrawTextOptions)"/> to draw text and that brush will be used to draw the specified range of text.This drawing effect is associated with the specified range and will be passed back to the application by way of the callback when the range is drawn at drawing time.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::SetDrawingEffect']/*"/>	
            <unmanaged>HRESULT IDWriteTextLayout::SetDrawingEffect([In] void* drawingEffect,[In] DWRITE_TEXT_RANGE textRange)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.SetInlineObject_(System.IntPtr,SharpDX.DirectWrite.TextRange)">
            <summary>	
            Sets the inline object.	
            </summary>	
            <param name="inlineObject"><para>An application-defined inline object. </para></param>	
            <param name="textRange"><para>Text range to which this change applies.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The application may call this function to specify the set of properties describing an application-defined inline object for specific range.This inline object applies to the specified range and will be passed back to the application by way of the DrawInlineObject callback when the range is drawn. Any text in that range will be suppressed.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::SetInlineObject']/*"/>	
            <unmanaged>HRESULT IDWriteTextLayout::SetInlineObject([In] IDWriteInlineObject* inlineObject,[In] DWRITE_TEXT_RANGE textRange)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.SetTypography(SharpDX.DirectWrite.Typography,SharpDX.DirectWrite.TextRange)">
            <summary>	
            Sets  font typography features for text within a specified text range.	
            </summary>	
            <param name="typography"><para>Pointer to font typography settings. </para></param>	
            <param name="textRange"><para>Text range to which this change applies.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::SetTypography']/*"/>	
            <unmanaged>HRESULT IDWriteTextLayout::SetTypography([In] IDWriteTypography* typography,[In] DWRITE_TEXT_RANGE textRange)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.SetLocaleName(System.String,SharpDX.DirectWrite.TextRange)">
            <summary>	
            Sets the locale name for text within a specified text range.	
            </summary>	
            <param name="localeName"><para>A null-terminated locale name string.</para></param>	
            <param name="textRange"><para>Text range to which this change applies.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::SetLocaleName']/*"/>	
            <unmanaged>HRESULT IDWriteTextLayout::SetLocaleName([In] const wchar_t* localeName,[In] DWRITE_TEXT_RANGE textRange)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.GetMaxWidth">
            <summary>	
            Gets the layout maximum width.	
            </summary>	
            <returns>Returns the layout maximum width.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::GetMaxWidth']/*"/>	
            <unmanaged>float IDWriteTextLayout::GetMaxWidth()</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.GetMaxHeight">
            <summary>	
            Gets the layout maximum height.	
            </summary>	
            <returns>The layout maximum height.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::GetMaxHeight']/*"/>	
            <unmanaged>float IDWriteTextLayout::GetMaxHeight()</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.GetFontCollection(System.Int32,SharpDX.DirectWrite.TextRange@)">
            <summary>	
            Gets the font collection associated with the text at the specified position.	
            </summary>	
            <param name="currentPosition"><para>The position of the text to inspect.</para></param>	
            <param name="textRange"><para>The range of text that has the same  formatting as the text at the position specified by currentPosition.  This means the run has the exact  formatting as the position specified, including but not limited to the underline.</para></param>	
            <returns><para>Contains an address of a  reference to the current font collection.</para></returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::GetFontCollection']/*"/>	
            <unmanaged>HRESULT IDWriteTextLayout::GetFontCollection([In] unsigned int currentPosition,[Out] IDWriteFontCollection** fontCollection,[Out, Optional] DWRITE_TEXT_RANGE* textRange)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.GetFontFamilyNameLength(System.Int32,System.Int32@,SharpDX.DirectWrite.TextRange@)">
            <summary>	
            Get the length of the font family name at the current position.	
            </summary>	
            <param name="currentPosition"><para>The current text position.</para></param>	
            <param name="nameLength"><para>When this method returns, contains the size of the character array containing the font family name, in character count, not including the terminated <c>null</c> character.</para></param>	
            <param name="textRange"><para>The range of text that has the same  formatting as the text at the position specified by currentPosition.  This means the run has the exact  formatting as the position specified, including but not limited to the font family.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::GetFontFamilyNameLength']/*"/>	
            <unmanaged>HRESULT IDWriteTextLayout::GetFontFamilyNameLength([In] unsigned int currentPosition,[Out] unsigned int* nameLength,[Out, Optional] DWRITE_TEXT_RANGE* textRange)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.GetFontFamilyName(System.Int32,System.IntPtr,System.Int32,SharpDX.DirectWrite.TextRange@)">
            <summary>	
            Copies the font family name of the text at the specified position.	
            </summary>	
            <param name="currentPosition"><para>The position of the text to examine.</para></param>	
            <param name="fontFamilyName"><para>When this method returns, contains an array of characters that receives the current font family name. You must allocate storage for this parameter.</para></param>	
            <param name="nameSize"><para>The size of the character array in character count including the terminated <c>null</c> character.</para></param>	
            <param name="textRange"><para>The range of text that has the same  formatting as the text at the position specified by currentPosition.  This means the run has the exact  formatting as the position specified, including but not limited to the font family name.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::GetFontFamilyName']/*"/>	
            <unmanaged>HRESULT IDWriteTextLayout::GetFontFamilyName([In] unsigned int currentPosition,[Out, Buffer] wchar_t* fontFamilyName,[In] unsigned int nameSize,[Out, Optional] DWRITE_TEXT_RANGE* textRange)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.GetFontWeight(System.Int32,SharpDX.DirectWrite.TextRange@)">
            <summary>	
            Gets the font weight of the text at the specified position.	
            </summary>	
            <param name="currentPosition"><para>The position of the text to inspect.</para></param>	
            <param name="textRange"><para>The range of text that has the same  formatting as the text at the position specified by currentPosition.  This means the run has the exact  formatting as the position specified, including but not limited to the font weight.</para></param>	
            <returns><para>When this method returns, contains a value which indicates the type of font weight being applied at the specified position.</para></returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::GetFontWeight']/*"/>	
            <unmanaged>HRESULT IDWriteTextLayout::GetFontWeight([In] unsigned int currentPosition,[Out] DWRITE_FONT_WEIGHT* fontWeight,[Out, Optional] DWRITE_TEXT_RANGE* textRange)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.GetFontStyle(System.Int32,SharpDX.DirectWrite.TextRange@)">
            <summary>	
            Gets the font style (also known as slope) of the text at the specified position.	
            </summary>	
            <param name="currentPosition"><para>The position of the text to inspect.</para></param>	
            <param name="textRange"><para>The range of text that has the same  formatting as the text at the position specified by currentPosition.  This means the run has the exact  formatting as the position specified, including but not limited to the font style.</para></param>	
            <returns><para>When this method returns, contains a value which indicates the type of font style (also known as slope or incline) being applied at the specified position.</para></returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::GetFontStyle']/*"/>	
            <unmanaged>HRESULT IDWriteTextLayout::GetFontStyle([In] unsigned int currentPosition,[Out] DWRITE_FONT_STYLE* fontStyle,[Out, Optional] DWRITE_TEXT_RANGE* textRange)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.GetFontStretch(System.Int32,SharpDX.DirectWrite.TextRange@)">
            <summary>	
            Gets the font stretch of the text at the specified position.	
            </summary>	
            <param name="currentPosition"><para>The position of the text to inspect.</para></param>	
            <param name="textRange"><para>The range of text that has the same  formatting as the text at the position specified by currentPosition.  This means the run has the exact  formatting as the position specified, including but not limited to the font stretch.</para></param>	
            <returns><para>When this method returns, contains a value which indicates the type of font stretch (also known as width) being applied at the specified position.</para></returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::GetFontStretch']/*"/>	
            <unmanaged>HRESULT IDWriteTextLayout::GetFontStretch([In] unsigned int currentPosition,[Out] DWRITE_FONT_STRETCH* fontStretch,[Out, Optional] DWRITE_TEXT_RANGE* textRange)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.GetFontSize(System.Int32,SharpDX.DirectWrite.TextRange@)">
            <summary>	
            Gets the font em height of the text at the specified position.	
            </summary>	
            <param name="currentPosition"><para>The position of the text to inspect.</para></param>	
            <param name="textRange"><para>The range of text that has the same  formatting as the text at the position specified by currentPosition.  This means the run has the exact  formatting as the position specified, including but not limited to the font size.</para></param>	
            <returns><para>When this method returns, contains the size of the font in ems  of the text at the specified position.</para></returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::GetFontSize']/*"/>	
            <unmanaged>HRESULT IDWriteTextLayout::GetFontSize([In] unsigned int currentPosition,[Out] float* fontSize,[Out, Optional] DWRITE_TEXT_RANGE* textRange)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.HasUnderline(System.Int32,SharpDX.DirectWrite.TextRange@)">
            <summary>	
            Gets the underline presence of the text at the specified position.	
            </summary>	
            <param name="currentPosition"><para>The current text position.</para></param>	
            <param name="textRange"><para>The range of text that has the same  formatting as the text at the position specified by currentPosition.  This means the run has the exact  formatting as the position specified, including but not limited to the underline.</para></param>	
            <returns><para>A Boolean  flag that indicates whether underline is present at the position indicated by currentPosition.</para></returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::GetUnderline']/*"/>	
            <unmanaged>HRESULT IDWriteTextLayout::GetUnderline([In] unsigned int currentPosition,[Out] BOOL* hasUnderline,[Out, Optional] DWRITE_TEXT_RANGE* textRange)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.HasStrikethrough(System.Int32,SharpDX.DirectWrite.TextRange@)">
            <summary>	
            Get the strikethrough presence of the text at the specified position.	
            </summary>	
            <param name="currentPosition"><para>The position of the text to inspect.</para></param>	
            <param name="textRange"><para>Contains the range of text that has the same  formatting as the text at the position specified by currentPosition.  This means the run has the exact  formatting as the position specified, including but not limited to strikethrough.</para></param>	
            <returns><para>A Boolean  flag that indicates whether strikethrough is present at the position indicated by currentPosition.</para></returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::GetStrikethrough']/*"/>	
            <unmanaged>HRESULT IDWriteTextLayout::GetStrikethrough([In] unsigned int currentPosition,[Out] BOOL* hasStrikethrough,[Out, Optional] DWRITE_TEXT_RANGE* textRange)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.GetDrawingEffect_(System.Int32,SharpDX.DirectWrite.TextRange@)">
            <summary>	
            Gets the application-defined drawing effect at the specified text position.	
            </summary>	
            <param name="currentPosition"><para>The position of the text whose drawing effect is to be retrieved.</para></param>	
            <param name="textRange"><para>Contains the range of text that has the same  formatting as the text at the position specified by currentPosition.  This means the run has the exact  formatting as the position specified, including but not limited to the drawing effect.</para></param>	
            <returns><para>When this method returns, contains an address of a reference to  the current application-defined drawing effect. Usually this effect is a foreground brush that  is used in glyph drawing.</para></returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::GetDrawingEffect']/*"/>	
            <unmanaged>HRESULT IDWriteTextLayout::GetDrawingEffect([In] unsigned int currentPosition,[Out] void** drawingEffect,[Out, Optional] DWRITE_TEXT_RANGE* textRange)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.GetInlineObject(System.Int32,SharpDX.DirectWrite.TextRange@)">
            <summary>	
            Gets the inline object at the specified position.	
            </summary>	
            <param name="currentPosition"><para>The specified text position.</para></param>	
            <param name="textRange"><para>The range of text that has the same  formatting as the text at the position specified by currentPosition.  This means the run has the exact  formatting as the position specified, including but not limited to the inline object.</para></param>	
            <returns><para>Contains the application-defined inline object.</para></returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::GetInlineObject']/*"/>	
            <unmanaged>HRESULT IDWriteTextLayout::GetInlineObject([In] unsigned int currentPosition,[Out] IDWriteInlineObject** inlineObject,[Out, Optional] DWRITE_TEXT_RANGE* textRange)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.GetTypography(System.Int32,SharpDX.DirectWrite.TextRange@)">
            <summary>	
            Gets the typography setting of the text at the specified position.	
            </summary>	
            <param name="currentPosition"><para>The position of the text to inspect.</para></param>	
            <param name="textRange"><para>The range of text that has the same  formatting as the text at the position specified by currentPosition.  This means the run has the exact  formatting as the position specified, including but not limited to the typography.</para></param>	
            <returns><para>When this method returns, contains an address of a  reference to the current typography setting.</para></returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::GetTypography']/*"/>	
            <unmanaged>HRESULT IDWriteTextLayout::GetTypography([In] unsigned int currentPosition,[Out] IDWriteTypography** typography,[Out, Optional] DWRITE_TEXT_RANGE* textRange)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.GetLocaleNameLength(System.Int32,System.Int32@,SharpDX.DirectWrite.TextRange@)">
            <summary>	
            Gets the length of the locale name of the text at the specified position.	
            </summary>	
            <param name="currentPosition"><para>The position of the text to inspect.</para></param>	
            <param name="nameLength"><para>Size of the character array, in character count, not including the terminated <c>null</c> character.</para></param>	
            <param name="textRange"><para>The range of text that has the same  formatting as the text at the position specified by currentPosition.  This means the run has the exact  formatting as the position specified, including but not limited to the locale name.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::GetLocaleNameLength']/*"/>	
            <unmanaged>HRESULT IDWriteTextLayout::GetLocaleNameLength([In] unsigned int currentPosition,[Out] unsigned int* nameLength,[Out, Optional] DWRITE_TEXT_RANGE* textRange)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.GetLocaleName(System.Int32,System.IntPtr,System.Int32,SharpDX.DirectWrite.TextRange@)">
            <summary>	
            Gets the locale name of the text at the specified position.	
            </summary>	
            <param name="currentPosition"><para>The position of the text to inspect.</para></param>	
            <param name="localeName"><para>When this method returns, contains the character array receiving the current locale name.</para></param>	
            <param name="nameSize"><para>Size of the character array, in character count, including the terminated <c>null</c> character.</para></param>	
            <param name="textRange"><para>The range of text that has the same  formatting as the text at the position specified by currentPosition.  This means the run has the exact  formatting as the position specified, including but not limited to the locale name.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::GetLocaleName']/*"/>	
            <unmanaged>HRESULT IDWriteTextLayout::GetLocaleName([In] unsigned int currentPosition,[Out, Buffer] wchar_t* localeName,[In] unsigned int nameSize,[Out, Optional] DWRITE_TEXT_RANGE* textRange)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.Draw_(System.IntPtr,System.IntPtr,System.Single,System.Single)">
            <summary>	
            Draws text using the specified client drawing context.	
            </summary>	
            <param name="clientDrawingContext"><para>An application-defined drawing context. </para></param>	
            <param name="renderer"><para>Pointer to the set of callback functions used to draw parts of a text string.</para></param>	
            <param name="originX"><para>The x-coordinate of the layout's left side.</para></param>	
            <param name="originY"><para>The y-coordinate of the layout's top side.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            To draw text with this method, a textLayout object needs to be created by the application using <see cref="M:SharpDX.DirectWrite.Factory.CreateTextLayout(System.String,System.Int32,SharpDX.DirectWrite.TextFormat,System.Single,System.Single,SharpDX.DirectWrite.TextLayout)"/>.After the textLayout object is obtained, the application calls the  <see cref="M:SharpDX.DirectWrite.TextLayout.Draw_(System.IntPtr,System.IntPtr,System.Single,System.Single)"/> method  to draw the text, decorations, and inline objects. The actual drawing is done through the callback interface passed in as the textRenderer argument; there, the corresponding DrawGlyphRun API is called.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::Draw']/*"/>	
            <unmanaged>HRESULT IDWriteTextLayout::Draw([In, Optional] void* clientDrawingContext,[In] IDWriteTextRenderer* renderer,[In] float originX,[In] float originY)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.GetLineMetrics(SharpDX.DirectWrite.LineMetrics[],System.Int32,System.Int32@)">
            <summary>	
            Retrieves the information about each individual text line of the  text string.	
            </summary>	
            <param name="lineMetrics"><para>When this method returns, contains a reference to an array of structures containing various calculated length values of individual text lines.</para></param>	
            <param name="maxLineCount"><para>The maximum size of the lineMetrics array.</para></param>	
            <param name="actualLineCount"><para>When this method returns, contains the actual size of the lineMetrics array that is needed.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            If maxLineCount is not large enough E_NOT_SUFFICIENT_BUFFER, which is equivalent to HRESULT_FROM_WIN32(<see cref="F:SharpDX.Win32.ErrorCode.InsufficientBuffer"/>), is returned and *actualLineCount is set to the number of lines needed.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::GetLineMetrics']/*"/>	
            <unmanaged>HRESULT IDWriteTextLayout::GetLineMetrics([Out, Buffer, Optional] DWRITE_LINE_METRICS* lineMetrics,[In] unsigned int maxLineCount,[Out] unsigned int* actualLineCount)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.GetMetrics(SharpDX.DirectWrite.TextMetrics@)">
            <summary>	
            Retrieves overall metrics for the formatted string.	
            </summary>	
            <param name="textMetrics"><para>When this method returns, contains the measured distances of text and associated content after being formatted.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::GetMetrics']/*"/>	
            <unmanaged>HRESULT IDWriteTextLayout::GetMetrics([Out] DWRITE_TEXT_METRICS* textMetrics)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.GetOverhangMetrics(SharpDX.DirectWrite.OverhangMetrics@)">
            <summary>	
            Returns the overhangs (in DIPs) of the layout and all objects contained in it, including text glyphs and inline objects.	
            </summary>	
            <param name="overhangs"><para>Overshoots of visible extents (in DIPs) outside the layout.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            Underlines and strikethroughs do not contribute to the black box determination, since these are actually drawn by the renderer, which is allowed to draw them in any variety of styles.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::GetOverhangMetrics']/*"/>	
            <unmanaged>HRESULT IDWriteTextLayout::GetOverhangMetrics([Out] DWRITE_OVERHANG_METRICS* overhangs)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.GetClusterMetrics(SharpDX.DirectWrite.ClusterMetrics[],System.Int32,System.Int32@)">
            <summary>	
            Retrieves logical properties and measurements of each glyph cluster.	
            </summary>	
            <param name="clusterMetrics"><para>When this method returns, contains metrics, such as line-break or total advance width, for a glyph cluster.</para></param>	
            <param name="maxClusterCount"><para>The maximum size of the clusterMetrics array.</para></param>	
            <param name="actualClusterCount"><para>When this method returns, contains the actual size of the clusterMetrics array that is needed.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            If maxClusterCount is not large enough, then E_NOT_SUFFICIENT_BUFFER, which is equivalent to HRESULT_FROM_WIN32(<see cref="F:SharpDX.Win32.ErrorCode.InsufficientBuffer"/>), is returned and actualClusterCount is set to the number of clusters needed.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::GetClusterMetrics']/*"/>	
            <unmanaged>HRESULT IDWriteTextLayout::GetClusterMetrics([Out, Buffer, Optional] DWRITE_CLUSTER_METRICS* clusterMetrics,[In] unsigned int maxClusterCount,[Out] unsigned int* actualClusterCount)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.DetermineMinWidth">
            <summary>	
            Determines the minimum possible width the layout can be set to without emergency breaking between the characters of whole words occurring.	
            </summary>	
            <returns><para>Minimum width.</para></returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::DetermineMinWidth']/*"/>	
            <unmanaged>HRESULT IDWriteTextLayout::DetermineMinWidth([Out] float* minWidth)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.HitTestPoint(System.Single,System.Single,System.Boolean@,System.Boolean@)">
            <summary>	
            The application calls this function passing in a specific pixel location relative to the top-left location of the layout box and obtains the information about the correspondent hit-test metrics of the text string where the hit-test has occurred. When the specified pixel location is outside the text string, the function sets the output value *isInside to <see cref="F:SharpDX.Result.False"/>.	
            </summary>	
            <param name="pointX"><para>The pixel location X to hit-test, relative to the top-left location of the layout box.</para></param>	
            <param name="pointY"><para>The pixel location Y to hit-test, relative to the top-left location of the layout box.</para></param>	
            <param name="isTrailingHit"><para>An output flag that indicates whether the hit-test location is at the leading or the trailing side of the character. When the output *isInside value is set to <see cref="F:SharpDX.Result.False"/>, this value is set according to the output hitTestMetrics-&gt;textPosition value to represent the edge closest to the hit-test location.</para></param>	
            <param name="isInside"><para>An output flag that indicates whether the hit-test location is inside the text string. When <see cref="F:SharpDX.Result.False"/>, the position nearest the text's edge is returned.</para></param>	
            <returns><para>The output geometry fully enclosing the hit-test location. When the output *isInside value is set to <see cref="F:SharpDX.Result.False"/>, this structure represents the geometry enclosing the edge closest to the hit-test location.</para></returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::HitTestPoint']/*"/>	
            <unmanaged>HRESULT IDWriteTextLayout::HitTestPoint([In] float pointX,[In] float pointY,[Out] BOOL* isTrailingHit,[Out] BOOL* isInside,[Out] DWRITE_HIT_TEST_METRICS* hitTestMetrics)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.HitTestTextPosition(System.Int32,System.Boolean,System.Single@,System.Single@)">
            <summary>	
            The application calls this function to get the pixel location relative to the top-left of the layout box given the text position and the logical side of the position. This function is normally used as part of caret positioning of text where the caret is drawn at the location corresponding to the current text editing position. It may also be used as a way to programmatically obtain the geometry of a particular text position in UI automation.	
            </summary>	
            <param name="textPosition"><para>The text position used to get the pixel location.</para></param>	
            <param name="isTrailingHit"><para>A Boolean flag that indicates whether the pixel location is of the leading or the trailing side of the specified text position.</para></param>	
            <param name="ointXRef"><para>When this method returns, contains the output pixel location X, relative to the top-left location of the layout box.</para></param>	
            <param name="ointYRef"><para>When this method returns, contains the output pixel location Y, relative to the top-left location of the layout box.</para></param>	
            <returns><para>When this method returns, contains the output geometry fully enclosing the specified text position.</para></returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::HitTestTextPosition']/*"/>	
            <unmanaged>HRESULT IDWriteTextLayout::HitTestTextPosition([In] unsigned int textPosition,[In] BOOL isTrailingHit,[Out] float* pointX,[Out] float* pointY,[Out] DWRITE_HIT_TEST_METRICS* hitTestMetrics)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextLayout.HitTestTextRange(System.Int32,System.Int32,System.Single,System.Single,SharpDX.DirectWrite.HitTestMetrics[],System.Int32,System.Int32@)">
            <summary>	
            The application calls this function to get a set of hit-test metrics corresponding to a range of text positions. One of the main usages is to implement highlight selection of the text string. The function returns E_NOT_SUFFICIENT_BUFFER, which is equivalent to HRESULT_FROM_WIN32(<see cref="F:SharpDX.Win32.ErrorCode.InsufficientBuffer"/>), when the buffer size of hitTestMetrics is too small to hold all the regions calculated by the function. In this situation, the function sets the output value *actualHitTestMetricsCount to the number of geometries calculated. The application is responsible for allocating a new buffer of greater size and calling the function again. A good value to use as an initial value for maxHitTestMetricsCount may be calculated from the following equation: maxHitTestMetricsCount = lineCount * maxBidiReorderingDepth where lineCount is obtained from the value of the output argument *actualLineCount (from the function IDWriteTextLayout::GetLineLengths), and the maxBidiReorderingDepth value from the <see cref="T:SharpDX.DirectWrite.TextMetrics"/> structure of the output argument *textMetrics (from the function <see cref="M:SharpDX.DirectWrite.Factory.CreateTextLayout(System.String,System.Int32,SharpDX.DirectWrite.TextFormat,System.Single,System.Single,SharpDX.DirectWrite.TextLayout)"/>).	
            </summary>	
            <param name="textPosition"><para>The first text position of the specified range.</para></param>	
            <param name="textLength"><para>The number of positions of the specified range.</para></param>	
            <param name="originX"><para>The origin pixel location X at the left of the layout box. This offset is added to the hit-test metrics returned.</para></param>	
            <param name="originY"><para>The origin pixel location Y at the top of the layout box. This offset is added to the hit-test metrics returned.</para></param>	
            <param name="hitTestMetrics"><para>When this method returns, contains a reference to a buffer of the output geometry fully enclosing the specified position range.  The buffer must be at least as large as maxHitTestMetricsCount.</para></param>	
            <param name="maxHitTestMetricsCount"><para>Maximum number of boxes hitTestMetrics could hold in its buffer memory.</para></param>	
            <param name="actualHitTestMetricsCount"><para>Actual number of geometries hitTestMetrics holds in its buffer memory.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::HitTestTextRange']/*"/>	
            <unmanaged>HRESULT IDWriteTextLayout::HitTestTextRange([In] unsigned int textPosition,[In] unsigned int textLength,[In] float originX,[In] float originY,[Out, Buffer, Optional] DWRITE_HIT_TEST_METRICS* hitTestMetrics,[In] unsigned int maxHitTestMetricsCount,[Out] unsigned int* actualHitTestMetricsCount)</unmanaged>	
        </member>
        <member name="P:SharpDX.DirectWrite.TextLayout.MaxWidth">
            <summary>	
            Gets the layout maximum width.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::GetMaxWidth']/*"/>	
            <unmanaged>GetMaxWidth</unmanaged>	
            <unmanaged>float IDWriteTextLayout::GetMaxWidth()</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.TextLayout.MaxHeight">
            <summary>	
            Gets the layout maximum height.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::GetMaxHeight']/*"/>	
            <unmanaged>GetMaxHeight</unmanaged>	
            <unmanaged>float IDWriteTextLayout::GetMaxHeight()</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.TextLayout.Metrics">
            <summary>	
            Retrieves overall metrics for the formatted string.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::GetMetrics']/*"/>	
            <unmanaged>GetMetrics</unmanaged>	
            <unmanaged>HRESULT IDWriteTextLayout::GetMetrics([Out] DWRITE_TEXT_METRICS* textMetrics)</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.TextLayout.OverhangMetrics">
            <summary>	
            Returns the overhangs (in DIPs) of the layout and all objects contained in it, including text glyphs and inline objects.	
            </summary>	
            <remarks>	
            Underlines and strikethroughs do not contribute to the black box determination, since these are actually drawn by the renderer, which is allowed to draw them in any variety of styles.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextLayout::GetOverhangMetrics']/*"/>	
            <unmanaged>GetOverhangMetrics</unmanaged>	
            <unmanaged>HRESULT IDWriteTextLayout::GetOverhangMetrics([Out] DWRITE_OVERHANG_METRICS* overhangs)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.TextRange">
            <summary>	
            Specifies a range of text positions where format is applied in the text represented by an <see cref="T:SharpDX.DirectWrite.TextLayout"/> object.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_TEXT_RANGE']/*"/>	
            <unmanaged>DWRITE_TEXT_RANGE</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextRange.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.DirectWrite.TextRange"/> struct.
            </summary>
            <param name="startPosition">The start position.</param>
            <param name="length">The length.</param>
        </member>
        <member name="F:SharpDX.DirectWrite.TextRange.StartPosition">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_TEXT_RANGE::startPosition']/*"/>	
            <unmanaged>unsigned int startPosition</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.TextRange.Length">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_TEXT_RANGE::length']/*"/>	
            <unmanaged>unsigned int length</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.TextRenderer">
            <summary>	
            Represents a set of application-defined callbacks that perform rendering of text, inline objects, and decorations such as underlines.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTextRenderer']/*"/>	
            <unmanaged>IDWriteTextRenderer</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.TextRenderer.DrawGlyphRun(System.Object,System.Single,System.Single,SharpDX.Direct2D1.MeasuringMode,SharpDX.DirectWrite.GlyphRun,SharpDX.DirectWrite.GlyphRunDescription,SharpDX.ComObject)">
            <summary>	
             IDWriteTextLayout::Draw calls this function to instruct the client to render a run of glyphs. 	
            </summary>	
            <remarks>	
            The <see cref="M:SharpDX.DirectWrite.TextLayout.Draw_(System.IntPtr,System.IntPtr,System.Single,System.Single)"/> function calls this callback function with all the information about glyphs to render. The application implements this callback by mostly delegating the call to the underlying platform's graphics API such as {{Direct2D}} to draw glyphs on the drawing context. An application that uses GDI can implement this callback in terms of the <see cref="M:SharpDX.DirectWrite.BitmapRenderTarget.DrawGlyphRun(System.Single,System.Single,SharpDX.Direct2D1.MeasuringMode,SharpDX.DirectWrite.GlyphRun,SharpDX.DirectWrite.RenderingParams,SharpDX.Color4)"/> method.	
            </remarks>	
            <param name="clientDrawingContext">The application-defined drawing context passed to  <see cref="M:SharpDX.DirectWrite.TextLayout.Draw_(System.IntPtr,System.IntPtr,System.Single,System.Single)"/>.</param>
            <param name="baselineOriginX">The pixel location (X-coordinate) at the baseline origin of the glyph run.</param>
            <param name="baselineOriginY">The pixel location (Y-coordinate) at the baseline origin of the glyph run.</param>
            <param name="measuringMode"> The measuring method for glyphs in the run, used with the other properties to determine the rendering mode.</param>
            <param name="glyphRun">Pointer to the glyph run instance to render. </param>
            <param name="glyphRunDescription">A pointer to the optional glyph run description instance which contains properties of the characters  associated with this run.</param>
            <param name="clientDrawingEffect">Application-defined drawing effects for the glyphs to render. Usually this argument represents effects such as the foreground brush filling the interior of text.</param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
            <unmanaged>HRESULT DrawGlyphRun([None] void* clientDrawingContext,[None] FLOAT baselineOriginX,[None] FLOAT baselineOriginY,[None] DWRITE_MEASURING_MODE measuringMode,[In] const DWRITE_GLYPH_RUN* glyphRun,[In] const DWRITE_GLYPH_RUN_DESCRIPTION* glyphRunDescription,[None] IUnknown* clientDrawingEffect)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextRenderer.DrawUnderline(System.Object,System.Single,System.Single,SharpDX.DirectWrite.Underline@,SharpDX.ComObject)">
            <summary>	
             IDWriteTextLayout::Draw calls this function to instruct the client to draw an underline. 	
            </summary>	
            <remarks>	
             A single underline can be broken into multiple calls, depending on how the formatting changes attributes. If font sizes/styles change within an underline, the thickness and offset will be averaged weighted according to characters. To get an appropriate starting pixel position, add underline::offset to the baseline. Otherwise there will be no spacing between the text. The x coordinate will always be passed as the left side, regardless of text directionality. This simplifies drawing and reduces the problem of round-off that could potentially cause gaps or a double stamped alpha blend. To avoid alpha overlap, round the end points to the nearest device pixel. 	
            </remarks>	
            <param name="clientDrawingContext">The application-defined drawing context passed to  IDWriteTextLayout::Draw.</param>
            <param name="baselineOriginX">The pixel location (X-coordinate) at the baseline origin of the run where underline applies.</param>
            <param name="baselineOriginY">The pixel location (Y-coordinate) at the baseline origin of the run where underline applies.</param>
            <param name="underline">Pointer to  a structure containing underline logical information.</param>
            <param name="clientDrawingEffect"> Application-defined effect to apply to the underline. Usually this argument represents effects such as the foreground brush filling the interior of a line.</param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
            <unmanaged>HRESULT DrawUnderline([None] void* clientDrawingContext,[None] FLOAT baselineOriginX,[None] FLOAT baselineOriginY,[In] const DWRITE_UNDERLINE* underline,[None] IUnknown* clientDrawingEffect)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextRenderer.DrawStrikethrough(System.Object,System.Single,System.Single,SharpDX.DirectWrite.Strikethrough@,SharpDX.ComObject)">
            <summary>	
             IDWriteTextLayout::Draw calls this function to instruct the client to draw a strikethrough. 	
            </summary>	
            <remarks>	
             A single strikethrough can be broken into multiple calls, depending on how the formatting changes attributes. Strikethrough is not averaged across font sizes/styles changes. To get an appropriate starting pixel position, add strikethrough::offset to the baseline. Like underlines, the x coordinate will always be passed as the left side, regardless of text directionality. 	
            </remarks>	
            <param name="clientDrawingContext">The application-defined drawing context passed to  IDWriteTextLayout::Draw.</param>
            <param name="baselineOriginX">The pixel location (X-coordinate) at the baseline origin of the run where strikethrough applies.</param>
            <param name="baselineOriginY">The pixel location (Y-coordinate) at the baseline origin of the run where strikethrough applies.</param>
            <param name="strikethrough">Pointer to  a structure containing strikethrough logical information.</param>
            <param name="clientDrawingEffect">Application-defined effect to apply to the strikethrough.  Usually this argument represents effects such as the foreground brush filling the interior of a line.</param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
            <unmanaged>HRESULT DrawStrikethrough([None] void* clientDrawingContext,[None] FLOAT baselineOriginX,[None] FLOAT baselineOriginY,[In] const DWRITE_STRIKETHROUGH* strikethrough,[None] IUnknown* clientDrawingEffect)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextRenderer.DrawInlineObject(System.Object,System.Single,System.Single,SharpDX.DirectWrite.InlineObject,System.Boolean,System.Boolean,SharpDX.ComObject)">
            <summary>	
             IDWriteTextLayout::Draw calls this application callback when it needs to draw an inline object. 	
            </summary>	
            <param name="clientDrawingContext">The application-defined drawing context passed to IDWriteTextLayout::Draw.</param>
            <param name="originX">X-coordinate at the top-left corner of the inline object.</param>
            <param name="originY">Y-coordinate at the top-left corner of the inline object.</param>
            <param name="inlineObject">The application-defined inline object set using IDWriteTextFormat::SetInlineObject.</param>
            <param name="isSideways">A Boolean flag that indicates whether the object's baseline runs alongside the baseline axis of the line.</param>
            <param name="isRightToLeft">A Boolean flag that indicates whether the object is in a right-to-left context, hinting that the drawing may want to mirror the normal image.</param>
            <param name="clientDrawingEffect">Application-defined drawing effects for the glyphs to render. Usually this argument represents effects such as the foreground brush filling the interior of a line.</param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
            <unmanaged>HRESULT DrawInlineObject([None] void* clientDrawingContext,[None] FLOAT originX,[None] FLOAT originY,[None] IDWriteInlineObject* inlineObject,[None] BOOL isSideways,[None] BOOL isRightToLeft,[None] IUnknown* clientDrawingEffect)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.BitmapProperties">
            <summary>	
            Describes the pixel format and dpi  of a bitmap.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAP_PROPERTIES']/*"/>	
            <unmanaged>D2D1_BITMAP_PROPERTIES</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.BitmapProperties.#ctor(SharpDX.Direct2D1.PixelFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.BitmapProperties"/> struct.
            </summary>
            <param name="pixelFormat">The pixel format.</param>
        </member>
        <member name="M:SharpDX.Direct2D1.BitmapProperties.#ctor(SharpDX.Direct2D1.PixelFormat,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.BitmapProperties"/> struct.
            </summary>
            <param name="pixelFormat">The pixel format.</param>
            <param name="dpiX">The dpi X.</param>
            <param name="dpiY">The dpi Y.</param>
        </member>
        <member name="F:SharpDX.Direct2D1.BitmapProperties.PixelFormat">
            <summary>	
            <para>The bitmap's pixel format and alpha mode.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAP_PROPERTIES::pixelFormat']/*"/>	
            <unmanaged>D2D1_PIXEL_FORMAT pixelFormat</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BitmapProperties.DpiX">
            <summary>	
            <para>The horizontal dpi of the bitmap.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAP_PROPERTIES::dpiX']/*"/>	
            <unmanaged>float dpiX</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BitmapProperties.DpiY">
            <summary>	
            <para>The vertical dpi of the bitmap.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAP_PROPERTIES::dpiY']/*"/>	
            <unmanaged>float dpiY</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.BitmapRenderTarget">
            <summary>	
            Renders to an intermediate texture created by the CreateCompatibleRenderTarget method.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1BitmapRenderTarget']/*"/>	
            <unmanaged>ID2D1BitmapRenderTarget</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.BitmapRenderTarget.#ctor(SharpDX.Direct2D1.RenderTarget,SharpDX.Direct2D1.CompatibleRenderTargetOptions)">
            <summary>	
             Creates a bitmap render target for use during intermediate offscreen drawing that is compatible with the current render targe with same size, pixel size and pixel format.
            </summary>	
            <param name="renderTarget">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <param name="options">A value that specifies whether the new render target must be compatible with GDI.</param>
            <unmanaged>HRESULT CreateCompatibleRenderTarget([In, Optional] const D2D1_SIZE_F* desiredSize,[In, Optional] const D2D1_SIZE_U* desiredPixelSize,[In, Optional] const D2D1_PIXEL_FORMAT* desiredFormat,[None] D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS options,[Out] ID2D1BitmapRenderTarget** bitmapRenderTarget)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.BitmapRenderTarget.#ctor(SharpDX.Direct2D1.RenderTarget,SharpDX.Direct2D1.CompatibleRenderTargetOptions,SharpDX.DrawingSizeF)">
            <summary>	
             Creates a bitmap render target for use during intermediate offscreen drawing that is compatible with the current render target with same pixel size and pixel format.
            </summary>	
            <param name="renderTarget">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <param name="options">A value that specifies whether the new render target must be compatible with GDI.</param>
            <param name="desiredSize">The desired size of the new render target in device-independent pixels if it should be different from the original render target. For more information, see the Remarks section.</param>
            <unmanaged>HRESULT CreateCompatibleRenderTarget([In, Optional] const D2D1_SIZE_F* desiredSize,[In, Optional] const D2D1_SIZE_U* desiredPixelSize,[In, Optional] const D2D1_PIXEL_FORMAT* desiredFormat,[None] D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS options,[Out] ID2D1BitmapRenderTarget** bitmapRenderTarget)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.BitmapRenderTarget.#ctor(SharpDX.Direct2D1.RenderTarget,SharpDX.Direct2D1.CompatibleRenderTargetOptions,System.Nullable{SharpDX.Direct2D1.PixelFormat})">
            <summary>	
             Creates a bitmap render target for use during intermediate offscreen drawing that is compatible with the current render target with same size and pixel size.	
            </summary>	
            <param name="renderTarget">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <param name="desiredFormat">The desired pixel format and alpha mode of the new render target. If the pixel format is set to DXGI_FORMAT_UNKNOWN, the new render target uses the same pixel format as the original render target. If the alpha mode is <see cref="F:SharpDX.Direct2D1.AlphaMode.Unknown"/>, the alpha mode of the new render target defaults to D2D1_ALPHA_MODE_PREMULTIPLIED. For information about supported pixel formats, see  {{Supported Pixel  Formats and Alpha Modes}}.</param>
            <param name="options">A value that specifies whether the new render target must be compatible with GDI.</param>
            <unmanaged>HRESULT CreateCompatibleRenderTarget([In, Optional] const D2D1_SIZE_F* desiredSize,[In, Optional] const D2D1_SIZE_U* desiredPixelSize,[In, Optional] const D2D1_PIXEL_FORMAT* desiredFormat,[None] D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS options,[Out] ID2D1BitmapRenderTarget** bitmapRenderTarget)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.BitmapRenderTarget.#ctor(SharpDX.Direct2D1.RenderTarget,SharpDX.Direct2D1.CompatibleRenderTargetOptions,System.Nullable{SharpDX.DrawingSizeF},System.Nullable{SharpDX.DrawingSize},System.Nullable{SharpDX.Direct2D1.PixelFormat})">
            <summary>	
             Creates a bitmap render target for use during intermediate offscreen drawing that is compatible with the current render target.	
            </summary>	
            <remarks>	
            The pixel size and DPI of the new render target can be altered by specifying values for desiredSize or desiredPixelSize:  If desiredSize is specified but desiredPixelSize is not, the pixel size is computed from the desired size using the parent target DPI. If the desiredSize maps to a integer-pixel size, the DPI of the compatible render target is the same as the DPI of the parent target.  If desiredSize maps to a fractional-pixel size, the pixel size is rounded up to the nearest integer and the DPI for the compatible render target is slightly higher than the DPI of the parent render target. In all cases, the coordinate (desiredSize.width, desiredSize.height) maps to the lower-right corner of the compatible render target.If the desiredPixelSize is specified and desiredSize is not, the DPI of the new render target is the same as the original render target.If both desiredSize and desiredPixelSize are specified, the DPI of the new render target is computed to account for the difference in scale.If neither desiredSize nor desiredPixelSize is specified, the new render target size and DPI match the original render target. 	
            </remarks>	
            <param name="renderTarget">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <param name="desiredSize">The desired size of the new render target in device-independent pixels if it should be different from the original render target. For more information, see the Remarks section.</param>
            <param name="desiredPixelSize">The desired size of the new render target in pixels if it should be different from the original render target. For more information, see the Remarks section.</param>
            <param name="desiredFormat">The desired pixel format and alpha mode of the new render target. If the pixel format is set to DXGI_FORMAT_UNKNOWN, the new render target uses the same pixel format as the original render target. If the alpha mode is <see cref="F:SharpDX.Direct2D1.AlphaMode.Unknown"/>, the alpha mode of the new render target defaults to D2D1_ALPHA_MODE_PREMULTIPLIED. For information about supported pixel formats, see  {{Supported Pixel  Formats and Alpha Modes}}.</param>
            <param name="options">A value that specifies whether the new render target must be compatible with GDI.</param>
            <unmanaged>HRESULT CreateCompatibleRenderTarget([In, Optional] const D2D1_SIZE_F* desiredSize,[In, Optional] const D2D1_SIZE_U* desiredPixelSize,[In, Optional] const D2D1_PIXEL_FORMAT* desiredFormat,[None] D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS options,[Out] ID2D1BitmapRenderTarget** bitmapRenderTarget)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.BitmapRenderTarget.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.BitmapRenderTarget"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.BitmapRenderTarget.GetBitmap(SharpDX.Direct2D1.Bitmap@)">
            <summary>	
            Retrieves the bitmap for this render target. The returned bitmap can be used for drawing operations.	
            </summary>	
            <param name="bitmap"><para>When this method returns, contains the address of a reference to the bitmap for this render target. This bitmap can be used for drawing operations. </para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The DPI for the <see cref="T:SharpDX.Direct2D1.Bitmap"/> obtained from GetBitmap will be the DPI of the <see cref="T:SharpDX.Direct2D1.BitmapRenderTarget"/> when the render target was created. Changing the DPI of the <see cref="T:SharpDX.Direct2D1.BitmapRenderTarget"/> by calling  SetDpi doesn't affect the DPI of the bitmap, even if SetDpi is called before GetBitmap. Using SetDpi to change the DPI of the <see cref="T:SharpDX.Direct2D1.BitmapRenderTarget"/> does affect how contents are rendered into the bitmap: it just doesn't affect the DPI of the bitmap retrieved by GetBitmap.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1BitmapRenderTarget::GetBitmap']/*"/>	
            <unmanaged>HRESULT ID2D1BitmapRenderTarget::GetBitmap([Out] ID2D1Bitmap** bitmap)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct2D1.BitmapRenderTarget.Bitmap">
            <summary>	
            Retrieves the bitmap for this render target. The returned bitmap can be used for drawing operations.	
            </summary>	
            <remarks>	
            The DPI for the <see cref="T:SharpDX.Direct2D1.Bitmap"/> obtained from GetBitmap will be the DPI of the <see cref="T:SharpDX.Direct2D1.BitmapRenderTarget"/> when the render target was created. Changing the DPI of the <see cref="T:SharpDX.Direct2D1.BitmapRenderTarget"/> by calling  SetDpi doesn't affect the DPI of the bitmap, even if SetDpi is called before GetBitmap. Using SetDpi to change the DPI of the <see cref="T:SharpDX.Direct2D1.BitmapRenderTarget"/> does affect how contents are rendered into the bitmap: it just doesn't affect the DPI of the bitmap retrieved by GetBitmap.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1BitmapRenderTarget::GetBitmap']/*"/>	
            <unmanaged>GetBitmap</unmanaged>	
            <unmanaged>HRESULT ID2D1BitmapRenderTarget::GetBitmap([Out] ID2D1Bitmap** bitmap)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.TextRendererBase">
            <summary>
            Default abstract implementation of TextRenderer. Need to implement a least a DrawXXX method to use it.
            </summary>
        </member>
        <member name="M:SharpDX.DirectWrite.TextRendererBase.IsPixelSnappingDisabled(System.Object)">
            <summary>
            Determines whether pixel snapping is disabled. The recommended default is FALSE,
            unless doing animation that requires subpixel vertical placement.
            </summary>
            <param name="clientDrawingContext">The context passed to IDWriteTextLayout::Draw.</param>
            <returns>Receives TRUE if pixel snapping is disabled or FALSE if it not. </returns>
            <unmanaged>HRESULT IsPixelSnappingDisabled([None] void* clientDrawingContext,[Out] BOOL* isDisabled)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextRendererBase.GetCurrentTransform(System.Object)">
            <summary>	
             Gets a transform that maps abstract coordinates to DIPs. 	
            </summary>	
            <param name="clientDrawingContext">The drawing context passed to <see cref="M:SharpDX.DirectWrite.TextLayout.Draw_(System.IntPtr,System.IntPtr,System.Single,System.Single)"/>.</param>
            <returns>a structure which has transform information for  pixel snapping.</returns>
            <unmanaged>HRESULT GetCurrentTransform([None] void* clientDrawingContext,[Out] DWRITE_MATRIX* transform)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextRendererBase.GetPixelsPerDip(System.Object)">
            <summary>	
             Gets the number of physical pixels per DIP. 	
            </summary>	
            <remarks>	
             Because a DIP (device-independent pixel) is 1/96 inch,  the pixelsPerDip value is the number of logical pixels per inch divided by 96.	
            </remarks>	
            <param name="clientDrawingContext">The drawing context passed to <see cref="M:SharpDX.DirectWrite.TextLayout.Draw_(System.IntPtr,System.IntPtr,System.Single,System.Single)"/>.</param>
            <returns>the number of physical pixels per DIP</returns>
            <unmanaged>HRESULT GetPixelsPerDip([None] void* clientDrawingContext,[Out] FLOAT* pixelsPerDip)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextRendererBase.DrawGlyphRun(System.Object,System.Single,System.Single,SharpDX.Direct2D1.MeasuringMode,SharpDX.DirectWrite.GlyphRun,SharpDX.DirectWrite.GlyphRunDescription,SharpDX.ComObject)">
            <summary>	
             IDWriteTextLayout::Draw calls this function to instruct the client to render a run of glyphs. 	
            </summary>	
            <remarks>	
            The <see cref="M:SharpDX.DirectWrite.TextLayout.Draw_(System.IntPtr,System.IntPtr,System.Single,System.Single)"/> function calls this callback function with all the information about glyphs to render. The application implements this callback by mostly delegating the call to the underlying platform's graphics API such as {{Direct2D}} to draw glyphs on the drawing context. An application that uses GDI can implement this callback in terms of the <see cref="M:SharpDX.DirectWrite.BitmapRenderTarget.DrawGlyphRun(System.Single,System.Single,SharpDX.Direct2D1.MeasuringMode,SharpDX.DirectWrite.GlyphRun,SharpDX.DirectWrite.RenderingParams,SharpDX.Color4)"/> method.	
            </remarks>	
            <param name="clientDrawingContext">The application-defined drawing context passed to  <see cref="M:SharpDX.DirectWrite.TextLayout.Draw_(System.IntPtr,System.IntPtr,System.Single,System.Single)"/>.</param>
            <param name="baselineOriginX">The pixel location (X-coordinate) at the baseline origin of the glyph run.</param>
            <param name="baselineOriginY">The pixel location (Y-coordinate) at the baseline origin of the glyph run.</param>
            <param name="measuringMode"> The measuring method for glyphs in the run, used with the other properties to determine the rendering mode.</param>
            <param name="glyphRun">Pointer to the glyph run instance to render. </param>
            <param name="glyphRunDescription">A pointer to the optional glyph run description instance which contains properties of the characters  associated with this run.</param>
            <param name="clientDrawingEffect">Application-defined drawing effects for the glyphs to render. Usually this argument represents effects such as the foreground brush filling the interior of text.</param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
            <unmanaged>HRESULT DrawGlyphRun([None] void* clientDrawingContext,[None] FLOAT baselineOriginX,[None] FLOAT baselineOriginY,[None] DWRITE_MEASURING_MODE measuringMode,[In] const DWRITE_GLYPH_RUN* glyphRun,[In] const DWRITE_GLYPH_RUN_DESCRIPTION* glyphRunDescription,[None] IUnknown* clientDrawingEffect)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextRendererBase.DrawUnderline(System.Object,System.Single,System.Single,SharpDX.DirectWrite.Underline@,SharpDX.ComObject)">
            <summary>	
             IDWriteTextLayout::Draw calls this function to instruct the client to draw an underline. 	
            </summary>	
            <remarks>	
             A single underline can be broken into multiple calls, depending on how the formatting changes attributes. If font sizes/styles change within an underline, the thickness and offset will be averaged weighted according to characters. To get an appropriate starting pixel position, add underline::offset to the baseline. Otherwise there will be no spacing between the text. The x coordinate will always be passed as the left side, regardless of text directionality. This simplifies drawing and reduces the problem of round-off that could potentially cause gaps or a double stamped alpha blend. To avoid alpha overlap, round the end points to the nearest device pixel. 	
            </remarks>	
            <param name="clientDrawingContext">The application-defined drawing context passed to  IDWriteTextLayout::Draw.</param>
            <param name="baselineOriginX">The pixel location (X-coordinate) at the baseline origin of the run where underline applies.</param>
            <param name="baselineOriginY">The pixel location (Y-coordinate) at the baseline origin of the run where underline applies.</param>
            <param name="underline">Pointer to  a structure containing underline logical information.</param>
            <param name="clientDrawingEffect"> Application-defined effect to apply to the underline. Usually this argument represents effects such as the foreground brush filling the interior of a line.</param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
            <unmanaged>HRESULT DrawUnderline([None] void* clientDrawingContext,[None] FLOAT baselineOriginX,[None] FLOAT baselineOriginY,[In] const DWRITE_UNDERLINE* underline,[None] IUnknown* clientDrawingEffect)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextRendererBase.DrawStrikethrough(System.Object,System.Single,System.Single,SharpDX.DirectWrite.Strikethrough@,SharpDX.ComObject)">
            <summary>	
             IDWriteTextLayout::Draw calls this function to instruct the client to draw a strikethrough. 	
            </summary>	
            <remarks>	
             A single strikethrough can be broken into multiple calls, depending on how the formatting changes attributes. Strikethrough is not averaged across font sizes/styles changes. To get an appropriate starting pixel position, add strikethrough::offset to the baseline. Like underlines, the x coordinate will always be passed as the left side, regardless of text directionality. 	
            </remarks>	
            <param name="clientDrawingContext">The application-defined drawing context passed to  IDWriteTextLayout::Draw.</param>
            <param name="baselineOriginX">The pixel location (X-coordinate) at the baseline origin of the run where strikethrough applies.</param>
            <param name="baselineOriginY">The pixel location (Y-coordinate) at the baseline origin of the run where strikethrough applies.</param>
            <param name="strikethrough">Pointer to  a structure containing strikethrough logical information.</param>
            <param name="clientDrawingEffect">Application-defined effect to apply to the strikethrough.  Usually this argument represents effects such as the foreground brush filling the interior of a line.</param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
            <unmanaged>HRESULT DrawStrikethrough([None] void* clientDrawingContext,[None] FLOAT baselineOriginX,[None] FLOAT baselineOriginY,[In] const DWRITE_STRIKETHROUGH* strikethrough,[None] IUnknown* clientDrawingEffect)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.TextRendererBase.DrawInlineObject(System.Object,System.Single,System.Single,SharpDX.DirectWrite.InlineObject,System.Boolean,System.Boolean,SharpDX.ComObject)">
            <summary>	
             IDWriteTextLayout::Draw calls this application callback when it needs to draw an inline object. 	
            </summary>	
            <param name="clientDrawingContext">The application-defined drawing context passed to IDWriteTextLayout::Draw.</param>
            <param name="originX">X-coordinate at the top-left corner of the inline object.</param>
            <param name="originY">Y-coordinate at the top-left corner of the inline object.</param>
            <param name="inlineObject">The application-defined inline object set using IDWriteTextFormat::SetInlineObject.</param>
            <param name="isSideways">A Boolean flag that indicates whether the object's baseline runs alongside the baseline axis of the line.</param>
            <param name="isRightToLeft">A Boolean flag that indicates whether the object is in a right-to-left context, hinting that the drawing may want to mirror the normal image.</param>
            <param name="clientDrawingEffect">Application-defined drawing effects for the glyphs to render. Usually this argument represents effects such as the foreground brush filling the interior of a line.</param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
            <unmanaged>HRESULT DrawInlineObject([None] void* clientDrawingContext,[None] FLOAT originX,[None] FLOAT originY,[None] IDWriteInlineObject* inlineObject,[None] BOOL isSideways,[None] BOOL isRightToLeft,[None] IUnknown* clientDrawingEffect)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.TextRendererShadow">
            <summary>
            Internal TextRenderer Callback
            </summary>
        </member>
        <member name="M:SharpDX.DirectWrite.TextRendererShadow.ToIntPtr(SharpDX.DirectWrite.TextRenderer)">
            <summary>
            Return a pointer to the unamanged version of this callback.
            </summary>
            <param name="callback">The callback.</param>
            <returns>A pointer to a shadow c++ callback</returns>
        </member>
        <member name="T:SharpDX.DirectWrite.TextRendererShadow.TextRendererVtbl.DrawGlyphRunDelegate">
            <unmanaged>HRESULT DrawGlyphRun([None] void* clientDrawingContext,[None] FLOAT baselineOriginX,[None] FLOAT baselineOriginY,[None] DWRITE_MEASURING_MODE measuringMode,[In] const DWRITE_GLYPH_RUN* glyphRun,[In] const DWRITE_GLYPH_RUN_DESCRIPTION* glyphRunDescription,[None] IUnknown* clientDrawingEffect)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.TextRendererShadow.TextRendererVtbl.DrawUnderlineDelegate">
            <unmanaged>HRESULT DrawUnderline([None] void* clientDrawingContext,[None] FLOAT baselineOriginX,[None] FLOAT baselineOriginY,[In] const DWRITE_UNDERLINE* underline,[None] IUnknown* clientDrawingEffect)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.TextRendererShadow.TextRendererVtbl.DrawStrikethroughDelegate">
            <unmanaged>HRESULT DrawStrikethrough([None] void* clientDrawingContext,[None] FLOAT baselineOriginX,[None] FLOAT baselineOriginY,[In] const DWRITE_STRIKETHROUGH* strikethrough,[None] IUnknown* clientDrawingEffect)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.TextRendererShadow.TextRendererVtbl.DrawInlineObjectDelegate">
            <unmanaged>HRESULT DrawInlineObject([None] void* clientDrawingContext,[None] FLOAT originX,[None] FLOAT originY,[None] IDWriteInlineObject* inlineObject,[None] BOOL isSideways,[None] BOOL isRightToLeft,[None] IUnknown* clientDrawingEffect)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.Typography">
            <summary>	
            Gets the number of OpenType font features for the current font.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTypography']/*"/>	
            <unmanaged>IDWriteTypography</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.Typography.#ctor(SharpDX.DirectWrite.Factory)">
            <summary>	
            Creates a typography object for use in a text layout. 	
            </summary>	
            <param name="factory">an instance of <see cref="T:SharpDX.DirectWrite.Factory"/></param>
            <unmanaged>HRESULT IDWriteFactory::CreateTypography([Out] IDWriteTypography** typography)</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.Typography.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.DirectWrite.Typography"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.DirectWrite.Typography.AddFontFeature(SharpDX.DirectWrite.FontFeature)">
            <summary>	
            Adds an OpenType font feature.	
            </summary>	
            <param name="fontFeature"><para>A structure that contains the OpenType name identifier and the execution parameter for the font feature being added.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTypography::AddFontFeature']/*"/>	
            <unmanaged>HRESULT IDWriteTypography::AddFontFeature([In] DWRITE_FONT_FEATURE fontFeature)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.Typography.GetFontFeatureCount">
            <summary>	
            Gets the number of OpenType font features for the current font.	
            </summary>	
            <returns>The number of font features for the current text format.</returns>	
            <remarks>	
            A single run of text can be associated with more than one typographic feature. The <see cref="T:SharpDX.DirectWrite.Typography"/> object holds a list of these font features.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTypography::GetFontFeatureCount']/*"/>	
            <unmanaged>unsigned int IDWriteTypography::GetFontFeatureCount()</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.Typography.GetFontFeature(System.Int32)">
            <summary>	
            Gets the font feature at the specified index.	
            </summary>	
            <param name="fontFeatureIndex"><para>The zero-based index of the font feature to retrieve.</para></param>	
            <returns><para>When this method returns, contains the font feature which is at the specified index.</para></returns>	
            <remarks>	
            A single run of text can be associated with more than one typographic feature. The <see cref="T:SharpDX.DirectWrite.Typography"/> object holds a list of these font features.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTypography::GetFontFeature']/*"/>	
            <unmanaged>HRESULT IDWriteTypography::GetFontFeature([In] unsigned int fontFeatureIndex,[Out] DWRITE_FONT_FEATURE* fontFeature)</unmanaged>	
        </member>
        <member name="P:SharpDX.DirectWrite.Typography.FontFeatureCount">
            <summary>	
            Gets the number of OpenType font features for the current font.	
            </summary>	
            <remarks>	
            A single run of text can be associated with more than one typographic feature. The <see cref="T:SharpDX.DirectWrite.Typography"/> object holds a list of these font features.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteTypography::GetFontFeatureCount']/*"/>	
            <unmanaged>GetFontFeatureCount</unmanaged>	
            <unmanaged>unsigned int IDWriteTypography::GetFontFeatureCount()</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.Ellipse">
            <summary>	
            Contains the center point, x-radius, and y-radius of an ellipse.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_ELLIPSE']/*"/>	
            <unmanaged>D2D1_ELLIPSE</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Ellipse.#ctor(SharpDX.DrawingPointF,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.Ellipse"/> struct.
            </summary>
            <param name="center">The center.</param>
            <param name="radiusX">The radius X.</param>
            <param name="radiusY">The radius Y.</param>
        </member>
        <member name="F:SharpDX.Direct2D1.Ellipse.Point">
            <summary>	
            <para>The center point of the ellipse.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_ELLIPSE::point']/*"/>	
            <unmanaged>D2D_POINT_2F point</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Ellipse.RadiusX">
            <summary>	
            <para>The X-radius of the ellipse.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_ELLIPSE::radiusX']/*"/>	
            <unmanaged>float radiusX</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Ellipse.RadiusY">
            <summary>	
            <para>The Y-radius of the ellipse.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_ELLIPSE::radiusY']/*"/>	
            <unmanaged>float radiusY</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.GdiInteropRenderTarget">
            <summary>	
            Provides access to an device context that can accept GDI drawing commands.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GdiInteropRenderTarget']/*"/>	
            <unmanaged>ID2D1GdiInteropRenderTarget</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.GdiInteropRenderTarget.ReleaseDC">
            <summary>	
            Indicates that drawing with the device context retrieved using the {{GetDC}} method is finished.  	
            </summary>	
            <remarks>	
            ReleaseDC must be called once for each call to {{GetDC}}. 	
            </remarks>	
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code. </returns>
            <unmanaged>HRESULT ID2D1GdiInteropRenderTarget::ReleaseDC([In, Optional] const RECT* update)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.GdiInteropRenderTarget.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.GdiInteropRenderTarget"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.GdiInteropRenderTarget.GetDC(SharpDX.Direct2D1.DeviceContextInitializeMode)">
            <summary>	
            Retrieves the device context associated with this render target.	
            </summary>	
            <param name="mode"><para>A value that specifies whether the device context should be cleared.</para></param>	
            <returns><para>When this method returns, contains the device context associated with this render target. You must allocate storage for this parameter.  </para></returns>	
            <remarks>	
            Calling this method flushes the render target.This command can be called only after BeginDraw and before EndDraw. It should not be called between PushAxisAlignedClip/PopAxisAlignedClip commands or between PushLayer/PopLayer.ReleaseDC must be called once for each call to GetDC.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GdiInteropRenderTarget::GetDC']/*"/>	
            <unmanaged>HRESULT ID2D1GdiInteropRenderTarget::GetDC([In] D2D1_DC_INITIALIZE_MODE mode,[Out] HDC* hdc)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.GdiInteropRenderTarget.ReleaseDC(System.Nullable{SharpDX.Rectangle})">
            <summary>	
            Indicates that drawing with the device context retrieved using the GetDC method is finished.	
            </summary>	
            <param name="update">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            ReleaseDC must be called once for each call to GetDC.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GdiInteropRenderTarget::ReleaseDC']/*"/>	
            <unmanaged>HRESULT ID2D1GdiInteropRenderTarget::ReleaseDC([In, Optional] const RECT* update)</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.BreakCondition">
            <summary>	
            Indicates the condition at the edges of inline object or text used to determine line-breaking behavior.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_BREAK_CONDITION']/*"/>	
            <unmanaged>DWRITE_BREAK_CONDITION</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.BreakCondition.Neutral">
            <summary>	
            <para> Indicates whether a break is allowed by determining  the condition of the neighboring text span or inline object.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_BREAK_CONDITION_NEUTRAL']/*"/>	
            <unmanaged>DWRITE_BREAK_CONDITION_NEUTRAL</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.BreakCondition.CanBreak">
            <summary>	
            <para> Indicates that a line break is allowed, unless overruled by the condition of the neighboring text span or inline object, either prohibited by a "may not break" condition or forced by a "must break" condition.				 </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_BREAK_CONDITION_CAN_BREAK']/*"/>	
            <unmanaged>DWRITE_BREAK_CONDITION_CAN_BREAK</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.BreakCondition.MayNotBreak">
            <summary>	
            <para> Indicates that there should be no line  break, unless overruled by a "must break" condition from the neighboring text span or inline object.		 </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_BREAK_CONDITION_MAY_NOT_BREAK']/*"/>	
            <unmanaged>DWRITE_BREAK_CONDITION_MAY_NOT_BREAK</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.BreakCondition.MustBreak">
            <summary>	
            <para> Indicates that the line break must happen, regardless of the condition of the adjacent text span or inline object.			 </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_BREAK_CONDITION_MUST_BREAK']/*"/>	
            <unmanaged>DWRITE_BREAK_CONDITION_MUST_BREAK</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.FactoryType">
            <summary>	
            Specifies the type of DirectWrite factory object.	
            </summary>	
            <remarks>	
            A DirectWrite factory object contains information about its internal state, such as font loader registration and cached font data. In most cases you should use the shared factory object, because it allows multiple components that use DirectWrite to share internal DirectWrite state information, thereby reducing memory usage. However, there are cases when it is desirable to reduce the impact of a component on the rest of the process, such as a plug-in from an untrusted source,  by sandboxing and isolating it from the rest of the process components. In such cases, you should use an isolated factory for the sandboxed component.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FACTORY_TYPE']/*"/>	
            <unmanaged>DWRITE_FACTORY_TYPE</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FactoryType.Shared">
            <summary>	
            <para>Indicates that the DirectWrite factory is a shared factory and that it allows for the reuse of cached font data across multiple in-process components. Such factories also take advantage of cross process font caching components for better performance.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FACTORY_TYPE_SHARED']/*"/>	
            <unmanaged>DWRITE_FACTORY_TYPE_SHARED</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FactoryType.Isolated">
            <summary>	
            <para>Indicates that the DirectWrite factory object is isolated. Objects created from the isolated factory do not interact with internal DirectWrite state from other components.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FACTORY_TYPE_ISOLATED']/*"/>	
            <unmanaged>DWRITE_FACTORY_TYPE_ISOLATED</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.FlowDirection">
            <summary>	
            Indicates the direction of flow for placing lines of text in a paragraph.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FLOW_DIRECTION']/*"/>	
            <unmanaged>DWRITE_FLOW_DIRECTION</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FlowDirection.TopToBottom">
            <summary>	
            <para>Specifies that text lines are placed from top to bottom.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FLOW_DIRECTION_TOP_TO_BOTTOM']/*"/>	
            <unmanaged>DWRITE_FLOW_DIRECTION_TOP_TO_BOTTOM</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.FontFaceType">
            <summary>	
            Indicates the file format of a complete font face.	
            </summary>	
            <remarks>	
            Font formats that consist of multiple files, such as Type 1 .PFM and .PFB, have a single enum entry.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FACE_TYPE']/*"/>	
            <unmanaged>DWRITE_FONT_FACE_TYPE</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFaceType.Cff">
            <summary>	
            <para>OpenType font face with CFF outlines.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FACE_TYPE_CFF']/*"/>	
            <unmanaged>DWRITE_FONT_FACE_TYPE_CFF</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFaceType.Truetype">
            <summary>	
            <para>OpenType font face with TrueType outlines.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FACE_TYPE_TRUETYPE']/*"/>	
            <unmanaged>DWRITE_FONT_FACE_TYPE_TRUETYPE</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFaceType.TruetypeCollection">
            <summary>	
            <para>OpenType font face that is a part of a TrueType collection.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FACE_TYPE_TRUETYPE_COLLECTION']/*"/>	
            <unmanaged>DWRITE_FONT_FACE_TYPE_TRUETYPE_COLLECTION</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFaceType.Type1">
            <summary>	
            <para>A Type 1 font face.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FACE_TYPE_TYPE1']/*"/>	
            <unmanaged>DWRITE_FONT_FACE_TYPE_TYPE1</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFaceType.Vector">
            <summary>	
            <para>A vector .FON format font face.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FACE_TYPE_VECTOR']/*"/>	
            <unmanaged>DWRITE_FONT_FACE_TYPE_VECTOR</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFaceType.Bitmap">
            <summary>	
            <para>A bitmap .FON format font face.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FACE_TYPE_BITMAP']/*"/>	
            <unmanaged>DWRITE_FONT_FACE_TYPE_BITMAP</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFaceType.Unknown">
            <summary>	
            <para>Font face type is not recognized by the DirectWrite font system.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FACE_TYPE_UNKNOWN']/*"/>	
            <unmanaged>DWRITE_FONT_FACE_TYPE_UNKNOWN</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFaceType.RawCff">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FACE_TYPE_RAW_CFF']/*"/>	
            <unmanaged>DWRITE_FONT_FACE_TYPE_RAW_CFF</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.FontFeatureTag">
            <summary>	
            A value that indicates the typographic feature of text supplied by the font.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.AlternativeFractions">
            <summary>	
            <para> Replaces figures separated by a slash with an alternative form.</para>	
             <para>Equivalent OpenType tag: 'afrc' </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_ALTERNATIVE_FRACTIONS']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_ALTERNATIVE_FRACTIONS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.PetiteCapitalsFromCapitals">
            <summary>	
            <para> Turns capital characters into petite capitals. It is generally used for words which would otherwise be set in all caps, such as acronyms, but which are desired in petite-cap form to avoid disrupting the flow of text. See the pcap feature description for notes on the relationship of caps, smallcaps and petite caps.</para>	
             <para>Equivalent OpenType tag: 'c2pc'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_PETITE_CAPITALS_FROM_CAPITALS']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_PETITE_CAPITALS_FROM_CAPITALS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.SmallCapitalsFromCapitals">
            <summary>	
            <para>Turns capital characters into small capitals. It is generally used for words which would otherwise be set in all caps, such as acronyms, but which are desired in small-cap form to avoid disrupting the flow of text. </para>	
             <para>Equivalent OpenType tag: 'c2sc'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_SMALL_CAPITALS_FROM_CAPITALS']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_SMALL_CAPITALS_FROM_CAPITALS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.ContextualAlternates">
            <summary>	
            <para> In specified situations, replaces default glyphs with alternate forms which provide better joining behavior. Used in script typefaces which are designed to have some or all of their glyphs join.</para>	
             <para>Equivalent OpenType tag: 'calt'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_CONTEXTUAL_ALTERNATES']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_CONTEXTUAL_ALTERNATES</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.CaseSensitiveForms">
            <summary>	
            <para> Shifts various punctuation marks up to a position that works better with all-capital sequences or sets of lining figures; also changes oldstyle figures to lining figures. By default, glyphs in a text face are designed to work with lowercase characters. Some characters should be shifted vertically to fit the higher visual center of all-capital or lining text. Also, lining figures are the same height (or close to it) as capitals, and fit much better with all-capital text.</para>	
             <para>Equivalent OpenType tag: 'case'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_CASE_SENSITIVE_FORMS']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_CASE_SENSITIVE_FORMS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.GlyphCompositionDecomposition">
            <summary>	
            <para> To minimize the number of glyph alternates, it is sometimes desired to decompose a character into two glyphs. Additionally, it may be preferable to compose two characters into a single glyph for better glyph processing. This feature permits such composition/decomposition. The feature should be processed as the first feature processed, and should be processed only when it is called.</para>	
             <para>Equivalent OpenType tag: 'ccmp'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_GLYPH_COMPOSITION_DECOMPOSITION']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_GLYPH_COMPOSITION_DECOMPOSITION</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.ContextualLigatures">
            <summary>	
            <para> Replaces a sequence of glyphs with a single glyph which is preferred for typographic purposes. Unlike other ligature features, clig specifies the context in which the ligature is recommended. This capability is important in some script designs and for swash ligatures.</para>	
             <para>Equivalent OpenType tag: 'clig'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_CONTEXTUAL_LIGATURES']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_CONTEXTUAL_LIGATURES</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.CapitalSpacing">
            <summary>	
            <para> Globally adjusts inter-glyph spacing for all-capital text. Most typefaces contain capitals and lowercase characters, and the capitals are positioned to work with the lowercase. When capitals are used for words, they need more space between them for legibility and esthetics. This feature would not apply to monospaced designs. Of course the user may want to override this behavior in order to do more pronounced letterspacing for esthetic reasons. </para>	
             <para>Equivalent OpenType tag: 'cpsp'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_CAPITAL_SPACING']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_CAPITAL_SPACING</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.ContextualSwash">
            <summary>	
            <para>Replaces default character glyphs with corresponding swash glyphs in a specified context. Note that there may be more than one swash alternate for a given character. </para>	
             <para>Equivalent OpenType tag: 'cswh'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_CONTEXTUAL_SWASH']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_CONTEXTUAL_SWASH</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.CursivePositioning">
            <summary>	
            <para> In cursive scripts like Arabic, this feature cursively positions adjacent glyphs.</para>	
             <para>Equivalent OpenType tag: 'curs'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_CURSIVE_POSITIONING']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_CURSIVE_POSITIONING</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.Default">
            <summary>	
            <para> Replaces a sequence of glyphs with a single glyph which is preferred for typographic purposes. This feature covers those ligatures which may be used for special effect, at the user's preference.</para>	
             <para>Equivalent OpenType tag: 'dlig'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_DEFAULT']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_DEFAULT</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.DiscretionaryLigatures">
            <summary>	
            <para> Replaces standard forms in Japanese fonts with corresponding forms preferred by typographers.  For example, a user would invoke this feature to replace kanji character U+5516 with U+555E.	
            </para>	
             <para>Equivalent OpenType tag: 'expt'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_DISCRETIONARY_LIGATURES']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_DISCRETIONARY_LIGATURES</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.ExpertForms">
            <summary>	
            <para> Replaces figures separated by a slash with 'common' (diagonal) fractions.</para>	
             <para>Equivalent OpenType tag: 'frac'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_EXPERT_FORMS']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_EXPERT_FORMS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.Fractions">
            <summary>	
            <para> Replaces glyphs set on other widths with glyphs set on full (usually em) widths. In a CJKV font, this may include "lower ASCII" Latin characters and various symbols. In a European font, this feature replaces proportionally-spaced glyphs with monospaced glyphs, which are generally set on widths of 0.6 em. For example, a user may invoke this feature in a Japanese font to get full monospaced Latin glyphs instead of the corresponding proportionally-spaced versions.</para>	
             <para>Equivalent OpenType tag: 'fwid'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_FRACTIONS']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_FRACTIONS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.FullWidth">
            <summary>	
            <para> Produces the half forms of consonants in Indic scripts. For example, in Hindi (Devanagari script), the conjunct KKa, obtained by doubling the Ka, is denoted with a half form of Ka followed by the full form. </para>	
             <para>Equivalent OpenType tag: 'half'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_FULL_WIDTH']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_FULL_WIDTH</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.HalfForms">
            <summary>	
            <para> Produces the halant forms of consonants in Indic scripts. For example, in Sanskrit (Devanagari script), syllable final consonants are frequently required in their halant form.</para>	
             <para>Equivalent OpenType tag: 'haln'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_HALF_FORMS']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_HALF_FORMS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.HalantForms">
            <summary>	
            <para> Respaces glyphs designed to be set on full-em widths, fitting them onto half-em widths. This differs from hwid in that it does not substitute new glyphs.</para>	
             <para>Equivalent OpenType tag: 'halt'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_HALANT_FORMS']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_HALANT_FORMS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.AlternateHalfWidth">
            <summary>	
            <para> Replaces the default (current) forms with the historical alternates. While some ligatures are also used for historical effect, this feature deals only with single characters. Some fonts include the historical forms as alternates, so they can be used for a 'period' effect.  </para>	
             <para>Equivalent OpenType tag: 'hist'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_ALTERNATE_HALF_WIDTH']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_ALTERNATE_HALF_WIDTH</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.HistoricalForms">
            <summary>	
            <para> Replaces standard kana with forms that have been specially designed for only horizontal writing. This is a typographic optimization for improved fit and more even color.</para>	
             <para>Equivalent OpenType tag: 'hkna'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_HISTORICAL_FORMS']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_HISTORICAL_FORMS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.HorizontalKanaAlternates">
            <summary>	
            <para> Replaces the default (current) forms with the historical alternates. Some ligatures were in common use in the past, but appear anachronistic today. Some fonts include the historical forms as alternates, so they can be used for a 'period' effect.</para>	
             <para>Equivalent OpenType tag: 'hlig'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_HORIZONTAL_KANA_ALTERNATES']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_HORIZONTAL_KANA_ALTERNATES</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.HistoricalLigatures">
            <summary>	
            <para> Replaces glyphs on proportional widths, or fixed widths other than half an em, with glyphs on half-em (en) widths. Many CJKV fonts have glyphs which are set on multiple widths; this feature selects the half-em version. There are various contexts in which this is the preferred behavior, including compatibility with older desktop documents.</para>	
             <para>Equivalent OpenType tag: 'hwid'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_HISTORICAL_LIGATURES']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_HISTORICAL_LIGATURES</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.HalfWidth">
            <summary>	
            <para> Used to access the JIS X 0212-1990 glyphs for the cases when the JIS X 0213:2004 form is encoded. The JIS X 0212-1990 (aka, "Hojo Kanji") and JIS X 0213:2004 character sets overlap significantly. In some cases their prototypical glyphs differ. When building fonts that support both JIS X 0212-1990 and JIS X 0213:2004 (such as those supporting the Adobe-Japan 1-6 character collection), it is recommended that JIS X 0213:2004 forms be the preferred encoded form.</para>	
             <para>Equivalent OpenType tag: 'hojo'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_HALF_WIDTH']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_HALF_WIDTH</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.HojoKanjiForms">
            <summary>	
            <para> The National Language Council (NLC) of Japan has defined new glyph shapes for a number of JIS characters, which were incorporated into JIS X 0213:2004 as new prototypical forms. The 'jp04' feature is A subset of the 'nlck' feature, and is used to access these prototypical glyphs in a manner that maintains the integrity of JIS X 0213:2004.</para>	
             <para>Equivalent OpenType tag: 'jp04'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_HOJO_KANJI_FORMS']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_HOJO_KANJI_FORMS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.Jis04Forms">
            <summary>	
            <para>Replaces default (JIS90) Japanese glyphs with the corresponding forms from the JIS C 6226-1978 (JIS78) specification.</para>	
             <para>Equivalent OpenType tag: 'jp78'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_JIS04_FORMS']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_JIS04_FORMS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.Jis78Forms">
            <summary>	
            <para>Replaces default (JIS90) Japanese glyphs with the corresponding forms from the JIS X 0208-1983 (JIS83) specification.</para>	
             <para>Equivalent OpenType tag: 'jp83'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_JIS78_FORMS']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_JIS78_FORMS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.Jis83Forms">
            <summary>	
            <para> Replaces Japanese glyphs from the JIS78 or JIS83 specifications with the corresponding forms from the JIS X 0208-1990 (JIS90) specification.</para>	
             <para>Equivalent OpenType tag: 'jp90'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_JIS83_FORMS']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_JIS83_FORMS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.Jis90Forms">
            <summary>	
            <para> Adjusts amount of space between glyphs, generally to provide optically consistent spacing between glyphs. Although a well-designed typeface has consistent inter-glyph spacing overall, some glyph combinations require adjustment for improved legibility. Besides standard adjustment in the horizontal direction, this feature can supply size-dependent kerning data via device tables, "cross-stream" kerning in the Y text direction, and adjustment of glyph placement independent of the advance adjustment. Note that this feature may apply to runs of more than two glyphs, and would not be used in monospaced fonts. Also note that this feature does not apply to text set vertically.</para>	
             <para>Equivalent OpenType tag: 'kern'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_JIS90_FORMS']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_JIS90_FORMS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.Kerning">
            <summary>	
            <para> Replaces a sequence of glyphs with a single glyph which is preferred for typographic purposes. This feature covers the ligatures which the designer/manufacturer judges should be used in normal conditions.</para>	
             <para>Equivalent OpenType tag: 'liga'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_KERNING']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_KERNING</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.StandardLigatures">
            <summary>	
            <para>Changes selected figures from oldstyle to the default lining form. For example, a user may invoke this feature in order to get lining figures, which fit better with all-capital text. This feature overrides results of the Oldstyle Figures feature (onum).</para>	
             <para>Equivalent OpenType tag: 'lnum'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STANDARD_LIGATURES']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_STANDARD_LIGATURES</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.LiningFigures">
            <summary>	
            <para> Enables localized forms of glyphs to be substituted for default forms. Many scripts used to write multiple languages over wide geographical areas have developed localized variant forms of specific letters, which are used by individual literary communities. For example, a number of letters in the Bulgarian and Serbian alphabets have forms distinct from their Russian counterparts and from each other. In some cases the localized form differs only subtly from the script 'norm', in others the forms are radically distinct. </para>	
             <para>Equivalent OpenType tag: 'locl'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_LINING_FIGURES']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_LINING_FIGURES</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.LocalizedForms">
            <summary>	
            <para> Positions mark glyphs with respect to base glyphs. For example, in Arabic script positioning the Hamza above the Yeh.</para>	
             <para>Equivalent OpenType tag:  'mark'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_LOCALIZED_FORMS']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_LOCALIZED_FORMS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.MarkPositioning">
            <summary>	
            <para> Replaces standard typographic forms of Greek glyphs with corresponding forms commonly used in mathematical notation (which are a subset of the Greek alphabet).</para>	
             <para>Equivalent OpenType tag: 'mgrk'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_MARK_POSITIONING']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_MARK_POSITIONING</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.MathematicalGreek">
            <summary>	
            <para> Positions marks with respect to other marks. Required in various non-Latin scripts like Arabic. For example, in Arabic, the ligaturised mark Ha with Hamza above it can also be obtained by positioning these marks relative to one another.</para>	
             <para>Equivalent OpenType tag: 'mkmk'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_MATHEMATICAL_GREEK']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_MATHEMATICAL_GREEK</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.MarkToMarkPositioning">
            <summary>	
            <para> Replaces default glyphs with various notational forms (such as glyphs placed in open or solid circles, squares, parentheses, diamonds or rounded boxes). In some cases an annotation form may already be present, but the user may want a different one.</para>	
             <para>Equivalent OpenType tag: 'nalt'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_MARK_TO_MARK_POSITIONING']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_MARK_TO_MARK_POSITIONING</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.AlternateAnnotationForms">
            <summary>	
            <para> Used to access  glyphs made from glyph shapes defined by the National Language Council (NLC) of Japan for a number of JIS characters in 2000. </para>	
             <para>Equivalent OpenType tag: 'nlck'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_ALTERNATE_ANNOTATION_FORMS']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_ALTERNATE_ANNOTATION_FORMS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.NlcKanjiForms">
            <summary>	
            <para> Changes selected figures from the default lining style to oldstyle form. For example, a user may invoke this feature to get oldstyle figures, which fit better into the flow of normal upper- and lowercase text. This feature overrides results of the Lining Figures feature (lnum).</para>	
             <para>Equivalent OpenType tag: 'onum'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_NLC_KANJI_FORMS']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_NLC_KANJI_FORMS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.OldStyleFigures">
            <summary>	
            <para> Replaces default alphabetic glyphs with the corresponding ordinal forms for use after figures. One exception to the follows-a-figure rule is the numero character (U+2116), which is actually a ligature substitution, but is best accessed through this feature.</para>	
             <para>Equivalent OpenType tag: 'ordn'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_OLD_STYLE_FIGURES']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_OLD_STYLE_FIGURES</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.Ordinals">
            <summary>	
            <para> Respaces glyphs designed to be set on full-em widths, fitting them onto individual (more or less proportional) horizontal widths. This differs from pwid in that it does not substitute new glyphs (GPOS, not GSUB feature). The user may prefer the monospaced form, or may simply want to ensure that the glyph is well-fit and not rotated in vertical setting (Latin forms designed for proportional spacing would be rotated).</para>	
             <para>Equivalent OpenType tag: 'palt'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_ORDINALS']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_ORDINALS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.ProportionalAlternateWidth">
            <summary>	
            <para>Turns lowercase characters into petite capitals. Forms related to petite capitals, such as specially designed figures, may be included. Some fonts contain an additional size of capital letters, shorter than the regular smallcaps and it is referred to as petite caps. Such forms are most likely to be found in designs with a small lowercase x-height, where they better harmonise with lowercase text than the taller smallcaps (for examples of petite caps, see the Emigre type families Mrs Eaves and Filosofia). </para>	
             <para>Equivalent OpenType tag: 'pcap'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_PROPORTIONAL_ALTERNATE_WIDTH']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_PROPORTIONAL_ALTERNATE_WIDTH</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.PetiteCapitals">
            <summary>	
            <para> Replaces figure glyphs set on uniform (tabular) widths with corresponding glyphs set on glyph-specific (proportional) widths. Tabular widths will generally be the default, but this cannot be safely assumed. Of course this feature would not be present in monospaced designs.</para>	
             <para>Equivalent OpenType tag: 'pnum'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_PETITE_CAPITALS']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_PETITE_CAPITALS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.ProportionalFigures">
            <summary>	
            <para> Replaces glyphs set on uniform widths (typically full or half-em) with proportionally spaced glyphs. The proportional variants are often used for the Latin characters in CJKV fonts, but may also be used for Kana in Japanese fonts.</para>	
             <para>Equivalent OpenType tag: 'pwid'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_PROPORTIONAL_FIGURES']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_PROPORTIONAL_FIGURES</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.ProportionalWidths">
            <summary>	
            <para> Replaces glyphs on other widths with glyphs set on widths of one quarter of an em (half an en). The characters involved are normally figures and some forms of punctuation.</para>	
             <para>Equivalent OpenType tag: 'qwid'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_PROPORTIONAL_WIDTHS']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_PROPORTIONAL_WIDTHS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.QuarterWidths">
            <summary>	
            <para> Replaces a sequence of glyphs with a single glyph which is preferred for typographic purposes. This feature covers those ligatures, which the script determines as required to be used in normal conditions. This feature is important for some scripts to ensure correct glyph formation. </para>	
             <para>Equivalent OpenType tag: 'rlig'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_QUARTER_WIDTHS']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_QUARTER_WIDTHS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.RequiredLigatures">
            <summary>	
            <para> Identifies glyphs in the font which have been designed for "ruby", from the old typesetting term for four-point-sized type. Japanese typesetting often uses smaller kana glyphs, generally in superscripted form, to clarify the meaning of kanji which may be unfamiliar to the reader. </para>	
             <para>Equivalent OpenType tag: 'ruby'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_REQUIRED_LIGATURES']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_REQUIRED_LIGATURES</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.RubyNotationForms">
            <summary>	
            <para> Replaces the default forms with the stylistic alternates. Many fonts contain alternate glyph designs for a purely esthetic effect; these don't always fit into a clear category like swash or historical. As in the case of swash glyphs, there may be more than one alternate form.  </para>	
             <para>Equivalent OpenType tag: 'salt'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_RUBY_NOTATION_FORMS']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_RUBY_NOTATION_FORMS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.StylisticAlternates">
            <summary>	
            <para> Replaces lining or oldstyle figures with inferior figures (smaller glyphs which sit lower than the standard baseline, primarily for chemical or mathematical notation). May also replace lowercase characters with alphabetic inferiors.</para>	
             <para>Equivalent OpenType tag: 'sinf'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_ALTERNATES']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_ALTERNATES</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.ScientificInferiors">
            <summary>	
            <para> Turns lowercase characters into small capitals. This corresponds to the common SC font layout. It is generally used for display lines set in Large &amp; small caps, such as titles. Forms related to small capitals, such as oldstyle figures, may be included.</para>	
             <para>Equivalent OpenType tag: 'smcp'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_SCIENTIFIC_INFERIORS']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_SCIENTIFIC_INFERIORS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.SmallCapitals">
            <summary>	
            <para> Replaces 'traditional' Chinese or Japanese forms with the corresponding 'simplified' forms.</para>	
             <para>Equivalent OpenType tag: 'smpl'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_SMALL_CAPITALS']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_SMALL_CAPITALS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.SimplifiedForms">
            <summary>	
            <para> In addition to, or instead of, stylistic alternatives of individual glyphs (see 'salt' feature), some fonts may contain sets of stylistic variant glyphs corresponding to portions of the character set, such as multiple variants for lowercase letters in a Latin font. Glyphs in stylistic sets may be designed to harmonise visually, interract in particular ways, or otherwise work together. Examples of fonts including stylistic sets are Zapfino Linotype and Adobe's Poetica. Individual features numbered sequentially with the tag name convention 'ss01' 'ss02' 'ss03' . 'ss20' provide a mechanism for glyphs in these sets to be associated via GSUB lookup indexes to default forms and to each other, and for users to select from available stylistic sets</para>	
             <para>Equivalent OpenType tag: 'ss01'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_SIMPLIFIED_FORMS']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_SIMPLIFIED_FORMS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet1">
            <summary>	
            <para>See the description for <see cref="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/>.</para>	
             <para>Equivalent OpenType tag: 'ss02'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_1']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_1</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet2">
            <summary>	
            <para>See the description for <see cref="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/>.</para>	
             <para>Equivalent OpenType tag: 'ss03'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_2']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_2</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet3">
            <summary>	
            <para>See the description for <see cref="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/>.</para>	
             <para>Equivalent OpenType tag: 'ss04'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_3']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_3</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet4">
            <summary>	
            <para>See the description for <see cref="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/>.</para>	
             <para>Equivalent OpenType tag: 'ss05'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_4']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_4</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet5">
            <summary>	
            <para>See the description for <see cref="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/>.</para>	
             <para>Equivalent OpenType tag: 'ss06'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_5']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_5</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet6">
            <summary>	
            <para>See the description for <see cref="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/>.</para>	
             <para>Equivalent OpenType tag: 'ss07'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_6']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_6</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet7">
            <summary>	
            <para>See the description for <see cref="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/>.</para>	
             <para>Equivalent OpenType tag: 'ss08'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_7']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_7</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet8">
            <summary>	
            <para>See the description for <see cref="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/>.</para>	
             <para>Equivalent OpenType tag: 'ss09'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_8']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_8</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet9">
            <summary>	
            <para>See the description for <see cref="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/>.</para>	
             <para>Equivalent OpenType tag: 'ss10'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_9']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_9</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet10">
            <summary>	
            <para>See the description for <see cref="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/>.</para>	
             <para>Equivalent OpenType tag: 'ss11'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_10']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_10</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet11">
            <summary>	
            <para>See the description for <see cref="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/>.</para>	
             <para>Equivalent OpenType tag: 'ss12'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_11']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_11</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet12">
            <summary>	
            <para>See the description for <see cref="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/>.</para>	
             <para>Equivalent OpenType tag: 'ss13'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_12']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_12</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet13">
            <summary>	
            <para>See the description for <see cref="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/>.</para>	
             <para>Equivalent OpenType tag: 'ss14'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_13']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_13</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet14">
            <summary>	
            <para>See the description for <see cref="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/>.</para>	
             <para>Equivalent OpenType tag: 'ss15'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_14']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_14</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet15">
            <summary>	
            <para>See the description for <see cref="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/>.</para>	
             <para>Equivalent OpenType tag: 'ss16'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_15']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_15</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet16">
            <summary>	
            <para>See the description for <see cref="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/>.</para>	
             <para>Equivalent OpenType tag: 'ss17'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_16']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_16</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet17">
            <summary>	
            <para>See the description for <see cref="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/>.</para>	
             <para>Equivalent OpenType tag: 'ss18'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_17']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_17</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet18">
            <summary>	
            <para>See the description for <see cref="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/>.</para>	
             <para>Equivalent OpenType tag: 'ss19'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_18']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_18</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet19">
            <summary>	
            <para>See the description for <see cref="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/>.</para>	
             <para>Equivalent OpenType tag: 'ss20'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_19']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_19</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.StylisticSet20">
            <summary>	
            <para> May replace a default glyph with a subscript glyph, or it may combine a glyph substitution with positioning adjustments for proper placement.</para>	
             <para>Equivalent OpenType tag: 'subs'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_20']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_20</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.Subscript">
            <summary>	
            <para> Replaces lining or oldstyle figures with superior figures (primarily for footnote indication), and replaces lowercase letters with superior letters (primarily for abbreviated French titles).</para>	
             <para>Equivalent OpenType tag: 'sups'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_SUBSCRIPT']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_SUBSCRIPT</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.Superscript">
            <summary>	
            <para> Replaces default character glyphs with corresponding swash glyphs. Note that there may be more than one swash alternate for a given character.</para>	
             <para>Equivalent OpenType tag: 'swsh'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_SUPERSCRIPT']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_SUPERSCRIPT</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.Swash">
            <summary>	
            <para> Replaces the default glyphs with corresponding forms designed specifically for titling. These may be all-capital and/or larger on the body, and adjusted for viewing at larger sizes.</para>	
             <para>Equivalent OpenType tag: 'titl'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_SWASH']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_SWASH</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.Titling">
            <summary>	
            <para> Replaces 'simplified' Japanese kanji forms with the corresponding 'traditional' forms. This is equivalent to the Traditional Forms feature, but explicitly limited to the traditional forms considered proper for use in personal names (as many as 205 glyphs in some fonts).</para>	
             <para>Equivalent OpenType tag: 'tnam'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_TITLING']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_TITLING</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.TraditionalNameForms">
            <summary>	
            <para> Replaces figure glyphs set on proportional widths with corresponding glyphs set on uniform (tabular) widths. Tabular widths will generally be the default, but this cannot be safely assumed. Of course this feature would not be present in monospaced designs.</para>	
             <para>Equivalent OpenType tag: 'tnum'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_TRADITIONAL_NAME_FORMS']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_TRADITIONAL_NAME_FORMS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.TabularFigures">
            <summary>	
            <para> Replaces 'simplified' Chinese hanzi or Japanese kanji forms with the corresponding 'traditional' forms.</para>	
             <para>Equivalent OpenType tag: 'trad'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_TABULAR_FIGURES']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_TABULAR_FIGURES</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.TraditionalForms">
            <summary>	
            <para> Replaces glyphs on other widths with glyphs set on widths of one third of an em. The characters involved are normally figures and some forms of punctuation.</para>	
             <para>Equivalent OpenType tag: 'twid'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_TRADITIONAL_FORMS']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_TRADITIONAL_FORMS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.ThirdWidths">
            <summary>	
            <para> Maps upper- and lowercase letters to a mixed set of lowercase and small capital forms, resulting in a single case alphabet (for an example of unicase, see the Emigre type family Filosofia). The letters substituted may vary from font to font, as appropriate to the design. If aligning to the x-height, smallcap glyphs may be substituted, or specially designed unicase forms might be used. Substitutions might also include specially designed figures.	
            </para>	
             <para>Equivalent OpenType tag: 'unic'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_THIRD_WIDTHS']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_THIRD_WIDTHS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.Unicase">
            <summary>	
            <para>Allows the user to change from the default 0 to a slashed form. Some fonts contain both a default form of zero, and an alternative form which uses a diagonal slash through the counter. Especially in condensed designs, it can be difficult to distinguish between 0 and O (zero and capital O) in any situation where capitals and lining figures may be arbitrarily mixed. </para>	
             <para>Equivalent OpenType tag: 'zero'</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_UNICASE']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_UNICASE</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.VerticalWriting">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_VERTICAL_WRITING']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_VERTICAL_WRITING</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.VerticalAlternatesAndRotation">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_VERTICAL_ALTERNATES_AND_ROTATION']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_VERTICAL_ALTERNATES_AND_ROTATION</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFeatureTag.SlashedZero">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_SLASHED_ZERO']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE_TAG_SLASHED_ZERO</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.FontFileType">
            <summary>	
            The type of a font represented by a single font file. Font formats that consist of multiple files, for example Type 1 .PFM and .PFB, have separate enum values for each of the file types.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FILE_TYPE']/*"/>	
            <unmanaged>DWRITE_FONT_FILE_TYPE</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFileType.Unknown">
            <summary>	
            <para>Font type is not recognized by the DirectWrite font system.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FILE_TYPE_UNKNOWN']/*"/>	
            <unmanaged>DWRITE_FONT_FILE_TYPE_UNKNOWN</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFileType.Cff">
            <summary>	
            <para>OpenType font with CFF outlines.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FILE_TYPE_CFF']/*"/>	
            <unmanaged>DWRITE_FONT_FILE_TYPE_CFF</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFileType.Truetype">
            <summary>	
            <para>OpenType font with TrueType outlines.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FILE_TYPE_TRUETYPE']/*"/>	
            <unmanaged>DWRITE_FONT_FILE_TYPE_TRUETYPE</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFileType.TruetypeCollection">
            <summary>	
            <para>OpenType font that contains a TrueType collection.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FILE_TYPE_TRUETYPE_COLLECTION']/*"/>	
            <unmanaged>DWRITE_FONT_FILE_TYPE_TRUETYPE_COLLECTION</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFileType.Type1Pfm">
            <summary>	
            <para>Type 1 PFM font.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FILE_TYPE_TYPE1_PFM']/*"/>	
            <unmanaged>DWRITE_FONT_FILE_TYPE_TYPE1_PFM</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFileType.Type1Pfb">
            <summary>	
            <para>Type 1 PFB font.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FILE_TYPE_TYPE1_PFB']/*"/>	
            <unmanaged>DWRITE_FONT_FILE_TYPE_TYPE1_PFB</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFileType.Vector">
            <summary>	
            <para>Vector .FON font.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FILE_TYPE_VECTOR']/*"/>	
            <unmanaged>DWRITE_FONT_FILE_TYPE_VECTOR</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontFileType.Bitmap">
            <summary>	
            <para>Bitmap .FON font.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_FILE_TYPE_BITMAP']/*"/>	
            <unmanaged>DWRITE_FONT_FILE_TYPE_BITMAP</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.FontSimulations">
            <summary>	
            Specifies algorithmic style simulations to be applied to the font face. Bold and oblique simulations can be combined via bitwise OR operation.	
            </summary>	
            <remarks>	
            Style simulations are not recommended for good typographic quality.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_SIMULATIONS']/*"/>	
            <unmanaged>DWRITE_FONT_SIMULATIONS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontSimulations.None">
            <summary>	
            <para>Indicates that no simulations are applied to the font face.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_SIMULATIONS_NONE']/*"/>	
            <unmanaged>DWRITE_FONT_SIMULATIONS_NONE</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontSimulations.Bold">
            <summary>	
            <para>Indicates that algorithmic emboldening is applied to the font face.  <see cref="F:SharpDX.DirectWrite.FontSimulations.Bold"/> increases weight by applying a widening algorithm to the glyph outline. This may  be used to simulate a bold weight where no designed bold weight is available.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_SIMULATIONS_BOLD']/*"/>	
            <unmanaged>DWRITE_FONT_SIMULATIONS_BOLD</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontSimulations.Oblique">
            <summary>	
            <para>Indicates that algorithmic italicization is applied to the font face. <see cref="F:SharpDX.DirectWrite.FontSimulations.Oblique"/> applies obliquing (shear) to the glyph outline. This may be used to simulate an oblique/italic style where no designed oblique/italic style is available.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_SIMULATIONS_OBLIQUE']/*"/>	
            <unmanaged>DWRITE_FONT_SIMULATIONS_OBLIQUE</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.FontStretch">
            <summary>	
            Represents the degree to which a font has been stretched compared to a font's normal aspect ratio. The enumerated values correspond to the usWidthClass definition in the OpenType specification. The usWidthClass represents an integer value between 1 and 9?lower values indicate narrower widths; higher values indicate wider widths.	
            </summary>	
            <remarks>	
            A font stretch describes the degree to which a font form is stretched from its normal aspect ratio, which is the original width to height ratio specified for the glyphs in the font. 	
            The following illustration shows an example of Normal and Condensed stretches for the Rockwell Bold typeface.Note??Values other than the ones defined in the enumeration are considered to be invalid, and are rejected by font API functions.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_STRETCH']/*"/>	
            <unmanaged>DWRITE_FONT_STRETCH</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontStretch.Undefined">
            <summary>	
            <para>Predefined font stretch : Not known (0).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_STRETCH_UNDEFINED']/*"/>	
            <unmanaged>DWRITE_FONT_STRETCH_UNDEFINED</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontStretch.UltraCondensed">
            <summary>	
            <para>Predefined font stretch : Ultra-condensed (1).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_STRETCH_ULTRA_CONDENSED']/*"/>	
            <unmanaged>DWRITE_FONT_STRETCH_ULTRA_CONDENSED</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontStretch.ExtraCondensed">
            <summary>	
            <para>Predefined font stretch : Extra-condensed (2).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_STRETCH_EXTRA_CONDENSED']/*"/>	
            <unmanaged>DWRITE_FONT_STRETCH_EXTRA_CONDENSED</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontStretch.Condensed">
            <summary>	
            <para>Predefined font stretch : Condensed (3).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_STRETCH_CONDENSED']/*"/>	
            <unmanaged>DWRITE_FONT_STRETCH_CONDENSED</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontStretch.SemiCondensed">
            <summary>	
            <para>Predefined font stretch : Semi-condensed (4).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_STRETCH_SEMI_CONDENSED']/*"/>	
            <unmanaged>DWRITE_FONT_STRETCH_SEMI_CONDENSED</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontStretch.Normal">
            <summary>	
            <para>Predefined font stretch : Normal (5).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_STRETCH_NORMAL']/*"/>	
            <unmanaged>DWRITE_FONT_STRETCH_NORMAL</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontStretch.Medium">
            <summary>	
            <para>Predefined font stretch : Medium (5).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_STRETCH_MEDIUM']/*"/>	
            <unmanaged>DWRITE_FONT_STRETCH_MEDIUM</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontStretch.SemiExpanded">
            <summary>	
            <para>Predefined font stretch : Semi-expanded (6).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_STRETCH_SEMI_EXPANDED']/*"/>	
            <unmanaged>DWRITE_FONT_STRETCH_SEMI_EXPANDED</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontStretch.Expanded">
            <summary>	
            <para>Predefined font stretch : Expanded (7).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_STRETCH_EXPANDED']/*"/>	
            <unmanaged>DWRITE_FONT_STRETCH_EXPANDED</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontStretch.ExtraExpanded">
            <summary>	
            <para>Predefined font stretch : Extra-expanded (8).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_STRETCH_EXTRA_EXPANDED']/*"/>	
            <unmanaged>DWRITE_FONT_STRETCH_EXTRA_EXPANDED</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontStretch.UltraExpanded">
            <summary>	
            <para>Predefined font stretch : Ultra-expanded (9).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_STRETCH_ULTRA_EXPANDED']/*"/>	
            <unmanaged>DWRITE_FONT_STRETCH_ULTRA_EXPANDED</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.FontStyle">
            <summary>	
            Represents the style of a font face as normal, italic, or oblique.	
            </summary>	
            <remarks>	
            Three terms categorize the slant of a font: normal, italic, and oblique.Font styleDescription NormalThe characters in a normal, or roman, font are upright. 	
             Italic 	
            The characters in an italic font are truly slanted and appear as they were designed. 	
             ObliqueThe characters in an oblique font are artificially slanted.?For Oblique, the slant is achieved by performing a shear transformation on the characters from a normal font. When a true italic font is not available on a computer or printer, an oblique style can be generated from the normal font and used to simulate an italic font.  The following illustration shows the normal, italic, and oblique font styles for the Palatino Linotype font. Notice how the italic font style has a more flowing and visually appealing appearance than the oblique font style, which is simply created by skewing the normal font style version of the text.Note?? Values other than the ones defined in the enumeration are considered to be invalid, and they are rejected by font API functions.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_STYLE']/*"/>	
            <unmanaged>DWRITE_FONT_STYLE</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontStyle.Normal">
            <summary>	
            <para>Font style : Normal.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_STYLE_NORMAL']/*"/>	
            <unmanaged>DWRITE_FONT_STYLE_NORMAL</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontStyle.Oblique">
            <summary>	
            <para>Font style : Oblique. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_STYLE_OBLIQUE']/*"/>	
            <unmanaged>DWRITE_FONT_STYLE_OBLIQUE</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontStyle.Italic">
            <summary>	
            <para>Font style : Italic.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_STYLE_ITALIC']/*"/>	
            <unmanaged>DWRITE_FONT_STYLE_ITALIC</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.FontWeight">
            <summary>	
            Represents the density of a typeface, in terms of the lightness or heaviness of the strokes. The enumerated values correspond to the usWeightClass definition in the OpenType specification. The usWeightClass represents an integer value between 1 and 999. Lower values indicate lighter weights; higher values indicate heavier weights.	
            </summary>	
            <remarks>	
            Weight differences are generally differentiated by an increased stroke or thickness that is associated with a given character in a typeface, as compared to a "normal" character from that same typeface. 	
            The following illustration shows an example of Normal and UltraBold weights for the Palatino Linotype typeface.Note??Not all weights are available for all typefaces. When a weight is not available for a typeface, the closest matching weight is returned.Font weight values less than 1 or greater than 999 are considered invalid, and they are rejected by font API functions.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_WEIGHT']/*"/>	
            <unmanaged>DWRITE_FONT_WEIGHT</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontWeight.Thin">
            <summary>	
            <para>Predefined font weight : Thin (100).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_WEIGHT_THIN']/*"/>	
            <unmanaged>DWRITE_FONT_WEIGHT_THIN</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontWeight.ExtraLight">
            <summary>	
            <para>Predefined font weight : Extra-light (200).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_WEIGHT_EXTRA_LIGHT']/*"/>	
            <unmanaged>DWRITE_FONT_WEIGHT_EXTRA_LIGHT</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontWeight.UltraLight">
            <summary>	
            <para>Predefined font weight : Ultra-light (200).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_WEIGHT_ULTRA_LIGHT']/*"/>	
            <unmanaged>DWRITE_FONT_WEIGHT_ULTRA_LIGHT</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontWeight.Light">
            <summary>	
            <para>Predefined font weight : Light (300).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_WEIGHT_LIGHT']/*"/>	
            <unmanaged>DWRITE_FONT_WEIGHT_LIGHT</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontWeight.Normal">
            <summary>	
            <para>Predefined font weight : Normal (400).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_WEIGHT_NORMAL']/*"/>	
            <unmanaged>DWRITE_FONT_WEIGHT_NORMAL</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontWeight.Regular">
            <summary>	
            <para>Predefined font weight : Regular (400).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_WEIGHT_REGULAR']/*"/>	
            <unmanaged>DWRITE_FONT_WEIGHT_REGULAR</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontWeight.Medium">
            <summary>	
            <para>Predefined font weight : Medium (500).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_WEIGHT_MEDIUM']/*"/>	
            <unmanaged>DWRITE_FONT_WEIGHT_MEDIUM</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontWeight.DemiBold">
            <summary>	
            <para>Predefined font weight : Demi-bold (600).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_WEIGHT_DEMI_BOLD']/*"/>	
            <unmanaged>DWRITE_FONT_WEIGHT_DEMI_BOLD</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontWeight.SemiBold">
            <summary>	
            <para>Predefined font weight : Semi-bold (600).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_WEIGHT_SEMI_BOLD']/*"/>	
            <unmanaged>DWRITE_FONT_WEIGHT_SEMI_BOLD</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontWeight.Bold">
            <summary>	
            <para>Predefined font weight : Bold (700).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_WEIGHT_BOLD']/*"/>	
            <unmanaged>DWRITE_FONT_WEIGHT_BOLD</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontWeight.ExtraBold">
            <summary>	
            <para>Predefined font weight : Extra-bold (800).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_WEIGHT_EXTRA_BOLD']/*"/>	
            <unmanaged>DWRITE_FONT_WEIGHT_EXTRA_BOLD</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontWeight.UltraBold">
            <summary>	
            <para>Predefined font weight : Ultra-bold (800).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_WEIGHT_ULTRA_BOLD']/*"/>	
            <unmanaged>DWRITE_FONT_WEIGHT_ULTRA_BOLD</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontWeight.Black">
            <summary>	
            <para>Predefined font weight : Black (900).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_WEIGHT_BLACK']/*"/>	
            <unmanaged>DWRITE_FONT_WEIGHT_BLACK</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontWeight.Heavy">
            <summary>	
            <para>Predefined font weight : Heavy (900).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_WEIGHT_HEAVY']/*"/>	
            <unmanaged>DWRITE_FONT_WEIGHT_HEAVY</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontWeight.ExtraBlack">
            <summary>	
            <para>Predefined font weight : Extra-black (950).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_WEIGHT_EXTRA_BLACK']/*"/>	
            <unmanaged>DWRITE_FONT_WEIGHT_EXTRA_BLACK</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontWeight.UltraBlack">
            <summary>	
            <para>Predefined font weight : Ultra-black (950).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_WEIGHT_ULTRA_BLACK']/*"/>	
            <unmanaged>DWRITE_FONT_WEIGHT_ULTRA_BLACK</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.InformationalStringId">
            <summary>	
            The informational string enumeration which identifies a string embedded in a font file.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_ID']/*"/>	
            <unmanaged>DWRITE_INFORMATIONAL_STRING_ID</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.InformationalStringId.None">
            <summary>	
            <para>Indicates the string containing the unspecified name ID.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_NONE']/*"/>	
            <unmanaged>DWRITE_INFORMATIONAL_STRING_NONE</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.InformationalStringId.CopyrightNotice">
            <summary>	
            <para>Indicates the string containing the copyright notice provided by the font.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_COPYRIGHT_NOTICE']/*"/>	
            <unmanaged>DWRITE_INFORMATIONAL_STRING_COPYRIGHT_NOTICE</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.InformationalStringId.VersionStrings">
            <summary>	
            <para>Indicates the string containing a version number.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_VERSION_STRINGS']/*"/>	
            <unmanaged>DWRITE_INFORMATIONAL_STRING_VERSION_STRINGS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.InformationalStringId.Trademark">
            <summary>	
            <para>Indicates the string containing the trademark information provided by the font.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_TRADEMARK']/*"/>	
            <unmanaged>DWRITE_INFORMATIONAL_STRING_TRADEMARK</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.InformationalStringId.Manufacturer">
            <summary>	
            <para>Indicates the string containing the name of the font manufacturer.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_MANUFACTURER']/*"/>	
            <unmanaged>DWRITE_INFORMATIONAL_STRING_MANUFACTURER</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.InformationalStringId.Designer">
            <summary>	
            <para>Indicates the string containing the name of the font designer.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_DESIGNER']/*"/>	
            <unmanaged>DWRITE_INFORMATIONAL_STRING_DESIGNER</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.InformationalStringId.DesignerUrl">
            <summary>	
            <para>Indicates the string containing the URL of the font designer (with protocol, e.g., http://, ftp://).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_DESIGNER_URL']/*"/>	
            <unmanaged>DWRITE_INFORMATIONAL_STRING_DESIGNER_URL</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.InformationalStringId.Description">
            <summary>	
            <para>Indicates the string containing the description of the font. This may also contain revision information, usage recommendations, history, features, etc.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_DESCRIPTION']/*"/>	
            <unmanaged>DWRITE_INFORMATIONAL_STRING_DESCRIPTION</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.InformationalStringId.FontVendorUrl">
            <summary>	
            <para>Indicates the string containing the URL of the font vendor (with protocol, e.g., http://, ftp://). If a unique serial number is embedded in the URL, it can be used to register the font.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_FONT_VENDOR_URL']/*"/>	
            <unmanaged>DWRITE_INFORMATIONAL_STRING_FONT_VENDOR_URL</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.InformationalStringId.LicenseDescription">
            <summary>	
            <para>Indicates the string containing the description of how the font may be legally used, or different example scenarios for licensed use. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_LICENSE_DESCRIPTION']/*"/>	
            <unmanaged>DWRITE_INFORMATIONAL_STRING_LICENSE_DESCRIPTION</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.InformationalStringId.LicenseInformationUrl">
            <summary>	
            <para>Indicates the string containing the URL where additional licensing information can be found.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_LICENSE_INFO_URL']/*"/>	
            <unmanaged>DWRITE_INFORMATIONAL_STRING_LICENSE_INFO_URL</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.InformationalStringId.Win32FamilyNames">
            <summary>	
            <para>Indicates the string containing the GDI-compatible family name. Since GDI allows a maximum of four fonts per family, fonts in the same family may have different GDI-compatible family names (e.g., "Arial", "Arial Narrow", "Arial Black").</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_WIN32_FAMILY_NAMES']/*"/>	
            <unmanaged>DWRITE_INFORMATIONAL_STRING_WIN32_FAMILY_NAMES</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.InformationalStringId.Win32SubfamilyNames">
            <summary>	
            <para>Indicates the string containing a GDI-compatible subfamily name.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_WIN32_SUBFAMILY_NAMES']/*"/>	
            <unmanaged>DWRITE_INFORMATIONAL_STRING_WIN32_SUBFAMILY_NAMES</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.InformationalStringId.PreferredFamilyNames">
            <summary>	
            <para>Indicates the string containing the family name preferred by the designer. This enables font designers to group more than four fonts in a single family without losing compatibility with GDI. This name is typically only present if it differs from the GDI-compatible family name.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_PREFERRED_FAMILY_NAMES']/*"/>	
            <unmanaged>DWRITE_INFORMATIONAL_STRING_PREFERRED_FAMILY_NAMES</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.InformationalStringId.PreferredSubfamilyNames">
            <summary>	
            <para>Indicates the string containing the subfamily name preferred by the designer. This name is typically only present if it differs from the GDI-compatible subfamily name.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_PREFERRED_SUBFAMILY_NAMES']/*"/>	
            <unmanaged>DWRITE_INFORMATIONAL_STRING_PREFERRED_SUBFAMILY_NAMES</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.InformationalStringId.SampleText">
            <summary>	
            <para>Contains sample text for display in font lists. This can be the font name or any other text that the designer thinks is the best  example to display the font in.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_SAMPLE_TEXT']/*"/>	
            <unmanaged>DWRITE_INFORMATIONAL_STRING_SAMPLE_TEXT</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.InformationalStringId.FullName">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_FULL_NAME']/*"/>	
            <unmanaged>DWRITE_INFORMATIONAL_STRING_FULL_NAME</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.InformationalStringId.PostscriptName">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_POSTSCRIPT_NAME']/*"/>	
            <unmanaged>DWRITE_INFORMATIONAL_STRING_POSTSCRIPT_NAME</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.InformationalStringId.PostscriptCidName">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_POSTSCRIPT_CID_NAME']/*"/>	
            <unmanaged>DWRITE_INFORMATIONAL_STRING_POSTSCRIPT_CID_NAME</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.LineSpacingMethod">
            <summary>	
            The method used for line spacing in a text layout.	
            </summary>	
            <remarks>	
            The line spacing method is set by using the SetLineSpacing method of the <see cref="T:SharpDX.DirectWrite.TextFormat"/> or <see cref="T:SharpDX.DirectWrite.TextLayout"/> interfaces.  To get  the current line spacing method of a text format or text layou use the GetLineSpacing.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_LINE_SPACING_METHOD']/*"/>	
            <unmanaged>DWRITE_LINE_SPACING_METHOD</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.LineSpacingMethod.Default">
            <summary>	
            <para>Line spacing depends solely on the content, adjusting to accommodate the size of fonts and inline objects.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_LINE_SPACING_METHOD_DEFAULT']/*"/>	
            <unmanaged>DWRITE_LINE_SPACING_METHOD_DEFAULT</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.LineSpacingMethod.Uniform">
            <summary>	
            <para>Lines are explicitly set to uniform spacing, regardless of the size of fonts and inline objects. This can be useful to avoid the uneven appearance that can occur from font fallback.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_LINE_SPACING_METHOD_UNIFORM']/*"/>	
            <unmanaged>DWRITE_LINE_SPACING_METHOD_UNIFORM</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.NumberSubstitutionMethod">
            <summary>	
            Specifies how to apply number substitution on digits and related punctuation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_NUMBER_SUBSTITUTION_METHOD']/*"/>	
            <unmanaged>DWRITE_NUMBER_SUBSTITUTION_METHOD</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.NumberSubstitutionMethod.FromCulture">
            <summary>	
            <para>Specifies that the substitution method should be determined based on the LOCALE_IDIGITSUBSTITUTION value of the specified text culture.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_NUMBER_SUBSTITUTION_METHOD_FROM_CULTURE']/*"/>	
            <unmanaged>DWRITE_NUMBER_SUBSTITUTION_METHOD_FROM_CULTURE</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.NumberSubstitutionMethod.Contextual">
            <summary>	
            <para>If the culture is Arabic or Persian, specifies that the number shapes depend on the context. Either traditional or nominal number shapes are used, depending on the nearest preceding strong character or (if there is none) the reading direction of the paragraph.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_NUMBER_SUBSTITUTION_METHOD_CONTEXTUAL']/*"/>	
            <unmanaged>DWRITE_NUMBER_SUBSTITUTION_METHOD_CONTEXTUAL</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.NumberSubstitutionMethod.None">
            <summary>	
            <para>Specifies that code points 0x30-0x39 are always rendered as nominal numeral shapes (ones of the European number), that is, no substitution is performed.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_NUMBER_SUBSTITUTION_METHOD_NONE']/*"/>	
            <unmanaged>DWRITE_NUMBER_SUBSTITUTION_METHOD_NONE</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.NumberSubstitutionMethod.National">
            <summary>	
            <para>Specifies that numbers are rendered using the national number shapes as specified by the LOCALE_SNATIVEDIGITS value of the specified text culture.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_NUMBER_SUBSTITUTION_METHOD_NATIONAL']/*"/>	
            <unmanaged>DWRITE_NUMBER_SUBSTITUTION_METHOD_NATIONAL</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.NumberSubstitutionMethod.Traditional">
            <summary>	
            <para>Specifies that numbers are rendered using the traditional shapes for the specified culture. For most cultures, this is the same as NativeNational. However, NativeNational results in Latin numbers for some Arabic cultures, whereasDWRITE_NUMBER_SUBSTITUTION_METHOD_TRADITIONAL results in arabic numbers for all Arabic cultures.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_NUMBER_SUBSTITUTION_METHOD_TRADITIONAL']/*"/>	
            <unmanaged>DWRITE_NUMBER_SUBSTITUTION_METHOD_TRADITIONAL</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.ParagraphAlignment">
            <summary>	
            Specifies the alignment of paragraph text along the flow direction axis, relative to the top and bottom of the flow's layout box.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_PARAGRAPH_ALIGNMENT']/*"/>	
            <unmanaged>DWRITE_PARAGRAPH_ALIGNMENT</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.ParagraphAlignment.Near">
            <summary>	
            <para>The top of the text flow is aligned to the top edge of the layout box.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_PARAGRAPH_ALIGNMENT_NEAR']/*"/>	
            <unmanaged>DWRITE_PARAGRAPH_ALIGNMENT_NEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.ParagraphAlignment.Far">
            <summary>	
            <para>The bottom of the text flow is aligned to the bottom edge of the layout box.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_PARAGRAPH_ALIGNMENT_FAR']/*"/>	
            <unmanaged>DWRITE_PARAGRAPH_ALIGNMENT_FAR</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.ParagraphAlignment.Center">
            <summary>	
            <para>The center of the flow is aligned to the center of the layout box.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_PARAGRAPH_ALIGNMENT_CENTER']/*"/>	
            <unmanaged>DWRITE_PARAGRAPH_ALIGNMENT_CENTER</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.PixelGeometry">
            <summary>	
            Represents the internal structure of a device pixel (that is, the physical arrangement of red, green, and blue color components) that is assumed for purposes of rendering text.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_PIXEL_GEOMETRY']/*"/>	
            <unmanaged>DWRITE_PIXEL_GEOMETRY</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.PixelGeometry.Flat">
            <summary>	
            <para>The red, green, and blue color components of each pixel are assumed to occupy the same point.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_PIXEL_GEOMETRY_FLAT']/*"/>	
            <unmanaged>DWRITE_PIXEL_GEOMETRY_FLAT</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.PixelGeometry.Rgb">
            <summary>	
            <para>Each pixel is composed of three vertical stripes, with red on the left, green in the center, and  blue on the right. This is the most common pixel geometry for LCD monitors.	   </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_PIXEL_GEOMETRY_RGB']/*"/>	
            <unmanaged>DWRITE_PIXEL_GEOMETRY_RGB</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.PixelGeometry.Bgr">
            <summary>	
            <para>Each pixel is composed of three vertical stripes, with blue on the left, green in the center, and  red on the right.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_PIXEL_GEOMETRY_BGR']/*"/>	
            <unmanaged>DWRITE_PIXEL_GEOMETRY_BGR</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.ReadingDirection">
            <summary>	
            Specifies the direction in which reading progresses.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_READING_DIRECTION']/*"/>	
            <unmanaged>DWRITE_READING_DIRECTION</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.ReadingDirection.LeftToRight">
            <summary>	
            <para>Indicates that reading progresses from left to right.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_READING_DIRECTION_LEFT_TO_RIGHT']/*"/>	
            <unmanaged>DWRITE_READING_DIRECTION_LEFT_TO_RIGHT</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.ReadingDirection.RightToLeft">
            <summary>	
            <para>Indicates that reading progresses from right to left.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_READING_DIRECTION_RIGHT_TO_LEFT']/*"/>	
            <unmanaged>DWRITE_READING_DIRECTION_RIGHT_TO_LEFT</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.RenderingMode">
            <summary>	
            Represents a method of rendering glyphs.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_RENDERING_MODE']/*"/>	
            <unmanaged>DWRITE_RENDERING_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.RenderingMode.Default">
            <summary>	
            <para>Specifies that the rendering mode is determined automatically, based on the font and size.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_RENDERING_MODE_DEFAULT']/*"/>	
            <unmanaged>DWRITE_RENDERING_MODE_DEFAULT</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.RenderingMode.Aliased">
            <summary>	
            <para>Specifies that no anti-aliasing is performed. Each pixel is either set to the foreground color of the text or retains the color of the background.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_RENDERING_MODE_ALIASED']/*"/>	
            <unmanaged>DWRITE_RENDERING_MODE_ALIASED</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.RenderingMode.GdiClassic">
            <summary>	
            <para>Specifies ClearType rendering with the same metrics as bi-level text. Glyphs can only be positioned on whole-pixel boundaries.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_RENDERING_MODE_GDI_CLASSIC']/*"/>	
            <unmanaged>DWRITE_RENDERING_MODE_GDI_CLASSIC</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.RenderingMode.GdiNatural">
            <summary>	
            <para>Specifies ClearType rendering with the same metrics as text rendering using GDI using a font created with CLEARTYPE_NATURAL_QUALITY. Glyph metrics are closer to their ideal values than with bi-level text, but glyphs are still positioned on whole-pixel boundaries.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_RENDERING_MODE_GDI_NATURAL']/*"/>	
            <unmanaged>DWRITE_RENDERING_MODE_GDI_NATURAL</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.RenderingMode.Natural">
            <summary>	
            <para>Specifies ClearType rendering with anti-aliasing in the horizontal dimension only. This is typically used with small to medium font sizes (up to 16 ppem).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_RENDERING_MODE_NATURAL']/*"/>	
            <unmanaged>DWRITE_RENDERING_MODE_NATURAL</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.RenderingMode.NaturalSymmetric">
            <summary>	
            <para>Specifies ClearType rendering with anti-aliasing in both horizontal and vertical dimensions. This is typically used at larger sizes to makes curves and diagonal lines look smoother, at the expense of some softness.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_RENDERING_MODE_NATURAL_SYMMETRIC']/*"/>	
            <unmanaged>DWRITE_RENDERING_MODE_NATURAL_SYMMETRIC</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.RenderingMode.Outline">
            <summary>	
            <para>Specifies that rendering should bypass the rasterizer and use the outlines directly. This is typically used at very large sizes.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_RENDERING_MODE_OUTLINE']/*"/>	
            <unmanaged>DWRITE_RENDERING_MODE_OUTLINE</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.RenderingMode.CleartypeGdiClassic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_RENDERING_MODE_CLEARTYPE_GDI_CLASSIC']/*"/>	
            <unmanaged>DWRITE_RENDERING_MODE_CLEARTYPE_GDI_CLASSIC</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.RenderingMode.CleartypeGdiNatural">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_RENDERING_MODE_CLEARTYPE_GDI_NATURAL']/*"/>	
            <unmanaged>DWRITE_RENDERING_MODE_CLEARTYPE_GDI_NATURAL</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.RenderingMode.CleartypeNatural">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_RENDERING_MODE_CLEARTYPE_NATURAL']/*"/>	
            <unmanaged>DWRITE_RENDERING_MODE_CLEARTYPE_NATURAL</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.RenderingMode.CleartypeNaturalSymmetric">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_RENDERING_MODE_CLEARTYPE_NATURAL_SYMMETRIC']/*"/>	
            <unmanaged>DWRITE_RENDERING_MODE_CLEARTYPE_NATURAL_SYMMETRIC</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.ScriptShapes">
            <summary>	
            Indicates additional shaping requirements for text.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_SCRIPT_SHAPES']/*"/>	
            <unmanaged>DWRITE_SCRIPT_SHAPES</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.ScriptShapes.Default">
            <summary>	
            <para>Indicates that there is no additional shaping requirements for text. Text is shaped with the writing system default behavior.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_SCRIPT_SHAPES_DEFAULT']/*"/>	
            <unmanaged>DWRITE_SCRIPT_SHAPES_DEFAULT</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.ScriptShapes.NoVisual">
            <summary>	
            <para>Indicates that text should leave no visible control or format control characters.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_SCRIPT_SHAPES_NO_VISUAL']/*"/>	
            <unmanaged>DWRITE_SCRIPT_SHAPES_NO_VISUAL</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.TextAlignment">
            <summary>	
            Specifies the alignment of paragraph text along the reading direction axis, relative to the leading and trailing edge of the layout box.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_TEXT_ALIGNMENT']/*"/>	
            <unmanaged>DWRITE_TEXT_ALIGNMENT</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.TextAlignment.Leading">
            <summary>	
            <para>The leading edge of the paragraph text is aligned to the leading edge of the layout box.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_TEXT_ALIGNMENT_LEADING']/*"/>	
            <unmanaged>DWRITE_TEXT_ALIGNMENT_LEADING</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.TextAlignment.Trailing">
            <summary>	
            <para>The trailing edge of the paragraph text is aligned to the  trailing edge of the layout box.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_TEXT_ALIGNMENT_TRAILING']/*"/>	
            <unmanaged>DWRITE_TEXT_ALIGNMENT_TRAILING</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.TextAlignment.Center">
            <summary>	
            <para>The center of the paragraph text is aligned to the center of the layout box.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_TEXT_ALIGNMENT_CENTER']/*"/>	
            <unmanaged>DWRITE_TEXT_ALIGNMENT_CENTER</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.TextAlignment.Justified">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_TEXT_ALIGNMENT_JUSTIFIED']/*"/>	
            <unmanaged>DWRITE_TEXT_ALIGNMENT_JUSTIFIED</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.TextureType">
            <summary>	
            Identifies a type of alpha texture.	
            </summary>	
            <remarks>	
            An alpha texture is a bitmap of alpha values, each representing opacity of a pixel or subpixel.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_TEXTURE_TYPE']/*"/>	
            <unmanaged>DWRITE_TEXTURE_TYPE</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.TextureType.Aliased1x1">
            <summary>	
            <para>Specifies an alpha texture for aliased text rendering (that is,  each pixel is either fully opaque or fully transparent), with one byte per pixel.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_TEXTURE_ALIASED_1x1']/*"/>	
            <unmanaged>DWRITE_TEXTURE_ALIASED_1x1</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.TextureType.Cleartype3x1">
            <summary>	
            <para>Specifies an alpha texture for ClearType text rendering, with three bytes per pixel in the horizontal dimension and one byte per pixel in the vertical dimension.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_TEXTURE_CLEARTYPE_3x1']/*"/>	
            <unmanaged>DWRITE_TEXTURE_CLEARTYPE_3x1</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.TrimmingGranularity">
            <summary>	
            Specifies  the text granularity used to trim text overflowing the layout box.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_TRIMMING_GRANULARITY']/*"/>	
            <unmanaged>DWRITE_TRIMMING_GRANULARITY</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.TrimmingGranularity.None">
            <summary>	
            <para>No trimming occurs. Text flows beyond the layout width.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_TRIMMING_GRANULARITY_NONE']/*"/>	
            <unmanaged>DWRITE_TRIMMING_GRANULARITY_NONE</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.TrimmingGranularity.Character">
            <summary>	
            <para>Trimming occurs at a character cluster boundary.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_TRIMMING_GRANULARITY_CHARACTER']/*"/>	
            <unmanaged>DWRITE_TRIMMING_GRANULARITY_CHARACTER</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.TrimmingGranularity.Word">
            <summary>	
            <para>Trimming occurs at a word boundary.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_TRIMMING_GRANULARITY_WORD']/*"/>	
            <unmanaged>DWRITE_TRIMMING_GRANULARITY_WORD</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.WordWrapping">
            <summary>	
            Specifies the word wrapping to be used in a particular multiline paragraph.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_WORD_WRAPPING']/*"/>	
            <unmanaged>DWRITE_WORD_WRAPPING</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.WordWrapping.Wrap">
            <summary>	
            <para>Indicates that words are broken across lines to avoid text overflowing the layout box.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_WORD_WRAPPING_WRAP']/*"/>	
            <unmanaged>DWRITE_WORD_WRAPPING_WRAP</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.WordWrapping.NoWrap">
            <summary>	
            <para>Indicates that words are kept within the same line even when it overflows the layout box. This option is often used with scrolling to reveal overflow text.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_WORD_WRAPPING_NO_WRAP']/*"/>	
            <unmanaged>DWRITE_WORD_WRAPPING_NO_WRAP</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.DWrite">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.DirectWrite.DWrite']/*"/>	
        </member>
        <member name="M:SharpDX.DirectWrite.DWrite.CreateFactory(SharpDX.DirectWrite.FactoryType,System.Guid,SharpDX.ComObject)">
            <summary>	
            Creates a DirectWrite factory object that is used for subsequent creation of individual DirectWrite objects.	
            </summary>	
            <param name="factoryType"><para>A value that specifies whether the factory object will be shared or isolated.</para></param>	
            <param name="iid"><para>A <see cref="T:System.Guid"/> value that identifies the DirectWrite factory interface, such as __uuidof(<see cref="T:SharpDX.DirectWrite.Factory"/>).</para></param>	
            <param name="factory"><para>An address of a reference to the newly created DirectWrite factory object.</para></param>	
            <returns>If this function succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            This function creates a DirectWrite factory object that is used for subsequent creation of individual DirectWrite objects. DirectWrite factory contains internal state data such as font loader registration and cached font data. In most cases it is recommended you use the shared factory object, because it allows multiple components that use DirectWrite to share internal DirectWrite state data, and thereby reduce memory usage. However, there are cases when it is desirable to reduce the impact of a component, such as a plug-in from an untrusted source, on the rest of the process, by sandboxing and isolating it from the rest of the process components. In such cases, it is recommended you use an isolated factory for the sandboxed component.The following example shows how to create a shared DirectWrite factory.<code>	
             if (SUCCEEDED(hr))	
            { hr = <see cref="M:SharpDX.DirectWrite.DWrite.CreateFactory(SharpDX.DirectWrite.FactoryType,System.Guid,SharpDX.ComObject)"/>( <see cref="F:SharpDX.DirectWrite.FactoryType.Shared"/>, __uuidof(<see cref="T:SharpDX.DirectWrite.Factory"/>), reinterpret_cast&lt;<see cref="T:SharpDX.ComObject"/>**&gt;(&amp;pDWriteFactory_) );	
            } 	
            </code>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWriteCreateFactory']/*"/>	
            <unmanaged>HRESULT DWriteCreateFactory([In] DWRITE_FACTORY_TYPE factoryType,[In] const GUID&amp; iid,[Out, Fast] IUnknown** factory)</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.Font">
            <summary>	
            Represents a physical font in a font collection. This interface is used to create font faces from  physical fonts, or  to retrieve information such as  font face metrics or face names from existing font faces.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFont']/*"/>	
            <unmanaged>IDWriteFont</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.Font.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.DirectWrite.Font"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.DirectWrite.Font.GetFontFamily(SharpDX.DirectWrite.FontFamily@)">
            <summary>	
            Gets the font family to which the specified font belongs.	
            </summary>	
            <param name="fontFamily"><para>When this method returns, contains an address of a reference to the font family object to which the specified font belongs.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFont::GetFontFamily']/*"/>	
            <unmanaged>HRESULT IDWriteFont::GetFontFamily([Out] IDWriteFontFamily** fontFamily)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.Font.GetWeight">
            <summary>	
            Gets the weight, or stroke thickness, of the specified font.	
            </summary>	
            <returns>A value that indicates the weight for the specified font.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFont::GetWeight']/*"/>	
            <unmanaged>DWRITE_FONT_WEIGHT IDWriteFont::GetWeight()</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.Font.GetStretch">
            <summary>	
            Gets the stretch, or width, of the specified font.	
            </summary>	
            <returns>A value that indicates the type of stretch, or width, applied to the specified font.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFont::GetStretch']/*"/>	
            <unmanaged>DWRITE_FONT_STRETCH IDWriteFont::GetStretch()</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.Font.GetStyle">
            <summary>	
            Gets the style, or slope, of the specified font.	
            </summary>	
            <returns>A value that indicates the type of style, or slope, of the specified font.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFont::GetStyle']/*"/>	
            <unmanaged>DWRITE_FONT_STYLE IDWriteFont::GetStyle()</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.Font.IsSymbolFont_">
            <summary>	
            Determines whether the font is a symbol font.	
            </summary>	
            <returns>TRUE if the font is a symbol font; otherwise, <see cref="F:SharpDX.Result.False"/>.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFont::IsSymbolFont']/*"/>	
            <unmanaged>BOOL IDWriteFont::IsSymbolFont()</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.Font.GetFaceNames(SharpDX.DirectWrite.LocalizedStrings@)">
            <summary>	
            Gets a localized strings collection containing the face names for the font (such as Regular or Bold), indexed by locale name.	
            </summary>	
            <param name="names"><para>When this method returns, contains an address to a  reference to the newly created localized strings object.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFont::GetFaceNames']/*"/>	
            <unmanaged>HRESULT IDWriteFont::GetFaceNames([Out] IDWriteLocalizedStrings** names)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.Font.GetInformationalStrings(SharpDX.DirectWrite.InformationalStringId,SharpDX.DirectWrite.LocalizedStrings@)">
            <summary>	
            Gets a localized strings collection containing the specified informational strings, indexed by locale name.	
            </summary>	
            <param name="informationalStringID"><para>A value that identifies the  informational string to get. For example, <see cref="F:SharpDX.DirectWrite.InformationalStringId.Description"/> specifies a string that contains a description of the font. </para></param>	
            <param name="informationalStrings"><para>When this method returns, contains an address of a reference to the newly created localized strings object.</para></param>	
            <returns><para>When this method returns, TRUE if the font contains the specified string ID; otherwise, <see cref="F:SharpDX.Result.False"/>.</para></returns>	
            <remarks>	
            If the font does not contain the string specified by informationalStringID, the return value is <see cref="F:SharpDX.Result.Ok"/> but  informationalStrings receives a <c>null</c> reference and exists receives the value <see cref="F:SharpDX.Result.False"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFont::GetInformationalStrings']/*"/>	
            <unmanaged>HRESULT IDWriteFont::GetInformationalStrings([In] DWRITE_INFORMATIONAL_STRING_ID informationalStringID,[Out] IDWriteLocalizedStrings** informationalStrings,[Out] BOOL* exists)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.Font.GetSimulations">
            <summary>	
            Gets a value that indicates what simulations are applied to the specified font.	
            </summary>	
            <returns>A value that indicates one or more of the  types of simulations (none, bold, or oblique)  applied to the specified font.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFont::GetSimulations']/*"/>	
            <unmanaged>DWRITE_FONT_SIMULATIONS IDWriteFont::GetSimulations()</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.Font.GetMetrics(SharpDX.DirectWrite.FontMetrics@)">
            <summary>	
            Obtains design units and common metrics for the font face. These metrics are applicable to all the glyphs within a font face and are used by applications for layout calculations.	
            </summary>	
            <param name="fontMetrics"><para>When this method returns, contains a structure that has font metrics for the current font face. The metrics returned by this function are in font design units.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFont::GetMetrics']/*"/>	
            <unmanaged>void IDWriteFont::GetMetrics([Out] DWRITE_FONT_METRICS* fontMetrics)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.Font.HasCharacter(System.Int32)">
            <summary>	
            Determines whether the font supports a specified character.	
            </summary>	
            <param name="unicodeValue"><para>A Unicode (UCS-4) character value for the method to inspect.</para></param>	
            <returns><para>When this method returns, TRUE if the font supports the specified character; otherwise, <see cref="F:SharpDX.Result.False"/>.</para></returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFont::HasCharacter']/*"/>	
            <unmanaged>HRESULT IDWriteFont::HasCharacter([In] unsigned int unicodeValue,[Out] BOOL* exists)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.Font.CreateFontFace(SharpDX.DirectWrite.FontFace)">
            <summary>	
            Creates a font face object for the font.	
            </summary>	
            <param name="fontFace"><para>When this method returns, contains an address of a reference to the newly created font face object.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFont::CreateFontFace']/*"/>	
            <unmanaged>HRESULT IDWriteFont::CreateFontFace([Out, Fast] IDWriteFontFace** fontFace)</unmanaged>	
        </member>
        <member name="P:SharpDX.DirectWrite.Font.FontFamily">
            <summary>	
            Gets the font family to which the specified font belongs.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFont::GetFontFamily']/*"/>	
            <unmanaged>GetFontFamily</unmanaged>	
            <unmanaged>HRESULT IDWriteFont::GetFontFamily([Out] IDWriteFontFamily** fontFamily)</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.Font.Weight">
            <summary>	
            Gets the weight, or stroke thickness, of the specified font.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFont::GetWeight']/*"/>	
            <unmanaged>GetWeight</unmanaged>	
            <unmanaged>DWRITE_FONT_WEIGHT IDWriteFont::GetWeight()</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.Font.Stretch">
            <summary>	
            Gets the stretch, or width, of the specified font.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFont::GetStretch']/*"/>	
            <unmanaged>GetStretch</unmanaged>	
            <unmanaged>DWRITE_FONT_STRETCH IDWriteFont::GetStretch()</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.Font.Style">
            <summary>	
            Gets the style, or slope, of the specified font.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFont::GetStyle']/*"/>	
            <unmanaged>GetStyle</unmanaged>	
            <unmanaged>DWRITE_FONT_STYLE IDWriteFont::GetStyle()</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.Font.IsSymbolFont">
            <summary>	
            Determines whether the font is a symbol font.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFont::IsSymbolFont']/*"/>	
            <unmanaged>IsSymbolFont</unmanaged>	
            <unmanaged>BOOL IDWriteFont::IsSymbolFont()</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.Font.FaceNames">
            <summary>	
            Gets a localized strings collection containing the face names for the font (such as Regular or Bold), indexed by locale name.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFont::GetFaceNames']/*"/>	
            <unmanaged>GetFaceNames</unmanaged>	
            <unmanaged>HRESULT IDWriteFont::GetFaceNames([Out] IDWriteLocalizedStrings** names)</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.Font.Simulations">
            <summary>	
            Gets a value that indicates what simulations are applied to the specified font.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFont::GetSimulations']/*"/>	
            <unmanaged>GetSimulations</unmanaged>	
            <unmanaged>DWRITE_FONT_SIMULATIONS IDWriteFont::GetSimulations()</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.Font.Metrics">
            <summary>	
            Obtains design units and common metrics for the font face. These metrics are applicable to all the glyphs within a font face and are used by applications for layout calculations.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFont::GetMetrics']/*"/>	
            <unmanaged>GetMetrics</unmanaged>	
            <unmanaged>void IDWriteFont::GetMetrics([Out] DWRITE_FONT_METRICS* fontMetrics)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.FontFamily">
            <summary>	
            Represents a family of related fonts.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFamily']/*"/>	
            <unmanaged>IDWriteFontFamily</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.FontList">
            <summary>	
            Represents a list of fonts.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontList']/*"/>	
            <unmanaged>IDWriteFontList</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontList.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.DirectWrite.FontList"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontList.GetFontCollection(SharpDX.DirectWrite.FontCollection@)">
            <summary>	
            Gets the font collection that contains the fonts in the font list.	
            </summary>	
            <param name="fontCollection"><para>When this method returns, contains the address of a reference to the current <see cref="T:SharpDX.DirectWrite.FontCollection"/> object.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontList::GetFontCollection']/*"/>	
            <unmanaged>HRESULT IDWriteFontList::GetFontCollection([Out] IDWriteFontCollection** fontCollection)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontList.GetFontCount">
            <summary>	
            Gets the number of fonts in the font list.	
            </summary>	
            <returns>The number of fonts in the font list.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontList::GetFontCount']/*"/>	
            <unmanaged>unsigned int IDWriteFontList::GetFontCount()</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontList.GetFont(System.Int32)">
            <summary>	
            Gets a font given its zero-based index.	
            </summary>	
            <param name="index"><para>Zero-based index of the font in the font list.</para></param>	
            <returns><para>When this method returns, contains the address of a reference to the newly created <see cref="T:SharpDX.DirectWrite.Font"/> object.</para></returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontList::GetFont']/*"/>	
            <unmanaged>HRESULT IDWriteFontList::GetFont([In] unsigned int index,[Out] IDWriteFont** font)</unmanaged>	
        </member>
        <member name="P:SharpDX.DirectWrite.FontList.FontCollection">
            <summary>	
            Gets the font collection that contains the fonts in the font list.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontList::GetFontCollection']/*"/>	
            <unmanaged>GetFontCollection</unmanaged>	
            <unmanaged>HRESULT IDWriteFontList::GetFontCollection([Out] IDWriteFontCollection** fontCollection)</unmanaged>
        </member>
        <member name="P:SharpDX.DirectWrite.FontList.FontCount">
            <summary>	
            Gets the number of fonts in the font list.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontList::GetFontCount']/*"/>	
            <unmanaged>GetFontCount</unmanaged>	
            <unmanaged>unsigned int IDWriteFontList::GetFontCount()</unmanaged>
        </member>
        <member name="M:SharpDX.DirectWrite.FontFamily.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.DirectWrite.FontFamily"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontFamily.GetFamilyNames(SharpDX.DirectWrite.LocalizedStrings@)">
            <summary>	
            Creates a localized strings object that contains the family names for the font family, indexed by locale name.	
            </summary>	
            <param name="names"><para>The address of a reference to the newly created <see cref="T:SharpDX.DirectWrite.LocalizedStrings"/> object.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The following code example shows how to get the font family name from a <see cref="T:SharpDX.DirectWrite.FontFamily"/> object.<code>	
            <see cref="T:SharpDX.DirectWrite.LocalizedStrings"/>* pFamilyNames = <c>null</c>; // Get a list of localized strings for the family name.	
            if (SUCCEEDED(hr))	
            { hr = pFontFamily-&gt;GetFamilyNames(&amp;pFamilyNames);	
            } UINT32 index = 0;	
            <see cref="T:System.Boolean"/> exists = false; wchar_t localeName[LOCALE_NAME_MAX_LENGTH]; if (SUCCEEDED(hr))	
            { // Get the default locale for this user. int defaultLocaleSuccess = GetUserDefaultLocaleName(localeName, LOCALE_NAME_MAX_LENGTH); // If the default locale is returned, find that locale name, otherwise use "en-us". if (defaultLocaleSuccess) { hr = pFamilyNames-&gt;FindLocaleName(localeName, &amp;index, &amp;exists); } if (SUCCEEDED(hr) &amp;&amp; !exists) // if the above find did not find a match, retry with US English { hr = pFamilyNames-&gt;FindLocaleName(L"en-us", &amp;index, &amp;exists); }	
            } // If the specified locale doesn't exist, select the first on the list.	
            if (!exists) index = 0; UINT32 length = 0; // Get the string length.	
            if (SUCCEEDED(hr))	
            { hr = pFamilyNames-&gt;GetStringLength(index, &amp;length);	
            } // Allocate a string big enough to hold the name.	
            wchar_t* name = new (std::nothrow) wchar_t[length+1];	
            if (name == <c>null</c>)	
            { hr = E_OUTOFMEMORY;	
            } // Get the family name.	
            if (SUCCEEDED(hr))	
            { hr = pFamilyNames-&gt;GetString(index, name, length+1);	
            }	
            	
            </code>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFamily::GetFamilyNames']/*"/>	
            <unmanaged>HRESULT IDWriteFontFamily::GetFamilyNames([Out] IDWriteLocalizedStrings** names)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontFamily.GetFirstMatchingFont(SharpDX.DirectWrite.FontWeight,SharpDX.DirectWrite.FontStretch,SharpDX.DirectWrite.FontStyle)">
            <summary>	
            Gets the font that best matches the specified properties.	
            </summary>	
            <param name="weight"><para>A value that is used to match a requested font weight.</para></param>	
            <param name="stretch"><para>A value that is used to match a requested font stretch.</para></param>	
            <param name="style"><para>A value that is used to match a requested font style.</para></param>	
            <returns><para>When this method returns, contains the address of a reference to the newly created <see cref="T:SharpDX.DirectWrite.Font"/> object.</para></returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFamily::GetFirstMatchingFont']/*"/>	
            <unmanaged>HRESULT IDWriteFontFamily::GetFirstMatchingFont([In] DWRITE_FONT_WEIGHT weight,[In] DWRITE_FONT_STRETCH stretch,[In] DWRITE_FONT_STYLE style,[Out] IDWriteFont** matchingFont)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.FontFamily.GetMatchingFonts(SharpDX.DirectWrite.FontWeight,SharpDX.DirectWrite.FontStretch,SharpDX.DirectWrite.FontStyle)">
            <summary>	
            Gets a list of fonts in the font family ranked in order of how well they match the specified properties.	
            </summary>	
            <param name="weight"><para>A value that is used to match a requested font weight.</para></param>	
            <param name="stretch"><para>A value that is used to match a requested font stretch.</para></param>	
            <param name="style"><para>A value that is used to match a requested font style.</para></param>	
            <returns><para>An address of a reference to the newly created <see cref="T:SharpDX.DirectWrite.FontList"/> object.</para></returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFamily::GetMatchingFonts']/*"/>	
            <unmanaged>HRESULT IDWriteFontFamily::GetMatchingFonts([In] DWRITE_FONT_WEIGHT weight,[In] DWRITE_FONT_STRETCH stretch,[In] DWRITE_FONT_STYLE style,[Out] IDWriteFontList** matchingFonts)</unmanaged>	
        </member>
        <member name="P:SharpDX.DirectWrite.FontFamily.FamilyNames">
            <summary>	
            Creates a localized strings object that contains the family names for the font family, indexed by locale name.	
            </summary>	
            <remarks>	
            The following code example shows how to get the font family name from a <see cref="T:SharpDX.DirectWrite.FontFamily"/> object.<code>	
            <see cref="T:SharpDX.DirectWrite.LocalizedStrings"/>* pFamilyNames = <c>null</c>; // Get a list of localized strings for the family name.	
            if (SUCCEEDED(hr))	
            { hr = pFontFamily-&gt;GetFamilyNames(&amp;pFamilyNames);	
            } UINT32 index = 0;	
            <see cref="T:System.Boolean"/> exists = false; wchar_t localeName[LOCALE_NAME_MAX_LENGTH]; if (SUCCEEDED(hr))	
            { // Get the default locale for this user. int defaultLocaleSuccess = GetUserDefaultLocaleName(localeName, LOCALE_NAME_MAX_LENGTH); // If the default locale is returned, find that locale name, otherwise use "en-us". if (defaultLocaleSuccess) { hr = pFamilyNames-&gt;FindLocaleName(localeName, &amp;index, &amp;exists); } if (SUCCEEDED(hr) &amp;&amp; !exists) // if the above find did not find a match, retry with US English { hr = pFamilyNames-&gt;FindLocaleName(L"en-us", &amp;index, &amp;exists); }	
            } // If the specified locale doesn't exist, select the first on the list.	
            if (!exists) index = 0; UINT32 length = 0; // Get the string length.	
            if (SUCCEEDED(hr))	
            { hr = pFamilyNames-&gt;GetStringLength(index, &amp;length);	
            } // Allocate a string big enough to hold the name.	
            wchar_t* name = new (std::nothrow) wchar_t[length+1];	
            if (name == <c>null</c>)	
            { hr = E_OUTOFMEMORY;	
            } // Get the family name.	
            if (SUCCEEDED(hr))	
            { hr = pFamilyNames-&gt;GetString(index, name, length+1);	
            }	
            	
            </code>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteFontFamily::GetFamilyNames']/*"/>	
            <unmanaged>GetFamilyNames</unmanaged>	
            <unmanaged>HRESULT IDWriteFontFamily::GetFamilyNames([Out] IDWriteLocalizedStrings** names)</unmanaged>
        </member>
        <member name="T:SharpDX.DirectWrite.LocalFontFileLoader">
            <summary>	
            A built-in implementation of the <see cref="T:SharpDX.DirectWrite.FontFileLoader"/> interface, that operates on local font files	
            and exposes local font file information from the font file reference key. Font file references created using CreateFontFileReference use this font file loader.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteLocalFontFileLoader']/*"/>	
            <unmanaged>IDWriteLocalFontFileLoader</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.LocalFontFileLoader.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.DirectWrite.LocalFontFileLoader"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.DirectWrite.LocalFontFileLoader.GetFilePathLengthFromKey(System.IntPtr,System.Int32)">
            <summary>	
            Obtains the length of the absolute file path from the font file reference key.	
            </summary>	
            <param name="fontFileReferenceKey"><para>Font file reference key that uniquely identifies the local font file within the scope of the font loader being used.</para></param>	
            <param name="fontFileReferenceKeySize"><para>Size of font file reference key in bytes.</para></param>	
            <returns><para>Length of the file path string, not including the terminated <c>null</c> character.</para></returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteLocalFontFileLoader::GetFilePathLengthFromKey']/*"/>	
            <unmanaged>HRESULT IDWriteLocalFontFileLoader::GetFilePathLengthFromKey([In, Buffer] const void* fontFileReferenceKey,[In] unsigned int fontFileReferenceKeySize,[Out] unsigned int* filePathLength)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.LocalFontFileLoader.GetFilePathFromKey(System.IntPtr,System.Int32,System.IntPtr,System.Int32)">
            <summary>	
            Obtains the absolute font file path from the font file reference key.	
            </summary>	
            <param name="fontFileReferenceKey"><para>The font file reference key that uniquely identifies the local font file within the scope of the font loader being used.</para></param>	
            <param name="fontFileReferenceKeySize"><para>The size of font file reference key in bytes.</para></param>	
            <param name="filePath"><para>The character array that receives the local file path.</para></param>	
            <param name="filePathSize"><para>The length of the file path character array.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteLocalFontFileLoader::GetFilePathFromKey']/*"/>	
            <unmanaged>HRESULT IDWriteLocalFontFileLoader::GetFilePathFromKey([In, Buffer] const void* fontFileReferenceKey,[In] unsigned int fontFileReferenceKeySize,[Out, Buffer] wchar_t* filePath,[In] unsigned int filePathSize)</unmanaged>	
        </member>
        <member name="M:SharpDX.DirectWrite.LocalFontFileLoader.GetLastWriteTimeFromKey(System.IntPtr,System.Int32)">
            <summary>	
            Obtains the last write time of the file from the font file reference key.	
            </summary>	
            <param name="fontFileReferenceKey"><para>The font file reference key that uniquely identifies the local font file within the scope of the font loader being used.</para></param>	
            <param name="fontFileReferenceKeySize"><para>The size of font file reference key in bytes.</para></param>	
            <returns><para>The time of the last font file modification.</para></returns>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='IDWriteLocalFontFileLoader::GetLastWriteTimeFromKey']/*"/>	
            <unmanaged>HRESULT IDWriteLocalFontFileLoader::GetLastWriteTimeFromKey([In, Buffer] const void* fontFileReferenceKey,[In] unsigned int fontFileReferenceKeySize,[Out] FILETIME* lastWriteTime)</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.ClusterMetrics">
            <summary>	
            Contains information about a glyph cluster.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_CLUSTER_METRICS']/*"/>	
            <unmanaged>DWRITE_CLUSTER_METRICS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.ClusterMetrics.Width">
            <summary>	
            <para>The total advance width of all glyphs in the cluster.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_CLUSTER_METRICS::width']/*"/>	
            <unmanaged>float width</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.ClusterMetrics.Length">
            <summary>	
            <para>The number of text positions in the cluster.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_CLUSTER_METRICS::length']/*"/>	
            <unmanaged>unsigned short length</unmanaged>	
        </member>
        <member name="P:SharpDX.DirectWrite.ClusterMetrics.CanWrapLineAfter">
            <summary>	
            <para>Indicates whether a line can be broken right after the cluster.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_CLUSTER_METRICS::canWrapLineAfter']/*"/>	
            <unmanaged>unsigned short canWrapLineAfter</unmanaged>	
        </member>
        <member name="P:SharpDX.DirectWrite.ClusterMetrics.IsWhitespace">
            <summary>	
            <para>Indicates whether the cluster corresponds to a whitespace character.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_CLUSTER_METRICS::isWhitespace']/*"/>	
            <unmanaged>unsigned short isWhitespace</unmanaged>	
        </member>
        <member name="P:SharpDX.DirectWrite.ClusterMetrics.IsNewline">
            <summary>	
            <para>Indicates whether the cluster corresponds to a newline character.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_CLUSTER_METRICS::isNewline']/*"/>	
            <unmanaged>unsigned short isNewline</unmanaged>	
        </member>
        <member name="P:SharpDX.DirectWrite.ClusterMetrics.IsSoftHyphen">
            <summary>	
            <para>Indicates whether the cluster corresponds to a soft hyphen character.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_CLUSTER_METRICS::isSoftHyphen']/*"/>	
            <unmanaged>unsigned short isSoftHyphen</unmanaged>	
        </member>
        <member name="P:SharpDX.DirectWrite.ClusterMetrics.IsRightToLeft">
            <summary>	
            <para>Indicates whether the cluster is read from right to left.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_CLUSTER_METRICS::isRightToLeft']/*"/>	
            <unmanaged>unsigned short isRightToLeft</unmanaged>	
        </member>
        <member name="P:SharpDX.DirectWrite.ClusterMetrics.Padding">
            <summary>	
            <para>Reserved for future use.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_CLUSTER_METRICS::padding']/*"/>	
            <unmanaged>unsigned short padding</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.FontMetrics">
            <summary>	
            The <see cref="T:SharpDX.DirectWrite.FontMetrics"/> structure specifies the metrics that are applicable to all glyphs within the font face.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_METRICS']/*"/>	
            <unmanaged>DWRITE_FONT_METRICS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontMetrics.DesignUnitsPerEm">
            <summary>	
            <para>The number of font design units per em unit. Font files use their own coordinate system of font design units. A font design unit is the smallest measurable unit in the em square, an imaginary square that is used to size and align glyphs. The concept of em square is used as a reference scale factor when defining font size and device transformation semantics. The size of one em square is also commonly used to compute the paragraph identation value.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_METRICS::designUnitsPerEm']/*"/>	
            <unmanaged>unsigned short designUnitsPerEm</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontMetrics.Ascent">
            <summary>	
            <para>The ascent value of the font face in font design units. Ascent is the distance from the top of font character alignment box to the English baseline.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_METRICS::ascent']/*"/>	
            <unmanaged>unsigned short ascent</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontMetrics.Descent">
            <summary>	
            <para>The descent value of the font face in font design units. Descent is the distance from the bottom of font character alignment box to the English baseline.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_METRICS::descent']/*"/>	
            <unmanaged>unsigned short descent</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontMetrics.LineGap">
            <summary>	
            <para>The line gap in font design units. Recommended additional white space to add between lines to improve legibility. The recommended line spacing (baseline-to-baseline distance) is  the sum of ascent, descent, and lineGap. The line gap is usually positive or zero but can be negative, in which case the recommended line spacing is less than the height of the character alignment box.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_METRICS::lineGap']/*"/>	
            <unmanaged>short lineGap</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontMetrics.CapHeight">
            <summary>	
            <para>The cap height value of the font face in font design units. Cap height is the distance from the English baseline to the top of a typical English capital. Capital "H" is often used as a reference character for the purpose of calculating the cap height value.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_METRICS::capHeight']/*"/>	
            <unmanaged>unsigned short capHeight</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontMetrics.XHeight">
            <summary>	
            <para>The x-height value of the font face in font design units. x-height is the distance from the English baseline to the top of lowercase letter "x", or a similar lowercase character.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_METRICS::xHeight']/*"/>	
            <unmanaged>unsigned short xHeight</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontMetrics.UnderlinePosition">
            <summary>	
            <para>The underline position value of the font face in font design units. Underline position is the position of underline relative to the English baseline. The value is usually made negative in order to place the underline below the baseline.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_METRICS::underlinePosition']/*"/>	
            <unmanaged>short underlinePosition</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontMetrics.UnderlineThickness">
            <summary>	
            <para>The suggested underline thickness value of the font face in font design units.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_METRICS::underlineThickness']/*"/>	
            <unmanaged>unsigned short underlineThickness</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontMetrics.StrikethroughPosition">
            <summary>	
            <para>The strikethrough position value of the font face in font design units. Strikethrough position is the position of strikethrough relative to the English baseline. The value is usually made positive in order to place the strikethrough above the baseline.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_METRICS::strikethroughPosition']/*"/>	
            <unmanaged>short strikethroughPosition</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.FontMetrics.StrikethroughThickness">
            <summary>	
            <para>The suggested strikethrough thickness value of the font face in font design units.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_FONT_METRICS::strikethroughThickness']/*"/>	
            <unmanaged>unsigned short strikethroughThickness</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.GlyphMetrics">
            <summary>	
            Specifies the metrics of an individual glyph. The units depend on how the metrics are obtained.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_GLYPH_METRICS']/*"/>	
            <unmanaged>DWRITE_GLYPH_METRICS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.GlyphMetrics.LeftSideBearing">
            <summary>	
            <para>Specifies the X offset from the glyph origin to the left edge of the black box. The glyph origin is the current horizontal writing position. A negative value means the black box extends to the left of the origin (often true for lowercase italic 'f').</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_GLYPH_METRICS::leftSideBearing']/*"/>	
            <unmanaged>int leftSideBearing</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.GlyphMetrics.AdvanceWidth">
            <summary>	
            <para>Specifies the X offset from the origin of the current glyph to the origin of the next glyph when writing horizontally.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_GLYPH_METRICS::advanceWidth']/*"/>	
            <unmanaged>unsigned int advanceWidth</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.GlyphMetrics.RightSideBearing">
            <summary>	
            <para>Specifies the X offset from the right edge of the black box to the origin of the next glyph when writing horizontally. The value is negative when the right edge of the black box overhangs the layout box.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_GLYPH_METRICS::rightSideBearing']/*"/>	
            <unmanaged>int rightSideBearing</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.GlyphMetrics.TopSideBearing">
            <summary>	
            <para>Specifies the vertical offset from the vertical origin to the top of the black box. Thus, a positive value adds whitespace whereas a negative value means the glyph overhangs the top of the layout box.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_GLYPH_METRICS::topSideBearing']/*"/>	
            <unmanaged>int topSideBearing</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.GlyphMetrics.AdvanceHeight">
            <summary>	
            <para>Specifies the Y offset from the vertical origin of the current glyph to the vertical origin of the next glyph when writing vertically. Note that the term "origin" by itself denotes the horizontal origin. The vertical origin is different. Its Y coordinate is specified by verticalOriginY value, and its X coordinate is half the advanceWidth to the right of the horizontal origin.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_GLYPH_METRICS::advanceHeight']/*"/>	
            <unmanaged>unsigned int advanceHeight</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.GlyphMetrics.BottomSideBearing">
            <summary>	
            <para>Specifies the vertical distance from the bottom edge of the black box to the advance height. This is positive when the bottom edge of the black box is within the layout box, or negative when the bottom edge of black box overhangs the layout box.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_GLYPH_METRICS::bottomSideBearing']/*"/>	
            <unmanaged>int bottomSideBearing</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.GlyphMetrics.VerticalOriginY">
            <summary>	
            <para>Specifies the Y coordinate of a glyph's vertical origin, in the font's design coordinate system. The y coordinate of a glyph's vertical origin is the sum of the glyph's top side bearing and the top (that is, yMax) of the glyph's bounding box.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_GLYPH_METRICS::verticalOriginY']/*"/>	
            <unmanaged>int verticalOriginY</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.GlyphOffset">
            <summary>	
            The optional adjustment to a glyph's position.	
            </summary>	
            <remarks>	
            An glyph offset changes the position of a glyph without affecting the pen position. Offsets are in logical, pre-transform units.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_GLYPH_OFFSET']/*"/>	
            <unmanaged>DWRITE_GLYPH_OFFSET</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.GlyphOffset.AdvanceOffset">
            <summary>	
            <para>The offset in the advance direction of the run. A positive advance offset moves the glyph to the right (in pre-transform coordinates) if the run is left-to-right or to the left if the run is right-to-left.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_GLYPH_OFFSET::advanceOffset']/*"/>	
            <unmanaged>float advanceOffset</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.GlyphOffset.AscenderOffset">
            <summary>	
            <para>The offset in the ascent direction, that is, the direction ascenders point. A positive ascender offset moves the glyph up (in pre-transform coordinates).  A negative ascender offset moves the glyph down.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_GLYPH_OFFSET::ascenderOffset']/*"/>	
            <unmanaged>float ascenderOffset</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.HitTestMetrics">
            <summary>	
            Describes the region obtained by a hit test.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_HIT_TEST_METRICS']/*"/>	
            <unmanaged>DWRITE_HIT_TEST_METRICS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.HitTestMetrics.TextPosition">
            <summary>	
            <para>The first text position within the hit region. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_HIT_TEST_METRICS::textPosition']/*"/>	
            <unmanaged>unsigned int textPosition</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.HitTestMetrics.Length">
            <summary>	
            <para>The number of text positions within the hit region. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_HIT_TEST_METRICS::length']/*"/>	
            <unmanaged>unsigned int length</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.HitTestMetrics.Left">
            <summary>	
            <para>The x-coordinate of the upper-left corner of the hit region.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_HIT_TEST_METRICS::left']/*"/>	
            <unmanaged>float left</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.HitTestMetrics.Top">
            <summary>	
            <para>The y-coordinate of the upper-left corner of the hit region.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_HIT_TEST_METRICS::top']/*"/>	
            <unmanaged>float top</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.HitTestMetrics.Width">
            <summary>	
            <para>The width of the hit region.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_HIT_TEST_METRICS::width']/*"/>	
            <unmanaged>float width</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.HitTestMetrics.Height">
            <summary>	
            <para>The height of the hit region.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_HIT_TEST_METRICS::height']/*"/>	
            <unmanaged>float height</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.HitTestMetrics.BidiLevel">
            <summary>	
            <para>The BIDI level of the text positions within the hit region.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_HIT_TEST_METRICS::bidiLevel']/*"/>	
            <unmanaged>unsigned int bidiLevel</unmanaged>	
        </member>
        <member name="P:SharpDX.DirectWrite.HitTestMetrics.IsText">
            <summary>	
            <para>true if the hit region contains text; otherwise, false.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_HIT_TEST_METRICS::isText']/*"/>	
            <unmanaged>BOOL isText</unmanaged>	
        </member>
        <member name="P:SharpDX.DirectWrite.HitTestMetrics.IsTrimmed">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_HIT_TEST_METRICS::isTrimmed']/*"/>	
            <unmanaged>BOOL isTrimmed</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.InlineObjectMetrics">
            <summary>	
            Contains properties describing the geometric measurement of an	
            application-defined inline object.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_INLINE_OBJECT_METRICS']/*"/>	
            <unmanaged>DWRITE_INLINE_OBJECT_METRICS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.InlineObjectMetrics.Width">
            <summary>	
            <para>The width of the inline object.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_INLINE_OBJECT_METRICS::width']/*"/>	
            <unmanaged>float width</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.InlineObjectMetrics.Height">
            <summary>	
            <para>The height of the inline object.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_INLINE_OBJECT_METRICS::height']/*"/>	
            <unmanaged>float height</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.InlineObjectMetrics.Baseline">
            <summary>	
            <para>The distance from the top of the object to the point where it is lined up with the adjacent text.  If the baseline is at the bottom, then baseline simply equals height.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_INLINE_OBJECT_METRICS::baseline']/*"/>	
            <unmanaged>float baseline</unmanaged>	
        </member>
        <member name="P:SharpDX.DirectWrite.InlineObjectMetrics.SupportsSideways">
            <summary>	
            <para>A Boolean flag that indicates whether the object is to be placed upright or alongside the text baseline for vertical text.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_INLINE_OBJECT_METRICS::supportsSideways']/*"/>	
            <unmanaged>BOOL supportsSideways</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.LineMetrics">
            <summary>	
            Contains information about a formatted line of text.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_LINE_METRICS']/*"/>	
            <unmanaged>DWRITE_LINE_METRICS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.LineMetrics.Length">
            <summary>	
            <para>The number of text positions in the text line.  This includes any trailing whitespace and newline characters.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_LINE_METRICS::length']/*"/>	
            <unmanaged>unsigned int length</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.LineMetrics.TrailingWhitespaceLength">
            <summary>	
            <para>The number of whitespace positions at the end of the text line.  Newline sequences are considered whitespace.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_LINE_METRICS::trailingWhitespaceLength']/*"/>	
            <unmanaged>unsigned int trailingWhitespaceLength</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.LineMetrics.NewlineLength">
            <summary>	
            <para>The number of characters in the newline sequence at the end of the text line.  If the count is zero, then the text line was either wrapped or it is the end of the text.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_LINE_METRICS::newlineLength']/*"/>	
            <unmanaged>unsigned int newlineLength</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.LineMetrics.Height">
            <summary>	
            <para>The height of the text line.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_LINE_METRICS::height']/*"/>	
            <unmanaged>float height</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.LineMetrics.Baseline">
            <summary>	
            <para>The distance from the top of the text line to its baseline.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_LINE_METRICS::baseline']/*"/>	
            <unmanaged>float baseline</unmanaged>	
        </member>
        <member name="P:SharpDX.DirectWrite.LineMetrics.IsTrimmed">
            <summary>	
            <para>The line is trimmed.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_LINE_METRICS::isTrimmed']/*"/>	
            <unmanaged>BOOL isTrimmed</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.Matrix">
            <summary>	
            The <see cref="T:SharpDX.DirectWrite.Matrix"/> structure specifies the graphics transform to be applied to rendered glyphs.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_MATRIX']/*"/>	
            <unmanaged>DWRITE_MATRIX</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.Matrix.M11">
            <summary>	
            <para>A value indicating the horizontal scaling / cosine of rotation.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_MATRIX::m11']/*"/>	
            <unmanaged>float m11</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.Matrix.M12">
            <summary>	
            <para>A value indicating the vertical shear / sine of rotation.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_MATRIX::m12']/*"/>	
            <unmanaged>float m12</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.Matrix.M21">
            <summary>	
            <para>A value indicating the horizontal shear / negative sine of rotation.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_MATRIX::m21']/*"/>	
            <unmanaged>float m21</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.Matrix.M22">
            <summary>	
            <para>A value indicating the vertical scaling / cosine of rotation.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_MATRIX::m22']/*"/>	
            <unmanaged>float m22</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.Matrix.Dx">
            <summary>	
            <para>A value indicating the horizontal shift (always orthogonal regardless of rotation).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_MATRIX::dx']/*"/>	
            <unmanaged>float dx</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.Matrix.Dy">
            <summary>	
            <para>A value indicating the vertical shift (always orthogonal regardless of rotation.)</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_MATRIX::dy']/*"/>	
            <unmanaged>float dy</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.OverhangMetrics">
            <summary>	
            Indicates how much any visible DIPs (device independent pixels) overshoot each side of the layout or inline objects.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_OVERHANG_METRICS']/*"/>	
            <unmanaged>DWRITE_OVERHANG_METRICS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.OverhangMetrics.Left">
            <summary>	
            <para>The distance from the left-most visible DIP to its  left-alignment edge.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_OVERHANG_METRICS::left']/*"/>	
            <unmanaged>float left</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.OverhangMetrics.Top">
            <summary>	
            <para>The distance from the top-most visible DIP to its  top alignment edge.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_OVERHANG_METRICS::top']/*"/>	
            <unmanaged>float top</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.OverhangMetrics.Right">
            <summary>	
            <para>The distance from the right-most visible DIP to its  right-alignment edge.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_OVERHANG_METRICS::right']/*"/>	
            <unmanaged>float right</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.OverhangMetrics.Bottom">
            <summary>	
            <para>The distance from the bottom-most visible DIP to its lower-alignment edge.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_OVERHANG_METRICS::bottom']/*"/>	
            <unmanaged>float bottom</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.ScriptAnalysis">
            <summary>	
            Stores the association of text and its writing system script, as well as some display attributes.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_SCRIPT_ANALYSIS']/*"/>	
            <unmanaged>DWRITE_SCRIPT_ANALYSIS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.ScriptAnalysis.Script">
            <summary>	
            <para>The zero-based index representation of writing system script.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_SCRIPT_ANALYSIS::script']/*"/>	
            <unmanaged>unsigned short script</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.ScriptAnalysis.Shapes">
            <summary>	
            <para>A value that indicates additional shaping requirement of text.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_SCRIPT_ANALYSIS::shapes']/*"/>	
            <unmanaged>DWRITE_SCRIPT_SHAPES shapes</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.ShapingTextProperties">
            <summary>	
            Shaping output properties for an output glyph.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_SHAPING_TEXT_PROPERTIES']/*"/>	
            <unmanaged>DWRITE_SHAPING_TEXT_PROPERTIES</unmanaged>	
        </member>
        <member name="P:SharpDX.DirectWrite.ShapingTextProperties.IsShapedAlone">
            <summary>	
            <para>Indicates that the glyph is shaped alone.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_SHAPING_TEXT_PROPERTIES::isShapedAlone']/*"/>	
            <unmanaged>unsigned short isShapedAlone</unmanaged>	
        </member>
        <member name="P:SharpDX.DirectWrite.ShapingTextProperties.Reserved">
            <summary>	
            <para>Reserved for future use.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_SHAPING_TEXT_PROPERTIES::reserved']/*"/>	
            <unmanaged>unsigned short reserved</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.Strikethrough">
            <summary>	
            Contains information regarding the size and placement of strikethroughs. All coordinates are in device independent pixels (DIPs).	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_STRIKETHROUGH']/*"/>	
            <unmanaged>DWRITE_STRIKETHROUGH</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.Strikethrough.Width">
            <summary>	
            <para>A value that indicates the width of the strikethrough, measured parallel to the baseline.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_STRIKETHROUGH::width']/*"/>	
            <unmanaged>float width</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.Strikethrough.Thickness">
            <summary>	
            <para>A value that indicates the thickness of the strikethrough, measured perpendicular to the baseline.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_STRIKETHROUGH::thickness']/*"/>	
            <unmanaged>float thickness</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.Strikethrough.Offset">
            <summary>	
            <para>A value that indicates the offset of the strikethrough from the baseline.  A positive offset represents a position below the baseline and  a negative offset is above.  Typically, the offset will be negative.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_STRIKETHROUGH::offset']/*"/>	
            <unmanaged>float offset</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.Strikethrough.ReadingDirection">
            <summary>	
            <para>Reading direction of the text associated with the strikethrough.  This value is used to interpret whether the width value runs horizontally  or vertically.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_STRIKETHROUGH::readingDirection']/*"/>	
            <unmanaged>DWRITE_READING_DIRECTION readingDirection</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.Strikethrough.FlowDirection">
            <summary>	
            <para>Flow direction of the text associated with the strikethrough.  This value is used to interpret whether the thickness value advances top to  bottom, left to right, or right to left.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_STRIKETHROUGH::flowDirection']/*"/>	
            <unmanaged>DWRITE_FLOW_DIRECTION flowDirection</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.Strikethrough.LocaleName">
            <summary>	
            <para>An array of characters containing the locale of the  text that is the strikethrough is being drawn over. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_STRIKETHROUGH::localeName']/*"/>	
            <unmanaged>const wchar_t* localeName</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.Strikethrough.MeasuringMode">
            <summary>	
            <para>The measuring mode can be useful to the renderer to determine how underlines are rendered, such as rounding the thickness to a whole pixel in GDI-compatible modes.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_STRIKETHROUGH::measuringMode']/*"/>	
            <unmanaged>DWRITE_MEASURING_MODE measuringMode</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.TextMetrics">
            <summary>	
            Contains the metrics associated with text after layout.  All coordinates are in device independent pixels (DIPs).	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_TEXT_METRICS']/*"/>	
            <unmanaged>DWRITE_TEXT_METRICS</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.TextMetrics.Left">
            <summary>	
            <para>A value that indicates the left-most point of formatted text relative to the layout box,  while excluding any glyph overhang.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_TEXT_METRICS::left']/*"/>	
            <unmanaged>float left</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.TextMetrics.Top">
            <summary>	
            <para>A value that indicates the top-most point of formatted text relative to the layout box, while excluding any glyph overhang.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_TEXT_METRICS::top']/*"/>	
            <unmanaged>float top</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.TextMetrics.Width">
            <summary>	
            <para>A value that indicates the width of the formatted text, while ignoring trailing whitespace  at the end of each line.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_TEXT_METRICS::width']/*"/>	
            <unmanaged>float width</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.TextMetrics.WidthIncludingTrailingWhitespace">
            <summary>	
            <para>The width of the formatted text, taking into account the  trailing whitespace at the end of each line.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_TEXT_METRICS::widthIncludingTrailingWhitespace']/*"/>	
            <unmanaged>float widthIncludingTrailingWhitespace</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.TextMetrics.Height">
            <summary>	
            <para>The height of the formatted text. The height of an empty string  is set to the same value as that of the default font.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_TEXT_METRICS::height']/*"/>	
            <unmanaged>float height</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.TextMetrics.LayoutWidth">
            <summary>	
            <para>The initial width given to the layout. It can be either larger or smaller than the  text content width, depending on whether the text  was wrapped.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_TEXT_METRICS::layoutWidth']/*"/>	
            <unmanaged>float layoutWidth</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.TextMetrics.LayoutHeight">
            <summary>	
            <para>Initial height given to the layout. Depending on the length of the text, it may be larger or smaller than the text content height.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_TEXT_METRICS::layoutHeight']/*"/>	
            <unmanaged>float layoutHeight</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.TextMetrics.MaxBidiReorderingDepth">
            <summary>	
            <para>The maximum reordering count of any line of text, used  to calculate the most number of hit-testing boxes needed.  If the layout has no bidirectional text, or no text at all,  the minimum level is 1.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_TEXT_METRICS::maxBidiReorderingDepth']/*"/>	
            <unmanaged>unsigned int maxBidiReorderingDepth</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.TextMetrics.LineCount">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_TEXT_METRICS::lineCount']/*"/>	
            <unmanaged>unsigned int lineCount</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.Trimming">
            <summary>	
            Specifies the trimming option for text overflowing the layout box.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_TRIMMING']/*"/>	
            <unmanaged>DWRITE_TRIMMING</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.Trimming.Granularity">
            <summary>	
            <para>A value that specifies  the text granularity used to trim text overflowing the layout box.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_TRIMMING::granularity']/*"/>	
            <unmanaged>DWRITE_TRIMMING_GRANULARITY granularity</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.Trimming.Delimiter">
            <summary>	
            <para>A character code used as the delimiter that signals the beginning of the portion of text to be preserved. Most useful for path ellipsis, where the delimiter would be a slash.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_TRIMMING::delimiter']/*"/>	
            <unmanaged>unsigned int delimiter</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.Trimming.DelimiterCount">
            <summary>	
            <para>A value that indicates how many occurrences of the delimiter to step back.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_TRIMMING::delimiterCount']/*"/>	
            <unmanaged>unsigned int delimiterCount</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.TypographicFeatures">
            <summary>	
            Contains a set of typographic features to be applied during text shaping.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_TYPOGRAPHIC_FEATURES']/*"/>	
            <unmanaged>DWRITE_TYPOGRAPHIC_FEATURES</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.TypographicFeatures.Features">
            <summary>	
            <para>A reference to a structure that specifies properties used to identify and execute typographic features in the font.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_TYPOGRAPHIC_FEATURES::features']/*"/>	
            <unmanaged>DWRITE_FONT_FEATURE* features</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.TypographicFeatures.FeatureCount">
            <summary>	
            <para>A value that indicates the number of features being applied to a font face.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_TYPOGRAPHIC_FEATURES::featureCount']/*"/>	
            <unmanaged>unsigned int featureCount</unmanaged>	
        </member>
        <member name="T:SharpDX.DirectWrite.Underline">
            <summary>	
            Contains information about the width, thickness, offset, run height, reading direction, and flow direction of an underline.	
            </summary>	
            <remarks>	
            All coordinates are in device independent pixels (DIPs).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_UNDERLINE']/*"/>	
            <unmanaged>DWRITE_UNDERLINE</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.Underline.Width">
            <summary>	
            <para>A value that indicates the width of the underline, measured parallel to the baseline.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_UNDERLINE::width']/*"/>	
            <unmanaged>float width</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.Underline.Thickness">
            <summary>	
            <para>A value that indicates the thickness of the underline, measured perpendicular to the baseline.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_UNDERLINE::thickness']/*"/>	
            <unmanaged>float thickness</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.Underline.Offset">
            <summary>	
            <para>A value that indicates the offset of the underline from the baseline. A positive offset represents a position below the baseline (away from the text) and a negative offset is above (toward the text).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_UNDERLINE::offset']/*"/>	
            <unmanaged>float offset</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.Underline.RunHeight">
            <summary>	
            <para>A value that indicates the height of the tallest run where the underline is applied.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_UNDERLINE::runHeight']/*"/>	
            <unmanaged>float runHeight</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.Underline.ReadingDirection">
            <summary>	
            <para>A value that indicates the reading direction of the text associated with the underline. This value is used to interpret whether the width value runs horizontally or vertically.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_UNDERLINE::readingDirection']/*"/>	
            <unmanaged>DWRITE_READING_DIRECTION readingDirection</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.Underline.FlowDirection">
            <summary>	
            <para>A value that indicates the flow direction of the text associated with the underline. This value is used to interpret whether the thickness value advances top to bottom, left to right, or right to left.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_UNDERLINE::flowDirection']/*"/>	
            <unmanaged>DWRITE_FLOW_DIRECTION flowDirection</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.Underline.LocaleName">
            <summary>	
            <para>An array of characters which contains the locale of the text that the underline is being drawn under.  For example, in vertical text, the underline belongs on the left for Chinese but on the right for Japanese. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_UNDERLINE::localeName']/*"/>	
            <unmanaged>const wchar_t* localeName</unmanaged>	
        </member>
        <member name="F:SharpDX.DirectWrite.Underline.MeasuringMode">
            <summary>	
            <para>The measuring mode can be useful to the renderer to determine how underlines are rendered, such as rounding the thickness to a whole pixel in GDI-compatible modes.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file="..\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_UNDERLINE::measuringMode']/*"/>	
            <unmanaged>DWRITE_MEASURING_MODE measuringMode</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.AffineTransform2DInterpolationMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE']/*"/>	
            <unmanaged>D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.AffineTransform2DInterpolationMode.NearestNeighbor">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE_NEAREST_NEIGHBOR']/*"/>	
            <unmanaged>D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE_NEAREST_NEIGHBOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.AffineTransform2DInterpolationMode.Linear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE_LINEAR']/*"/>	
            <unmanaged>D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.AffineTransform2DInterpolationMode.Cubic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE_CUBIC']/*"/>	
            <unmanaged>D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE_CUBIC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.AffineTransform2DInterpolationMode.MultiSampleLinear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE_MULTI_SAMPLE_LINEAR']/*"/>	
            <unmanaged>D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE_MULTI_SAMPLE_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.AffineTransform2DInterpolationMode.Anisotropic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE_ANISOTROPIC']/*"/>	
            <unmanaged>D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE_ANISOTROPIC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.AffineTransform2DInterpolationMode.HighQualityCubic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE_HIGH_QUALITY_CUBIC']/*"/>	
            <unmanaged>D2D1_2DAFFINETRANSFORM_INTERPOLATION_MODE_HIGH_QUALITY_CUBIC</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.AffineTransform2DProperties">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_2DAFFINETRANSFORM_PROP']/*"/>	
            <unmanaged>D2D1_2DAFFINETRANSFORM_PROP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.AffineTransform2DProperties.InterpolationMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_2DAFFINETRANSFORM_PROP_INTERPOLATION_MODE']/*"/>	
            <unmanaged>D2D1_2DAFFINETRANSFORM_PROP_INTERPOLATION_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.AffineTransform2DProperties.BorderMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_2DAFFINETRANSFORM_PROP_BORDER_MODE']/*"/>	
            <unmanaged>D2D1_2DAFFINETRANSFORM_PROP_BORDER_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.AffineTransform2DProperties.TransformMatrix">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_2DAFFINETRANSFORM_PROP_TRANSFORM_MATRIX']/*"/>	
            <unmanaged>D2D1_2DAFFINETRANSFORM_PROP_TRANSFORM_MATRIX</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.AlphaMode">
            <summary>	
            Specifies how the alpha value of a bitmap or render target should be treated.	
            </summary>	
            <remarks>	
            The <see cref="T:SharpDX.Direct2D1.AlphaMode"/> enumeration is used with the <see cref="T:SharpDX.Direct2D1.PixelFormat"/> enumeration to specify the alpha mode of a render target or bitmap. Different render targets and bitmaps support different alpha modes. For a list, see Supported Pixel Formats and Alpha Modes.The Differences Between Straight and Premultiplied AlphaWhen describing an RGBA color using straight alpha, the alpha value of the color is stored in the alpha channel. For example, to describe a red color that is 60% opaque, you'd use the following values: (255, 0, 0, 255 * 0.6) = (255, 0, 0, 153). The 255 value indicates full red, and 153 (which is 60 percent of 255) indicates that the color should have an opacity of 60 percent.When describing an RGBA color using premultiplied alpha, each color is multiplied by the alpha value: (255 * 0.6, 0 * 0.6, 0 * 0.6, 255 * 0.6) = (153, 0, 0, 153).Regardless of the alpha mode of the render target, D2D1_COLOR_F values are always interpreted as straight alpha.  For example, when specifying the color of an <see cref="T:SharpDX.Direct2D1.SolidColorBrush"/> for use with a bitmap that uses the premultiplied alpha mode, you'd specify the color just as you would if the bitmap used straight alpha. When you paint with the brush, Direct2D translates the color to the destination format for you.Alpha Mode for Render TargetsRegardless of the alpha mode setting, a render target's contents support transparency. For example, if you draw a partially transparent red rectangle with a render target with an alpha mode of <see cref="F:SharpDX.Direct2D1.AlphaMode.Ignore"/>, the rectangle will appear pink (if the background is white), as you might expect.If you draw a partially transparent red rectangle when the alpha mode is <see cref="F:SharpDX.Direct2D1.AlphaMode.Premultiplied"/>, the rectangle will appear pink (assuming the background is white) and you can see through it to whatever is behind the render target. This is useful when using a <see cref="T:SharpDX.Direct2D1.DeviceContextRenderTarget"/> to render to a transparent window or when using an compatible render target (a render targeted created by the CreateCompatibleRenderTarget method) to create a bitmap that supports transparency.ClearType and Alpha ModesIf you specify an alpha mode other than <see cref="F:SharpDX.Direct2D1.AlphaMode.Ignore"/> for a render target, the text antialiasing mode automatically changes from <see cref="T:SharpDX.Direct2D1.TextAntialiasMode"/> CLEARTYPE to <see cref="T:SharpDX.Direct2D1.TextAntialiasMode"/> GRAYSCALE. (When you specify an alpha mode of <see cref="F:SharpDX.Direct2D1.AlphaMode.Unknown"/>, Direct2D sets the alpha for you depending on the type of render target. For a list of what the <see cref="F:SharpDX.Direct2D1.AlphaMode.Unknown"/> setting resolves to for each render target, see the Supported Pixel Formats and Alpha Modes overview.)You can use the SetTextAntialiasMode method to change the text antialias mode  back to <see cref="T:SharpDX.Direct2D1.TextAntialiasMode"/> CLEARTYPE, but rendering ClearType text to a transparent surface can create unpredictable results. If you want to render ClearType text to an transparent render target, we recommend that you use one of the following two techniques.Use the PushAxisAlignedClip method to clip the render target to the area where the text will be rendered,    then call the Clear method and specify an opaque color, then render your text. Use DrawRectangle to draw an opaque rectangle behind the area where the text will be rendered.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_ALPHA_MODE']/*"/>	
            <unmanaged>D2D1_ALPHA_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.AlphaMode.Unknown">
            <summary>	
            <para>The alpha value might not be meaningful.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_ALPHA_MODE_UNKNOWN']/*"/>	
            <unmanaged>D2D1_ALPHA_MODE_UNKNOWN</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.AlphaMode.Premultiplied">
            <summary>	
            <para>The alpha value has been premultiplied. Each color is first scaled by the alpha value. The alpha value itself is the same in both straight and premultiplied alpha. Typically, no color channel value is greater than the alpha channel value.  If a color channel value in a premultiplied format is greater than the alpha channel, the standard source-over blending math results in an additive blend.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_ALPHA_MODE_PREMULTIPLIED']/*"/>	
            <unmanaged>D2D1_ALPHA_MODE_PREMULTIPLIED</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.AlphaMode.Straight">
            <summary>	
            <para>The alpha value has not been premultiplied. The alpha channel indicates the transparency of the color. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_ALPHA_MODE_STRAIGHT']/*"/>	
            <unmanaged>D2D1_ALPHA_MODE_STRAIGHT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.AlphaMode.Ignore">
            <summary>	
            <para>The alpha value is ignored.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_ALPHA_MODE_IGNORE']/*"/>	
            <unmanaged>D2D1_ALPHA_MODE_IGNORE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.AntialiasMode">
            <summary>	
            Specifies how the edges of nontext primitives are rendered.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_ANTIALIAS_MODE']/*"/>	
            <unmanaged>D2D1_ANTIALIAS_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.AntialiasMode.PerPrimitive">
            <summary>	
            <para>Edges are antialiased using the Direct2D per-primitive method of high-quality antialiasing.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_ANTIALIAS_MODE_PER_PRIMITIVE']/*"/>	
            <unmanaged>D2D1_ANTIALIAS_MODE_PER_PRIMITIVE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.AntialiasMode.Aliased">
            <summary>	
            <para>Objects are aliased in most cases. Objects are antialiased only when they are drawn to a render target created by the CreateDxgiSurfaceRenderTarget method and  Direct3D multisampling has been enabled on the backing DirectX Graphics Infrastructure (DXGI) surface. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_ANTIALIAS_MODE_ALIASED']/*"/>	
            <unmanaged>D2D1_ANTIALIAS_MODE_ALIASED</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.ArcSize">
            <summary>	
            Specifies whether an arc should be greater than 180 degrees.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_ARC_SIZE']/*"/>	
            <unmanaged>D2D1_ARC_SIZE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ArcSize.Small">
            <summary>	
            <para> An arc's sweep should be 180 degrees or less.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_ARC_SIZE_SMALL']/*"/>	
            <unmanaged>D2D1_ARC_SIZE_SMALL</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ArcSize.Large">
            <summary>	
            <para> An arc's sweep should be 180 degrees or greater.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_ARC_SIZE_LARGE']/*"/>	
            <unmanaged>D2D1_ARC_SIZE_LARGE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.ArithmeticCompositeProperties">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_ARITHMETICCOMPOSITE_PROP']/*"/>	
            <unmanaged>D2D1_ARITHMETICCOMPOSITE_PROP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ArithmeticCompositeProperties.Coefficients">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_ARITHMETICCOMPOSITE_PROP_COEFFICIENTS']/*"/>	
            <unmanaged>D2D1_ARITHMETICCOMPOSITE_PROP_COEFFICIENTS</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.AtlasProperties">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_ATLAS_PROP']/*"/>	
            <unmanaged>D2D1_ATLAS_PROP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.AtlasProperties.InputRect">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_ATLAS_PROP_INPUT_RECT']/*"/>	
            <unmanaged>D2D1_ATLAS_PROP_INPUT_RECT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.AtlasProperties.InputPaddingRect">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_ATLAS_PROP_INPUT_PADDING_RECT']/*"/>	
            <unmanaged>D2D1_ATLAS_PROP_INPUT_PADDING_RECT</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.BitmapInterpolationMode">
            <summary>	
            Specifies the algorithm that is used when images are scaled or rotated.	
            </summary>	
            <remarks>	
            To stretch an image, each pixel in the original image must be mapped to a group of pixels in the larger image. To shrink an image, groups of pixels in the original image must be mapped to single pixels in the smaller image. The effectiveness of the algorithms that perform these mappings determines the quality of a scaled image. Algorithms that produce higher-quality scaled images tend to require more processing time. <see cref="F:SharpDX.Direct2D1.BitmapInterpolationMode.NearestNeighbor"/> provides faster but lower-quality interpolation, while <see cref="F:SharpDX.Direct2D1.BitmapInterpolationMode.Linear"/> provides higher-quality interpolation.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAP_INTERPOLATION_MODE']/*"/>	
            <unmanaged>D2D1_BITMAP_INTERPOLATION_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BitmapInterpolationMode.NearestNeighbor">
            <summary>	
            <para>Use the exact color of the nearest bitmap pixel to the current rendering pixel.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAP_INTERPOLATION_MODE_NEAREST_NEIGHBOR']/*"/>	
            <unmanaged>D2D1_BITMAP_INTERPOLATION_MODE_NEAREST_NEIGHBOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BitmapInterpolationMode.Linear">
            <summary>	
            <para>Interpolate a color from the four bitmap pixels that are the nearest to the rendering pixel.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAP_INTERPOLATION_MODE_LINEAR']/*"/>	
            <unmanaged>D2D1_BITMAP_INTERPOLATION_MODE_LINEAR</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.BitmapOptions">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            If <see cref="F:SharpDX.Direct2D1.BitmapOptions.None"/> is specified, the bitmap can be used for drawing but  cannot be set as a target and cannot be read by the CPU.If <see cref="F:SharpDX.Direct2D1.BitmapOptions.Target"/> is specfied, the bitmap can be used as a target for <see cref="M:SharpDX.Direct2D1.DeviceContext.SetTarget(SharpDX.Direct2D1.Image)"/>.D2D1_BITMAP_OPTIONS_CANNOT_DRAW must be specified in conjunction with <see cref="F:SharpDX.Direct2D1.BitmapOptions.Target"/>. If specified, the bitmap can be used as a target but it cannot be drawn from.  Attempting to draw with a bitmap that has this flag set will result in the device context returning the error D2DERR_BITMAP_CANNOT_DRAW.If <see cref="F:SharpDX.Direct2D1.BitmapOptions.CpuRead"/> is specified, the bitmap can be mapped using <see cref="M:SharpDX.Direct2D1.Bitmap1.Map(SharpDX.Direct2D1.MapOptions,SharpDX.Direct2D1.MappedRect@)"/>. This flag requires <see cref="F:SharpDX.Direct2D1.BitmapOptions.CannotDraw"/> and cannot be combined with any other flags. The bitmap must be updated with either CopyFromBitmap or CopyFromRenderTarget.D2D1_BITMAP_OPTIONS_GDI_COMPATIBLE specifies that a Windows Graphics Device Interface (GDI) device context associated with this bitmap is available.  This must be used in conjunction with <see cref="F:SharpDX.Direct2D1.BitmapOptions.Target"/>. The <see cref="T:SharpDX.DXGI.Format"/> must be either <see cref="F:SharpDX.DXGI.Format.B8G8R8A8_UNorm"/> or <see cref="F:SharpDX.DXGI.Format.B8G8R8A8_UNorm_SRgb"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAP_OPTIONS']/*"/>	
            <unmanaged>D2D1_BITMAP_OPTIONS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BitmapOptions.None">
            <summary>	
            <para>The bitmap is created with default properties.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAP_OPTIONS_NONE']/*"/>	
            <unmanaged>D2D1_BITMAP_OPTIONS_NONE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BitmapOptions.Target">
            <summary>	
            <para>The bitmap can be used as a device context target.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAP_OPTIONS_TARGET']/*"/>	
            <unmanaged>D2D1_BITMAP_OPTIONS_TARGET</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BitmapOptions.CannotDraw">
            <summary>	
            <para>The bitmap cannot be used as an input. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAP_OPTIONS_CANNOT_DRAW']/*"/>	
            <unmanaged>D2D1_BITMAP_OPTIONS_CANNOT_DRAW</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BitmapOptions.CpuRead">
            <summary>	
            <para>The bitmap can be read from from the CPU.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAP_OPTIONS_CPU_READ']/*"/>	
            <unmanaged>D2D1_BITMAP_OPTIONS_CPU_READ</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BitmapOptions.GdiCompatible">
            <summary>	
            <para>The bitmap works with <see cref="M:SharpDX.Direct2D1.GdiInteropRenderTarget.GetDC(SharpDX.Direct2D1.DeviceContextInitializeMode)"/>.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAP_OPTIONS_GDI_COMPATIBLE']/*"/>	
            <unmanaged>D2D1_BITMAP_OPTIONS_GDI_COMPATIBLE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.BitmapSourceAlphaMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAPSOURCE_ALPHA_MODE']/*"/>	
            <unmanaged>D2D1_BITMAPSOURCE_ALPHA_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BitmapSourceAlphaMode.Premultiplied">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAPSOURCE_ALPHA_MODE_PREMULTIPLIED']/*"/>	
            <unmanaged>D2D1_BITMAPSOURCE_ALPHA_MODE_PREMULTIPLIED</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BitmapSourceAlphaMode.Straight">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAPSOURCE_ALPHA_MODE_STRAIGHT']/*"/>	
            <unmanaged>D2D1_BITMAPSOURCE_ALPHA_MODE_STRAIGHT</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.BitmapSourceInterpolationMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAPSOURCE_INTERPOLATION_MODE']/*"/>	
            <unmanaged>D2D1_BITMAPSOURCE_INTERPOLATION_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BitmapSourceInterpolationMode.NearestNeighbor">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAPSOURCE_INTERPOLATION_MODE_NEAREST_NEIGHBOR']/*"/>	
            <unmanaged>D2D1_BITMAPSOURCE_INTERPOLATION_MODE_NEAREST_NEIGHBOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BitmapSourceInterpolationMode.Linear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAPSOURCE_INTERPOLATION_MODE_LINEAR']/*"/>	
            <unmanaged>D2D1_BITMAPSOURCE_INTERPOLATION_MODE_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BitmapSourceInterpolationMode.Cubic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAPSOURCE_INTERPOLATION_MODE_CUBIC']/*"/>	
            <unmanaged>D2D1_BITMAPSOURCE_INTERPOLATION_MODE_CUBIC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BitmapSourceInterpolationMode.Fant">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAPSOURCE_INTERPOLATION_MODE_FANT']/*"/>	
            <unmanaged>D2D1_BITMAPSOURCE_INTERPOLATION_MODE_FANT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BitmapSourceInterpolationMode.MipmapLinear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAPSOURCE_INTERPOLATION_MODE_MIPMAP_LINEAR']/*"/>	
            <unmanaged>D2D1_BITMAPSOURCE_INTERPOLATION_MODE_MIPMAP_LINEAR</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.BitmapSourceProperties">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAPSOURCE_PROP']/*"/>	
            <unmanaged>D2D1_BITMAPSOURCE_PROP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BitmapSourceProperties.WicBitmapSource">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAPSOURCE_PROP_WIC_BITMAP_SOURCE']/*"/>	
            <unmanaged>D2D1_BITMAPSOURCE_PROP_WIC_BITMAP_SOURCE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BitmapSourceProperties.Scale">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAPSOURCE_PROP_SCALE']/*"/>	
            <unmanaged>D2D1_BITMAPSOURCE_PROP_SCALE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BitmapSourceProperties.InterpolationMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAPSOURCE_PROP_INTERPOLATION_MODE']/*"/>	
            <unmanaged>D2D1_BITMAPSOURCE_PROP_INTERPOLATION_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BitmapSourceProperties.EnableDpiCorrection">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAPSOURCE_PROP_ENABLE_DPI_CORRECTION']/*"/>	
            <unmanaged>D2D1_BITMAPSOURCE_PROP_ENABLE_DPI_CORRECTION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BitmapSourceProperties.AlphaMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAPSOURCE_PROP_ALPHA_MODE']/*"/>	
            <unmanaged>D2D1_BITMAPSOURCE_PROP_ALPHA_MODE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.Blend">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND']/*"/>	
            <unmanaged>D2D1_BLEND</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Blend.Zero">
            <summary>	
            <para>Specifies the first RGB data source and includes an optional preblend operation.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_ZERO']/*"/>	
            <unmanaged>D2D1_BLEND_ZERO</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Blend.One">
            <summary>	
            <para>Specifies the second RGB data source and includes an optional preblend operation.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_ONE']/*"/>	
            <unmanaged>D2D1_BLEND_ONE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Blend.SourceColor">
            <summary>	
            <para>Specifies how to combine the RGB data sources.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_SRC_COLOR']/*"/>	
            <unmanaged>D2D1_BLEND_SRC_COLOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Blend.InverseSourceColor">
            <summary>	
            <para>Specifies the first alpha data source and includes an optional preblend operation. Blend options that end in _COLOR are not allowed.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_INV_SRC_COLOR']/*"/>	
            <unmanaged>D2D1_BLEND_INV_SRC_COLOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Blend.SourceAlpha">
            <summary>	
            <para>Specifies the second alpha data source and includes an optional preblend operation. Blend options that end in _COLOR are not allowed.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_SRC_ALPHA']/*"/>	
            <unmanaged>D2D1_BLEND_SRC_ALPHA</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Blend.InverseSourceAlpha">
            <summary>	
            <para>Specifies how to combine the alpha data sources.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_INV_SRC_ALPHA']/*"/>	
            <unmanaged>D2D1_BLEND_INV_SRC_ALPHA</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Blend.DestinationAlpha">
            <summary>	
            <para>Parameters to the blend operations. The blend must use <see cref="F:SharpDX.Direct2D1.Blend.BlendFactor"/> for this to be used.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_DEST_ALPHA']/*"/>	
            <unmanaged>D2D1_BLEND_DEST_ALPHA</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Blend.InverseDestinationAlpha">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_INV_DEST_ALPHA']/*"/>	
            <unmanaged>D2D1_BLEND_INV_DEST_ALPHA</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Blend.DestinationColor">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_DEST_COLOR']/*"/>	
            <unmanaged>D2D1_BLEND_DEST_COLOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Blend.InverseDestinationColor">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_INV_DEST_COLOR']/*"/>	
            <unmanaged>D2D1_BLEND_INV_DEST_COLOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Blend.SourceAlphaSaturate">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_SRC_ALPHA_SAT']/*"/>	
            <unmanaged>D2D1_BLEND_SRC_ALPHA_SAT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Blend.BlendFactor">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_BLEND_FACTOR']/*"/>	
            <unmanaged>D2D1_BLEND_BLEND_FACTOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Blend.InverseBlendFactor">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_INV_BLEND_FACTOR']/*"/>	
            <unmanaged>D2D1_BLEND_INV_BLEND_FACTOR</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.BlendMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_MODE']/*"/>	
            <unmanaged>D2D1_BLEND_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendMode.Multiply">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_MODE_MULTIPLY']/*"/>	
            <unmanaged>D2D1_BLEND_MODE_MULTIPLY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendMode.Screen">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_MODE_SCREEN']/*"/>	
            <unmanaged>D2D1_BLEND_MODE_SCREEN</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendMode.Darken">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_MODE_DARKEN']/*"/>	
            <unmanaged>D2D1_BLEND_MODE_DARKEN</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendMode.Lighten">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_MODE_LIGHTEN']/*"/>	
            <unmanaged>D2D1_BLEND_MODE_LIGHTEN</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendMode.Dissolve">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_MODE_DISSOLVE']/*"/>	
            <unmanaged>D2D1_BLEND_MODE_DISSOLVE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendMode.ColorBurn">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_MODE_COLOR_BURN']/*"/>	
            <unmanaged>D2D1_BLEND_MODE_COLOR_BURN</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendMode.LinearBurn">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_MODE_LINEAR_BURN']/*"/>	
            <unmanaged>D2D1_BLEND_MODE_LINEAR_BURN</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendMode.DarkerColor">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_MODE_DARKER_COLOR']/*"/>	
            <unmanaged>D2D1_BLEND_MODE_DARKER_COLOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendMode.LighterColor">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_MODE_LIGHTER_COLOR']/*"/>	
            <unmanaged>D2D1_BLEND_MODE_LIGHTER_COLOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendMode.ColorDodge">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_MODE_COLOR_DODGE']/*"/>	
            <unmanaged>D2D1_BLEND_MODE_COLOR_DODGE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendMode.LinearDodge">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_MODE_LINEAR_DODGE']/*"/>	
            <unmanaged>D2D1_BLEND_MODE_LINEAR_DODGE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendMode.Overlay">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_MODE_OVERLAY']/*"/>	
            <unmanaged>D2D1_BLEND_MODE_OVERLAY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendMode.SoftLight">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_MODE_SOFT_LIGHT']/*"/>	
            <unmanaged>D2D1_BLEND_MODE_SOFT_LIGHT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendMode.HardLight">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_MODE_HARD_LIGHT']/*"/>	
            <unmanaged>D2D1_BLEND_MODE_HARD_LIGHT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendMode.VividLight">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_MODE_VIVID_LIGHT']/*"/>	
            <unmanaged>D2D1_BLEND_MODE_VIVID_LIGHT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendMode.LinearLight">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_MODE_LINEAR_LIGHT']/*"/>	
            <unmanaged>D2D1_BLEND_MODE_LINEAR_LIGHT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendMode.PinLight">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_MODE_PIN_LIGHT']/*"/>	
            <unmanaged>D2D1_BLEND_MODE_PIN_LIGHT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendMode.HardMix">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_MODE_HARD_MIX']/*"/>	
            <unmanaged>D2D1_BLEND_MODE_HARD_MIX</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendMode.Difference">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_MODE_DIFFERENCE']/*"/>	
            <unmanaged>D2D1_BLEND_MODE_DIFFERENCE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendMode.Exclusion">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_MODE_EXCLUSION']/*"/>	
            <unmanaged>D2D1_BLEND_MODE_EXCLUSION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendMode.Hue">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_MODE_HUE']/*"/>	
            <unmanaged>D2D1_BLEND_MODE_HUE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendMode.Saturation">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_MODE_SATURATION']/*"/>	
            <unmanaged>D2D1_BLEND_MODE_SATURATION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendMode.Color">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_MODE_COLOR']/*"/>	
            <unmanaged>D2D1_BLEND_MODE_COLOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendMode.Luminosity">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_MODE_LUMINOSITY']/*"/>	
            <unmanaged>D2D1_BLEND_MODE_LUMINOSITY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendMode.Subtract">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_MODE_SUBTRACT']/*"/>	
            <unmanaged>D2D1_BLEND_MODE_SUBTRACT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendMode.Division">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_MODE_DIVISION']/*"/>	
            <unmanaged>D2D1_BLEND_MODE_DIVISION</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.BlendOperation">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            This enumeration has the same numeric values as <see cref="!:SharpDX.Direct3D10.BlendOperation"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_OPERATION']/*"/>	
            <unmanaged>D2D1_BLEND_OPERATION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendOperation.Add">
            <summary>	
            <para>Add source 1 and source 2.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_OPERATION_ADD']/*"/>	
            <unmanaged>D2D1_BLEND_OPERATION_ADD</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendOperation.Subtract">
            <summary>	
            <para>Subtract source 1 from source 2.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_OPERATION_SUBTRACT']/*"/>	
            <unmanaged>D2D1_BLEND_OPERATION_SUBTRACT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendOperation.ReverseSubtract">
            <summary>	
            <para>Subtract source 2 from source 1.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_OPERATION_REV_SUBTRACT']/*"/>	
            <unmanaged>D2D1_BLEND_OPERATION_REV_SUBTRACT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendOperation.Minimum">
            <summary>	
            <para>Find the minimum of source 1 and source 2.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_OPERATION_MIN']/*"/>	
            <unmanaged>D2D1_BLEND_OPERATION_MIN</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendOperation.Maximum">
            <summary>	
            <para>Find the maximum of source 1 and source 2.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_OPERATION_MAX']/*"/>	
            <unmanaged>D2D1_BLEND_OPERATION_MAX</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.BlendProperties">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_PROP']/*"/>	
            <unmanaged>D2D1_BLEND_PROP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendProperties.Mode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_PROP_MODE']/*"/>	
            <unmanaged>D2D1_BLEND_PROP_MODE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.BorderEdgeMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BORDER_EDGE_MODE']/*"/>	
            <unmanaged>D2D1_BORDER_EDGE_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BorderEdgeMode.Clamp">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BORDER_EDGE_MODE_CLAMP']/*"/>	
            <unmanaged>D2D1_BORDER_EDGE_MODE_CLAMP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BorderEdgeMode.Wrap">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BORDER_EDGE_MODE_WRAP']/*"/>	
            <unmanaged>D2D1_BORDER_EDGE_MODE_WRAP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BorderEdgeMode.Mirror">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BORDER_EDGE_MODE_MIRROR']/*"/>	
            <unmanaged>D2D1_BORDER_EDGE_MODE_MIRROR</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.BorderMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BORDER_MODE']/*"/>	
            <unmanaged>D2D1_BORDER_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BorderMode.Soft">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BORDER_MODE_SOFT']/*"/>	
            <unmanaged>D2D1_BORDER_MODE_SOFT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BorderMode.Hard">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BORDER_MODE_HARD']/*"/>	
            <unmanaged>D2D1_BORDER_MODE_HARD</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.BorderProperties">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BORDER_PROP']/*"/>	
            <unmanaged>D2D1_BORDER_PROP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BorderProperties.EdgeModeX">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BORDER_PROP_EDGE_MODE_X']/*"/>	
            <unmanaged>D2D1_BORDER_PROP_EDGE_MODE_X</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BorderProperties.EdgeModeY">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BORDER_PROP_EDGE_MODE_Y']/*"/>	
            <unmanaged>D2D1_BORDER_PROP_EDGE_MODE_Y</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.BrightnessProperties">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BRIGHTNESS_PROP']/*"/>	
            <unmanaged>D2D1_BRIGHTNESS_PROP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BrightnessProperties.WhitePoint">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BRIGHTNESS_PROP_WHITE_POINT']/*"/>	
            <unmanaged>D2D1_BRIGHTNESS_PROP_WHITE_POINT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BrightnessProperties.BlackPoint">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BRIGHTNESS_PROP_BLACK_POINT']/*"/>	
            <unmanaged>D2D1_BRIGHTNESS_PROP_BLACK_POINT</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.BufferPrecision">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BUFFER_PRECISION']/*"/>	
            <unmanaged>D2D1_BUFFER_PRECISION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BufferPrecision.Unknown">
            <summary>	
            <para>The buffer precision is not specified.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BUFFER_PRECISION_UNKNOWN']/*"/>	
            <unmanaged>D2D1_BUFFER_PRECISION_UNKNOWN</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BufferPrecision.PerChannel8UNorm">
            <summary>	
            <para>Use 8-bit normalized integer per channel.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BUFFER_PRECISION_8BPC_UNORM']/*"/>	
            <unmanaged>D2D1_BUFFER_PRECISION_8BPC_UNORM</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BufferPrecision.PerChannel8UNormSRgb">
            <summary>	
            <para>Use 16-bit floats per channel.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BUFFER_PRECISION_8BPC_UNORM_SRGB']/*"/>	
            <unmanaged>D2D1_BUFFER_PRECISION_8BPC_UNORM_SRGB</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BufferPrecision.PerChannel16UNorm">
            <summary>	
            <para>Use 16-bit normalized integer per channel.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BUFFER_PRECISION_16BPC_UNORM']/*"/>	
            <unmanaged>D2D1_BUFFER_PRECISION_16BPC_UNORM</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BufferPrecision.PerChannel16Float">
            <summary>	
            <para>Use 32-bit floats per channel.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BUFFER_PRECISION_16BPC_FLOAT']/*"/>	
            <unmanaged>D2D1_BUFFER_PRECISION_16BPC_FLOAT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BufferPrecision.PerChannel32Float">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BUFFER_PRECISION_32BPC_FLOAT']/*"/>	
            <unmanaged>D2D1_BUFFER_PRECISION_32BPC_FLOAT</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.CapStyle">
            <summary>	
            Describes the shape at the end of a line or segment.	
            </summary>	
            <remarks>	
            The following illustration shows the available cap styles for lines or segments. The red portion of the line shows the extra area added by the line cap setting.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CAP_STYLE']/*"/>	
            <unmanaged>D2D1_CAP_STYLE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.CapStyle.Flat">
            <summary>	
            <para>A cap that does not extend past the last point of the line. Comparable to cap used for objects other than lines. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CAP_STYLE_FLAT']/*"/>	
            <unmanaged>D2D1_CAP_STYLE_FLAT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.CapStyle.Square">
            <summary>	
            <para>Half of a square that has a length equal to the line thickness.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CAP_STYLE_SQUARE']/*"/>	
            <unmanaged>D2D1_CAP_STYLE_SQUARE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.CapStyle.Round">
            <summary>	
            <para>A semicircle that has a diameter equal to the line thickness.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CAP_STYLE_ROUND']/*"/>	
            <unmanaged>D2D1_CAP_STYLE_ROUND</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.CapStyle.Triangle">
            <summary>	
            <para>An isosceles right triangle whose hypotenuse is equal in length to the thickness of the line.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CAP_STYLE_TRIANGLE']/*"/>	
            <unmanaged>D2D1_CAP_STYLE_TRIANGLE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.ChangeType">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CHANGE_TYPE']/*"/>	
            <unmanaged>D2D1_CHANGE_TYPE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ChangeType.None">
            <summary>	
            <para>There were no changes.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CHANGE_TYPE_NONE']/*"/>	
            <unmanaged>D2D1_CHANGE_TYPE_NONE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ChangeType.Properties">
            <summary>	
            <para>The properties of the effect changed.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CHANGE_TYPE_PROPERTIES']/*"/>	
            <unmanaged>D2D1_CHANGE_TYPE_PROPERTIES</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ChangeType.Context">
            <summary>	
            <para>The context state changed.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CHANGE_TYPE_CONTEXT']/*"/>	
            <unmanaged>D2D1_CHANGE_TYPE_CONTEXT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ChangeType.Graph">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CHANGE_TYPE_GRAPH']/*"/>	
            <unmanaged>D2D1_CHANGE_TYPE_GRAPH</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.ChannelDepth">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CHANNEL_DEPTH']/*"/>	
            <unmanaged>D2D1_CHANNEL_DEPTH</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ChannelDepth.Default">
            <summary>	
            <para>The channel depth is the default. It is inherited from the inputs.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CHANNEL_DEPTH_DEFAULT']/*"/>	
            <unmanaged>D2D1_CHANNEL_DEPTH_DEFAULT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ChannelDepth.One">
            <summary>	
            <para>The channel depth is 1.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CHANNEL_DEPTH_1']/*"/>	
            <unmanaged>D2D1_CHANNEL_DEPTH_1</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ChannelDepth.Four">
            <summary>	
            <para>The channel depth is 4.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CHANNEL_DEPTH_4']/*"/>	
            <unmanaged>D2D1_CHANNEL_DEPTH_4</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.ChannelSelector">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CHANNEL_SELECTOR']/*"/>	
            <unmanaged>D2D1_CHANNEL_SELECTOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ChannelSelector.R">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CHANNEL_SELECTOR_R']/*"/>	
            <unmanaged>D2D1_CHANNEL_SELECTOR_R</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ChannelSelector.G">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CHANNEL_SELECTOR_G']/*"/>	
            <unmanaged>D2D1_CHANNEL_SELECTOR_G</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ChannelSelector.B">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CHANNEL_SELECTOR_B']/*"/>	
            <unmanaged>D2D1_CHANNEL_SELECTOR_B</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ChannelSelector.A">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CHANNEL_SELECTOR_A']/*"/>	
            <unmanaged>D2D1_CHANNEL_SELECTOR_A</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.ColorInterpolationMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COLOR_INTERPOLATION_MODE']/*"/>	
            <unmanaged>D2D1_COLOR_INTERPOLATION_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ColorInterpolationMode.Straight">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COLOR_INTERPOLATION_MODE_STRAIGHT']/*"/>	
            <unmanaged>D2D1_COLOR_INTERPOLATION_MODE_STRAIGHT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ColorInterpolationMode.Premultiplied">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COLOR_INTERPOLATION_MODE_PREMULTIPLIED']/*"/>	
            <unmanaged>D2D1_COLOR_INTERPOLATION_MODE_PREMULTIPLIED</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.ColorManagementAlphaMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COLORMANAGEMENT_ALPHA_MODE']/*"/>	
            <unmanaged>D2D1_COLORMANAGEMENT_ALPHA_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ColorManagementAlphaMode.Premultiplied">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COLORMANAGEMENT_ALPHA_MODE_PREMULTIPLIED']/*"/>	
            <unmanaged>D2D1_COLORMANAGEMENT_ALPHA_MODE_PREMULTIPLIED</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ColorManagementAlphaMode.Straight">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COLORMANAGEMENT_ALPHA_MODE_STRAIGHT']/*"/>	
            <unmanaged>D2D1_COLORMANAGEMENT_ALPHA_MODE_STRAIGHT</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.ColorManagementProperties">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COLORMANAGEMENT_PROP']/*"/>	
            <unmanaged>D2D1_COLORMANAGEMENT_PROP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ColorManagementProperties.SourceColorContext">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COLORMANAGEMENT_PROP_SOURCE_COLOR_CONTEXT']/*"/>	
            <unmanaged>D2D1_COLORMANAGEMENT_PROP_SOURCE_COLOR_CONTEXT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ColorManagementProperties.SourceRenderingIntent">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COLORMANAGEMENT_PROP_SOURCE_RENDERING_INTENT']/*"/>	
            <unmanaged>D2D1_COLORMANAGEMENT_PROP_SOURCE_RENDERING_INTENT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ColorManagementProperties.DestinationColorContext">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COLORMANAGEMENT_PROP_DESTINATION_COLOR_CONTEXT']/*"/>	
            <unmanaged>D2D1_COLORMANAGEMENT_PROP_DESTINATION_COLOR_CONTEXT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ColorManagementProperties.DestinationRenderingIntent">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COLORMANAGEMENT_PROP_DESTINATION_RENDERING_INTENT']/*"/>	
            <unmanaged>D2D1_COLORMANAGEMENT_PROP_DESTINATION_RENDERING_INTENT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ColorManagementProperties.AlphaMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COLORMANAGEMENT_PROP_ALPHA_MODE']/*"/>	
            <unmanaged>D2D1_COLORMANAGEMENT_PROP_ALPHA_MODE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.ColorManagementRenderingIntent">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COLORMANAGEMENT_RENDERING_INTENT']/*"/>	
            <unmanaged>D2D1_COLORMANAGEMENT_RENDERING_INTENT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ColorManagementRenderingIntent.Perceptual">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COLORMANAGEMENT_RENDERING_INTENT_PERCEPTUAL']/*"/>	
            <unmanaged>D2D1_COLORMANAGEMENT_RENDERING_INTENT_PERCEPTUAL</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ColorManagementRenderingIntent.RelativeColorimetric">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COLORMANAGEMENT_RENDERING_INTENT_RELATIVE_COLORIMETRIC']/*"/>	
            <unmanaged>D2D1_COLORMANAGEMENT_RENDERING_INTENT_RELATIVE_COLORIMETRIC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ColorManagementRenderingIntent.Saturation">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COLORMANAGEMENT_RENDERING_INTENT_SATURATION']/*"/>	
            <unmanaged>D2D1_COLORMANAGEMENT_RENDERING_INTENT_SATURATION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ColorManagementRenderingIntent.AbsoluteColorimetric">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COLORMANAGEMENT_RENDERING_INTENT_ABSOLUTE_COLORIMETRIC']/*"/>	
            <unmanaged>D2D1_COLORMANAGEMENT_RENDERING_INTENT_ABSOLUTE_COLORIMETRIC</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.ColorMatrixAlphaMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COLORMATRIX_ALPHA_MODE']/*"/>	
            <unmanaged>D2D1_COLORMATRIX_ALPHA_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ColorMatrixAlphaMode.Premultiplied">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COLORMATRIX_ALPHA_MODE_PREMULTIPLIED']/*"/>	
            <unmanaged>D2D1_COLORMATRIX_ALPHA_MODE_PREMULTIPLIED</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ColorMatrixAlphaMode.Straight">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COLORMATRIX_ALPHA_MODE_STRAIGHT']/*"/>	
            <unmanaged>D2D1_COLORMATRIX_ALPHA_MODE_STRAIGHT</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.ColorMatrixProperties">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COLORMATRIX_PROP']/*"/>	
            <unmanaged>D2D1_COLORMATRIX_PROP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ColorMatrixProperties.ColorMatrix">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COLORMATRIX_PROP_COLOR_MATRIX']/*"/>	
            <unmanaged>D2D1_COLORMATRIX_PROP_COLOR_MATRIX</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ColorMatrixProperties.AlphaMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COLORMATRIX_PROP_ALPHA_MODE']/*"/>	
            <unmanaged>D2D1_COLORMATRIX_PROP_ALPHA_MODE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.ColorSpace">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COLOR_SPACE']/*"/>	
            <unmanaged>D2D1_COLOR_SPACE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ColorSpace.Custom">
            <summary>	
            <para>The color space is otherwise described, such as with a color profile.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COLOR_SPACE_CUSTOM']/*"/>	
            <unmanaged>D2D1_COLOR_SPACE_CUSTOM</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ColorSpace.SRgb">
            <summary>	
            <para>The color space is sRGB.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COLOR_SPACE_SRGB']/*"/>	
            <unmanaged>D2D1_COLOR_SPACE_SRGB</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ColorSpace.Scrgb">
            <summary>	
            <para>The color space is scRGB.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COLOR_SPACE_SCRGB']/*"/>	
            <unmanaged>D2D1_COLOR_SPACE_SCRGB</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.CombineMode">
            <summary>	
            Specifies the different methods by which two geometries can be combined.	
            </summary>	
            <remarks>	
            The following illustration shows the different geometry combine modes.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COMBINE_MODE']/*"/>	
            <unmanaged>D2D1_COMBINE_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.CombineMode.Union">
            <summary>	
            <para>The two regions are combined by taking the union of both. Given two geometries, A and B, the resulting geometry is geometry A + geometry B.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COMBINE_MODE_UNION']/*"/>	
            <unmanaged>D2D1_COMBINE_MODE_UNION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.CombineMode.Intersect">
            <summary>	
            <para>The two regions are combined by taking their intersection. The new area consists of the overlapping region between the two geometries. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COMBINE_MODE_INTERSECT']/*"/>	
            <unmanaged>D2D1_COMBINE_MODE_INTERSECT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.CombineMode.Xor">
            <summary>	
            <para>The two regions are combined by taking the area that exists in the first region but not the second and the area that exists in the second region but not the first. Given two geometries, A and B, the new region consists of (A-B) + (B-A). </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COMBINE_MODE_XOR']/*"/>	
            <unmanaged>D2D1_COMBINE_MODE_XOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.CombineMode.Exclude">
            <summary>	
            <para>The second region is excluded from the first. Given two geometries, A and B, the area of geometry B is removed from the area of geometry A, producing a region that is A-B.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COMBINE_MODE_EXCLUDE']/*"/>	
            <unmanaged>D2D1_COMBINE_MODE_EXCLUDE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.CompatibleRenderTargetOptions">
            <summary>	
            Specifies additional features supportable by a compatible render target when it is created.  This enumeration allows a bitwise combination of its member values.	
            </summary>	
            <remarks>	
            Use this enumeration when creating a compatible render target with the CreateCompatibleRenderTarget method. For more information about compatible render targets, see the Render Targets Overview.The <see cref="F:SharpDX.Direct2D1.CompatibleRenderTargetOptions.GdiCompatible"/> option may only be requested if the parent render target was created with <see cref="F:SharpDX.Direct2D1.RenderTargetUsage.GdiCompatible"/> (for most render targets) or <see cref="F:SharpDX.Direct2D1.CompatibleRenderTargetOptions.GdiCompatible"/> (for render targets created by the CreateCompatibleRenderTarget method).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS']/*"/>	
            <unmanaged>D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.CompatibleRenderTargetOptions.None">
            <summary>	
            <para>The render target supports no additional features.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS_NONE']/*"/>	
            <unmanaged>D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS_NONE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.CompatibleRenderTargetOptions.GdiCompatible">
            <summary>	
            <para>The render target supports interoperability with the Windows Graphics Device Interface  (GDI). </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS_GDI_COMPATIBLE']/*"/>	
            <unmanaged>D2D1_COMPATIBLE_RENDER_TARGET_OPTIONS_GDI_COMPATIBLE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.CompositeMode">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COMPOSITE_MODE']/*"/>	
            <unmanaged>D2D1_COMPOSITE_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.CompositeMode.SourceOver">
            <summary>	
            <para>The composite mode is the default for the type of object.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COMPOSITE_MODE_SOURCE_OVER']/*"/>	
            <unmanaged>D2D1_COMPOSITE_MODE_SOURCE_OVER</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.CompositeMode.DestinationOver">
            <summary>	
            <para>The standard source-over-destination blend mode.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COMPOSITE_MODE_DESTINATION_OVER']/*"/>	
            <unmanaged>D2D1_COMPOSITE_MODE_DESTINATION_OVER</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.CompositeMode.SourceIn">
            <summary>	
            <para>The destination is rendered over the source.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COMPOSITE_MODE_SOURCE_IN']/*"/>	
            <unmanaged>D2D1_COMPOSITE_MODE_SOURCE_IN</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.CompositeMode.DestinationIn">
            <summary>	
            <para>Performs a logical clip of the source pixels against the destination pixels.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COMPOSITE_MODE_DESTINATION_IN']/*"/>	
            <unmanaged>D2D1_COMPOSITE_MODE_DESTINATION_IN</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.CompositeMode.SourceOut">
            <summary>	
            <para>Performs a logical clip of the destination pixels against the source pixels.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COMPOSITE_MODE_SOURCE_OUT']/*"/>	
            <unmanaged>D2D1_COMPOSITE_MODE_SOURCE_OUT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.CompositeMode.DestinationOut">
            <summary>	
            <para>This is the logical inverse to source in.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COMPOSITE_MODE_DESTINATION_OUT']/*"/>	
            <unmanaged>D2D1_COMPOSITE_MODE_DESTINATION_OUT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.CompositeMode.SourceAtop">
            <summary>	
            <para>The is the logical inverse to destination in.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COMPOSITE_MODE_SOURCE_ATOP']/*"/>	
            <unmanaged>D2D1_COMPOSITE_MODE_SOURCE_ATOP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.CompositeMode.DestinationAtop">
            <summary>	
            <para>Writes the source pixels over the destination where there are destination pixels.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COMPOSITE_MODE_DESTINATION_ATOP']/*"/>	
            <unmanaged>D2D1_COMPOSITE_MODE_DESTINATION_ATOP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.CompositeMode.Xor">
            <summary>	
            <para>Writes the destination pixels over the source where there are destination pixels.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COMPOSITE_MODE_XOR']/*"/>	
            <unmanaged>D2D1_COMPOSITE_MODE_XOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.CompositeMode.Plus">
            <summary>	
            <para>The source is inverted with the destination.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COMPOSITE_MODE_PLUS']/*"/>	
            <unmanaged>D2D1_COMPOSITE_MODE_PLUS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.CompositeMode.SourceCopy">
            <summary>	
            <para>The channel components are summed.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COMPOSITE_MODE_SOURCE_COPY']/*"/>	
            <unmanaged>D2D1_COMPOSITE_MODE_SOURCE_COPY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.CompositeMode.BoundedSourceCopy">
            <summary>	
            <para>The source is copied to the destination; the destination pixels are ignored.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COMPOSITE_MODE_BOUNDED_SOURCE_COPY']/*"/>	
            <unmanaged>D2D1_COMPOSITE_MODE_BOUNDED_SOURCE_COPY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.CompositeMode.MaskInvert">
            <summary>	
            <para>The destination is copied over the source pixels.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COMPOSITE_MODE_MASK_INVERT']/*"/>	
            <unmanaged>D2D1_COMPOSITE_MODE_MASK_INVERT</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.CompositeProp">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COMPOSITE_PROP']/*"/>	
            <unmanaged>D2D1_COMPOSITE_PROP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.CompositeProp.Mode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_COMPOSITE_PROP_MODE']/*"/>	
            <unmanaged>D2D1_COMPOSITE_PROP_MODE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.ConvoleMatrixProperties">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CONVOLVEMATRIX_PROP']/*"/>	
            <unmanaged>D2D1_CONVOLVEMATRIX_PROP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ConvoleMatrixProperties.KernelUnitLength">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CONVOLVEMATRIX_PROP_KERNEL_UNIT_LENGTH']/*"/>	
            <unmanaged>D2D1_CONVOLVEMATRIX_PROP_KERNEL_UNIT_LENGTH</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ConvoleMatrixProperties.ScaleMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CONVOLVEMATRIX_PROP_SCALE_MODE']/*"/>	
            <unmanaged>D2D1_CONVOLVEMATRIX_PROP_SCALE_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ConvoleMatrixProperties.KernelSizeX">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CONVOLVEMATRIX_PROP_KERNEL_SIZE_X']/*"/>	
            <unmanaged>D2D1_CONVOLVEMATRIX_PROP_KERNEL_SIZE_X</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ConvoleMatrixProperties.KernelSizeY">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CONVOLVEMATRIX_PROP_KERNEL_SIZE_Y']/*"/>	
            <unmanaged>D2D1_CONVOLVEMATRIX_PROP_KERNEL_SIZE_Y</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ConvoleMatrixProperties.KernelMatrix">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CONVOLVEMATRIX_PROP_KERNEL_MATRIX']/*"/>	
            <unmanaged>D2D1_CONVOLVEMATRIX_PROP_KERNEL_MATRIX</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ConvoleMatrixProperties.Divisor">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CONVOLVEMATRIX_PROP_DIVISOR']/*"/>	
            <unmanaged>D2D1_CONVOLVEMATRIX_PROP_DIVISOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ConvoleMatrixProperties.Bias">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CONVOLVEMATRIX_PROP_BIAS']/*"/>	
            <unmanaged>D2D1_CONVOLVEMATRIX_PROP_BIAS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ConvoleMatrixProperties.KernelOffset">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CONVOLVEMATRIX_PROP_KERNEL_OFFSET']/*"/>	
            <unmanaged>D2D1_CONVOLVEMATRIX_PROP_KERNEL_OFFSET</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ConvoleMatrixProperties.PreserveAlpha">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CONVOLVEMATRIX_PROP_PRESERVE_ALPHA']/*"/>	
            <unmanaged>D2D1_CONVOLVEMATRIX_PROP_PRESERVE_ALPHA</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ConvoleMatrixProperties.ExpandOutput">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CONVOLVEMATRIX_PROP_EXPAND_OUTPUT']/*"/>	
            <unmanaged>D2D1_CONVOLVEMATRIX_PROP_EXPAND_OUTPUT</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.ConvoleMatrixScaleMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CONVOLVEMATRIX_SCALE_MODE']/*"/>	
            <unmanaged>D2D1_CONVOLVEMATRIX_SCALE_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ConvoleMatrixScaleMode.NearestNeighbor">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CONVOLVEMATRIX_SCALE_MODE_NEAREST_NEIGHBOR']/*"/>	
            <unmanaged>D2D1_CONVOLVEMATRIX_SCALE_MODE_NEAREST_NEIGHBOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ConvoleMatrixScaleMode.Linear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CONVOLVEMATRIX_SCALE_MODE_LINEAR']/*"/>	
            <unmanaged>D2D1_CONVOLVEMATRIX_SCALE_MODE_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ConvoleMatrixScaleMode.Cubic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CONVOLVEMATRIX_SCALE_MODE_CUBIC']/*"/>	
            <unmanaged>D2D1_CONVOLVEMATRIX_SCALE_MODE_CUBIC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ConvoleMatrixScaleMode.MultiSampleLinear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CONVOLVEMATRIX_SCALE_MODE_MULTI_SAMPLE_LINEAR']/*"/>	
            <unmanaged>D2D1_CONVOLVEMATRIX_SCALE_MODE_MULTI_SAMPLE_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ConvoleMatrixScaleMode.Anisotropic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CONVOLVEMATRIX_SCALE_MODE_ANISOTROPIC']/*"/>	
            <unmanaged>D2D1_CONVOLVEMATRIX_SCALE_MODE_ANISOTROPIC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ConvoleMatrixScaleMode.HighQualityCubic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CONVOLVEMATRIX_SCALE_MODE_HIGH_QUALITY_CUBIC']/*"/>	
            <unmanaged>D2D1_CONVOLVEMATRIX_SCALE_MODE_HIGH_QUALITY_CUBIC</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.CropProperties">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CROP_PROP']/*"/>	
            <unmanaged>D2D1_CROP_PROP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.CropProperties.Rect">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CROP_PROP_RECT']/*"/>	
            <unmanaged>D2D1_CROP_PROP_RECT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.CropProperties.BorderMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CROP_PROP_BORDER_MODE']/*"/>	
            <unmanaged>D2D1_CROP_PROP_BORDER_MODE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.DashStyle">
            <summary>	
            Describes the sequence of dashes and gaps in a stroke.	
            </summary>	
            <remarks>	
            The following illustration shows several available dash styles. For more information, see the Stroke Style Example.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DASH_STYLE']/*"/>	
            <unmanaged>D2D1_DASH_STYLE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DashStyle.Solid">
            <summary>	
            <para>A solid line with no breaks.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DASH_STYLE_SOLID']/*"/>	
            <unmanaged>D2D1_DASH_STYLE_SOLID</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DashStyle.Dash">
            <summary>	
            <para>A dash followed by a gap of equal length. The dash and the gap are each twice as long as the stroke thickness.</para>	
             <para>The equivalent dash  array for  <see cref="F:SharpDX.Direct2D1.DashStyle.Dash"/> is {2, 2}.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DASH_STYLE_DASH']/*"/>	
            <unmanaged>D2D1_DASH_STYLE_DASH</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DashStyle.Dot">
            <summary>	
            <para>A dot followed by a longer gap.</para>	
             <para>The equivalent dash  array for  <see cref="F:SharpDX.Direct2D1.DashStyle.Dot"/> is {0, 2}.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DASH_STYLE_DOT']/*"/>	
            <unmanaged>D2D1_DASH_STYLE_DOT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DashStyle.DashDot">
            <summary>	
            <para>A dash, followed by a gap, followed by a dot, followed by another gap.</para>	
             <para>The equivalent dash array for  <see cref="F:SharpDX.Direct2D1.DashStyle.DashDot"/> is {2, 2, 0, 2}.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DASH_STYLE_DASH_DOT']/*"/>	
            <unmanaged>D2D1_DASH_STYLE_DASH_DOT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DashStyle.DashDotDot">
            <summary>	
            <para>A dash, followed by a gap, followed by a dot, followed by another gap, followed by another dot, followed by another gap.</para>	
             <para>The equivalent dash array for  <see cref="F:SharpDX.Direct2D1.DashStyle.DashDotDot"/> is {2, 2, 0, 2, 0, 2}.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DASH_STYLE_DASH_DOT_DOT']/*"/>	
            <unmanaged>D2D1_DASH_STYLE_DASH_DOT_DOT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DashStyle.Custom">
            <summary>	
            <para>The dash pattern is specified by an array of floating-point values.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DASH_STYLE_CUSTOM']/*"/>	
            <unmanaged>D2D1_DASH_STYLE_CUSTOM</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.DebugLevel">
            <summary>	
            Indicates the type of information provided by the Direct2D Debug Layer.	
            </summary>	
            <remarks>	
            To receive debugging messages, you must install the Direct2D Debug Layer.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DEBUG_LEVEL']/*"/>	
            <unmanaged>D2D1_DEBUG_LEVEL</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DebugLevel.None">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DEBUG_LEVEL_NONE']/*"/>	
            <unmanaged>D2D1_DEBUG_LEVEL_NONE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DebugLevel.Error">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DEBUG_LEVEL_ERROR']/*"/>	
            <unmanaged>D2D1_DEBUG_LEVEL_ERROR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DebugLevel.Warning">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DEBUG_LEVEL_WARNING']/*"/>	
            <unmanaged>D2D1_DEBUG_LEVEL_WARNING</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DebugLevel.Information">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DEBUG_LEVEL_INFORMATION']/*"/>	
            <unmanaged>D2D1_DEBUG_LEVEL_INFORMATION</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.DeviceContextInitializeMode">
            <summary>	
            Specifies how a device context is initialized for GDI rendering when it is retrieved from the render target.	
            </summary>	
            <remarks>	
            Use this enumeration with the <see cref="M:SharpDX.Direct2D1.GdiInteropRenderTarget.GetDC(SharpDX.Direct2D1.DeviceContextInitializeMode)"/> method to specify how the device context is  initialized for GDI rendering.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DC_INITIALIZE_MODE']/*"/>	
            <unmanaged>D2D1_DC_INITIALIZE_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DeviceContextInitializeMode.Copy">
            <summary>	
            <para>The current contents of the render target are copied to the device context when it is initialized. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DC_INITIALIZE_MODE_COPY']/*"/>	
            <unmanaged>D2D1_DC_INITIALIZE_MODE_COPY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DeviceContextInitializeMode.Clear">
            <summary>	
            <para>The device context is cleared to transparent black when it is initialized.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DC_INITIALIZE_MODE_CLEAR']/*"/>	
            <unmanaged>D2D1_DC_INITIALIZE_MODE_CLEAR</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.DeviceContextOptions">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DEVICE_CONTEXT_OPTIONS']/*"/>	
            <unmanaged>D2D1_DEVICE_CONTEXT_OPTIONS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DeviceContextOptions.None">
            <summary>	
            <para>The device context is created with default options.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DEVICE_CONTEXT_OPTIONS_NONE']/*"/>	
            <unmanaged>D2D1_DEVICE_CONTEXT_OPTIONS_NONE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DeviceContextOptions.EnableMultithreadedOptimizations">
            <summary>	
            <para>Distribute rendering work across multiple threads.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DEVICE_CONTEXT_OPTIONS_ENABLE_MULTITHREADED_OPTIMIZATIONS']/*"/>	
            <unmanaged>D2D1_DEVICE_CONTEXT_OPTIONS_ENABLE_MULTITHREADED_OPTIMIZATIONS</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.DirectionalBlurOptimization">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DIRECTIONALBLUR_OPTIMIZATION']/*"/>	
            <unmanaged>D2D1_DIRECTIONALBLUR_OPTIMIZATION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DirectionalBlurOptimization.Speed">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DIRECTIONALBLUR_OPTIMIZATION_SPEED']/*"/>	
            <unmanaged>D2D1_DIRECTIONALBLUR_OPTIMIZATION_SPEED</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DirectionalBlurOptimization.Balanced">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DIRECTIONALBLUR_OPTIMIZATION_BALANCED']/*"/>	
            <unmanaged>D2D1_DIRECTIONALBLUR_OPTIMIZATION_BALANCED</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DirectionalBlurOptimization.Quality">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DIRECTIONALBLUR_OPTIMIZATION_QUALITY']/*"/>	
            <unmanaged>D2D1_DIRECTIONALBLUR_OPTIMIZATION_QUALITY</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.DirectionalBlurProperties">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DIRECTIONALBLUR_PROP']/*"/>	
            <unmanaged>D2D1_DIRECTIONALBLUR_PROP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DirectionalBlurProperties.StandardDeviation">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DIRECTIONALBLUR_PROP_STANDARD_DEVIATION']/*"/>	
            <unmanaged>D2D1_DIRECTIONALBLUR_PROP_STANDARD_DEVIATION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DirectionalBlurProperties.Angle">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DIRECTIONALBLUR_PROP_ANGLE']/*"/>	
            <unmanaged>D2D1_DIRECTIONALBLUR_PROP_ANGLE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DirectionalBlurProperties.Optimization">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DIRECTIONALBLUR_PROP_OPTIMIZATION']/*"/>	
            <unmanaged>D2D1_DIRECTIONALBLUR_PROP_OPTIMIZATION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DirectionalBlurProperties.ExpandOutput">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DIRECTIONALBLUR_PROP_EXPAND_OUTPUT']/*"/>	
            <unmanaged>D2D1_DIRECTIONALBLUR_PROP_EXPAND_OUTPUT</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.DiscreteTransferProperties">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISCRETETRANSFER_PROP']/*"/>	
            <unmanaged>D2D1_DISCRETETRANSFER_PROP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DiscreteTransferProperties.RedTable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISCRETETRANSFER_PROP_RED_TABLE']/*"/>	
            <unmanaged>D2D1_DISCRETETRANSFER_PROP_RED_TABLE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DiscreteTransferProperties.RedDisable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISCRETETRANSFER_PROP_RED_DISABLE']/*"/>	
            <unmanaged>D2D1_DISCRETETRANSFER_PROP_RED_DISABLE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DiscreteTransferProperties.GreenTable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISCRETETRANSFER_PROP_GREEN_TABLE']/*"/>	
            <unmanaged>D2D1_DISCRETETRANSFER_PROP_GREEN_TABLE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DiscreteTransferProperties.GreenDisable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISCRETETRANSFER_PROP_GREEN_DISABLE']/*"/>	
            <unmanaged>D2D1_DISCRETETRANSFER_PROP_GREEN_DISABLE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DiscreteTransferProperties.BlueTable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISCRETETRANSFER_PROP_BLUE_TABLE']/*"/>	
            <unmanaged>D2D1_DISCRETETRANSFER_PROP_BLUE_TABLE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DiscreteTransferProperties.BlueDisable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISCRETETRANSFER_PROP_BLUE_DISABLE']/*"/>	
            <unmanaged>D2D1_DISCRETETRANSFER_PROP_BLUE_DISABLE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DiscreteTransferProperties.AlphaTable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISCRETETRANSFER_PROP_ALPHA_TABLE']/*"/>	
            <unmanaged>D2D1_DISCRETETRANSFER_PROP_ALPHA_TABLE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DiscreteTransferProperties.AlphaDisable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISCRETETRANSFER_PROP_ALPHA_DISABLE']/*"/>	
            <unmanaged>D2D1_DISCRETETRANSFER_PROP_ALPHA_DISABLE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.DisplacementMapProperties">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISPLACEMENTMAP_PROP']/*"/>	
            <unmanaged>D2D1_DISPLACEMENTMAP_PROP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DisplacementMapProperties.Scale">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISPLACEMENTMAP_PROP_SCALE']/*"/>	
            <unmanaged>D2D1_DISPLACEMENTMAP_PROP_SCALE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DisplacementMapProperties.XChannelSelect">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISPLACEMENTMAP_PROP_X_CHANNEL_SELECT']/*"/>	
            <unmanaged>D2D1_DISPLACEMENTMAP_PROP_X_CHANNEL_SELECT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DisplacementMapProperties.YChannelSelect">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISPLACEMENTMAP_PROP_Y_CHANNEL_SELECT']/*"/>	
            <unmanaged>D2D1_DISPLACEMENTMAP_PROP_Y_CHANNEL_SELECT</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.DisplacementMapSelectChannelX">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISPLACEMENTMAP_X_CHANNEL_SELECT']/*"/>	
            <unmanaged>D2D1_DISPLACEMENTMAP_X_CHANNEL_SELECT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DisplacementMapSelectChannelX.RChannel">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISPLACEMENTMAP_X_CHANNEL_SELECT_R_CHANNEL']/*"/>	
            <unmanaged>D2D1_DISPLACEMENTMAP_X_CHANNEL_SELECT_R_CHANNEL</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DisplacementMapSelectChannelX.GChannel">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISPLACEMENTMAP_X_CHANNEL_SELECT_G_CHANNEL']/*"/>	
            <unmanaged>D2D1_DISPLACEMENTMAP_X_CHANNEL_SELECT_G_CHANNEL</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DisplacementMapSelectChannelX.BChannel">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISPLACEMENTMAP_X_CHANNEL_SELECT_B_CHANNEL']/*"/>	
            <unmanaged>D2D1_DISPLACEMENTMAP_X_CHANNEL_SELECT_B_CHANNEL</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DisplacementMapSelectChannelX.AChannel">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISPLACEMENTMAP_X_CHANNEL_SELECT_A_CHANNEL']/*"/>	
            <unmanaged>D2D1_DISPLACEMENTMAP_X_CHANNEL_SELECT_A_CHANNEL</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.DisplacementMapSelectChannelY">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISPLACEMENTMAP_Y_CHANNEL_SELECT']/*"/>	
            <unmanaged>D2D1_DISPLACEMENTMAP_Y_CHANNEL_SELECT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DisplacementMapSelectChannelY.RChannel">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISPLACEMENTMAP_Y_CHANNEL_SELECT_R_CHANNEL']/*"/>	
            <unmanaged>D2D1_DISPLACEMENTMAP_Y_CHANNEL_SELECT_R_CHANNEL</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DisplacementMapSelectChannelY.GChannel">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISPLACEMENTMAP_Y_CHANNEL_SELECT_G_CHANNEL']/*"/>	
            <unmanaged>D2D1_DISPLACEMENTMAP_Y_CHANNEL_SELECT_G_CHANNEL</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DisplacementMapSelectChannelY.BChannel">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISPLACEMENTMAP_Y_CHANNEL_SELECT_B_CHANNEL']/*"/>	
            <unmanaged>D2D1_DISPLACEMENTMAP_Y_CHANNEL_SELECT_B_CHANNEL</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DisplacementMapSelectChannelY.AChannel">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISPLACEMENTMAP_Y_CHANNEL_SELECT_A_CHANNEL']/*"/>	
            <unmanaged>D2D1_DISPLACEMENTMAP_Y_CHANNEL_SELECT_A_CHANNEL</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.DistantDiffuseProperties">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISTANTDIFFUSE_PROP']/*"/>	
            <unmanaged>D2D1_DISTANTDIFFUSE_PROP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DistantDiffuseProperties.Azimuth">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISTANTDIFFUSE_PROP_AZIMUTH']/*"/>	
            <unmanaged>D2D1_DISTANTDIFFUSE_PROP_AZIMUTH</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DistantDiffuseProperties.Elevation">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISTANTDIFFUSE_PROP_ELEVATION']/*"/>	
            <unmanaged>D2D1_DISTANTDIFFUSE_PROP_ELEVATION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DistantDiffuseProperties.DiffuseConstant">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISTANTDIFFUSE_PROP_DIFFUSE_CONSTANT']/*"/>	
            <unmanaged>D2D1_DISTANTDIFFUSE_PROP_DIFFUSE_CONSTANT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DistantDiffuseProperties.SurfaceScale">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISTANTDIFFUSE_PROP_SURFACE_SCALE']/*"/>	
            <unmanaged>D2D1_DISTANTDIFFUSE_PROP_SURFACE_SCALE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DistantDiffuseProperties.Color">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISTANTDIFFUSE_PROP_COLOR']/*"/>	
            <unmanaged>D2D1_DISTANTDIFFUSE_PROP_COLOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DistantDiffuseProperties.KernelUnitLength">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISTANTDIFFUSE_PROP_KERNEL_UNIT_LENGTH']/*"/>	
            <unmanaged>D2D1_DISTANTDIFFUSE_PROP_KERNEL_UNIT_LENGTH</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DistantDiffuseProperties.ScaleMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISTANTDIFFUSE_PROP_SCALE_MODE']/*"/>	
            <unmanaged>D2D1_DISTANTDIFFUSE_PROP_SCALE_MODE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.DistantDiffuseScaleMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISTANTDIFFUSE_SCALE_MODE']/*"/>	
            <unmanaged>D2D1_DISTANTDIFFUSE_SCALE_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DistantDiffuseScaleMode.NearestNeighbor">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISTANTDIFFUSE_SCALE_MODE_NEAREST_NEIGHBOR']/*"/>	
            <unmanaged>D2D1_DISTANTDIFFUSE_SCALE_MODE_NEAREST_NEIGHBOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DistantDiffuseScaleMode.Linear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISTANTDIFFUSE_SCALE_MODE_LINEAR']/*"/>	
            <unmanaged>D2D1_DISTANTDIFFUSE_SCALE_MODE_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DistantDiffuseScaleMode.Cubic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISTANTDIFFUSE_SCALE_MODE_CUBIC']/*"/>	
            <unmanaged>D2D1_DISTANTDIFFUSE_SCALE_MODE_CUBIC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DistantDiffuseScaleMode.MultiSampleLinear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISTANTDIFFUSE_SCALE_MODE_MULTI_SAMPLE_LINEAR']/*"/>	
            <unmanaged>D2D1_DISTANTDIFFUSE_SCALE_MODE_MULTI_SAMPLE_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DistantDiffuseScaleMode.Anisotropic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISTANTDIFFUSE_SCALE_MODE_ANISOTROPIC']/*"/>	
            <unmanaged>D2D1_DISTANTDIFFUSE_SCALE_MODE_ANISOTROPIC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DistantDiffuseScaleMode.HighQualityCubic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISTANTDIFFUSE_SCALE_MODE_HIGH_QUALITY_CUBIC']/*"/>	
            <unmanaged>D2D1_DISTANTDIFFUSE_SCALE_MODE_HIGH_QUALITY_CUBIC</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.DistantSpecularProperties">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISTANTSPECULAR_PROP']/*"/>	
            <unmanaged>D2D1_DISTANTSPECULAR_PROP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DistantSpecularProperties.Azimuth">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISTANTSPECULAR_PROP_AZIMUTH']/*"/>	
            <unmanaged>D2D1_DISTANTSPECULAR_PROP_AZIMUTH</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DistantSpecularProperties.Elevation">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISTANTSPECULAR_PROP_ELEVATION']/*"/>	
            <unmanaged>D2D1_DISTANTSPECULAR_PROP_ELEVATION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DistantSpecularProperties.SpecularExponent">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISTANTSPECULAR_PROP_SPECULAR_EXPONENT']/*"/>	
            <unmanaged>D2D1_DISTANTSPECULAR_PROP_SPECULAR_EXPONENT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DistantSpecularProperties.SpecularConstant">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISTANTSPECULAR_PROP_SPECULAR_CONSTANT']/*"/>	
            <unmanaged>D2D1_DISTANTSPECULAR_PROP_SPECULAR_CONSTANT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DistantSpecularProperties.SurfaceScale">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISTANTSPECULAR_PROP_SURFACE_SCALE']/*"/>	
            <unmanaged>D2D1_DISTANTSPECULAR_PROP_SURFACE_SCALE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DistantSpecularProperties.Color">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISTANTSPECULAR_PROP_COLOR']/*"/>	
            <unmanaged>D2D1_DISTANTSPECULAR_PROP_COLOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DistantSpecularProperties.KernelUnitLength">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISTANTSPECULAR_PROP_KERNEL_UNIT_LENGTH']/*"/>	
            <unmanaged>D2D1_DISTANTSPECULAR_PROP_KERNEL_UNIT_LENGTH</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DistantSpecularProperties.ScaleMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISTANTSPECULAR_PROP_SCALE_MODE']/*"/>	
            <unmanaged>D2D1_DISTANTSPECULAR_PROP_SCALE_MODE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.DistantSpecularScaleMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISTANTSPECULAR_SCALE_MODE']/*"/>	
            <unmanaged>D2D1_DISTANTSPECULAR_SCALE_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DistantSpecularScaleMode.NearestNeighbor">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISTANTSPECULAR_SCALE_MODE_NEAREST_NEIGHBOR']/*"/>	
            <unmanaged>D2D1_DISTANTSPECULAR_SCALE_MODE_NEAREST_NEIGHBOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DistantSpecularScaleMode.Linear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISTANTSPECULAR_SCALE_MODE_LINEAR']/*"/>	
            <unmanaged>D2D1_DISTANTSPECULAR_SCALE_MODE_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DistantSpecularScaleMode.Cubic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISTANTSPECULAR_SCALE_MODE_CUBIC']/*"/>	
            <unmanaged>D2D1_DISTANTSPECULAR_SCALE_MODE_CUBIC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DistantSpecularScaleMode.MultiSampleLinear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISTANTSPECULAR_SCALE_MODE_MULTI_SAMPLE_LINEAR']/*"/>	
            <unmanaged>D2D1_DISTANTSPECULAR_SCALE_MODE_MULTI_SAMPLE_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DistantSpecularScaleMode.Anisotropic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISTANTSPECULAR_SCALE_MODE_ANISOTROPIC']/*"/>	
            <unmanaged>D2D1_DISTANTSPECULAR_SCALE_MODE_ANISOTROPIC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DistantSpecularScaleMode.HighQualityCubic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DISTANTSPECULAR_SCALE_MODE_HIGH_QUALITY_CUBIC']/*"/>	
            <unmanaged>D2D1_DISTANTSPECULAR_SCALE_MODE_HIGH_QUALITY_CUBIC</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.DpiCompensationInterpolationMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DPICOMPENSATION_INTERPOLATION_MODE']/*"/>	
            <unmanaged>D2D1_DPICOMPENSATION_INTERPOLATION_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DpiCompensationInterpolationMode.NearestNeighbor">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DPICOMPENSATION_INTERPOLATION_MODE_NEAREST_NEIGHBOR']/*"/>	
            <unmanaged>D2D1_DPICOMPENSATION_INTERPOLATION_MODE_NEAREST_NEIGHBOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DpiCompensationInterpolationMode.Linear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DPICOMPENSATION_INTERPOLATION_MODE_LINEAR']/*"/>	
            <unmanaged>D2D1_DPICOMPENSATION_INTERPOLATION_MODE_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DpiCompensationInterpolationMode.Cubic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DPICOMPENSATION_INTERPOLATION_MODE_CUBIC']/*"/>	
            <unmanaged>D2D1_DPICOMPENSATION_INTERPOLATION_MODE_CUBIC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DpiCompensationInterpolationMode.MultiSampleLinear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DPICOMPENSATION_INTERPOLATION_MODE_MULTI_SAMPLE_LINEAR']/*"/>	
            <unmanaged>D2D1_DPICOMPENSATION_INTERPOLATION_MODE_MULTI_SAMPLE_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DpiCompensationInterpolationMode.Anisotropic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DPICOMPENSATION_INTERPOLATION_MODE_ANISOTROPIC']/*"/>	
            <unmanaged>D2D1_DPICOMPENSATION_INTERPOLATION_MODE_ANISOTROPIC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DpiCompensationInterpolationMode.HighQualityCubic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DPICOMPENSATION_INTERPOLATION_MODE_HIGH_QUALITY_CUBIC']/*"/>	
            <unmanaged>D2D1_DPICOMPENSATION_INTERPOLATION_MODE_HIGH_QUALITY_CUBIC</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.DpiCompensationProperties">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DPICOMPENSATION_PROP']/*"/>	
            <unmanaged>D2D1_DPICOMPENSATION_PROP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DpiCompensationProperties.InterpolationMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DPICOMPENSATION_PROP_INTERPOLATION_MODE']/*"/>	
            <unmanaged>D2D1_DPICOMPENSATION_PROP_INTERPOLATION_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DpiCompensationProperties.BorderMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DPICOMPENSATION_PROP_BORDER_MODE']/*"/>	
            <unmanaged>D2D1_DPICOMPENSATION_PROP_BORDER_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DpiCompensationProperties.InputDpi">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DPICOMPENSATION_PROP_INPUT_DPI']/*"/>	
            <unmanaged>D2D1_DPICOMPENSATION_PROP_INPUT_DPI</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.DrawTextOptions">
            <summary>	
            Specifies whether text snapping is suppressed or clipping to the layout rectangle is enabled. This enumeration allows a bitwise combination of its member values.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DRAW_TEXT_OPTIONS']/*"/>	
            <unmanaged>D2D1_DRAW_TEXT_OPTIONS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DrawTextOptions.NoSnap">
            <summary>	
            <para>Text is not vertically snapped to pixel boundaries. This setting is recommended for text that is being animated. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DRAW_TEXT_OPTIONS_NO_SNAP']/*"/>	
            <unmanaged>D2D1_DRAW_TEXT_OPTIONS_NO_SNAP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DrawTextOptions.Clip">
            <summary>	
            <para>Text is clipped to the layout rectangle.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DRAW_TEXT_OPTIONS_CLIP']/*"/>	
            <unmanaged>D2D1_DRAW_TEXT_OPTIONS_CLIP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DrawTextOptions.None">
            <summary>	
            <para>Text is vertically snapped to pixel boundaries and is not clipped to the layout rectangle. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DRAW_TEXT_OPTIONS_NONE']/*"/>	
            <unmanaged>D2D1_DRAW_TEXT_OPTIONS_NONE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.ExtendMode">
            <summary>	
            Specifies how a brush paints areas outside of its normal content area.	
            </summary>	
            <remarks>	
            For an <see cref="T:SharpDX.Direct2D1.BitmapBrush"/>, the brush's content is the brush's bitmap. For an <see cref="T:SharpDX.Direct2D1.LinearGradientBrush"/>, the brush's content area is the gradient axis. For an <see cref="T:SharpDX.Direct2D1.RadialGradientBrush"/>, the brush's content is the area within the gradient ellipse.For an example, see the Draw Extend Mode Example.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_EXTEND_MODE']/*"/>	
            <unmanaged>D2D1_EXTEND_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ExtendMode.Clamp">
            <summary>	
            <para>Repeat the edge pixels of the brush's content for all regions outside the normal content area.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_EXTEND_MODE_CLAMP']/*"/>	
            <unmanaged>D2D1_EXTEND_MODE_CLAMP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ExtendMode.Wrap">
            <summary>	
            <para>Repeat the brush's content.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_EXTEND_MODE_WRAP']/*"/>	
            <unmanaged>D2D1_EXTEND_MODE_WRAP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ExtendMode.Mirror">
            <summary>	
            <para> The same as <see cref="F:SharpDX.Direct2D1.ExtendMode.Wrap"/>, except that alternate tiles of the brush's content are flipped. (The brush's normal content is drawn untransformed.)</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_EXTEND_MODE_MIRROR']/*"/>	
            <unmanaged>D2D1_EXTEND_MODE_MIRROR</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.FactoryType">
            <summary>	
            Specifies whether Direct2D provides synchronization for an <see cref="T:SharpDX.Direct2D1.Factory"/> and the resources it creates, so that they may be safely accessed from multiple threads.	
            </summary>	
            <remarks>	
            When you create a factory, you can specify whether it is multithreaded or singlethreaded. A singlethreaded factory provides no serialization against any other single threaded instance within Direct2D, so this mechanism provides a very large degree of scaling on the CPU.You can also create a multithreaded factory instance. In this case, the factory and all derived objects can be used from any thread, and each render target can be rendered to independently. Direct2D serializes calls to these objects, so a single multithreaded Direct2D instance won't scale as well on the CPU as many single threaded instances. However, the resources can be shared within the multithreaded instance.Note the qualifier "On the CPU": GPUs generally take advantage of fine-grained parallelism more so than CPUs. For example, multithreaded calls from the CPU might still end up being serialized when being sent to the GPU; however, a whole bank of pixel and vertex shaders will run in parallel to perform the rendering.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_FACTORY_TYPE']/*"/>	
            <unmanaged>D2D1_FACTORY_TYPE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.FactoryType.SingleThreaded">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_FACTORY_TYPE_SINGLE_THREADED']/*"/>	
            <unmanaged>D2D1_FACTORY_TYPE_SINGLE_THREADED</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.FactoryType.MultiThreaded">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_FACTORY_TYPE_MULTI_THREADED']/*"/>	
            <unmanaged>D2D1_FACTORY_TYPE_MULTI_THREADED</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.Feature">
            <summary>	
            Describes the minimum DirectX support required for hardware rendering by a render target.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_FEATURE']/*"/>	
            <unmanaged>D2D1_FEATURE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Feature.Doubles">
            <summary>	
            <para>Direct2D determines whether the video card provides adequate hardware rendering support.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_FEATURE_DOUBLES']/*"/>	
            <unmanaged>D2D1_FEATURE_DOUBLES</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Feature.D3D10XHardwareOptions">
            <summary>	
            <para>The video card must support DirectX 9.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_FEATURE_D3D10_X_HARDWARE_OPTIONS']/*"/>	
            <unmanaged>D2D1_FEATURE_D3D10_X_HARDWARE_OPTIONS</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.FeatureLevel">
            <summary>	
            Describes the minimum DirectX support required for hardware rendering by a render target.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_FEATURE_LEVEL']/*"/>	
            <unmanaged>D2D1_FEATURE_LEVEL</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.FeatureLevel.Level_DEFAULT">
            <summary>	
            <para>Direct2D determines whether the video card provides adequate hardware rendering support.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_FEATURE_LEVEL_DEFAULT']/*"/>	
            <unmanaged>D2D1_FEATURE_LEVEL_DEFAULT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.FeatureLevel.Level_9">
            <summary>	
            <para>The video card must support DirectX 9.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_FEATURE_LEVEL_9']/*"/>	
            <unmanaged>D2D1_FEATURE_LEVEL_9</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.FeatureLevel.Level_10">
            <summary>	
            <para>The video card must support DirectX 10. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_FEATURE_LEVEL_10']/*"/>	
            <unmanaged>D2D1_FEATURE_LEVEL_10</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.FigureBegin">
            <summary>	
            Indicates whether a specific <see cref="T:SharpDX.Direct2D1.SimplifiedGeometrySink"/> figure is filled or hollow.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_FIGURE_BEGIN']/*"/>	
            <unmanaged>D2D1_FIGURE_BEGIN</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.FigureBegin.Filled">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_FIGURE_BEGIN_FILLED']/*"/>	
            <unmanaged>D2D1_FIGURE_BEGIN_FILLED</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.FigureBegin.Hollow">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_FIGURE_BEGIN_HOLLOW']/*"/>	
            <unmanaged>D2D1_FIGURE_BEGIN_HOLLOW</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.FigureEnd">
            <summary>	
            Indicates whether a specific  <see cref="T:SharpDX.Direct2D1.SimplifiedGeometrySink"/> figure is open or closed.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_FIGURE_END']/*"/>	
            <unmanaged>D2D1_FIGURE_END</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.FigureEnd.Open">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_FIGURE_END_OPEN']/*"/>	
            <unmanaged>D2D1_FIGURE_END_OPEN</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.FigureEnd.Closed">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_FIGURE_END_CLOSED']/*"/>	
            <unmanaged>D2D1_FIGURE_END_CLOSED</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.FillMode">
            <summary>	
            Specifies how the intersecting areas of geometries or figures are combined to form the area of the composite geometry.	
            </summary>	
            <remarks>	
            Use the <see cref="T:SharpDX.Direct2D1.FillMode"/> enumeration when creating an <see cref="T:SharpDX.Direct2D1.GeometryGroup"/> with the CreateGeometryGroup method, or when modifying the fill mode of an <see cref="T:SharpDX.Direct2D1.SimplifiedGeometrySink"/> with the <see cref="M:SharpDX.Direct2D1.SimplifiedGeometrySink.SetFillMode(SharpDX.Direct2D1.FillMode)"/> method.Direct2D fills the interior of a path by using one of the two fill modes specified by this enumeration: <see cref="F:SharpDX.Direct2D1.FillMode.Alternate"/> (alternate) or <see cref="F:SharpDX.Direct2D1.FillMode.Winding"/> (winding). Because the modes determine how to fill the interior of a closed shape, all shapes are treated as closed when they are filled.  If there is a gap in a segment in a shape, draw an imaginary line to close it.To see the difference between the winding and alternate fill modes, assume that you have four circles with the same center and a different radius, as shown in the following illustration. The first one has the radius of 25, the second 50, the third 75, and the fourth 100.The following  illustration shows the shape filled by using the alternate fill mode. Notice that the center and third ring are not filled. This is because a ray drawn from any point in either of those two rings passes through an even number of segments.The following illustration explains this process.The following illustration shows how the same shape is filled when the winding fill mode is specified.Notice that all the rings are filled. This is because all the segments run in the same direction, so a ray drawn from any point will cross one or more segments, and the sum of the crossings will not equal zero.The following illustration explains this process. The red arrows represent the direction in which the segments are drawn and the black arrow represents an arbitrary ray that runs from a point in the innermost ring. Starting with a value of zero, for each segment that the ray crosses, a value of one is added for every clockwise intersection. All points lie in the fill region in this illustration, because the count does not equal zero.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_FILL_MODE']/*"/>	
            <unmanaged>D2D1_FILL_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.FillMode.Alternate">
            <summary>	
            <para>Determines whether a point is in the fill region by drawing a ray from that point to infinity in any direction, and then counting the number of path segments within the given shape that the ray crosses. If this number is odd, the point is in the fill region; if even, the point is outside the fill region.  </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_FILL_MODE_ALTERNATE']/*"/>	
            <unmanaged>D2D1_FILL_MODE_ALTERNATE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.FillMode.Winding">
            <summary>	
            <para>Determines whether a point is in the fill region of the path by drawing a ray from that point to infinity in any direction, and then examining the places where a segment of the shape crosses the ray. Starting with a count of zero, add one each time a segment crosses the ray from left to right and subtract one each time a path segment crosses the ray from right to left,  as long as left and right are seen from the perspective of the ray. After counting the crossings, if the result is zero, then the point is outside the path. Otherwise, it is inside the path.  </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_FILL_MODE_WINDING']/*"/>	
            <unmanaged>D2D1_FILL_MODE_WINDING</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.Filter">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_FILTER']/*"/>	
            <unmanaged>D2D1_FILTER</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Filter.MinimumMagMipPoint">
            <summary>	
            <para>Use point sampling for minification, magnification, and mip-level sampling.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_FILTER_MIN_MAG_MIP_POINT']/*"/>	
            <unmanaged>D2D1_FILTER_MIN_MAG_MIP_POINT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Filter.MinimumMagPointMipLinear">
            <summary>	
            <para>Use point sampling for minification and magnification; use linear interpolation for mip-level sampling.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_FILTER_MIN_MAG_POINT_MIP_LINEAR']/*"/>	
            <unmanaged>D2D1_FILTER_MIN_MAG_POINT_MIP_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Filter.MinimumPointMagLinearMipPoint">
            <summary>	
            <para>Use point sampling for minification; use linear interpolation for magnification; use point sampling for mip-level sampling.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT']/*"/>	
            <unmanaged>D2D1_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Filter.MinimumPointMagMipLinear">
            <summary>	
            <para>Use point sampling for minification; use linear interpolation for magnification and mip-level sampling.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_FILTER_MIN_POINT_MAG_MIP_LINEAR']/*"/>	
            <unmanaged>D2D1_FILTER_MIN_POINT_MAG_MIP_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Filter.MinimumLinearMagMipPoint">
            <summary>	
            <para>Use linear interpolation for minification; use point sampling for magnification and mip-level sampling.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_FILTER_MIN_LINEAR_MAG_MIP_POINT']/*"/>	
            <unmanaged>D2D1_FILTER_MIN_LINEAR_MAG_MIP_POINT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Filter.MinimumLinearMagPointMipLinear">
            <summary>	
            <para>Use linear interpolation for minification; use point sampling for magnification; use linear interpolation for mip-level sampling.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR']/*"/>	
            <unmanaged>D2D1_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Filter.MinimumMagLinearMipPoint">
            <summary>	
            <para>Use linear interpolation for minification and magnification; use point sampling for mip-level sampling.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_FILTER_MIN_MAG_LINEAR_MIP_POINT']/*"/>	
            <unmanaged>D2D1_FILTER_MIN_MAG_LINEAR_MIP_POINT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Filter.MinimumMagMipLinear">
            <summary>	
            <para>Use linear interpolation for minification, magnification, and mip-level sampling.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_FILTER_MIN_MAG_MIP_LINEAR']/*"/>	
            <unmanaged>D2D1_FILTER_MIN_MAG_MIP_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Filter.Anisotropic">
            <summary>	
            <para>Use anisotropic interpolation for minification, magnification, and mip-level sampling.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_FILTER_ANISOTROPIC']/*"/>	
            <unmanaged>D2D1_FILTER_ANISOTROPIC</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.FloodProperties">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_FLOOD_PROP']/*"/>	
            <unmanaged>D2D1_FLOOD_PROP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.FloodProperties.Color">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_FLOOD_PROP_COLOR']/*"/>	
            <unmanaged>D2D1_FLOOD_PROP_COLOR</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.Gamma">
            <summary>	
            Specifies which gamma is used for interpolation.	
            </summary>	
            <remarks>	
            Interpolating in a linear gamma space (<see cref="F:SharpDX.Direct2D1.Gamma.Linear"/>) can avoid changes in perceived brightness caused by the effect of gamma correction in spaces where the gamma is not 1.0, such as the default sRGB color space, where the gamma is 2.2. For an example of the differences between these two blending modes, consider the following illustration, which shows two gradients, each of which blends from red to blue to green:The first gradient is interpolated linearly in the space of the render target (sRGB in this case), and one can see the dark bands between each color. The second gradient uses a gamma-correct linear interpolation, and thus does not exhibit the same variations in brightness.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GAMMA']/*"/>	
            <unmanaged>D2D1_GAMMA</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Gamma.StandardRgb">
            <summary>	
            <para>Interpolation is performed in the standard RGB (sRGB) gamma.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GAMMA_2_2']/*"/>	
            <unmanaged>D2D1_GAMMA_2_2</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Gamma.Linear">
            <summary>	
            <para>Interpolation is performed in the linear-gamma color space.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GAMMA_1_0']/*"/>	
            <unmanaged>D2D1_GAMMA_1_0</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.GammaTransferProperties">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GAMMATRANSFER_PROP']/*"/>	
            <unmanaged>D2D1_GAMMATRANSFER_PROP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.GammaTransferProperties.RedAmplitude">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GAMMATRANSFER_PROP_RED_AMPLITUDE']/*"/>	
            <unmanaged>D2D1_GAMMATRANSFER_PROP_RED_AMPLITUDE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.GammaTransferProperties.RedExponent">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GAMMATRANSFER_PROP_RED_EXPONENT']/*"/>	
            <unmanaged>D2D1_GAMMATRANSFER_PROP_RED_EXPONENT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.GammaTransferProperties.RedOffset">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GAMMATRANSFER_PROP_RED_OFFSET']/*"/>	
            <unmanaged>D2D1_GAMMATRANSFER_PROP_RED_OFFSET</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.GammaTransferProperties.RedDisable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GAMMATRANSFER_PROP_RED_DISABLE']/*"/>	
            <unmanaged>D2D1_GAMMATRANSFER_PROP_RED_DISABLE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.GammaTransferProperties.GreenAmplitude">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GAMMATRANSFER_PROP_GREEN_AMPLITUDE']/*"/>	
            <unmanaged>D2D1_GAMMATRANSFER_PROP_GREEN_AMPLITUDE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.GammaTransferProperties.GreenExponent">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GAMMATRANSFER_PROP_GREEN_EXPONENT']/*"/>	
            <unmanaged>D2D1_GAMMATRANSFER_PROP_GREEN_EXPONENT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.GammaTransferProperties.GreenOffset">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GAMMATRANSFER_PROP_GREEN_OFFSET']/*"/>	
            <unmanaged>D2D1_GAMMATRANSFER_PROP_GREEN_OFFSET</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.GammaTransferProperties.GreenDisable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GAMMATRANSFER_PROP_GREEN_DISABLE']/*"/>	
            <unmanaged>D2D1_GAMMATRANSFER_PROP_GREEN_DISABLE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.GammaTransferProperties.BlueAmplitude">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GAMMATRANSFER_PROP_BLUE_AMPLITUDE']/*"/>	
            <unmanaged>D2D1_GAMMATRANSFER_PROP_BLUE_AMPLITUDE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.GammaTransferProperties.BlueExponent">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GAMMATRANSFER_PROP_BLUE_EXPONENT']/*"/>	
            <unmanaged>D2D1_GAMMATRANSFER_PROP_BLUE_EXPONENT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.GammaTransferProperties.BlueOffset">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GAMMATRANSFER_PROP_BLUE_OFFSET']/*"/>	
            <unmanaged>D2D1_GAMMATRANSFER_PROP_BLUE_OFFSET</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.GammaTransferProperties.BlueDisable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GAMMATRANSFER_PROP_BLUE_DISABLE']/*"/>	
            <unmanaged>D2D1_GAMMATRANSFER_PROP_BLUE_DISABLE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.GammaTransferProperties.AlphaAmplitude">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GAMMATRANSFER_PROP_ALPHA_AMPLITUDE']/*"/>	
            <unmanaged>D2D1_GAMMATRANSFER_PROP_ALPHA_AMPLITUDE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.GammaTransferProperties.AlphaExponent">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GAMMATRANSFER_PROP_ALPHA_EXPONENT']/*"/>	
            <unmanaged>D2D1_GAMMATRANSFER_PROP_ALPHA_EXPONENT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.GammaTransferProperties.AlphaOffset">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GAMMATRANSFER_PROP_ALPHA_OFFSET']/*"/>	
            <unmanaged>D2D1_GAMMATRANSFER_PROP_ALPHA_OFFSET</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.GammaTransferProperties.AlphaDisable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GAMMATRANSFER_PROP_ALPHA_DISABLE']/*"/>	
            <unmanaged>D2D1_GAMMATRANSFER_PROP_ALPHA_DISABLE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.GaussianBlurOptimization">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GAUSSIANBLUR_OPTIMIZATION']/*"/>	
            <unmanaged>D2D1_GAUSSIANBLUR_OPTIMIZATION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.GaussianBlurOptimization.Speed">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GAUSSIANBLUR_OPTIMIZATION_SPEED']/*"/>	
            <unmanaged>D2D1_GAUSSIANBLUR_OPTIMIZATION_SPEED</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.GaussianBlurOptimization.Balanced">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GAUSSIANBLUR_OPTIMIZATION_BALANCED']/*"/>	
            <unmanaged>D2D1_GAUSSIANBLUR_OPTIMIZATION_BALANCED</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.GaussianBlurOptimization.Quality">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GAUSSIANBLUR_OPTIMIZATION_QUALITY']/*"/>	
            <unmanaged>D2D1_GAUSSIANBLUR_OPTIMIZATION_QUALITY</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.GaussianBlurProperties">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GAUSSIANBLUR_PROP']/*"/>	
            <unmanaged>D2D1_GAUSSIANBLUR_PROP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.GaussianBlurProperties.StandardDeviation">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GAUSSIANBLUR_PROP_STANDARD_DEVIATION']/*"/>	
            <unmanaged>D2D1_GAUSSIANBLUR_PROP_STANDARD_DEVIATION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.GaussianBlurProperties.Optimization">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GAUSSIANBLUR_PROP_OPTIMIZATION']/*"/>	
            <unmanaged>D2D1_GAUSSIANBLUR_PROP_OPTIMIZATION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.GaussianBlurProperties.ExpandOutput">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GAUSSIANBLUR_PROP_EXPAND_OUTPUT']/*"/>	
            <unmanaged>D2D1_GAUSSIANBLUR_PROP_EXPAND_OUTPUT</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.GeometryRelation">
            <summary>	
            Describes how one geometry object is spatially related to another geometry object.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GEOMETRY_RELATION']/*"/>	
            <unmanaged>D2D1_GEOMETRY_RELATION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.GeometryRelation.Unknown">
            <summary>	
            <para>The relationship between the two geometries cannot be determined. This value is never returned by any D2D method.  </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GEOMETRY_RELATION_UNKNOWN']/*"/>	
            <unmanaged>D2D1_GEOMETRY_RELATION_UNKNOWN</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.GeometryRelation.Disjoint">
            <summary>	
            <para>The two geometries  do not intersect at all.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GEOMETRY_RELATION_DISJOINT']/*"/>	
            <unmanaged>D2D1_GEOMETRY_RELATION_DISJOINT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.GeometryRelation.IsContained">
            <summary>	
            <para>The instance geometry is entirely contained by  the passed-in geometry.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GEOMETRY_RELATION_IS_CONTAINED']/*"/>	
            <unmanaged>D2D1_GEOMETRY_RELATION_IS_CONTAINED</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.GeometryRelation.Contains">
            <summary>	
            <para>The instance geometry entirely contains the passed-in geometry.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GEOMETRY_RELATION_CONTAINS']/*"/>	
            <unmanaged>D2D1_GEOMETRY_RELATION_CONTAINS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.GeometryRelation.Overlap">
            <summary>	
            <para>The two geometries overlap but neither completely contains the other. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GEOMETRY_RELATION_OVERLAP']/*"/>	
            <unmanaged>D2D1_GEOMETRY_RELATION_OVERLAP</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.GeometrySimplificationOption">
            <summary>	
            Specifies how a geometry is simplified to an <see cref="T:SharpDX.Direct2D1.SimplifiedGeometrySink"/>.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GEOMETRY_SIMPLIFICATION_OPTION']/*"/>	
            <unmanaged>D2D1_GEOMETRY_SIMPLIFICATION_OPTION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.GeometrySimplificationOption.CubicsAndLines">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GEOMETRY_SIMPLIFICATION_OPTION_CUBICS_AND_LINES']/*"/>	
            <unmanaged>D2D1_GEOMETRY_SIMPLIFICATION_OPTION_CUBICS_AND_LINES</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.GeometrySimplificationOption.Lines">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GEOMETRY_SIMPLIFICATION_OPTION_LINES']/*"/>	
            <unmanaged>D2D1_GEOMETRY_SIMPLIFICATION_OPTION_LINES</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.HighQualityScaleProperties">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_HIGHQUALITYSCALE_PROP']/*"/>	
            <unmanaged>D2D1_HIGHQUALITYSCALE_PROP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.HighQualityScaleProperties.Scale">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_HIGHQUALITYSCALE_PROP_SCALE']/*"/>	
            <unmanaged>D2D1_HIGHQUALITYSCALE_PROP_SCALE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.HighQualityScaleProperties.CenterPoint">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_HIGHQUALITYSCALE_PROP_CENTER_POINT']/*"/>	
            <unmanaged>D2D1_HIGHQUALITYSCALE_PROP_CENTER_POINT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.HighQualityScaleProperties.BorderMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_HIGHQUALITYSCALE_PROP_BORDER_MODE']/*"/>	
            <unmanaged>D2D1_HIGHQUALITYSCALE_PROP_BORDER_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.HighQualityScaleProperties.Sharpness">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_HIGHQUALITYSCALE_PROP_SHARPNESS']/*"/>	
            <unmanaged>D2D1_HIGHQUALITYSCALE_PROP_SHARPNESS</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.HistogramProperties">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_HISTOGRAM_PROP']/*"/>	
            <unmanaged>D2D1_HISTOGRAM_PROP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.HistogramProperties.NumBins">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_HISTOGRAM_PROP_NUM_BINS']/*"/>	
            <unmanaged>D2D1_HISTOGRAM_PROP_NUM_BINS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.HistogramProperties.ChannelSelect">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_HISTOGRAM_PROP_CHANNEL_SELECT']/*"/>	
            <unmanaged>D2D1_HISTOGRAM_PROP_CHANNEL_SELECT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.HistogramProperties.HistogramOutput">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_HISTOGRAM_PROP_HISTOGRAM_OUTPUT']/*"/>	
            <unmanaged>D2D1_HISTOGRAM_PROP_HISTOGRAM_OUTPUT</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.HueRotationProperties">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_HUEROTATION_PROP']/*"/>	
            <unmanaged>D2D1_HUEROTATION_PROP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.HueRotationProperties.Angle">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_HUEROTATION_PROP_ANGLE']/*"/>	
            <unmanaged>D2D1_HUEROTATION_PROP_ANGLE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.InterpolationMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_INTERPOLATION_MODE']/*"/>	
            <unmanaged>D2D1_INTERPOLATION_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.InterpolationMode.NearestNeighbor">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_INTERPOLATION_MODE_NEAREST_NEIGHBOR']/*"/>	
            <unmanaged>D2D1_INTERPOLATION_MODE_NEAREST_NEIGHBOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.InterpolationMode.Linear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_INTERPOLATION_MODE_LINEAR']/*"/>	
            <unmanaged>D2D1_INTERPOLATION_MODE_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.InterpolationMode.Cubic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_INTERPOLATION_MODE_CUBIC']/*"/>	
            <unmanaged>D2D1_INTERPOLATION_MODE_CUBIC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.InterpolationMode.MultiSampleLinear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_INTERPOLATION_MODE_MULTI_SAMPLE_LINEAR']/*"/>	
            <unmanaged>D2D1_INTERPOLATION_MODE_MULTI_SAMPLE_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.InterpolationMode.Anisotropic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_INTERPOLATION_MODE_ANISOTROPIC']/*"/>	
            <unmanaged>D2D1_INTERPOLATION_MODE_ANISOTROPIC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.InterpolationMode.HighQualityCubic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_INTERPOLATION_MODE_HIGH_QUALITY_CUBIC']/*"/>	
            <unmanaged>D2D1_INTERPOLATION_MODE_HIGH_QUALITY_CUBIC</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.InterpolationModeDefinition">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_ENUM_0']/*"/>	
            <unmanaged>D2D1_ENUM_0</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.InterpolationModeDefinition.NearestNeighbor">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_INTERPOLATION_MODE_DEFINITION_NEAREST_NEIGHBOR']/*"/>	
            <unmanaged>D2D1_INTERPOLATION_MODE_DEFINITION_NEAREST_NEIGHBOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.InterpolationModeDefinition.Linear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_INTERPOLATION_MODE_DEFINITION_LINEAR']/*"/>	
            <unmanaged>D2D1_INTERPOLATION_MODE_DEFINITION_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.InterpolationModeDefinition.Cubic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_INTERPOLATION_MODE_DEFINITION_CUBIC']/*"/>	
            <unmanaged>D2D1_INTERPOLATION_MODE_DEFINITION_CUBIC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.InterpolationModeDefinition.MultiSampleLinear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_INTERPOLATION_MODE_DEFINITION_MULTI_SAMPLE_LINEAR']/*"/>	
            <unmanaged>D2D1_INTERPOLATION_MODE_DEFINITION_MULTI_SAMPLE_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.InterpolationModeDefinition.Anisotropic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_INTERPOLATION_MODE_DEFINITION_ANISOTROPIC']/*"/>	
            <unmanaged>D2D1_INTERPOLATION_MODE_DEFINITION_ANISOTROPIC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.InterpolationModeDefinition.HighQualityCubic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_INTERPOLATION_MODE_DEFINITION_HIGH_QUALITY_CUBIC']/*"/>	
            <unmanaged>D2D1_INTERPOLATION_MODE_DEFINITION_HIGH_QUALITY_CUBIC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.InterpolationModeDefinition.Fant">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_INTERPOLATION_MODE_DEFINITION_FANT']/*"/>	
            <unmanaged>D2D1_INTERPOLATION_MODE_DEFINITION_FANT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.InterpolationModeDefinition.MipmapLinear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_INTERPOLATION_MODE_DEFINITION_MIPMAP_LINEAR']/*"/>	
            <unmanaged>D2D1_INTERPOLATION_MODE_DEFINITION_MIPMAP_LINEAR</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.LayerOptions">
            <summary>	
            Specifies options that can be applied when a layer resource is applied to create a layer.	
            </summary>	
            <remarks>	
            ClearType antialiasing must use the current contents of the render target to blend properly. When a pushed layer requests initializing for ClearType, Direct 2D copies the current contents of the render target into the layer so that ClearType antialiasing can be performed. Rendering ClearType text into a transparent layer does not produce the desired results.A small performance hit from re-copying content occurs when <see cref="M:SharpDX.Direct2D1.RenderTarget.Clear(System.Nullable{SharpDX.Color4})"/> is called.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LAYER_OPTIONS']/*"/>	
            <unmanaged>D2D1_LAYER_OPTIONS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.LayerOptions.None">
            <summary>	
            <para> The text in this layer does not use ClearType antialiasing.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LAYER_OPTIONS_NONE']/*"/>	
            <unmanaged>D2D1_LAYER_OPTIONS_NONE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.LayerOptions.InitializeForCleartype">
            <summary>	
            <para>The layer renders correctly for ClearType text. If the render target is set to ClearType, the  layer continues to render ClearType. If the render target is set to ClearType and this option is not specified, the render target will be set to render gray-scale until the layer is popped. The caller can override this default by calling SetTextAntialiasMode while within the layer. This flag is slightly slower than the default. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LAYER_OPTIONS_INITIALIZE_FOR_CLEARTYPE']/*"/>	
            <unmanaged>D2D1_LAYER_OPTIONS_INITIALIZE_FOR_CLEARTYPE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.LayerOptions1">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LAYER_OPTIONS1']/*"/>	
            <unmanaged>D2D1_LAYER_OPTIONS1</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.LayerOptions1.None">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LAYER_OPTIONS1_NONE']/*"/>	
            <unmanaged>D2D1_LAYER_OPTIONS1_NONE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.LayerOptions1.InitializeFromBackground">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LAYER_OPTIONS1_INITIALIZE_FROM_BACKGROUND']/*"/>	
            <unmanaged>D2D1_LAYER_OPTIONS1_INITIALIZE_FROM_BACKGROUND</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.LayerOptions1.IgnoreAlpha">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LAYER_OPTIONS1_IGNORE_ALPHA']/*"/>	
            <unmanaged>D2D1_LAYER_OPTIONS1_IGNORE_ALPHA</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.LinearTransferProperties">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LINEARTRANSFER_PROP']/*"/>	
            <unmanaged>D2D1_LINEARTRANSFER_PROP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.LinearTransferProperties.RedYIntercept">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LINEARTRANSFER_PROP_RED_Y_INTERCEPT']/*"/>	
            <unmanaged>D2D1_LINEARTRANSFER_PROP_RED_Y_INTERCEPT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.LinearTransferProperties.RedSlope">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LINEARTRANSFER_PROP_RED_SLOPE']/*"/>	
            <unmanaged>D2D1_LINEARTRANSFER_PROP_RED_SLOPE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.LinearTransferProperties.RedDisable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LINEARTRANSFER_PROP_RED_DISABLE']/*"/>	
            <unmanaged>D2D1_LINEARTRANSFER_PROP_RED_DISABLE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.LinearTransferProperties.GreenYIntercept">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LINEARTRANSFER_PROP_GREEN_Y_INTERCEPT']/*"/>	
            <unmanaged>D2D1_LINEARTRANSFER_PROP_GREEN_Y_INTERCEPT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.LinearTransferProperties.GreenSlope">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LINEARTRANSFER_PROP_GREEN_SLOPE']/*"/>	
            <unmanaged>D2D1_LINEARTRANSFER_PROP_GREEN_SLOPE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.LinearTransferProperties.GreenDisable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LINEARTRANSFER_PROP_GREEN_DISABLE']/*"/>	
            <unmanaged>D2D1_LINEARTRANSFER_PROP_GREEN_DISABLE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.LinearTransferProperties.BlueYIntercept">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LINEARTRANSFER_PROP_BLUE_Y_INTERCEPT']/*"/>	
            <unmanaged>D2D1_LINEARTRANSFER_PROP_BLUE_Y_INTERCEPT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.LinearTransferProperties.BlueSlope">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LINEARTRANSFER_PROP_BLUE_SLOPE']/*"/>	
            <unmanaged>D2D1_LINEARTRANSFER_PROP_BLUE_SLOPE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.LinearTransferProperties.BlueDisable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LINEARTRANSFER_PROP_BLUE_DISABLE']/*"/>	
            <unmanaged>D2D1_LINEARTRANSFER_PROP_BLUE_DISABLE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.LinearTransferProperties.AlphaYIntercept">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LINEARTRANSFER_PROP_ALPHA_Y_INTERCEPT']/*"/>	
            <unmanaged>D2D1_LINEARTRANSFER_PROP_ALPHA_Y_INTERCEPT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.LinearTransferProperties.AlphaSlope">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LINEARTRANSFER_PROP_ALPHA_SLOPE']/*"/>	
            <unmanaged>D2D1_LINEARTRANSFER_PROP_ALPHA_SLOPE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.LinearTransferProperties.AlphaDisable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LINEARTRANSFER_PROP_ALPHA_DISABLE']/*"/>	
            <unmanaged>D2D1_LINEARTRANSFER_PROP_ALPHA_DISABLE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.LineJoin">
            <summary>	
            Describes the shape that joins two lines or segments.	
            </summary>	
            <remarks>	
            A miter limit affects how sharp miter joins are allowed to be. If the line join style is <see cref="F:SharpDX.Direct2D1.LineJoin.MiterOrBevel"/>, then the join will be mitered with regular angular vertices if it doesn't extend beyond the miter limit; otherwise, the line join will be beveled.The following illustration shows  different line join settings for the same stroked path geometry.  For more information, see Stroke Style Example.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LINE_JOIN']/*"/>	
            <unmanaged>D2D1_LINE_JOIN</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.LineJoin.Miter">
            <summary>	
            <para>Regular angular vertices. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LINE_JOIN_MITER']/*"/>	
            <unmanaged>D2D1_LINE_JOIN_MITER</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.LineJoin.Bevel">
            <summary>	
            <para>Beveled vertices.   </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LINE_JOIN_BEVEL']/*"/>	
            <unmanaged>D2D1_LINE_JOIN_BEVEL</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.LineJoin.Round">
            <summary>	
            <para>Rounded vertices. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LINE_JOIN_ROUND']/*"/>	
            <unmanaged>D2D1_LINE_JOIN_ROUND</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.LineJoin.MiterOrBevel">
            <summary>	
            <para>Regular angular vertices unless the join would extend beyond the miter limit; otherwise, beveled vertices.  </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LINE_JOIN_MITER_OR_BEVEL']/*"/>	
            <unmanaged>D2D1_LINE_JOIN_MITER_OR_BEVEL</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.MapOptions">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            The <see cref="F:SharpDX.Direct2D1.MapOptions.Read"/> option can be used only if the bitmap was created with the <see cref="F:SharpDX.Direct2D1.BitmapOptions.CpuRead"/> flag.These flags will be not be able to be used on bitmaps created by the <see cref="T:SharpDX.Direct2D1.DeviceContext"/>. However, the IDImageSourceTransform will receive bitmaps for which these flags are valid.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_MAP_OPTIONS']/*"/>	
            <unmanaged>D2D1_MAP_OPTIONS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.MapOptions.None">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_MAP_OPTIONS_NONE']/*"/>	
            <unmanaged>D2D1_MAP_OPTIONS_NONE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.MapOptions.Read">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_MAP_OPTIONS_READ']/*"/>	
            <unmanaged>D2D1_MAP_OPTIONS_READ</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.MapOptions.Write">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_MAP_OPTIONS_WRITE']/*"/>	
            <unmanaged>D2D1_MAP_OPTIONS_WRITE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.MapOptions.Discard">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_MAP_OPTIONS_DISCARD']/*"/>	
            <unmanaged>D2D1_MAP_OPTIONS_DISCARD</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.MeasuringMode">
            <summary>	
            Indicates the measuring method used for text layout.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_MEASURING_MODE']/*"/>	
            <unmanaged>DWRITE_MEASURING_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.MeasuringMode.Natural">
            <summary>	
            <para> Specifies that text is measured using glyph ideal metrics whose values are independent to the current display resolution.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_MEASURING_MODE_NATURAL']/*"/>	
            <unmanaged>DWRITE_MEASURING_MODE_NATURAL</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.MeasuringMode.GdiClassic">
            <summary>	
            <para> Specifies that text is measured using glyph display-compatible metrics whose values tuned for the current display resolution.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_MEASURING_MODE_GDI_CLASSIC']/*"/>	
            <unmanaged>DWRITE_MEASURING_MODE_GDI_CLASSIC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.MeasuringMode.GdiNatural">
            <summary>	
            <para> Specifies that text is measured using the same glyph display metrics as text measured by GDI using a font created with CLEARTYPE_NATURAL_QUALITY.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='DWRITE_MEASURING_MODE_GDI_NATURAL']/*"/>	
            <unmanaged>DWRITE_MEASURING_MODE_GDI_NATURAL</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.MorphologyMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_MORPHOLOGY_MODE']/*"/>	
            <unmanaged>D2D1_MORPHOLOGY_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.MorphologyMode.Erode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_MORPHOLOGY_MODE_ERODE']/*"/>	
            <unmanaged>D2D1_MORPHOLOGY_MODE_ERODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.MorphologyMode.Dilate">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_MORPHOLOGY_MODE_DILATE']/*"/>	
            <unmanaged>D2D1_MORPHOLOGY_MODE_DILATE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.MorphologyProperties">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_MORPHOLOGY_PROP']/*"/>	
            <unmanaged>D2D1_MORPHOLOGY_PROP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.MorphologyProperties.Mode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_MORPHOLOGY_PROP_MODE']/*"/>	
            <unmanaged>D2D1_MORPHOLOGY_PROP_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.MorphologyProperties.Width">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_MORPHOLOGY_PROP_WIDTH']/*"/>	
            <unmanaged>D2D1_MORPHOLOGY_PROP_WIDTH</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.MorphologyProperties.Height">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_MORPHOLOGY_PROP_HEIGHT']/*"/>	
            <unmanaged>D2D1_MORPHOLOGY_PROP_HEIGHT</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.OpacityMaskContent">
            <summary>	
            Describes whether an opacity mask contains graphics or text. Direct2D uses this information to determine which gamma space to use when blending the opacity mask.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_OPACITY_MASK_CONTENT']/*"/>	
            <unmanaged>D2D1_OPACITY_MASK_CONTENT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.OpacityMaskContent.Graphics">
            <summary>	
            <para>The opacity mask contains graphics. The opacity mask is blended in the gamma 2.2 color space.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_OPACITY_MASK_CONTENT_GRAPHICS']/*"/>	
            <unmanaged>D2D1_OPACITY_MASK_CONTENT_GRAPHICS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.OpacityMaskContent.TextNatural">
            <summary>	
            <para>The opacity mask contains non-GDI text. The gamma space used for blending is obtained from the render target's text rendering parameters. (<see cref="M:SharpDX.Direct2D1.RenderTarget.SetTextRenderingParams(SharpDX.DirectWrite.RenderingParams)"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_OPACITY_MASK_CONTENT_TEXT_NATURAL']/*"/>	
            <unmanaged>D2D1_OPACITY_MASK_CONTENT_TEXT_NATURAL</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.OpacityMaskContent.TextGdiCompatible">
            <summary>	
            <para>The opacity mask contains text rendered using the GDI-compatible rendering mode. The opacity mask is blended using the gamma for GDI rendering.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_OPACITY_MASK_CONTENT_TEXT_GDI_COMPATIBLE']/*"/>	
            <unmanaged>D2D1_OPACITY_MASK_CONTENT_TEXT_GDI_COMPATIBLE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.PathSegment">
            <summary>	
            Indicates whether a segment should be stroked and whether the join between this segment and the previous one should be smooth. This enumeration allows a bitwise combination of its member values.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PATH_SEGMENT']/*"/>	
            <unmanaged>D2D1_PATH_SEGMENT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PathSegment.None">
            <summary>	
            <para>The segment is joined  as specified by the <see cref="T:SharpDX.Direct2D1.StrokeStyle"/> interface, and it is stroked. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PATH_SEGMENT_NONE']/*"/>	
            <unmanaged>D2D1_PATH_SEGMENT_NONE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PathSegment.ForceUnstroked">
            <summary>	
            <para>The segment is not stroked.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PATH_SEGMENT_FORCE_UNSTROKED']/*"/>	
            <unmanaged>D2D1_PATH_SEGMENT_FORCE_UNSTROKED</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PathSegment.ForceRoundLineJoin">
            <summary>	
            <para>The segment is always joined with the one preceding it using a round line join, regardless of which D2D1_LINE_JOINenumeration is specified by the <see cref="T:SharpDX.Direct2D1.StrokeStyle"/> interface. If this segment is the first segment and the figure is closed, a round line join is used to connect the closing segment with the first segment. If the figure is not closed, this setting has no effect on the first segment of the figure. If <see cref="M:SharpDX.Direct2D1.SimplifiedGeometrySink.SetSegmentFlags(SharpDX.Direct2D1.PathSegment)"/> is called just before <see cref="M:SharpDX.Direct2D1.SimplifiedGeometrySink.EndFigure(SharpDX.Direct2D1.FigureEnd)"/>, the join between the closing segment and the last explicitly specified segment is affected.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PATH_SEGMENT_FORCE_ROUND_LINE_JOIN']/*"/>	
            <unmanaged>D2D1_PATH_SEGMENT_FORCE_ROUND_LINE_JOIN</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.PerspectiveTransform3DInteroplationMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE']/*"/>	
            <unmanaged>D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PerspectiveTransform3DInteroplationMode.NearestNeighbor">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE_NEAREST_NEIGHBOR']/*"/>	
            <unmanaged>D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE_NEAREST_NEIGHBOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PerspectiveTransform3DInteroplationMode.Linear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE_LINEAR']/*"/>	
            <unmanaged>D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PerspectiveTransform3DInteroplationMode.Cubic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE_CUBIC']/*"/>	
            <unmanaged>D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE_CUBIC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PerspectiveTransform3DInteroplationMode.MultiSampleLinear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE_MULTI_SAMPLE_LINEAR']/*"/>	
            <unmanaged>D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE_MULTI_SAMPLE_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PerspectiveTransform3DInteroplationMode.Anisotropic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE_ANISOTROPIC']/*"/>	
            <unmanaged>D2D1_3DPERSPECTIVETRANSFORM_INTERPOLATION_MODE_ANISOTROPIC</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.PerspectiveTransform3DProperties">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_3DPERSPECTIVETRANSFORM_PROP']/*"/>	
            <unmanaged>D2D1_3DPERSPECTIVETRANSFORM_PROP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PerspectiveTransform3DProperties.InterpolationMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_3DPERSPECTIVETRANSFORM_PROP_INTERPOLATION_MODE']/*"/>	
            <unmanaged>D2D1_3DPERSPECTIVETRANSFORM_PROP_INTERPOLATION_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PerspectiveTransform3DProperties.BorderMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_3DPERSPECTIVETRANSFORM_PROP_BORDER_MODE']/*"/>	
            <unmanaged>D2D1_3DPERSPECTIVETRANSFORM_PROP_BORDER_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PerspectiveTransform3DProperties.Depth">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_3DPERSPECTIVETRANSFORM_PROP_DEPTH']/*"/>	
            <unmanaged>D2D1_3DPERSPECTIVETRANSFORM_PROP_DEPTH</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PerspectiveTransform3DProperties.PerspectiveOrigin">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_3DPERSPECTIVETRANSFORM_PROP_PERSPECTIVE_ORIGIN']/*"/>	
            <unmanaged>D2D1_3DPERSPECTIVETRANSFORM_PROP_PERSPECTIVE_ORIGIN</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PerspectiveTransform3DProperties.LocalOffset">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_3DPERSPECTIVETRANSFORM_PROP_LOCAL_OFFSET']/*"/>	
            <unmanaged>D2D1_3DPERSPECTIVETRANSFORM_PROP_LOCAL_OFFSET</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PerspectiveTransform3DProperties.GlobalOffset">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_3DPERSPECTIVETRANSFORM_PROP_GLOBAL_OFFSET']/*"/>	
            <unmanaged>D2D1_3DPERSPECTIVETRANSFORM_PROP_GLOBAL_OFFSET</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PerspectiveTransform3DProperties.RotationOrigin">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_3DPERSPECTIVETRANSFORM_PROP_ROTATION_ORIGIN']/*"/>	
            <unmanaged>D2D1_3DPERSPECTIVETRANSFORM_PROP_ROTATION_ORIGIN</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PerspectiveTransform3DProperties.Rotation">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_3DPERSPECTIVETRANSFORM_PROP_ROTATION']/*"/>	
            <unmanaged>D2D1_3DPERSPECTIVETRANSFORM_PROP_ROTATION</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.PixelOptions">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            If the shader specifies <see cref="F:SharpDX.Direct2D1.PixelOptions.None"/>, it must still correctly implement the region of interest calculations in <see cref="M:SharpDX.Direct2D1.Transform.MapOutputRectToInputRects(SharpDX.Rectangle,SharpDX.Rectangle[],System.Int32)"/> and <see cref="M:SharpDX.Direct2D1.Transform.MapInputRectsToOutputRect(SharpDX.Rectangle[],System.Int32,SharpDX.Rectangle@)"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PIXEL_OPTIONS']/*"/>	
            <unmanaged>D2D1_PIXEL_OPTIONS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PixelOptions.None">
            <summary>	
            <para>The pixel shader is not restricted in its sampling.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PIXEL_OPTIONS_NONE']/*"/>	
            <unmanaged>D2D1_PIXEL_OPTIONS_NONE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PixelOptions.TrivialSampling">
            <summary>	
            <para> The pixel shader samples inputs only at the same scene coordinate as the output pixel and returns transparent black whenever the input pixels are also transparent black.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PIXEL_OPTIONS_TRIVIAL_SAMPLING']/*"/>	
            <unmanaged>D2D1_PIXEL_OPTIONS_TRIVIAL_SAMPLING</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.PointDiffuseProperties">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_POINTDIFFUSE_PROP']/*"/>	
            <unmanaged>D2D1_POINTDIFFUSE_PROP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PointDiffuseProperties.LightPosition">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_POINTDIFFUSE_PROP_LIGHT_POSITION']/*"/>	
            <unmanaged>D2D1_POINTDIFFUSE_PROP_LIGHT_POSITION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PointDiffuseProperties.DiffuseConstant">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_POINTDIFFUSE_PROP_DIFFUSE_CONSTANT']/*"/>	
            <unmanaged>D2D1_POINTDIFFUSE_PROP_DIFFUSE_CONSTANT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PointDiffuseProperties.SurfaceScale">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_POINTDIFFUSE_PROP_SURFACE_SCALE']/*"/>	
            <unmanaged>D2D1_POINTDIFFUSE_PROP_SURFACE_SCALE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PointDiffuseProperties.Color">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_POINTDIFFUSE_PROP_COLOR']/*"/>	
            <unmanaged>D2D1_POINTDIFFUSE_PROP_COLOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PointDiffuseProperties.KernelUnitLength">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_POINTDIFFUSE_PROP_KERNEL_UNIT_LENGTH']/*"/>	
            <unmanaged>D2D1_POINTDIFFUSE_PROP_KERNEL_UNIT_LENGTH</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PointDiffuseProperties.ScaleMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_POINTDIFFUSE_PROP_SCALE_MODE']/*"/>	
            <unmanaged>D2D1_POINTDIFFUSE_PROP_SCALE_MODE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.PointDiffuseScaleMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_POINTDIFFUSE_SCALE_MODE']/*"/>	
            <unmanaged>D2D1_POINTDIFFUSE_SCALE_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PointDiffuseScaleMode.NearestNeighbor">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_POINTDIFFUSE_SCALE_MODE_NEAREST_NEIGHBOR']/*"/>	
            <unmanaged>D2D1_POINTDIFFUSE_SCALE_MODE_NEAREST_NEIGHBOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PointDiffuseScaleMode.Linear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_POINTDIFFUSE_SCALE_MODE_LINEAR']/*"/>	
            <unmanaged>D2D1_POINTDIFFUSE_SCALE_MODE_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PointDiffuseScaleMode.Cubic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_POINTDIFFUSE_SCALE_MODE_CUBIC']/*"/>	
            <unmanaged>D2D1_POINTDIFFUSE_SCALE_MODE_CUBIC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PointDiffuseScaleMode.MultiSampleLinear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_POINTDIFFUSE_SCALE_MODE_MULTI_SAMPLE_LINEAR']/*"/>	
            <unmanaged>D2D1_POINTDIFFUSE_SCALE_MODE_MULTI_SAMPLE_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PointDiffuseScaleMode.Anisotropic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_POINTDIFFUSE_SCALE_MODE_ANISOTROPIC']/*"/>	
            <unmanaged>D2D1_POINTDIFFUSE_SCALE_MODE_ANISOTROPIC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PointDiffuseScaleMode.HighQualityCubic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_POINTDIFFUSE_SCALE_MODE_HIGH_QUALITY_CUBIC']/*"/>	
            <unmanaged>D2D1_POINTDIFFUSE_SCALE_MODE_HIGH_QUALITY_CUBIC</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.PointSpecularProperties">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_POINTSPECULAR_PROP']/*"/>	
            <unmanaged>D2D1_POINTSPECULAR_PROP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PointSpecularProperties.LightPosition">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_POINTSPECULAR_PROP_LIGHT_POSITION']/*"/>	
            <unmanaged>D2D1_POINTSPECULAR_PROP_LIGHT_POSITION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PointSpecularProperties.SpecularExponent">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_POINTSPECULAR_PROP_SPECULAR_EXPONENT']/*"/>	
            <unmanaged>D2D1_POINTSPECULAR_PROP_SPECULAR_EXPONENT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PointSpecularProperties.SpecularConstant">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_POINTSPECULAR_PROP_SPECULAR_CONSTANT']/*"/>	
            <unmanaged>D2D1_POINTSPECULAR_PROP_SPECULAR_CONSTANT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PointSpecularProperties.SurfaceScale">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_POINTSPECULAR_PROP_SURFACE_SCALE']/*"/>	
            <unmanaged>D2D1_POINTSPECULAR_PROP_SURFACE_SCALE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PointSpecularProperties.Color">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_POINTSPECULAR_PROP_COLOR']/*"/>	
            <unmanaged>D2D1_POINTSPECULAR_PROP_COLOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PointSpecularProperties.KernelUnitLength">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_POINTSPECULAR_PROP_KERNEL_UNIT_LENGTH']/*"/>	
            <unmanaged>D2D1_POINTSPECULAR_PROP_KERNEL_UNIT_LENGTH</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PointSpecularProperties.ScaleMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_POINTSPECULAR_PROP_SCALE_MODE']/*"/>	
            <unmanaged>D2D1_POINTSPECULAR_PROP_SCALE_MODE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.PointSpecularScaleMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_POINTSPECULAR_SCALE_MODE']/*"/>	
            <unmanaged>D2D1_POINTSPECULAR_SCALE_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PointSpecularScaleMode.NearestNeighbor">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_POINTSPECULAR_SCALE_MODE_NEAREST_NEIGHBOR']/*"/>	
            <unmanaged>D2D1_POINTSPECULAR_SCALE_MODE_NEAREST_NEIGHBOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PointSpecularScaleMode.Linear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_POINTSPECULAR_SCALE_MODE_LINEAR']/*"/>	
            <unmanaged>D2D1_POINTSPECULAR_SCALE_MODE_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PointSpecularScaleMode.Cubic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_POINTSPECULAR_SCALE_MODE_CUBIC']/*"/>	
            <unmanaged>D2D1_POINTSPECULAR_SCALE_MODE_CUBIC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PointSpecularScaleMode.MultiSampleLinear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_POINTSPECULAR_SCALE_MODE_MULTI_SAMPLE_LINEAR']/*"/>	
            <unmanaged>D2D1_POINTSPECULAR_SCALE_MODE_MULTI_SAMPLE_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PointSpecularScaleMode.Anisotropic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_POINTSPECULAR_SCALE_MODE_ANISOTROPIC']/*"/>	
            <unmanaged>D2D1_POINTSPECULAR_SCALE_MODE_ANISOTROPIC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PointSpecularScaleMode.HighQualityCubic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_POINTSPECULAR_SCALE_MODE_HIGH_QUALITY_CUBIC']/*"/>	
            <unmanaged>D2D1_POINTSPECULAR_SCALE_MODE_HIGH_QUALITY_CUBIC</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.PresentOptions">
            <summary>	
            Describes how a render target behaves when it presents its content. This enumeration allows a bitwise combination of its member values.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PRESENT_OPTIONS']/*"/>	
            <unmanaged>D2D1_PRESENT_OPTIONS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PresentOptions.None">
            <summary>	
            <para>The render target waits until the display refreshes to present and discards the frame upon presenting.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PRESENT_OPTIONS_NONE']/*"/>	
            <unmanaged>D2D1_PRESENT_OPTIONS_NONE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PresentOptions.RetainContents">
            <summary>	
            <para>The render target does not discard the frame upon presenting.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PRESENT_OPTIONS_RETAIN_CONTENTS']/*"/>	
            <unmanaged>D2D1_PRESENT_OPTIONS_RETAIN_CONTENTS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PresentOptions.Immediately">
            <summary>	
            <para>The render target does not wait until the display refreshes to present.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PRESENT_OPTIONS_IMMEDIATELY']/*"/>	
            <unmanaged>D2D1_PRESENT_OPTIONS_IMMEDIATELY</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.PrimitiveBlend">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            When applying a primitive blend the blend result is calculated based on the primitive blend set.  This blend result is then linearly interpolated with the value in the destination proportional to the amount that the primitive covers the destination pixel.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PRIMITIVE_BLEND']/*"/>	
            <unmanaged>D2D1_PRIMITIVE_BLEND</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PrimitiveBlend.SourceOver">
            <summary>	
            <para>The standard source-over-destination blend mode.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PRIMITIVE_BLEND_SOURCE_OVER']/*"/>	
            <unmanaged>D2D1_PRIMITIVE_BLEND_SOURCE_OVER</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PrimitiveBlend.Copy">
            <summary>	
            <para>The source is copied to the destination; the destination pixels are ignored.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PRIMITIVE_BLEND_COPY']/*"/>	
            <unmanaged>D2D1_PRIMITIVE_BLEND_COPY</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.PrintFontSubsetMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PRINT_FONT_SUBSET_MODE']/*"/>	
            <unmanaged>D2D1_PRINT_FONT_SUBSET_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PrintFontSubsetMode.Default">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PRINT_FONT_SUBSET_MODE_DEFAULT']/*"/>	
            <unmanaged>D2D1_PRINT_FONT_SUBSET_MODE_DEFAULT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PrintFontSubsetMode.Eachpage">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PRINT_FONT_SUBSET_MODE_EACHPAGE']/*"/>	
            <unmanaged>D2D1_PRINT_FONT_SUBSET_MODE_EACHPAGE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PrintFontSubsetMode.None">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PRINT_FONT_SUBSET_MODE_NONE']/*"/>	
            <unmanaged>D2D1_PRINT_FONT_SUBSET_MODE_NONE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.Property">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PROPERTY']/*"/>	
            <unmanaged>D2D1_PROPERTY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Property.Clsid">
            <summary>	
            <para>An unknown property.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PROPERTY_CLSID']/*"/>	
            <unmanaged>D2D1_PROPERTY_CLSID</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Property.Displayname">
            <summary>	
            <para>An arbitrary-length string.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PROPERTY_DISPLAYNAME']/*"/>	
            <unmanaged>D2D1_PROPERTY_DISPLAYNAME</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Property.Author">
            <summary>	
            <para>A 32-bit integer value constrained to be either 0 or 1.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PROPERTY_AUTHOR']/*"/>	
            <unmanaged>D2D1_PROPERTY_AUTHOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Property.Category">
            <summary>	
            <para>An unsigned 32-bit integer.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PROPERTY_CATEGORY']/*"/>	
            <unmanaged>D2D1_PROPERTY_CATEGORY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Property.Description">
            <summary>	
            <para>A signed 32-bit integer.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PROPERTY_DESCRIPTION']/*"/>	
            <unmanaged>D2D1_PROPERTY_DESCRIPTION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Property.Inputs">
            <summary>	
            <para>A 32-bit float.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PROPERTY_INPUTS']/*"/>	
            <unmanaged>D2D1_PROPERTY_INPUTS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Property.Cached">
            <summary>	
            <para>Two 32-bit float values.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PROPERTY_CACHED']/*"/>	
            <unmanaged>D2D1_PROPERTY_CACHED</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Property.Precision">
            <summary>	
            <para> Three 32-bit float values.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PROPERTY_PRECISION']/*"/>	
            <unmanaged>D2D1_PROPERTY_PRECISION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Property.MinimumInputs">
            <summary>	
            <para>Four 32-bit float values.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PROPERTY_MIN_INPUTS']/*"/>	
            <unmanaged>D2D1_PROPERTY_MIN_INPUTS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Property.MaximumInputs">
            <summary>	
            <para>An arbitrary number of bytes.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PROPERTY_MAX_INPUTS']/*"/>	
            <unmanaged>D2D1_PROPERTY_MAX_INPUTS</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.PropertyType">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PROPERTY_TYPE']/*"/>	
            <unmanaged>D2D1_PROPERTY_TYPE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PropertyType.Unknown">
            <summary>	
            <para>An unknown property.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PROPERTY_TYPE_UNKNOWN']/*"/>	
            <unmanaged>D2D1_PROPERTY_TYPE_UNKNOWN</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PropertyType.String">
            <summary>	
            <para>An arbitrary-length string.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PROPERTY_TYPE_STRING']/*"/>	
            <unmanaged>D2D1_PROPERTY_TYPE_STRING</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PropertyType.Bool">
            <summary>	
            <para>A 32-bit integer value constrained to be either 0 or 1.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PROPERTY_TYPE_BOOL']/*"/>	
            <unmanaged>D2D1_PROPERTY_TYPE_BOOL</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PropertyType.Uint32">
            <summary>	
            <para>An unsigned 32-bit integer.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PROPERTY_TYPE_UINT32']/*"/>	
            <unmanaged>D2D1_PROPERTY_TYPE_UINT32</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PropertyType.Int32">
            <summary>	
            <para>A signed 32-bit integer.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PROPERTY_TYPE_INT32']/*"/>	
            <unmanaged>D2D1_PROPERTY_TYPE_INT32</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PropertyType.Float">
            <summary>	
            <para>A 32-bit float.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PROPERTY_TYPE_FLOAT']/*"/>	
            <unmanaged>D2D1_PROPERTY_TYPE_FLOAT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PropertyType.Vector2">
            <summary>	
            <para>Two 32-bit float values.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PROPERTY_TYPE_VECTOR2']/*"/>	
            <unmanaged>D2D1_PROPERTY_TYPE_VECTOR2</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PropertyType.Vector3">
            <summary>	
            <para> Three 32-bit float values.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PROPERTY_TYPE_VECTOR3']/*"/>	
            <unmanaged>D2D1_PROPERTY_TYPE_VECTOR3</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PropertyType.Vector4">
            <summary>	
            <para>Four 32-bit float values.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PROPERTY_TYPE_VECTOR4']/*"/>	
            <unmanaged>D2D1_PROPERTY_TYPE_VECTOR4</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PropertyType.Blob">
            <summary>	
            <para>An arbitrary number of bytes.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PROPERTY_TYPE_BLOB']/*"/>	
            <unmanaged>D2D1_PROPERTY_TYPE_BLOB</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PropertyType.Iunknown">
            <summary>	
            <para>A returned COM or nano-COM interface. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PROPERTY_TYPE_IUNKNOWN']/*"/>	
            <unmanaged>D2D1_PROPERTY_TYPE_IUNKNOWN</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PropertyType.Enum">
            <summary>	
            <para>An enumeration. The value should be treated as a UINT32 with a defined array of fields to specify the bindings to human-readable strings.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PROPERTY_TYPE_ENUM']/*"/>	
            <unmanaged>D2D1_PROPERTY_TYPE_ENUM</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PropertyType.Array">
            <summary>	
            <para>An enumeration. The value is the count of sub-properties in the array. The set of array elements will be contained in the sub-property.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PROPERTY_TYPE_ARRAY']/*"/>	
            <unmanaged>D2D1_PROPERTY_TYPE_ARRAY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PropertyType.Clsid">
            <summary>	
            <para>A CLSID.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PROPERTY_TYPE_CLSID']/*"/>	
            <unmanaged>D2D1_PROPERTY_TYPE_CLSID</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PropertyType.Matrix3x2">
            <summary>	
            <para>A 3x2 matrix of  float values.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PROPERTY_TYPE_MATRIX_3X2']/*"/>	
            <unmanaged>D2D1_PROPERTY_TYPE_MATRIX_3X2</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PropertyType.Matrix4x3">
            <summary>	
            <para>A 4x2 matrix of  float values.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PROPERTY_TYPE_MATRIX_4X3']/*"/>	
            <unmanaged>D2D1_PROPERTY_TYPE_MATRIX_4X3</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PropertyType.Matrix4x4">
            <summary>	
            <para>A 4x4 matrix of  float values.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PROPERTY_TYPE_MATRIX_4X4']/*"/>	
            <unmanaged>D2D1_PROPERTY_TYPE_MATRIX_4X4</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PropertyType.Matrix5x4">
            <summary>	
            <para>A 5x4 matrix of  float values.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PROPERTY_TYPE_MATRIX_5X4']/*"/>	
            <unmanaged>D2D1_PROPERTY_TYPE_MATRIX_5X4</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PropertyType.ColorContext">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PROPERTY_TYPE_COLOR_CONTEXT']/*"/>	
            <unmanaged>D2D1_PROPERTY_TYPE_COLOR_CONTEXT</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.RenderTargetType">
            <summary>	
            Describes whether a render target uses hardware or software rendering, or if Direct2D should select the rendering mode.	
            </summary>	
            <remarks>	
            Not every render target supports hardware rendering. For more information, see the Render Targets Overview.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_RENDER_TARGET_TYPE']/*"/>	
            <unmanaged>D2D1_RENDER_TARGET_TYPE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.RenderTargetType.Default">
            <summary>	
            <para>The render target uses hardware rendering, if available; otherwise, it uses software rendering.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_RENDER_TARGET_TYPE_DEFAULT']/*"/>	
            <unmanaged>D2D1_RENDER_TARGET_TYPE_DEFAULT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.RenderTargetType.Software">
            <summary>	
            <para>The render target uses software rendering only.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_RENDER_TARGET_TYPE_SOFTWARE']/*"/>	
            <unmanaged>D2D1_RENDER_TARGET_TYPE_SOFTWARE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.RenderTargetType.Hardware">
            <summary>	
            <para>The render target uses hardware rendering only. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_RENDER_TARGET_TYPE_HARDWARE']/*"/>	
            <unmanaged>D2D1_RENDER_TARGET_TYPE_HARDWARE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.RenderTargetUsage">
            <summary>	
            Describes how a render target is remoted and whether it should be GDI-compatible. This enumeration allows a bitwise combination of its member values.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_RENDER_TARGET_USAGE']/*"/>	
            <unmanaged>D2D1_RENDER_TARGET_USAGE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.RenderTargetUsage.None">
            <summary>	
            <para>The render target attempts to use Direct3D command-stream remoting and uses bitmap remoting if stream remoting fails. The render target is not GDI-compatible.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_RENDER_TARGET_USAGE_NONE']/*"/>	
            <unmanaged>D2D1_RENDER_TARGET_USAGE_NONE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.RenderTargetUsage.ForceBitmapRemoting">
            <summary>	
            <para>The render target renders content locally and sends it to the terminal services client as a bitmap. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_RENDER_TARGET_USAGE_FORCE_BITMAP_REMOTING']/*"/>	
            <unmanaged>D2D1_RENDER_TARGET_USAGE_FORCE_BITMAP_REMOTING</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.RenderTargetUsage.GdiCompatible">
            <summary>	
            <para>The render target can be used efficiently with GDI.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_RENDER_TARGET_USAGE_GDI_COMPATIBLE']/*"/>	
            <unmanaged>D2D1_RENDER_TARGET_USAGE_GDI_COMPATIBLE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.SaturationProperties">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SATURATION_PROP']/*"/>	
            <unmanaged>D2D1_SATURATION_PROP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SaturationProperties.Saturation">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SATURATION_PROP_SATURATION']/*"/>	
            <unmanaged>D2D1_SATURATION_PROP_SATURATION</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.ShadowOptimization">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SHADOW_OPTIMIZATION']/*"/>	
            <unmanaged>D2D1_SHADOW_OPTIMIZATION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ShadowOptimization.Speed">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SHADOW_OPTIMIZATION_SPEED']/*"/>	
            <unmanaged>D2D1_SHADOW_OPTIMIZATION_SPEED</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ShadowOptimization.Balanced">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SHADOW_OPTIMIZATION_BALANCED']/*"/>	
            <unmanaged>D2D1_SHADOW_OPTIMIZATION_BALANCED</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ShadowOptimization.Quality">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SHADOW_OPTIMIZATION_QUALITY']/*"/>	
            <unmanaged>D2D1_SHADOW_OPTIMIZATION_QUALITY</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.ShadowProperties">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SHADOW_PROP']/*"/>	
            <unmanaged>D2D1_SHADOW_PROP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ShadowProperties.BlurStandardDeviation">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SHADOW_PROP_BLUR_STANDARD_DEVIATION']/*"/>	
            <unmanaged>D2D1_SHADOW_PROP_BLUR_STANDARD_DEVIATION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ShadowProperties.Color">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SHADOW_PROP_COLOR']/*"/>	
            <unmanaged>D2D1_SHADOW_PROP_COLOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ShadowProperties.Optimization">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SHADOW_PROP_OPTIMIZATION']/*"/>	
            <unmanaged>D2D1_SHADOW_PROP_OPTIMIZATION</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.SpotDiffuseProperties">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SPOTDIFFUSE_PROP']/*"/>	
            <unmanaged>D2D1_SPOTDIFFUSE_PROP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SpotDiffuseProperties.LightPosition">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SPOTDIFFUSE_PROP_LIGHT_POSITION']/*"/>	
            <unmanaged>D2D1_SPOTDIFFUSE_PROP_LIGHT_POSITION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SpotDiffuseProperties.PointsAt">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SPOTDIFFUSE_PROP_POINTS_AT']/*"/>	
            <unmanaged>D2D1_SPOTDIFFUSE_PROP_POINTS_AT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SpotDiffuseProperties.Focus">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SPOTDIFFUSE_PROP_FOCUS']/*"/>	
            <unmanaged>D2D1_SPOTDIFFUSE_PROP_FOCUS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SpotDiffuseProperties.LimitingConeAngle">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SPOTDIFFUSE_PROP_LIMITING_CONE_ANGLE']/*"/>	
            <unmanaged>D2D1_SPOTDIFFUSE_PROP_LIMITING_CONE_ANGLE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SpotDiffuseProperties.DiffuseConstant">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SPOTDIFFUSE_PROP_DIFFUSE_CONSTANT']/*"/>	
            <unmanaged>D2D1_SPOTDIFFUSE_PROP_DIFFUSE_CONSTANT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SpotDiffuseProperties.SurfaceScale">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SPOTDIFFUSE_PROP_SURFACE_SCALE']/*"/>	
            <unmanaged>D2D1_SPOTDIFFUSE_PROP_SURFACE_SCALE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SpotDiffuseProperties.Color">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SPOTDIFFUSE_PROP_COLOR']/*"/>	
            <unmanaged>D2D1_SPOTDIFFUSE_PROP_COLOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SpotDiffuseProperties.KernelUnitLength">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SPOTDIFFUSE_PROP_KERNEL_UNIT_LENGTH']/*"/>	
            <unmanaged>D2D1_SPOTDIFFUSE_PROP_KERNEL_UNIT_LENGTH</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SpotDiffuseProperties.ScaleMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SPOTDIFFUSE_PROP_SCALE_MODE']/*"/>	
            <unmanaged>D2D1_SPOTDIFFUSE_PROP_SCALE_MODE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.SpotDiffuseScaleMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SPOTDIFFUSE_SCALE_MODE']/*"/>	
            <unmanaged>D2D1_SPOTDIFFUSE_SCALE_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SpotDiffuseScaleMode.NearestNeighbor">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SPOTDIFFUSE_SCALE_MODE_NEAREST_NEIGHBOR']/*"/>	
            <unmanaged>D2D1_SPOTDIFFUSE_SCALE_MODE_NEAREST_NEIGHBOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SpotDiffuseScaleMode.Linear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SPOTDIFFUSE_SCALE_MODE_LINEAR']/*"/>	
            <unmanaged>D2D1_SPOTDIFFUSE_SCALE_MODE_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SpotDiffuseScaleMode.Cubic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SPOTDIFFUSE_SCALE_MODE_CUBIC']/*"/>	
            <unmanaged>D2D1_SPOTDIFFUSE_SCALE_MODE_CUBIC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SpotDiffuseScaleMode.MultiSampleLinear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SPOTDIFFUSE_SCALE_MODE_MULTI_SAMPLE_LINEAR']/*"/>	
            <unmanaged>D2D1_SPOTDIFFUSE_SCALE_MODE_MULTI_SAMPLE_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SpotDiffuseScaleMode.Anisotropic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SPOTDIFFUSE_SCALE_MODE_ANISOTROPIC']/*"/>	
            <unmanaged>D2D1_SPOTDIFFUSE_SCALE_MODE_ANISOTROPIC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SpotDiffuseScaleMode.HighQualityCubic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SPOTDIFFUSE_SCALE_MODE_HIGH_QUALITY_CUBIC']/*"/>	
            <unmanaged>D2D1_SPOTDIFFUSE_SCALE_MODE_HIGH_QUALITY_CUBIC</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.SpotSpecularProperties">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SPOTSPECULAR_PROP']/*"/>	
            <unmanaged>D2D1_SPOTSPECULAR_PROP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SpotSpecularProperties.LightPosition">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SPOTSPECULAR_PROP_LIGHT_POSITION']/*"/>	
            <unmanaged>D2D1_SPOTSPECULAR_PROP_LIGHT_POSITION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SpotSpecularProperties.PointsAt">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SPOTSPECULAR_PROP_POINTS_AT']/*"/>	
            <unmanaged>D2D1_SPOTSPECULAR_PROP_POINTS_AT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SpotSpecularProperties.Focus">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SPOTSPECULAR_PROP_FOCUS']/*"/>	
            <unmanaged>D2D1_SPOTSPECULAR_PROP_FOCUS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SpotSpecularProperties.LimitingConeAngle">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SPOTSPECULAR_PROP_LIMITING_CONE_ANGLE']/*"/>	
            <unmanaged>D2D1_SPOTSPECULAR_PROP_LIMITING_CONE_ANGLE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SpotSpecularProperties.SpecularExponent">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SPOTSPECULAR_PROP_SPECULAR_EXPONENT']/*"/>	
            <unmanaged>D2D1_SPOTSPECULAR_PROP_SPECULAR_EXPONENT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SpotSpecularProperties.SpecularConstant">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SPOTSPECULAR_PROP_SPECULAR_CONSTANT']/*"/>	
            <unmanaged>D2D1_SPOTSPECULAR_PROP_SPECULAR_CONSTANT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SpotSpecularProperties.SurfaceScale">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SPOTSPECULAR_PROP_SURFACE_SCALE']/*"/>	
            <unmanaged>D2D1_SPOTSPECULAR_PROP_SURFACE_SCALE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SpotSpecularProperties.Color">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SPOTSPECULAR_PROP_COLOR']/*"/>	
            <unmanaged>D2D1_SPOTSPECULAR_PROP_COLOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SpotSpecularProperties.KernelUnitLength">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SPOTSPECULAR_PROP_KERNEL_UNIT_LENGTH']/*"/>	
            <unmanaged>D2D1_SPOTSPECULAR_PROP_KERNEL_UNIT_LENGTH</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SpotSpecularProperties.ScaleMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SPOTSPECULAR_PROP_SCALE_MODE']/*"/>	
            <unmanaged>D2D1_SPOTSPECULAR_PROP_SCALE_MODE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.SpotSpecularScaleMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SPOTSPECULAR_SCALE_MODE']/*"/>	
            <unmanaged>D2D1_SPOTSPECULAR_SCALE_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SpotSpecularScaleMode.NearestNeighbor">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SPOTSPECULAR_SCALE_MODE_NEAREST_NEIGHBOR']/*"/>	
            <unmanaged>D2D1_SPOTSPECULAR_SCALE_MODE_NEAREST_NEIGHBOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SpotSpecularScaleMode.Linear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SPOTSPECULAR_SCALE_MODE_LINEAR']/*"/>	
            <unmanaged>D2D1_SPOTSPECULAR_SCALE_MODE_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SpotSpecularScaleMode.Cubic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SPOTSPECULAR_SCALE_MODE_CUBIC']/*"/>	
            <unmanaged>D2D1_SPOTSPECULAR_SCALE_MODE_CUBIC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SpotSpecularScaleMode.MultiSampleLinear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SPOTSPECULAR_SCALE_MODE_MULTI_SAMPLE_LINEAR']/*"/>	
            <unmanaged>D2D1_SPOTSPECULAR_SCALE_MODE_MULTI_SAMPLE_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SpotSpecularScaleMode.Anisotropic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SPOTSPECULAR_SCALE_MODE_ANISOTROPIC']/*"/>	
            <unmanaged>D2D1_SPOTSPECULAR_SCALE_MODE_ANISOTROPIC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SpotSpecularScaleMode.HighQualityCubic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SPOTSPECULAR_SCALE_MODE_HIGH_QUALITY_CUBIC']/*"/>	
            <unmanaged>D2D1_SPOTSPECULAR_SCALE_MODE_HIGH_QUALITY_CUBIC</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.StrokeTransformType">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            It is important to distinguish between the geometry being stroked and the shape of the stroke pen. When <see cref="F:SharpDX.Direct2D1.StrokeTransformType.Fixed"/> or <see cref="F:SharpDX.Direct2D1.StrokeTransformType.Hairline"/> is specified, the geometry still respects the transform and dpi, but the pen that traces the geometry will not.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_STROKE_TRANSFORM_TYPE']/*"/>	
            <unmanaged>D2D1_STROKE_TRANSFORM_TYPE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.StrokeTransformType.Normal">
            <summary>	
            <para>The stroke respects the currently set world transform, the dpi, and the stroke width.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_STROKE_TRANSFORM_TYPE_NORMAL']/*"/>	
            <unmanaged>D2D1_STROKE_TRANSFORM_TYPE_NORMAL</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.StrokeTransformType.Fixed">
            <summary>	
            <para>The stroke does not respect the world transform but it does respect the dpi and stroke width.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_STROKE_TRANSFORM_TYPE_FIXED']/*"/>	
            <unmanaged>D2D1_STROKE_TRANSFORM_TYPE_FIXED</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.StrokeTransformType.Hairline">
            <summary>	
            <para>The stroke is forced to 1 pixel wide (in device space) and does not respect the world transform, the dpi, or the stroke width.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_STROKE_TRANSFORM_TYPE_HAIRLINE']/*"/>	
            <unmanaged>D2D1_STROKE_TRANSFORM_TYPE_HAIRLINE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.SubProperty">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SUBPROPERTY']/*"/>	
            <unmanaged>D2D1_SUBPROPERTY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SubProperty.Displayname">
            <summary>	
            <para>The name for the parent property.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SUBPROPERTY_DISPLAYNAME']/*"/>	
            <unmanaged>D2D1_SUBPROPERTY_DISPLAYNAME</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SubProperty.Isreadonly">
            <summary>	
            <para>A Boolean indicating whether the parent property is writeable.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SUBPROPERTY_ISREADONLY']/*"/>	
            <unmanaged>D2D1_SUBPROPERTY_ISREADONLY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SubProperty.Minimum">
            <summary>	
            <para>The minimum value that can be set to the parent property.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SUBPROPERTY_MIN']/*"/>	
            <unmanaged>D2D1_SUBPROPERTY_MIN</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SubProperty.Maximum">
            <summary>	
            <para>The maximum value that can be set to the parent property.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SUBPROPERTY_MAX']/*"/>	
            <unmanaged>D2D1_SUBPROPERTY_MAX</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SubProperty.Default">
            <summary>	
            <para>The default value of the parent property.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SUBPROPERTY_DEFAULT']/*"/>	
            <unmanaged>D2D1_SUBPROPERTY_DEFAULT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SubProperty.Fields">
            <summary>	
            <para>An array of name/index pairs that indicate the possible values that can be set to the parent property.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SUBPROPERTY_FIELDS']/*"/>	
            <unmanaged>D2D1_SUBPROPERTY_FIELDS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SubProperty.Index">
            <summary>	
            <para>An index sub-property used by the elements of the <see cref="F:SharpDX.Direct2D1.SubProperty.Fields"/> array.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SUBPROPERTY_INDEX']/*"/>	
            <unmanaged>D2D1_SUBPROPERTY_INDEX</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.SweepDirection">
            <summary>	
            Defines the direction that an elliptical arc is drawn.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SWEEP_DIRECTION']/*"/>	
            <unmanaged>D2D1_SWEEP_DIRECTION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SweepDirection.CounterClockwise">
            <summary>	
            <para> Arcs are drawn in a counterclockwise (negative-angle) direction. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SWEEP_DIRECTION_COUNTER_CLOCKWISE']/*"/>	
            <unmanaged>D2D1_SWEEP_DIRECTION_COUNTER_CLOCKWISE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.SweepDirection.Clockwise">
            <summary>	
            <para> Arcs are drawn in a clockwise (positive-angle) direction. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_SWEEP_DIRECTION_CLOCKWISE']/*"/>	
            <unmanaged>D2D1_SWEEP_DIRECTION_CLOCKWISE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.TableTransferProperties">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_TABLETRANSFER_PROP']/*"/>	
            <unmanaged>D2D1_TABLETRANSFER_PROP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.TableTransferProperties.RedTable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_TABLETRANSFER_PROP_RED_TABLE']/*"/>	
            <unmanaged>D2D1_TABLETRANSFER_PROP_RED_TABLE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.TableTransferProperties.RedDisable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_TABLETRANSFER_PROP_RED_DISABLE']/*"/>	
            <unmanaged>D2D1_TABLETRANSFER_PROP_RED_DISABLE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.TableTransferProperties.GreenTable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_TABLETRANSFER_PROP_GREEN_TABLE']/*"/>	
            <unmanaged>D2D1_TABLETRANSFER_PROP_GREEN_TABLE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.TableTransferProperties.GreenDisable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_TABLETRANSFER_PROP_GREEN_DISABLE']/*"/>	
            <unmanaged>D2D1_TABLETRANSFER_PROP_GREEN_DISABLE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.TableTransferProperties.BlueTable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_TABLETRANSFER_PROP_BLUE_TABLE']/*"/>	
            <unmanaged>D2D1_TABLETRANSFER_PROP_BLUE_TABLE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.TableTransferProperties.BlueDisable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_TABLETRANSFER_PROP_BLUE_DISABLE']/*"/>	
            <unmanaged>D2D1_TABLETRANSFER_PROP_BLUE_DISABLE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.TableTransferProperties.AlphaTable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_TABLETRANSFER_PROP_ALPHA_TABLE']/*"/>	
            <unmanaged>D2D1_TABLETRANSFER_PROP_ALPHA_TABLE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.TableTransferProperties.AlphaDisable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_TABLETRANSFER_PROP_ALPHA_DISABLE']/*"/>	
            <unmanaged>D2D1_TABLETRANSFER_PROP_ALPHA_DISABLE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.TextAntialiasMode">
            <summary>	
            Describes the antialiasing mode used for drawing text.	
            </summary>	
            <remarks>	
            This enumeration is used with the SetTextAntialiasMode of an <see cref="T:SharpDX.Direct2D1.RenderTarget"/> to specify how text and glyphs are antialiased.By default, Direct2D renders text in ClearType mode. Factors that  can downgrade the default quality to grayscale or aliased:If the <see cref="T:SharpDX.DirectWrite.RenderingMode"/> value  is <see cref="F:SharpDX.DirectWrite.RenderingMode.Aliased"/> , then the  default text antialiasing mode is aliased.  To change the DirectWrite rendering mode of an <see cref="T:SharpDX.Direct2D1.RenderTarget"/>, use the  <see cref="M:SharpDX.Direct2D1.RenderTarget.SetTextRenderingParams(SharpDX.DirectWrite.RenderingParams)"/> method.  If the <see cref="T:SharpDX.DirectWrite.RenderingMode"/> value is <see cref="F:SharpDX.DirectWrite.RenderingMode.Outline"/>, then the default text  antialiasing mode is grayscale. If the render target has an alpha channel and is not set to <see cref="F:SharpDX.Direct2D1.AlphaMode.Ignore"/>, then  the default text antialiasing mode is grayscale. If <see cref="M:SharpDX.Direct2D1.RenderTarget.PushLayer(SharpDX.Direct2D1.LayerParameters@,SharpDX.Direct2D1.Layer)"/> is called without <see cref="F:SharpDX.Direct2D1.LayerOptions.InitializeForCleartype"/> (and the corresponding PopLayer has not  been called yet), then the default text  antialiasing mode is grayscale.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_TEXT_ANTIALIAS_MODE']/*"/>	
            <unmanaged>D2D1_TEXT_ANTIALIAS_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.TextAntialiasMode.Default">
            <summary>	
            <para>Use the system default. See Remarks.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_TEXT_ANTIALIAS_MODE_DEFAULT']/*"/>	
            <unmanaged>D2D1_TEXT_ANTIALIAS_MODE_DEFAULT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.TextAntialiasMode.Cleartype">
            <summary>	
            <para>Use ClearType antialiasing.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_TEXT_ANTIALIAS_MODE_CLEARTYPE']/*"/>	
            <unmanaged>D2D1_TEXT_ANTIALIAS_MODE_CLEARTYPE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.TextAntialiasMode.Grayscale">
            <summary>	
            <para>Use grayscale antialiasing.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_TEXT_ANTIALIAS_MODE_GRAYSCALE']/*"/>	
            <unmanaged>D2D1_TEXT_ANTIALIAS_MODE_GRAYSCALE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.TextAntialiasMode.Aliased">
            <summary>	
            <para>Do not use antialiasing.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_TEXT_ANTIALIAS_MODE_ALIASED']/*"/>	
            <unmanaged>D2D1_TEXT_ANTIALIAS_MODE_ALIASED</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.ThreadingMode">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_THREADING_MODE']/*"/>	
            <unmanaged>D2D1_THREADING_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ThreadingMode.SingleThreaded">
            <summary>	
            <para>The created objects can be used in a rental-threaded manner.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_THREADING_MODE_SINGLE_THREADED']/*"/>	
            <unmanaged>D2D1_THREADING_MODE_SINGLE_THREADED</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ThreadingMode.MultiThreaded">
            <summary>	
            <para>The created objects will be free threaded.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_THREADING_MODE_MULTI_THREADED']/*"/>	
            <unmanaged>D2D1_THREADING_MODE_MULTI_THREADED</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.TileProperties">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_TILE_PROP']/*"/>	
            <unmanaged>D2D1_TILE_PROP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.TileProperties.Rect">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_TILE_PROP_RECT']/*"/>	
            <unmanaged>D2D1_TILE_PROP_RECT</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.Transform3DInterpolationMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_3DTRANSFORM_INTERPOLATION_MODE']/*"/>	
            <unmanaged>D2D1_3DTRANSFORM_INTERPOLATION_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Transform3DInterpolationMode.NearestNeighbor">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_3DTRANSFORM_INTERPOLATION_MODE_NEAREST_NEIGHBOR']/*"/>	
            <unmanaged>D2D1_3DTRANSFORM_INTERPOLATION_MODE_NEAREST_NEIGHBOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Transform3DInterpolationMode.Linear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_3DTRANSFORM_INTERPOLATION_MODE_LINEAR']/*"/>	
            <unmanaged>D2D1_3DTRANSFORM_INTERPOLATION_MODE_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Transform3DInterpolationMode.Cubic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_3DTRANSFORM_INTERPOLATION_MODE_CUBIC']/*"/>	
            <unmanaged>D2D1_3DTRANSFORM_INTERPOLATION_MODE_CUBIC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Transform3DInterpolationMode.MultiSampleLinear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_3DTRANSFORM_INTERPOLATION_MODE_MULTI_SAMPLE_LINEAR']/*"/>	
            <unmanaged>D2D1_3DTRANSFORM_INTERPOLATION_MODE_MULTI_SAMPLE_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Transform3DInterpolationMode.Anisotropic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_3DTRANSFORM_INTERPOLATION_MODE_ANISOTROPIC']/*"/>	
            <unmanaged>D2D1_3DTRANSFORM_INTERPOLATION_MODE_ANISOTROPIC</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.Transform3DProperties">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_3DTRANSFORM_PROP']/*"/>	
            <unmanaged>D2D1_3DTRANSFORM_PROP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Transform3DProperties.InterpolationMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_3DTRANSFORM_PROP_INTERPOLATION_MODE']/*"/>	
            <unmanaged>D2D1_3DTRANSFORM_PROP_INTERPOLATION_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Transform3DProperties.BorderMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_3DTRANSFORM_PROP_BORDER_MODE']/*"/>	
            <unmanaged>D2D1_3DTRANSFORM_PROP_BORDER_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Transform3DProperties.TransformMatrix">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_3DTRANSFORM_PROP_TRANSFORM_MATRIX']/*"/>	
            <unmanaged>D2D1_3DTRANSFORM_PROP_TRANSFORM_MATRIX</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.TurbulenceNoise">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_TURBULENCE_NOISE']/*"/>	
            <unmanaged>D2D1_TURBULENCE_NOISE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.TurbulenceNoise.FractalSum">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_TURBULENCE_NOISE_FRACTAL_SUM']/*"/>	
            <unmanaged>D2D1_TURBULENCE_NOISE_FRACTAL_SUM</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.TurbulenceNoise.Turbulence">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_TURBULENCE_NOISE_TURBULENCE']/*"/>	
            <unmanaged>D2D1_TURBULENCE_NOISE_TURBULENCE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.TurbulenceProperties">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_TURBULENCE_PROP']/*"/>	
            <unmanaged>D2D1_TURBULENCE_PROP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.TurbulenceProperties.Offset">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_TURBULENCE_PROP_OFFSET']/*"/>	
            <unmanaged>D2D1_TURBULENCE_PROP_OFFSET</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.TurbulenceProperties.Size">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_TURBULENCE_PROP_SIZE']/*"/>	
            <unmanaged>D2D1_TURBULENCE_PROP_SIZE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.TurbulenceProperties.BaseFrequency">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_TURBULENCE_PROP_BASE_FREQUENCY']/*"/>	
            <unmanaged>D2D1_TURBULENCE_PROP_BASE_FREQUENCY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.TurbulenceProperties.NumOctaves">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_TURBULENCE_PROP_NUM_OCTAVES']/*"/>	
            <unmanaged>D2D1_TURBULENCE_PROP_NUM_OCTAVES</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.TurbulenceProperties.Seed">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_TURBULENCE_PROP_SEED']/*"/>	
            <unmanaged>D2D1_TURBULENCE_PROP_SEED</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.TurbulenceProperties.Noise">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_TURBULENCE_PROP_NOISE']/*"/>	
            <unmanaged>D2D1_TURBULENCE_PROP_NOISE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.TurbulenceProperties.Stitchable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_TURBULENCE_PROP_STITCHABLE']/*"/>	
            <unmanaged>D2D1_TURBULENCE_PROP_STITCHABLE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.UnitMode">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            Setting the unit mode to <see cref="F:SharpDX.Direct2D1.UnitMode.Pixels"/> is the same as setting the <see cref="T:SharpDX.Direct2D1.DeviceContext"/> dots per inch (dpi) to 96. However, when the unit mode is restored, the dpi will be remembered.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_UNIT_MODE']/*"/>	
            <unmanaged>D2D1_UNIT_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.UnitMode.Dips">
            <summary>	
            <para>Units will be interpreted as device-independent pixels (1/96").</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_UNIT_MODE_DIPS']/*"/>	
            <unmanaged>D2D1_UNIT_MODE_DIPS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.UnitMode.Pixels">
            <summary>	
            <para>Units will be interpreted as pixels.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_UNIT_MODE_PIXELS']/*"/>	
            <unmanaged>D2D1_UNIT_MODE_PIXELS</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.VertexOptions">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_VERTEX_OPTIONS']/*"/>	
            <unmanaged>D2D1_VERTEX_OPTIONS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.VertexOptions.None">
            <summary>	
            <para>The logical equivalent of having no flags set.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_VERTEX_OPTIONS_NONE']/*"/>	
            <unmanaged>D2D1_VERTEX_OPTIONS_NONE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.VertexOptions.DoNotClear">
            <summary>	
            <para>If this flag is set, the renderer  assumes that the vertex shader will cover the entire region of interest with vertices and need not clear the destination render target. If this flag is not set, the renderer assumes that the vertices do not cover the entire region interest and must clear the render target to transparent black first.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_VERTEX_OPTIONS_DO_NOT_CLEAR']/*"/>	
            <unmanaged>D2D1_VERTEX_OPTIONS_DO_NOT_CLEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.VertexOptions.UseDepthBuffer">
            <summary>	
            <para>The renderer will use a depth buffer when rendering custom vertices. The depth buffer will be used for calculating occlusion information. This can result in the renderer output being draw-order dependent if it contains transparency.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_VERTEX_OPTIONS_USE_DEPTH_BUFFER']/*"/>	
            <unmanaged>D2D1_VERTEX_OPTIONS_USE_DEPTH_BUFFER</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.VertexOptions.AssumeNoOverlap">
            <summary>	
            <para>Indicates that custom vertices do not overlap each other.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_VERTEX_OPTIONS_ASSUME_NO_OVERLAP']/*"/>	
            <unmanaged>D2D1_VERTEX_OPTIONS_ASSUME_NO_OVERLAP</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.VertexUsage">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            If a dynamic vertex buffer is created, Direct2D will not necessarily map the buffer directly to a Microsoft Direct3D vertex buffer. Instead, a system memory copy can be copied to the rendering engine vertex buffer as the effects are rendered.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_VERTEX_USAGE']/*"/>	
            <unmanaged>D2D1_VERTEX_USAGE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.VertexUsage.Static">
            <summary>	
            <para>The created vertex buffer is updated infrequently.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_VERTEX_USAGE_STATIC']/*"/>	
            <unmanaged>D2D1_VERTEX_USAGE_STATIC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.VertexUsage.Dynamic">
            <summary>	
            <para>The created vertex buffer is changed frequently.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_VERTEX_USAGE_DYNAMIC']/*"/>	
            <unmanaged>D2D1_VERTEX_USAGE_DYNAMIC</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.WindowState">
            <summary>	
            Describes whether a window is occluded.	
            </summary>	
            <remarks>	
            If the window was occluded the last time  EndDraw was called, the next time the render target calls CheckWindowState, it  returns <see cref="F:SharpDX.Direct2D1.WindowState.Occluded"/> regardless of the current window state. If you want to use CheckWindowState to check the current window state, call CheckWindowState after every EndDraw call and ignore its return value. This will ensure that your next call to CheckWindowState state  returns the actual window state.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_WINDOW_STATE']/*"/>	
            <unmanaged>D2D1_WINDOW_STATE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.WindowState.None">
            <summary>	
            <para>The window is not occluded.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_WINDOW_STATE_NONE']/*"/>	
            <unmanaged>D2D1_WINDOW_STATE_NONE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.WindowState.Occluded">
            <summary>	
            <para>The window is occluded.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_WINDOW_STATE_OCCLUDED']/*"/>	
            <unmanaged>D2D1_WINDOW_STATE_OCCLUDED</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.D2D1">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.Direct2D1.D2D1']/*"/>	
        </member>
        <member name="M:SharpDX.Direct2D1.D2D1.InvertMatrix(SharpDX.Matrix3x2@)">
            <summary>	
            Tries to invert the specified matrix.	
            </summary>	
            <param name="matrix"><para>The matrix to invert.</para></param>	
            <returns>true if the matrix was inverted; otherwise, false.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1InvertMatrix']/*"/>	
            <unmanaged>BOOL D2D1InvertMatrix([InOut] D2D_MATRIX_3X2_F* matrix)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.D2D1.IsMatrixInvertible(SharpDX.Matrix3x2@)">
            <summary>	
            Indicates whether the specified matrix is invertible.	
            </summary>	
            <param name="matrix"><para>The matrix to test.</para></param>	
            <returns>true if the matrix was inverted; otherwise, false.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1IsMatrixInvertible']/*"/>	
            <unmanaged>BOOL D2D1IsMatrixInvertible([In] const D2D_MATRIX_3X2_F* matrix)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.D2D1.MakeRotateMatrix(System.Single,SharpDX.DrawingPointF,SharpDX.Matrix3x2@)">
            <summary>	
            Creates a rotation transformation that rotates by the specified angle about the specified point.	
            </summary>	
            <param name="angle"><para>The clockwise rotation angle, in degrees. </para></param>	
            <param name="center"><para>The point about which to rotate.</para></param>	
            <param name="matrix"><para>When this method returns, contains the new rotation transformation. You must allocate storage for this parameter.  </para></param>	
            <remarks>	
            Rotation occurs in the plane of the 2-D surface.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1MakeRotateMatrix']/*"/>	
            <unmanaged>void D2D1MakeRotateMatrix([In] float angle,[In] D2D_POINT_2F center,[Out] D2D_MATRIX_3X2_F* matrix)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.D2D1.CreateFactory(SharpDX.Direct2D1.FactoryType,System.Guid,System.Nullable{SharpDX.Direct2D1.FactoryOptions},System.IntPtr@)">
            <summary>	
            Creates a factory object  that can be used to create Direct2D resources.	
            </summary>	
            <param name="factoryType"><para>The threading model of the factory and the resources it creates.</para></param>	
            <param name="riid"><para>A reference to the IID of <see cref="T:SharpDX.Direct2D1.Factory"/> that is obtained by using __uuidof(<see cref="T:SharpDX.Direct2D1.Factory"/>).</para></param>	
            <param name="factoryOptionsRef"><para>The level of detail provided to the debugging layer.</para></param>	
            <param name="iFactoryOut"><para>When this method returns, contains the address to a reference to the new factory.</para></param>	
            <returns>If this function succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The <see cref="T:SharpDX.Direct2D1.Factory"/> interface provides the starting point for  Direct2D. In general, objects created from a single instance of a factory object can be used with other resources created from that instance, but not with resources created by other factory instances.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1CreateFactory']/*"/>	
            <unmanaged>HRESULT D2D1CreateFactory([In] D2D1_FACTORY_TYPE factoryType,[In] const GUID&amp; riid,[In, Optional] const D2D1_FACTORY_OPTIONS* pFactoryOptions,[Out] void** ppIFactory)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.D2D1.MakeSkewMatrix(System.Single,System.Single,SharpDX.DrawingPointF,SharpDX.Matrix3x2@)">
            <summary>	
            Creates a skew transformation that has the specified x-axis angle, y-axis angle, and center point.	
            </summary>	
            <param name="angleX"><para>The x-axis skew angle, which is measured in degrees counterclockwise from the y-axis.</para></param>	
            <param name="angleY"><para>The y-axis skew angle, which is measured in degrees counterclockwise from the x-axis.</para></param>	
            <param name="center"><para>The center point of the skew operation.</para></param>	
            <param name="matrix"><para>When this method returns, contains the rotation transformation. You must allocate storate for this parameter.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1MakeSkewMatrix']/*"/>	
            <unmanaged>void D2D1MakeSkewMatrix([In] float angleX,[In] float angleY,[In] D2D_POINT_2F center,[Out] D2D_MATRIX_3X2_F* matrix)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.D2D1.SinCos(System.Single,System.Single@,System.Single@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="angle">No documentation.</param>	
            <param name="s">No documentation.</param>	
            <param name="c">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1SinCos']/*"/>	
            <unmanaged>void D2D1SinCos([In] float angle,[Out] float* s,[Out] float* c)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.D2D1.CreateDeviceContext(SharpDX.DXGI.Surface,System.Nullable{SharpDX.Direct2D1.CreationProperties},SharpDX.Direct2D1.DeviceContext)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="dxgiSurface"><para>The DXGI surface the Direct2D device context is associated with.</para></param>	
            <param name="creationProperties"><para>The properties to apply to the Direct2D device context.</para></param>	
            <param name="d2dDeviceContext"><para>When this function returns, contains the address of a reference to a Direct2D device context.</para></param>	
            <returns>The function returns an <see cref="T:SharpDX.Result"/>. Possible values include, but are not limited to, those in the following table.HRESULTDescription S_OKNo error occurred. E_OUTOFMEMORYDirect2D could not allocate sufficient memory to complete the call. E_INVALIDARGAn invalid value was passed to the method.?</returns>	
            <remarks>	
            This function will also create a new <see cref="T:SharpDX.Direct2D1.Factory1"/> that can be retrieved through <see cref="M:SharpDX.Direct2D1.Resource.GetFactory(SharpDX.Direct2D1.Factory@)"/>.This function will also create a new <see cref="T:SharpDX.Direct2D1.Device"/> that can be retrieved through <see cref="M:SharpDX.Direct2D1.DeviceContext.GetDevice(SharpDX.Direct2D1.Device@)"/>.The DXGI device will be specified implicitly through dxgiSurface.The created device context will have exactly the same behavior as if ID2D1DeviceContext::SetTargetSurface were called with the corresponding surface.If creationProperties are not specified, the Direct2D device will inherit its threading mode from the DXGI device implied by dxgiSurface and debug tracing will not be enabled.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1CreateDeviceContext']/*"/>	
            <unmanaged>HRESULT D2D1CreateDeviceContext([In] IDXGISurface* dxgiSurface,[In, Optional] const D2D1_CREATION_PROPERTIES* creationProperties,[Out, Fast] ID2D1DeviceContext** d2dDeviceContext)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.D2D1.CreateDevice(SharpDX.DXGI.Device,System.Nullable{SharpDX.Direct2D1.CreationProperties},SharpDX.Direct2D1.Device)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="dxgiDevice"><para>The DXGI device the Direct2D device is associated with.</para></param>	
            <param name="creationProperties"><para>The properties to apply to the Direct2D device.</para></param>	
            <param name="d2dDevice"><para>When this function returns, contains the address of a reference to a Direct2D device.</para></param>	
            <returns>The function returns an <see cref="T:SharpDX.Result"/>. Possible values include, but are not limited to, those in the following table.HRESULTDescription S_OKNo error occurred. E_OUTOFMEMORYDirect2D could not allocate sufficient memory to complete the call. E_INVALIDARGAn invalid value was passed to the method.?</returns>	
            <remarks>	
            This function will also create a new <see cref="T:SharpDX.Direct2D1.Factory1"/> that can be retrieved through <see cref="M:SharpDX.Direct2D1.Resource.GetFactory(SharpDX.Direct2D1.Factory@)"/>.If the creation properties are not specified, then d2dDevice will inherit its threading mode from dxgiDevice and debug tracing will not be enabled.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1CreateDevice']/*"/>	
            <unmanaged>HRESULT D2D1CreateDevice([In] IDXGIDevice* dxgiDevice,[In, Optional] const D2D1_CREATION_PROPERTIES* creationProperties,[Out, Fast] ID2D1Device** d2dDevice)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.D2D1.Tan(System.Single)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="angle">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1Tan']/*"/>	
            <unmanaged>float D2D1Tan([In] float angle)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.D2D1.ConvertColorSpace(SharpDX.Direct2D1.ColorSpace,SharpDX.Direct2D1.ColorSpace,SharpDX.Color4)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="sourceColorSpace">No documentation.</param>	
            <param name="destinationColorSpace">No documentation.</param>	
            <param name="color">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1ConvertColorSpace']/*"/>	
            <unmanaged>D2D_COLOR_F D2D1ConvertColorSpace([In] D2D1_COLOR_SPACE sourceColorSpace,[In] D2D1_COLOR_SPACE destinationColorSpace,[In] const D2D_COLOR_F* color)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.D2D1.Vec3Length(System.Single,System.Single,System.Single)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="x">No documentation.</param>	
            <param name="y">No documentation.</param>	
            <param name="z">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1Vec3Length']/*"/>	
            <unmanaged>float D2D1Vec3Length([In] float x,[In] float y,[In] float z)</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.AnalysisTransform">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1AnalysisTransform']/*"/>	
            <unmanaged>ID2D1AnalysisTransform</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.AnalysisTransform.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.AnalysisTransform"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.AnalysisTransform.ProcessAnalysisResults(System.Byte[],System.Int32)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="analysisData"><para>The data that the transform will analyze.</para></param>	
            <param name="analysisDataCount"><para>The size of the analysis data.</para></param>	
            <returns>If the method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. If it fails, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The output of the transform will be copied to CPU-accessible memory by the imaging effects system before being passed to the implementation.If this call fails, the corresponding <see cref="T:SharpDX.Direct2D1.Effect"/> instance is placed into an error state and fails to draw.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1AnalysisTransform::ProcessAnalysisResults']/*"/>	
            <unmanaged>HRESULT ID2D1AnalysisTransform::ProcessAnalysisResults([In, Buffer] const unsigned char* analysisData,[In] unsigned int analysisDataCount)</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.BlendTransform">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1BlendTransform']/*"/>	
            <unmanaged>ID2D1BlendTransform</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.ConcreteTransform">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1ConcreteTransform']/*"/>	
            <unmanaged>ID2D1ConcreteTransform</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.TransformNode">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1TransformNode']/*"/>	
            <unmanaged>ID2D1TransformNode</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.TransformNode.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.TransformNode"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.TransformNode.GetInputCount">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <returns>This method returns the number of inputs to this transform node.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1TransformNode::GetInputCount']/*"/>	
            <unmanaged>unsigned int ID2D1TransformNode::GetInputCount()</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct2D1.TransformNode.InputCount">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1TransformNode::GetInputCount']/*"/>	
            <unmanaged>GetInputCount</unmanaged>	
            <unmanaged>unsigned int ID2D1TransformNode::GetInputCount()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.ConcreteTransform.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.ConcreteTransform"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.ConcreteTransform.SetOutputBuffer(SharpDX.Direct2D1.BufferPrecision,SharpDX.Direct2D1.ChannelDepth)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="bufferPrecision"><para>The number of bits and the type of the output buffer.</para></param>	
            <param name="channelDepth"><para>The number of channels in the output buffer (1 or 4).</para></param>	
            <returns>The method returns an <see cref="T:SharpDX.Result"/>. Possible values include, but are not limited to, those in the following table.HRESULTDescription S_OKNo error occurred. E_INVALIDARGOne or more arguments are not valid?</returns>	
            <remarks>	
            The available channel depth and precision depend on the capabilities of the underlying Microsoft Direct3D device.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1ConcreteTransform::SetOutputBuffer']/*"/>	
            <unmanaged>HRESULT ID2D1ConcreteTransform::SetOutputBuffer([In] D2D1_BUFFER_PRECISION bufferPrecision,[In] D2D1_CHANNEL_DEPTH channelDepth)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.ConcreteTransform.SetCached(System.Boolean)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="isCached"><para>TRUE if the output should be cached; otherwise,  <see cref="F:SharpDX.Result.False"/>.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1ConcreteTransform::SetCached']/*"/>	
            <unmanaged>void ID2D1ConcreteTransform::SetCached([In] BOOL isCached)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct2D1.ConcreteTransform.Cached">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1ConcreteTransform::SetCached']/*"/>	
            <unmanaged>SetCached</unmanaged>	
            <unmanaged>void ID2D1ConcreteTransform::SetCached([In] BOOL isCached)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.BlendTransform.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.BlendTransform"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.BlendTransform.SetDescription(SharpDX.Direct2D1.BlendDescription@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="description"><para>The new blend description specified for the blend transform.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1BlendTransform::SetDescription']/*"/>	
            <unmanaged>void ID2D1BlendTransform::SetDescription([In] const D2D1_BLEND_DESCRIPTION* description)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.BlendTransform.GetDescription(SharpDX.Direct2D1.BlendDescription@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="description">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1BlendTransform::GetDescription']/*"/>	
            <unmanaged>void ID2D1BlendTransform::GetDescription([Out] D2D1_BLEND_DESCRIPTION* description)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct2D1.BlendTransform.Description">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1BlendTransform::GetDescription']/*"/>	
            <unmanaged>GetDescription</unmanaged>	
            <unmanaged>void ID2D1BlendTransform::GetDescription([Out] D2D1_BLEND_DESCRIPTION* description)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.BorderTransform">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1BorderTransform']/*"/>	
            <unmanaged>ID2D1BorderTransform</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.BorderTransform.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.BorderTransform"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.BorderTransform.SetExtendModeX(SharpDX.Direct2D1.ExtendMode)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="extendMode">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1BorderTransform::SetExtendModeX']/*"/>	
            <unmanaged>void ID2D1BorderTransform::SetExtendModeX([In] D2D1_EXTEND_MODE extendMode)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.BorderTransform.SetExtendModeY(SharpDX.Direct2D1.ExtendMode)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="extendMode">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1BorderTransform::SetExtendModeY']/*"/>	
            <unmanaged>void ID2D1BorderTransform::SetExtendModeY([In] D2D1_EXTEND_MODE extendMode)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.BorderTransform.GetExtendModeX">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <returns>This method returns the extend mode in the x direction.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1BorderTransform::GetExtendModeX']/*"/>	
            <unmanaged>D2D1_EXTEND_MODE ID2D1BorderTransform::GetExtendModeX()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.BorderTransform.GetExtendModeY">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <returns>This method returns the extend mode in the y direction.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1BorderTransform::GetExtendModeY']/*"/>	
            <unmanaged>D2D1_EXTEND_MODE ID2D1BorderTransform::GetExtendModeY()</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct2D1.BorderTransform.ExtendModeX">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1BorderTransform::GetExtendModeX']/*"/>	
            <unmanaged>GetExtendModeX</unmanaged>	
            <unmanaged>D2D1_EXTEND_MODE ID2D1BorderTransform::GetExtendModeX()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.BorderTransform.ExtendModeY">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1BorderTransform::GetExtendModeY']/*"/>	
            <unmanaged>GetExtendModeY</unmanaged>	
            <unmanaged>D2D1_EXTEND_MODE ID2D1BorderTransform::GetExtendModeY()</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.BoundsAdjustmentTransform">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1BoundsAdjustmentTransform']/*"/>	
            <unmanaged>ID2D1BoundsAdjustmentTransform</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.BoundsAdjustmentTransform.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.BoundsAdjustmentTransform"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.BoundsAdjustmentTransform.SetOutputBounds(SharpDX.Rectangle)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="outputBounds">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1BoundsAdjustmentTransform::SetOutputBounds']/*"/>	
            <unmanaged>void ID2D1BoundsAdjustmentTransform::SetOutputBounds([In] const RECT* outputBounds)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.BoundsAdjustmentTransform.GetOutputBounds(SharpDX.Rectangle@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="outputBounds">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1BoundsAdjustmentTransform::GetOutputBounds']/*"/>	
            <unmanaged>void ID2D1BoundsAdjustmentTransform::GetOutputBounds([Out] RECT* outputBounds)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct2D1.BoundsAdjustmentTransform.OutputBounds">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1BoundsAdjustmentTransform::GetOutputBounds']/*"/>	
            <unmanaged>GetOutputBounds</unmanaged>	
            <unmanaged>void ID2D1BoundsAdjustmentTransform::GetOutputBounds([Out] RECT* outputBounds)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.ColorContext">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1ColorContext']/*"/>	
            <unmanaged>ID2D1ColorContext</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.ColorContext.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.ColorContext"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.ColorContext.GetColorSpace">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1ColorContext::GetColorSpace']/*"/>	
            <unmanaged>D2D1_COLOR_SPACE ID2D1ColorContext::GetColorSpace()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.ColorContext.GetProfileSize">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <returns>This method returns the  size of the profile in bytes.</returns>	
            <remarks>	
            This can be used to allocate a buffer to receive the color profile bytes associated with the context.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1ColorContext::GetProfileSize']/*"/>	
            <unmanaged>unsigned int ID2D1ColorContext::GetProfileSize()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.ColorContext.GetProfile(System.Byte[],System.Int32)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="rofileRef">No documentation.</param>	
            <param name="profileSize">No documentation.</param>	
            <returns>The method returns an <see cref="T:SharpDX.Result"/>. Possible values include, but are not limited to, those in the following table.HRESULTDescription S_OKNo error occurred. D2DERR_INSUFFICIENT_BUFFERThe supplied buffer was too small to accomodate the data.?</returns>	
            <remarks>	
            If profileSize is insufficient to store the entire profile, profile is zero-initialized before this method fails.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1ColorContext::GetProfile']/*"/>	
            <unmanaged>HRESULT ID2D1ColorContext::GetProfile([Out, Buffer] unsigned char* profile,[In] unsigned int profileSize)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct2D1.ColorContext.ColorSpace">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1ColorContext::GetColorSpace']/*"/>	
            <unmanaged>GetColorSpace</unmanaged>	
            <unmanaged>D2D1_COLOR_SPACE ID2D1ColorContext::GetColorSpace()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.ColorContext.ProfileSize">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            This can be used to allocate a buffer to receive the color profile bytes associated with the context.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1ColorContext::GetProfileSize']/*"/>	
            <unmanaged>GetProfileSize</unmanaged>	
            <unmanaged>unsigned int ID2D1ColorContext::GetProfileSize()</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.CommandSink">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1CommandSink']/*"/>	
            <unmanaged>ID2D1CommandSink</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.CommandSinkNative">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1CommandSink']/*"/>	
            <unmanaged>ID2D1CommandSink</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.CommandSinkNative.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.CommandSinkNative"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.CommandSinkNative.BeginDraw_">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <returns>This method always returns <see cref="F:SharpDX.Result.Ok"/>.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1CommandSink::BeginDraw']/*"/>	
            <unmanaged>HRESULT ID2D1CommandSink::BeginDraw()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.CommandSinkNative.EndDraw_">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1CommandSink::EndDraw']/*"/>	
            <unmanaged>HRESULT ID2D1CommandSink::EndDraw()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.CommandSinkNative.SetAntialiasMode_(SharpDX.Direct2D1.AntialiasMode)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="antialiasMode">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1CommandSink::SetAntialiasMode']/*"/>	
            <unmanaged>HRESULT ID2D1CommandSink::SetAntialiasMode([In] D2D1_ANTIALIAS_MODE antialiasMode)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.CommandSinkNative.SetTags_(System.Int64,System.Int64)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="tag1"><para>The first tag to associate with the primitive.</para></param>	
            <param name="tag2"><para>The second tag to associate with the primitive.</para></param>	
            <returns>If the method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. If it fails, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1CommandSink::SetTags']/*"/>	
            <unmanaged>HRESULT ID2D1CommandSink::SetTags([In] unsigned longlong tag1,[In] unsigned longlong tag2)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.CommandSinkNative.SetTextAntialiasMode_(SharpDX.Direct2D1.TextAntialiasMode)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="textAntialiasMode">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1CommandSink::SetTextAntialiasMode']/*"/>	
            <unmanaged>HRESULT ID2D1CommandSink::SetTextAntialiasMode([In] D2D1_TEXT_ANTIALIAS_MODE textAntialiasMode)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.CommandSinkNative.SetTextRenderingParams_(SharpDX.DirectWrite.RenderingParams)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="textRenderingParams"><para>The parameters to use for text rendering.</para></param>	
            <returns>If the method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. If it fails, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1CommandSink::SetTextRenderingParams']/*"/>	
            <unmanaged>HRESULT ID2D1CommandSink::SetTextRenderingParams([In, Optional] IDWriteRenderingParams* textRenderingParams)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.CommandSinkNative.SetTransform_(SharpDX.Matrix3x2@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="transform"><para>The transform to be set.</para></param>	
            <returns>If the method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. If it fails, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The transform will be applied to the corresponding device context.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1CommandSink::SetTransform']/*"/>	
            <unmanaged>HRESULT ID2D1CommandSink::SetTransform([In] const D2D_MATRIX_3X2_F* transform)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.CommandSinkNative.SetPrimitiveBlend_(SharpDX.Direct2D1.PrimitiveBlend)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="primitiveBlend"><para>The primitive blend that will apply to subsequent primitives.</para></param>	
            <returns>If the method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. If it fails, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1CommandSink::SetPrimitiveBlend']/*"/>	
            <unmanaged>HRESULT ID2D1CommandSink::SetPrimitiveBlend([In] D2D1_PRIMITIVE_BLEND primitiveBlend)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.CommandSinkNative.SetUnitMode_(SharpDX.Direct2D1.UnitMode)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="unitMode">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1CommandSink::SetUnitMode']/*"/>	
            <unmanaged>HRESULT ID2D1CommandSink::SetUnitMode([In] D2D1_UNIT_MODE unitMode)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.CommandSinkNative.Clear_(System.Nullable{SharpDX.Color4})">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="color"><para>The color to which the command sink should be cleared.</para></param>	
            <returns>If the method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. If it fails, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The clear color is restricted by the currently selected clip and layer bounds.If no color is specified, the color should be interpreted by context. Examples include but are not limited to:Transparent black for a premultiplied bitmap target. Opaque black for an ignore bitmap target. Containing no content (or white) for a printer page.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1CommandSink::Clear']/*"/>	
            <unmanaged>HRESULT ID2D1CommandSink::Clear([In, Optional] const D2D_COLOR_F* color)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.CommandSinkNative.DrawGlyphRun_(SharpDX.DrawingPointF,SharpDX.DirectWrite.GlyphRun,SharpDX.DirectWrite.GlyphRunDescription,SharpDX.Direct2D1.Brush,SharpDX.Direct2D1.MeasuringMode)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="baselineOrigin"><para>The sequence of  glyphs to be sent.</para></param>	
            <param name="glyphRun"><para>Additional non-rendering information about the glyphs.</para></param>	
            <param name="glyphRunDescription"><para>The brush used to fill the glyphs.</para></param>	
            <param name="foregroundBrush"><para>The measuring mode to apply to the glyphs.</para></param>	
            <param name="measuringMode">No documentation.</param>	
            <returns>If the method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. If it fails, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1CommandSink::DrawGlyphRun']/*"/>	
            <unmanaged>HRESULT ID2D1CommandSink::DrawGlyphRun([In] D2D_POINT_2F baselineOrigin,[In] const DWRITE_GLYPH_RUN* glyphRun,[In, Optional] const DWRITE_GLYPH_RUN_DESCRIPTION* glyphRunDescription,[In] ID2D1Brush* foregroundBrush,[In] DWRITE_MEASURING_MODE measuringMode)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.CommandSinkNative.DrawLine_(SharpDX.DrawingPointF,SharpDX.DrawingPointF,SharpDX.Direct2D1.Brush,System.Single,SharpDX.Direct2D1.StrokeStyle)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="point0"><para>The start point of the line.</para></param>	
            <param name="point1"><para>The end point of the line.</para></param>	
            <param name="brush"><para>The brush used to fill the line.</para></param>	
            <param name="strokeWidth"><para>The width of the stroke to fill the line.</para></param>	
            <param name="strokeStyle"><para>The style of the stroke. If not specified, the stroke is solid.</para></param>	
            <returns>If the method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. If it fails, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            Additional References	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1CommandSink::DrawLine']/*"/>	
            <unmanaged>HRESULT ID2D1CommandSink::DrawLine([In] D2D_POINT_2F point0,[In] D2D_POINT_2F point1,[In] ID2D1Brush* brush,[In] float strokeWidth,[In, Optional] ID2D1StrokeStyle* strokeStyle)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.CommandSinkNative.DrawGeometry_(SharpDX.Direct2D1.Geometry,SharpDX.Direct2D1.Brush,System.Single,SharpDX.Direct2D1.StrokeStyle)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="geometry"><para>The geometry to be stroked.</para></param>	
            <param name="brush"><para>The brush that will be used to fill the stroked geometry.</para></param>	
            <param name="strokeWidth"><para>The width of the stroke.</para></param>	
            <param name="strokeStyle"><para>The style of the stroke.</para></param>	
            <returns>An <see cref="T:SharpDX.Result"/>.</returns>	
            <remarks>	
            You must convert ellipses and rounded rectangles to the corresponding ellipse and rounded rectangle geometries before calling into the DrawGeometry method.Additional ReferencesID2D1CommandList::Stream, <see cref="M:SharpDX.Direct2D1.RenderTarget.DrawGeometry(SharpDX.Direct2D1.Geometry,SharpDX.Direct2D1.Brush,System.Single,SharpDX.Direct2D1.StrokeStyle)"/>RequirementsMinimum supported operating systemSame as Interface / Class Highest IRQL levelN/A (user mode) Callable from DlllMain()No Callable from services and session 0Yes Callable from UI threadYes?	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1CommandSink::DrawGeometry']/*"/>	
            <unmanaged>HRESULT ID2D1CommandSink::DrawGeometry([In] ID2D1Geometry* geometry,[In] ID2D1Brush* brush,[In] float strokeWidth,[In, Optional] ID2D1StrokeStyle* strokeStyle)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.CommandSinkNative.DrawRectangle_(SharpDX.RectangleF,SharpDX.Direct2D1.Brush,System.Single,SharpDX.Direct2D1.StrokeStyle)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="rect">No documentation.</param>	
            <param name="brush">No documentation.</param>	
            <param name="strokeWidth">No documentation.</param>	
            <param name="strokeStyle">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1CommandSink::DrawRectangle']/*"/>	
            <unmanaged>HRESULT ID2D1CommandSink::DrawRectangle([In] const D2D_RECT_F* rect,[In] ID2D1Brush* brush,[In] float strokeWidth,[In, Optional] ID2D1StrokeStyle* strokeStyle)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.CommandSinkNative.DrawImage_(SharpDX.Direct2D1.Image,System.Nullable{SharpDX.DrawingPointF},System.Nullable{SharpDX.RectangleF},SharpDX.Direct2D1.InterpolationMode,SharpDX.Direct2D1.CompositeMode)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="image"><para>The image to be drawn to the command sink.</para></param>	
            <param name="targetOffset"><para>This defines the offset in the destination space that the image will be rendered to. The entire logical extent of the image will be rendered to the corresponding destination. If not specified, the destination origin will be (0, 0). The top-left corner of the image will be mapped to the target offset. This will not necessarily be the origin.</para></param>	
            <param name="imageRectangle"><para>The corresponding rectangle in the image space will be mapped to the provided origins when processing the image.</para></param>	
            <param name="interpolationMode"><para>The interpolation mode that will be used to scale the image if necessary.</para></param>	
            <param name="compositeMode"><para>If specified, the composite mode that will be applied to the limits of the currently selected clip.</para></param>	
            <returns>If the method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. If it fails, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            Because the image can itself be a command list or contain an effect graph that in turn contains a command list, this method can result in recursive processing.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1CommandSink::DrawImage']/*"/>	
            <unmanaged>HRESULT ID2D1CommandSink::DrawImage([In] ID2D1Image* image,[In, Optional] const D2D_POINT_2F* targetOffset,[In, Optional] const D2D_RECT_F* imageRectangle,[In] D2D1_INTERPOLATION_MODE interpolationMode,[In] D2D1_COMPOSITE_MODE compositeMode)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.CommandSinkNative.DrawGdiMetafile_(SharpDX.Direct2D1.GdiMetafile,System.Nullable{SharpDX.DrawingPointF})">
            <summary>	
            No documentation.	
            </summary>	
            <param name="gdiMetafile">No documentation.</param>	
            <param name="targetOffset">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1CommandSink::DrawGdiMetafile']/*"/>	
            <unmanaged>HRESULT ID2D1CommandSink::DrawGdiMetafile([In] ID2D1GdiMetafile* gdiMetafile,[In, Optional] const D2D_POINT_2F* targetOffset)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.CommandSinkNative.FillMesh_(SharpDX.Direct2D1.Mesh,SharpDX.Direct2D1.Brush)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="mesh"><para>The mesh object to be filled.</para></param>	
            <param name="brush"><para>The brush with which to fill the mesh.</para></param>	
            <returns>If the method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. If it fails, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1CommandSink::FillMesh']/*"/>	
            <unmanaged>HRESULT ID2D1CommandSink::FillMesh([In] ID2D1Mesh* mesh,[In] ID2D1Brush* brush)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.CommandSinkNative.FillOpacityMask_(SharpDX.Direct2D1.Bitmap,SharpDX.Direct2D1.Brush,System.Nullable{SharpDX.RectangleF},System.Nullable{SharpDX.RectangleF})">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="opacityMask"><para>The bitmap whose alpha channel will be sampled to define the opacity mask.</para></param>	
            <param name="brush"><para>The brush with which to fill the mask.</para></param>	
            <param name="destinationRectangle"><para>The type of content that the mask represents.</para></param>	
            <param name="sourceRectangle"><para>The destination rectangle in which to fill the mask. If not specified, this is the origin.</para></param>	
            <returns>If the method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. If it fails, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The opacity mask bitmap must be considered to be clamped on each axis.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1CommandSink::FillOpacityMask']/*"/>	
            <unmanaged>HRESULT ID2D1CommandSink::FillOpacityMask([In] ID2D1Bitmap* opacityMask,[In] ID2D1Brush* brush,[In, Optional] const D2D_RECT_F* destinationRectangle,[In, Optional] const D2D_RECT_F* sourceRectangle)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.CommandSinkNative.FillGeometry_(SharpDX.Direct2D1.Geometry,SharpDX.Direct2D1.Brush,SharpDX.Direct2D1.Brush)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="geometry"><para>The geometry that should be filled.</para></param>	
            <param name="brush"><para>The primary brush used to fill the geometry.</para></param>	
            <param name="opacityBrush"><para>A brush whose alpha channel is used to modify the opacity of the primary fill brush.  </para></param>	
            <returns>If the method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. If it fails, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            If the opacity brush is specified, the primary brush will be a bitmap brush fixed on both the x-axis and the y-axis.Ellipses and rounded rectangles are converted to the corresponding geometry before being passed to FillGeometry.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1CommandSink::FillGeometry']/*"/>	
            <unmanaged>HRESULT ID2D1CommandSink::FillGeometry([In] ID2D1Geometry* geometry,[In] ID2D1Brush* brush,[In, Optional] ID2D1Brush* opacityBrush)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.CommandSinkNative.FillRectangle_(SharpDX.RectangleF,SharpDX.Direct2D1.Brush)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="rect"><para>The rectangle to fill.</para></param>	
            <param name="brush"><para>The brush with which to fill the rectangle.</para></param>	
            <returns>If the method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. If it fails, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1CommandSink::FillRectangle']/*"/>	
            <unmanaged>HRESULT ID2D1CommandSink::FillRectangle([In] const D2D_RECT_F* rect,[In] ID2D1Brush* brush)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.CommandSinkNative.PushAxisAlignedClip_(SharpDX.RectangleF,SharpDX.Direct2D1.AntialiasMode)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="clipRect"><para>The rectangle that defines the clip.</para></param>	
            <param name="antialiasMode"><para>Whether the given clip should be antialiased.</para></param>	
            <returns>If the method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. If it fails, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            If the current world transform is not preserving the axis, clipRectangle is transformed and the bounds of the transformed rectangle are used instead.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1CommandSink::PushAxisAlignedClip']/*"/>	
            <unmanaged>HRESULT ID2D1CommandSink::PushAxisAlignedClip([In] const D2D_RECT_F* clipRect,[In] D2D1_ANTIALIAS_MODE antialiasMode)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.CommandSinkNative.PushLayer_(SharpDX.Direct2D1.LayerParameters1@,SharpDX.Direct2D1.Layer)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="layerParameters1">No documentation.</param>	
            <param name="layer">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1CommandSink::PushLayer']/*"/>	
            <unmanaged>HRESULT ID2D1CommandSink::PushLayer([In] const D2D1_LAYER_PARAMETERS1* layerParameters1,[In, Optional] ID2D1Layer* layer)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.CommandSinkNative.PopAxisAlignedClip_">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <returns>If the method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. If it fails, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1CommandSink::PopAxisAlignedClip']/*"/>	
            <unmanaged>HRESULT ID2D1CommandSink::PopAxisAlignedClip()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.CommandSinkNative.PopLayer_">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1CommandSink::PopLayer']/*"/>	
            <unmanaged>HRESULT ID2D1CommandSink::PopLayer()</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.ComputeInfo">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1ComputeInfo']/*"/>	
            <unmanaged>ID2D1ComputeInfo</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.RenderInfo">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderInfo']/*"/>	
            <unmanaged>ID2D1RenderInfo</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderInfo.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.RenderInfo"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderInfo.SetInputDescription(System.Int32,SharpDX.Direct2D1.InputDescription)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="inputIndex"><para>The index of the input that will have the input description applied.</para></param>	
            <param name="inputDescription"><para>The description of the input to be applied to the transform.</para></param>	
            <returns>The method returns an <see cref="T:SharpDX.Result"/>. Possible values include, but are not limited to, those in the following table.HRESULTDescription S_OKNo error occurred. E_INVALIDARGAn invalid parameter was passed to the returning function.?</returns>	
            <remarks>	
            The input description must be matched correctly by the effect shader code.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderInfo::SetInputDescription']/*"/>	
            <unmanaged>HRESULT ID2D1RenderInfo::SetInputDescription([In] unsigned int inputIndex,[In] D2D1_INPUT_DESCRIPTION inputDescription)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderInfo.SetOutputBuffer(SharpDX.Direct2D1.BufferPrecision,SharpDX.Direct2D1.ChannelDepth)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="bufferPrecision"><para>The type of buffer that should be used as an output from this transform.</para></param>	
            <param name="channelDepth"><para>The number of channels that will be used on the output buffer. </para></param>	
            <returns>If the method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. If it fails, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            If the output precision of the transform is not specified, then it will default to the precision specified on the Direct2D device context. If the default precision on the context is not specified, then the output precision will be the maximum of the precision of the inputs. The maximum of 16bpc UNORM and 16bpc FLOAT is 32bpc FLOAT.Similar rules apply to the channel depth. The output channel depth will match the maximum of the input channel depths if the channel depth is <see cref="F:SharpDX.Direct2D1.ChannelDepth.Default"/>. If any input buffer is 4-channel, the output buffer will also be 4-channel; otherwise, the intermediate buffer will be allocated with the specified channel depth.There is no global output channel depth; this is always left to the control of the transforms.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderInfo::SetOutputBuffer']/*"/>	
            <unmanaged>HRESULT ID2D1RenderInfo::SetOutputBuffer([In] D2D1_BUFFER_PRECISION bufferPrecision,[In] D2D1_CHANNEL_DEPTH channelDepth)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderInfo.SetCached(System.Boolean)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="isCached"><para>TRUE if the output of the transform is cached; otherwise, <see cref="F:SharpDX.Result.False"/>.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderInfo::SetCached']/*"/>	
            <unmanaged>void ID2D1RenderInfo::SetCached([In] BOOL isCached)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderInfo.SetInstructionCountHint(System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="instructionCount">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderInfo::SetInstructionCountHint']/*"/>	
            <unmanaged>void ID2D1RenderInfo::SetInstructionCountHint([In] unsigned int instructionCount)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct2D1.RenderInfo.Cached">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderInfo::SetCached']/*"/>	
            <unmanaged>SetCached</unmanaged>	
            <unmanaged>void ID2D1RenderInfo::SetCached([In] BOOL isCached)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.RenderInfo.InstructionCountHint">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RenderInfo::SetInstructionCountHint']/*"/>	
            <unmanaged>SetInstructionCountHint</unmanaged>	
            <unmanaged>void ID2D1RenderInfo::SetInstructionCountHint([In] unsigned int instructionCount)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.ComputeInfo.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.ComputeInfo"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.ComputeInfo.SetComputeShaderConstantBuffer(System.Byte[],System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="buffer">No documentation.</param>	
            <param name="bufferCount">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1ComputeInfo::SetComputeShaderConstantBuffer']/*"/>	
            <unmanaged>HRESULT ID2D1ComputeInfo::SetComputeShaderConstantBuffer([In, Buffer] const unsigned char* buffer,[In] unsigned int bufferCount)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.ComputeInfo.SetComputeShader(System.Guid)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="shaderId">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1ComputeInfo::SetComputeShader']/*"/>	
            <unmanaged>HRESULT ID2D1ComputeInfo::SetComputeShader([In] const GUID&amp; shaderId)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.ComputeInfo.SetResourceTexture(System.Int32,SharpDX.Direct2D1.ResourceTexture)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="textureIndex">No documentation.</param>	
            <param name="resourceTexture">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1ComputeInfo::SetResourceTexture']/*"/>	
            <unmanaged>HRESULT ID2D1ComputeInfo::SetResourceTexture([In] unsigned int textureIndex,[In] ID2D1ResourceTexture* resourceTexture)</unmanaged>	
        </member>
        <!-- Badly formed XML comment ignored for member "P:SharpDX.Direct2D1.ComputeInfo.ComputeShader" -->
        <member name="T:SharpDX.Direct2D1.ComputeTransform">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1ComputeTransform']/*"/>	
            <unmanaged>ID2D1ComputeTransform</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.Transform">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Transform']/*"/>	
            <unmanaged>ID2D1Transform</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Transform.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.Transform"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.Transform.SetInputRects(SharpDX.Rectangle[],System.Int32)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="inputRects"><para>The input rectangle to be mapped to an output rectangle.</para></param>	
            <param name="inputRectsCount"><para>The number of inputs specified. The implementation guarantees that this is equal to the number of inputs specified on the transform.</para></param>	
            <returns>If the method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. If it fails, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            Unlike the MapInputRectsToOutputRect and MapOutputRectToInputRects methods, this method is explicitly called by the renderer at a determined place in its rendering algorithm. The transform implementation may change its state based on the input rectangles and uses this information to control its rendering information.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Transform::SetInputRects']/*"/>	
            <unmanaged>HRESULT ID2D1Transform::SetInputRects([In, Buffer] const RECT* inputRects,[In] unsigned int inputRectsCount)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Transform.MapOutputRectToInputRects(SharpDX.Rectangle,SharpDX.Rectangle[],System.Int32)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="outputRect"><para>The output rectangle to which the inputs must be mapped.</para></param>	
            <param name="inputRects"><para>The corresponding set of inputs. The inputs will directly correspond to the transform inputs.</para></param>	
            <param name="inputRectsCount"><para>The number of inputs specified. The implementation guarantees that this is equal to the number of inputs specified on the transform.</para></param>	
            <returns>If the method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. If it fails, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The transform implementation must ensure that any pixel shader or software callback implementation it provides honors this calculation.The transform implementation must regard this method as purely functional. It can base the mapped input and output rectangles on its current state as specified by the encapsulating effect properties.    However, it must not change its own state in response to this method being invoked. The DirectImage renderer implementation reserves the right to call this method at any time and in any sequence.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Transform::MapOutputRectToInputRects']/*"/>	
            <unmanaged>HRESULT ID2D1Transform::MapOutputRectToInputRects([In] const RECT* outputRect,[Out, Buffer] RECT* inputRects,[In] unsigned int inputRectsCount)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Transform.MapInputRectsToOutputRect(SharpDX.Rectangle[],System.Int32,SharpDX.Rectangle@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="inputRects">No documentation.</param>	
            <param name="inputRectsCount">No documentation.</param>	
            <param name="outputRect">No documentation.</param>	
            <returns>If the method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. If it fails, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The transform implementation must ensure that any pixel shader or software callback implementation it provides honors this calculation.The transform implementation must regard this method as purely functional. It can base the mapped input and output rectangles on its current state as specified by the encapsulating effect properties. However, it must not change its own state in response to this method being invoked. The Direct2D renderer implementation reserves the right to call this method at any time and in any sequence.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Transform::MapInputRectsToOutputRect']/*"/>	
            <unmanaged>HRESULT ID2D1Transform::MapInputRectsToOutputRect([In, Buffer] const RECT* inputRects,[In] unsigned int inputRectsCount,[Out] RECT* outputRect)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.ComputeTransform.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.ComputeTransform"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.ComputeTransform.SetComputeInfo(SharpDX.Direct2D1.ComputeInfo)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="computeInfo">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1ComputeTransform::SetComputeInfo']/*"/>	
            <unmanaged>HRESULT ID2D1ComputeTransform::SetComputeInfo([In] ID2D1ComputeInfo* computeInfo)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.ComputeTransform.CalculateThreadgroups(SharpDX.Rectangle,System.Int32@,System.Int32@,System.Int32@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="outputRect"><para>The output rectangle that will be filled by the compute transform.</para></param>	
            <param name="dimensionX"><para>The number of threads in the x dimension.</para></param>	
            <param name="dimensionY"><para>The number of threads in the y dimension.</para></param>	
            <param name="dimensionZ"><para>The number of threads in the z dimension.</para></param>	
            <returns>If the method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. If it fails, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            If this call fails, the corresponding <see cref="T:SharpDX.Direct2D1.Effect"/> instance is placed into an error state and fails to draw.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1ComputeTransform::CalculateThreadgroups']/*"/>	
            <unmanaged>HRESULT ID2D1ComputeTransform::CalculateThreadgroups([In] const RECT* outputRect,[Out] unsigned int* dimensionX,[Out] unsigned int* dimensionY,[Out] unsigned int* dimensionZ)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct2D1.ComputeTransform.ComputeInfo">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1ComputeTransform::SetComputeInfo']/*"/>	
            <unmanaged>SetComputeInfo</unmanaged>	
            <unmanaged>HRESULT ID2D1ComputeTransform::SetComputeInfo([In] ID2D1ComputeInfo* computeInfo)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.DeviceContextRenderTarget">
            <summary>	
            Issues drawing commands to a GDI device context.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DCRenderTarget']/*"/>	
            <unmanaged>ID2D1DCRenderTarget</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContextRenderTarget.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.DeviceContextRenderTarget"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContextRenderTarget.BindDeviceContext(System.IntPtr,SharpDX.Rectangle)">
            <summary>	
            Binds the render target to the device context to which it issues drawing commands.	
            </summary>	
            <param name="hDC"><para>The device context to which the render target issues drawing commands.</para></param>	
            <param name="subRectRef"><para>The dimensions of the handle to a device context (<see cref="T:System.IntPtr"/>) to which the render target is bound. </para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            Before you can render with the DC render target, you must use its BindDC method to associate it with a GDI DC.  You do this each time you  use a different DC, or the size of the area you want to draw to changes.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DCRenderTarget::BindDC']/*"/>	
            <unmanaged>HRESULT ID2D1DCRenderTarget::BindDC([In] const HDC hDC,[In] const RECT* pSubRect)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DeviceContextRenderTarget.#ctor(SharpDX.Direct2D1.Factory,SharpDX.Direct2D1.RenderTargetProperties)">
            <summary>	
            Creates a render target that draws to a Windows Graphics Device Interface (GDI) device context.	
            </summary>	
            <remarks>	
            Before you can render with a DC render target, you must use the render target's {{BindDC}} method to associate it with a GDI DC.  Do this for each different DC and whenever there is a change in the size of the area you want to draw to.To enable the DC render target to work with GDI, set the render target's DXGI format to <see cref="F:SharpDX.DXGI.Format.B8G8R8A8_UNorm"/> and alpha mode to <see cref="F:SharpDX.Direct2D1.AlphaMode.Premultiplied"/> or D2D1_ALPHA_MODE_IGNORE.Your application should create render targets once and hold on to them for the life of the application or until the render target's  {{EndDraw}} method returns the {{D2DERR_RECREATE_TARGET}} error. When you receive this error, recreate the render target (and any resources it created).	
            </remarks>	
            <param name="factory">an instance of <see cref="T:SharpDX.Direct2D1.Factory"/></param>
            <param name="properties">The rendering mode, pixel format, remoting options, DPI information, and the minimum DirectX support required for hardware rendering.  To enable the device context (DC) render target to work with GDI, set the DXGI format to <see cref="F:SharpDX.DXGI.Format.B8G8R8A8_UNorm"/> and the alpha mode to <see cref="F:SharpDX.Direct2D1.AlphaMode.Premultiplied"/> or D2D1_ALPHA_MODE_IGNORE. For more information about pixel formats, see  {{Supported Pixel  Formats and Alpha Modes}}.</param>
        </member>
        <member name="T:SharpDX.Direct2D1.DrawInfo">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DrawInfo']/*"/>	
            <unmanaged>ID2D1DrawInfo</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DrawInfo.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.DrawInfo"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.DrawInfo.SetPixelShaderConstantBuffer(System.Byte[],System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="buffer">No documentation.</param>	
            <param name="bufferCount">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DrawInfo::SetPixelShaderConstantBuffer']/*"/>	
            <unmanaged>HRESULT ID2D1DrawInfo::SetPixelShaderConstantBuffer([In, Buffer] const unsigned char* buffer,[In] unsigned int bufferCount)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DrawInfo.SetResourceTexture(System.Int32,SharpDX.Direct2D1.ResourceTexture)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="textureIndex">No documentation.</param>	
            <param name="resourceTexture">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DrawInfo::SetResourceTexture']/*"/>	
            <unmanaged>HRESULT ID2D1DrawInfo::SetResourceTexture([In] unsigned int textureIndex,[In] ID2D1ResourceTexture* resourceTexture)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DrawInfo.SetVertexShaderConstantBuffer(System.Byte[],System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="buffer">No documentation.</param>	
            <param name="bufferCount">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DrawInfo::SetVertexShaderConstantBuffer']/*"/>	
            <unmanaged>HRESULT ID2D1DrawInfo::SetVertexShaderConstantBuffer([In, Buffer] const unsigned char* buffer,[In] unsigned int bufferCount)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DrawInfo.SetPixelShader(System.Guid,SharpDX.Direct2D1.PixelOptions)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="shaderId">No documentation.</param>	
            <param name="pixelOptions">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DrawInfo::SetPixelShader']/*"/>	
            <unmanaged>HRESULT ID2D1DrawInfo::SetPixelShader([In] const GUID&amp; shaderId,[In] D2D1_PIXEL_OPTIONS pixelOptions)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DrawInfo.SetVertexProcessing(SharpDX.Direct2D1.VertexBuffer,SharpDX.Direct2D1.VertexOptions,System.Nullable{SharpDX.Direct2D1.BlendDescription},System.Nullable{SharpDX.Direct2D1.VertexRange},System.Nullable{System.Guid})">
            <summary>	
            No documentation.	
            </summary>	
            <param name="vertexBuffer">No documentation.</param>	
            <param name="vertexOptions">No documentation.</param>	
            <param name="blendDescription">No documentation.</param>	
            <param name="vertexRange">No documentation.</param>	
            <param name="vertexShader">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DrawInfo::SetVertexProcessing']/*"/>	
            <unmanaged>HRESULT ID2D1DrawInfo::SetVertexProcessing([In, Optional] ID2D1VertexBuffer* vertexBuffer,[In] D2D1_VERTEX_OPTIONS vertexOptions,[In, Optional] const D2D1_BLEND_DESCRIPTION* blendDescription,[In, Optional] const D2D1_VERTEX_RANGE* vertexRange,[In, Optional] const GUID* vertexShader)</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.DrawingStateBlock">
            <summary>	
            Represents the drawing state of a render target: the antialiasing mode, transform, tags, and text-rendering options.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DrawingStateBlock']/*"/>	
            <unmanaged>ID2D1DrawingStateBlock</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DrawingStateBlock.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.DrawingStateBlock"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.DrawingStateBlock.GetDescription(SharpDX.Direct2D1.DrawingStateDescription@)">
            <summary>	
            Retrieves the antialiasing mode, transform, and tags portion of the drawing state.	
            </summary>	
            <param name="stateDescription"><para>When this method returns, contains the antialiasing mode, transform, and tags portion of the drawing state. You must allocate storage for this parameter.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DrawingStateBlock::GetDescription']/*"/>	
            <unmanaged>void ID2D1DrawingStateBlock::GetDescription([Out] D2D1_DRAWING_STATE_DESCRIPTION* stateDescription)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DrawingStateBlock.SetDescription(SharpDX.Direct2D1.DrawingStateDescription@)">
            <summary>	
            Specifies the antialiasing mode, transform, and tags portion of the drawing state.	
            </summary>	
            <param name="stateDescription"><para>The antialiasing mode, transform, and tags portion of the drawing state.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DrawingStateBlock::SetDescription']/*"/>	
            <unmanaged>void ID2D1DrawingStateBlock::SetDescription([In] const D2D1_DRAWING_STATE_DESCRIPTION* stateDescription)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DrawingStateBlock.SetTextRenderingParams(SharpDX.DirectWrite.RenderingParams)">
            <summary>	
            Specifies the text-rendering configuration of the drawing state.	
            </summary>	
            <param name="textRenderingParams"><para>The text-rendering configuration of the drawing state, or <c>null</c> to use default settings.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DrawingStateBlock::SetTextRenderingParams']/*"/>	
            <unmanaged>void ID2D1DrawingStateBlock::SetTextRenderingParams([In, Optional] IDWriteRenderingParams* textRenderingParams)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DrawingStateBlock.GetTextRenderingParams(SharpDX.DirectWrite.RenderingParams@)">
            <summary>	
            Retrieves the text-rendering configuration of the drawing state.	
            </summary>	
            <param name="textRenderingParams"><para>When this method returns, contains the address of a reference to an <see cref="T:SharpDX.DirectWrite.RenderingParams"/> object that describes the text-rendering configuration of the drawing state.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DrawingStateBlock::GetTextRenderingParams']/*"/>	
            <unmanaged>void ID2D1DrawingStateBlock::GetTextRenderingParams([Out, Optional] IDWriteRenderingParams** textRenderingParams)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DrawingStateBlock.#ctor(SharpDX.Direct2D1.Factory)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.DrawingStateBlock"/> that can be used with the {{SaveDrawingState}} and {{RestoreDrawingState}} methods of a render target.	
            </summary>	
            <param name="factory">an instance of <see cref="T:SharpDX.Direct2D1.Factory"/></param>
        </member>
        <member name="M:SharpDX.Direct2D1.DrawingStateBlock.#ctor(SharpDX.Direct2D1.Factory,SharpDX.Direct2D1.DrawingStateDescription)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.DrawingStateBlock"/> that can be used with the {{SaveDrawingState}} and {{RestoreDrawingState}} methods of a render target.	
            </summary>	
            <param name="factory">an instance of <see cref="T:SharpDX.Direct2D1.Factory"/></param>
            <param name="drawingStateDescription">A structure that contains antialiasing, transform, and tags  information.</param>
        </member>
        <member name="M:SharpDX.Direct2D1.DrawingStateBlock.#ctor(SharpDX.Direct2D1.Factory,SharpDX.DirectWrite.RenderingParams)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.DrawingStateBlock"/> that can be used with the {{SaveDrawingState}} and {{RestoreDrawingState}} methods of a render target.	
            </summary>	
            <param name="factory">an instance of <see cref="T:SharpDX.Direct2D1.Factory"/></param>
            <param name="textRenderingParams">Optional text parameters that indicate how text should be rendered.  </param>
        </member>
        <member name="M:SharpDX.Direct2D1.DrawingStateBlock.#ctor(SharpDX.Direct2D1.Factory,System.Nullable{SharpDX.Direct2D1.DrawingStateDescription},SharpDX.DirectWrite.RenderingParams)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.DrawingStateBlock"/> that can be used with the {{SaveDrawingState}} and {{RestoreDrawingState}} methods of a render target.	
            </summary>	
            <param name="factory">an instance of <see cref="T:SharpDX.Direct2D1.Factory"/></param>
            <param name="drawingStateDescription">A structure that contains antialiasing, transform, and tags  information.</param>
            <param name="textRenderingParams">Optional text parameters that indicate how text should be rendered.  </param>
        </member>
        <member name="P:SharpDX.Direct2D1.DrawingStateBlock.Description">
            <summary>	
            Retrieves the antialiasing mode, transform, and tags portion of the drawing state.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DrawingStateBlock::GetDescription']/*"/>	
            <unmanaged>GetDescription</unmanaged>	
            <unmanaged>void ID2D1DrawingStateBlock::GetDescription([Out] D2D1_DRAWING_STATE_DESCRIPTION* stateDescription)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.DrawingStateBlock.TextRenderingParams">
            <summary>	
            Retrieves the text-rendering configuration of the drawing state.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DrawingStateBlock::GetTextRenderingParams']/*"/>	
            <unmanaged>GetTextRenderingParams</unmanaged>	
            <unmanaged>void ID2D1DrawingStateBlock::GetTextRenderingParams([Out, Optional] IDWriteRenderingParams** textRenderingParams)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.DrawingStateBlock1">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DrawingStateBlock1']/*"/>	
            <unmanaged>ID2D1DrawingStateBlock1</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DrawingStateBlock1.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.DrawingStateBlock1"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.DrawingStateBlock1.GetDescription(SharpDX.Direct2D1.DrawingStateDescription1@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="stateDescription">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DrawingStateBlock1::GetDescription']/*"/>	
            <unmanaged>void ID2D1DrawingStateBlock1::GetDescription([Out] D2D1_DRAWING_STATE_DESCRIPTION1* stateDescription)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DrawingStateBlock1.SetDescription(SharpDX.Direct2D1.DrawingStateDescription1@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="stateDescription">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DrawingStateBlock1::SetDescription']/*"/>	
            <unmanaged>void ID2D1DrawingStateBlock1::SetDescription([In] const D2D1_DRAWING_STATE_DESCRIPTION1* stateDescription)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct2D1.DrawingStateBlock1.Description">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DrawingStateBlock1::GetDescription']/*"/>	
            <unmanaged>GetDescription</unmanaged>	
            <unmanaged>void ID2D1DrawingStateBlock1::GetDescription([Out] D2D1_DRAWING_STATE_DESCRIPTION1* stateDescription)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.DrawTransform">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DrawTransform']/*"/>	
            <unmanaged>ID2D1DrawTransform</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.DrawTransform.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.DrawTransform"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.DrawTransform.SetDrawInfo(SharpDX.Direct2D1.DrawInfo)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="drawInfo">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DrawTransform::SetDrawInfo']/*"/>	
            <unmanaged>HRESULT ID2D1DrawTransform::SetDrawInfo([In] ID2D1DrawInfo* drawInfo)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct2D1.DrawTransform.DrawInfo">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1DrawTransform::SetDrawInfo']/*"/>	
            <unmanaged>SetDrawInfo</unmanaged>	
            <unmanaged>HRESULT ID2D1DrawTransform::SetDrawInfo([In] ID2D1DrawInfo* drawInfo)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.EffectContext">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1EffectContext']/*"/>	
            <unmanaged>ID2D1EffectContext</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.EffectContext.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.EffectContext"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.EffectContext.GetDpi(System.Single@,System.Single@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="dpiX">No documentation.</param>	
            <param name="dpiY">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1EffectContext::GetDpi']/*"/>	
            <unmanaged>void ID2D1EffectContext::GetDpi([Out] float* dpiX,[Out] float* dpiY)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.EffectContext.CreateEffect(System.Guid,SharpDX.Direct2D1.Effect@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="effectId">No documentation.</param>	
            <param name="effect">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1EffectContext::CreateEffect']/*"/>	
            <unmanaged>HRESULT ID2D1EffectContext::CreateEffect([In] const GUID&amp; effectId,[Out] ID2D1Effect** effect)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.EffectContext.GetMaximumSupportedFeatureLevel(SharpDX.Direct3D.FeatureLevel[],System.Int32,SharpDX.Direct3D.FeatureLevel@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="featureLevels">No documentation.</param>	
            <param name="featureLevelsCount">No documentation.</param>	
            <param name="maximumSupportedFeatureLevel">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1EffectContext::GetMaximumSupportedFeatureLevel']/*"/>	
            <unmanaged>HRESULT ID2D1EffectContext::GetMaximumSupportedFeatureLevel([In, Buffer] const D3D_FEATURE_LEVEL* featureLevels,[In] unsigned int featureLevelsCount,[Out] D3D_FEATURE_LEVEL* maximumSupportedFeatureLevel)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.EffectContext.CreateTransformNodeFromEffect(SharpDX.Direct2D1.Effect,SharpDX.Direct2D1.TransformNode@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="effect">No documentation.</param>	
            <param name="transformNode">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1EffectContext::CreateTransformNodeFromEffect']/*"/>	
            <unmanaged>HRESULT ID2D1EffectContext::CreateTransformNodeFromEffect([In] ID2D1Effect* effect,[Out] ID2D1TransformNode** transformNode)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.EffectContext.CreateBlendTransform(System.Int32,SharpDX.Direct2D1.BlendDescription@,SharpDX.Direct2D1.BlendTransform@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="numInputs">No documentation.</param>	
            <param name="blendDescription">No documentation.</param>	
            <param name="transform">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1EffectContext::CreateBlendTransform']/*"/>	
            <unmanaged>HRESULT ID2D1EffectContext::CreateBlendTransform([In] unsigned int numInputs,[In] const D2D1_BLEND_DESCRIPTION* blendDescription,[Out] ID2D1BlendTransform** transform)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.EffectContext.CreateBorderTransform(SharpDX.Direct2D1.ExtendMode,SharpDX.Direct2D1.ExtendMode,SharpDX.Direct2D1.BorderTransform@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="extendModeX">No documentation.</param>	
            <param name="extendModeY">No documentation.</param>	
            <param name="transform">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1EffectContext::CreateBorderTransform']/*"/>	
            <unmanaged>HRESULT ID2D1EffectContext::CreateBorderTransform([In] D2D1_EXTEND_MODE extendModeX,[In] D2D1_EXTEND_MODE extendModeY,[Out] ID2D1BorderTransform** transform)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.EffectContext.CreateOffsetTransform(SharpDX.DrawingPoint,SharpDX.Direct2D1.OffsetTransform@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="offset">No documentation.</param>	
            <param name="transform">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1EffectContext::CreateOffsetTransform']/*"/>	
            <unmanaged>HRESULT ID2D1EffectContext::CreateOffsetTransform([In] POINT offset,[Out] ID2D1OffsetTransform** transform)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.EffectContext.CreateBoundsAdjustmentTransform(SharpDX.Rectangle,SharpDX.Direct2D1.BoundsAdjustmentTransform@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="outputRectangle">No documentation.</param>	
            <param name="transform">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1EffectContext::CreateBoundsAdjustmentTransform']/*"/>	
            <unmanaged>HRESULT ID2D1EffectContext::CreateBoundsAdjustmentTransform([In] const RECT* outputRectangle,[Out] ID2D1BoundsAdjustmentTransform** transform)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.EffectContext.LoadPixelShader(System.Guid,System.Byte[],System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="shaderId">No documentation.</param>	
            <param name="shaderBuffer">No documentation.</param>	
            <param name="shaderBufferCount">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1EffectContext::LoadPixelShader']/*"/>	
            <unmanaged>HRESULT ID2D1EffectContext::LoadPixelShader([In] const GUID&amp; shaderId,[In, Buffer] const unsigned char* shaderBuffer,[In] unsigned int shaderBufferCount)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.EffectContext.LoadVertexShader(System.Guid,System.Byte[],System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="resourceId">No documentation.</param>	
            <param name="shaderBuffer">No documentation.</param>	
            <param name="shaderBufferCount">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1EffectContext::LoadVertexShader']/*"/>	
            <unmanaged>HRESULT ID2D1EffectContext::LoadVertexShader([In] const GUID&amp; resourceId,[In, Buffer] const unsigned char* shaderBuffer,[In] unsigned int shaderBufferCount)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.EffectContext.LoadComputeShader(System.Guid,System.Byte[],System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="resourceId">No documentation.</param>	
            <param name="shaderBuffer">No documentation.</param>	
            <param name="shaderBufferCount">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1EffectContext::LoadComputeShader']/*"/>	
            <unmanaged>HRESULT ID2D1EffectContext::LoadComputeShader([In] const GUID&amp; resourceId,[In, Buffer] const unsigned char* shaderBuffer,[In] unsigned int shaderBufferCount)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.EffectContext.IsShaderLoaded(System.Guid)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="shaderId">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1EffectContext::IsShaderLoaded']/*"/>	
            <unmanaged>BOOL ID2D1EffectContext::IsShaderLoaded([In] const GUID&amp; shaderId)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.EffectContext.CreateResourceTexture(System.Nullable{System.Guid},SharpDX.Direct2D1.ResourceTextureProperties@,System.Byte[],System.Int32[],System.Int32,SharpDX.Direct2D1.ResourceTexture@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="resourceId">No documentation.</param>	
            <param name="resourceTextureProperties">No documentation.</param>	
            <param name="data">No documentation.</param>	
            <param name="strides">No documentation.</param>	
            <param name="dataSize">No documentation.</param>	
            <param name="resourceTexture">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1EffectContext::CreateResourceTexture']/*"/>	
            <unmanaged>HRESULT ID2D1EffectContext::CreateResourceTexture([In, Optional] const GUID* resourceId,[In] const D2D1_RESOURCE_TEXTURE_PROPERTIES* resourceTextureProperties,[In, Buffer, Optional] const unsigned char* data,[In, Buffer, Optional] const unsigned int* strides,[In] unsigned int dataSize,[Out] ID2D1ResourceTexture** resourceTexture)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.EffectContext.FindResourceTexture(System.Guid,SharpDX.Direct2D1.ResourceTexture@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="resourceId">No documentation.</param>	
            <param name="resourceTexture">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1EffectContext::FindResourceTexture']/*"/>	
            <unmanaged>HRESULT ID2D1EffectContext::FindResourceTexture([In] const GUID* resourceId,[Out] ID2D1ResourceTexture** resourceTexture)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.EffectContext.CreateVertexBuffer(SharpDX.Direct2D1.VertexBufferProperties,System.Nullable{System.Guid},System.Nullable{SharpDX.Direct2D1.CustomVertexBufferProperties},SharpDX.Direct2D1.VertexBuffer@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="vertexBufferProperties">No documentation.</param>	
            <param name="resourceId">No documentation.</param>	
            <param name="customVertexBufferProperties">No documentation.</param>	
            <param name="buffer">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1EffectContext::CreateVertexBuffer']/*"/>	
            <unmanaged>HRESULT ID2D1EffectContext::CreateVertexBuffer([In] const D2D1_VERTEX_BUFFER_PROPERTIES* vertexBufferProperties,[In, Optional] const GUID* resourceId,[In, Optional] const D2D1_CUSTOM_VERTEX_BUFFER_PROPERTIES* customVertexBufferProperties,[Out] ID2D1VertexBuffer** buffer)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.EffectContext.FindVertexBuffer(System.Guid,SharpDX.Direct2D1.VertexBuffer@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="resourceId">No documentation.</param>	
            <param name="buffer">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1EffectContext::FindVertexBuffer']/*"/>	
            <unmanaged>HRESULT ID2D1EffectContext::FindVertexBuffer([In] const GUID* resourceId,[Out] ID2D1VertexBuffer** buffer)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.EffectContext.CreateColorContext(SharpDX.Direct2D1.ColorSpace,System.Byte[],System.Int32,SharpDX.Direct2D1.ColorContext@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="space">No documentation.</param>	
            <param name="rofileRef">No documentation.</param>	
            <param name="profileSize">No documentation.</param>	
            <param name="colorContext">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1EffectContext::CreateColorContext']/*"/>	
            <unmanaged>HRESULT ID2D1EffectContext::CreateColorContext([In] D2D1_COLOR_SPACE space,[In, Buffer, Optional] const unsigned char* profile,[In] unsigned int profileSize,[Out] ID2D1ColorContext** colorContext)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.EffectContext.CreateColorContextFromFilename(System.String,SharpDX.Direct2D1.ColorContext@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="filename">No documentation.</param>	
            <param name="colorContext">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1EffectContext::CreateColorContextFromFilename']/*"/>	
            <unmanaged>HRESULT ID2D1EffectContext::CreateColorContextFromFilename([In] const wchar_t* filename,[Out] ID2D1ColorContext** colorContext)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.EffectContext.CreateColorContextFromWicColorContext(SharpDX.WIC.ColorContext,SharpDX.Direct2D1.ColorContext@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="wicColorContext">No documentation.</param>	
            <param name="colorContext">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1EffectContext::CreateColorContextFromWicColorContext']/*"/>	
            <unmanaged>HRESULT ID2D1EffectContext::CreateColorContextFromWicColorContext([In] IWICColorContext* wicColorContext,[Out] ID2D1ColorContext** colorContext)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.EffectContext.CheckFeatureSupport(SharpDX.Direct2D1.Feature,System.IntPtr,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="feature">No documentation.</param>	
            <param name="featureSupportData">No documentation.</param>	
            <param name="featureSupportDataSize">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1EffectContext::CheckFeatureSupport']/*"/>	
            <unmanaged>HRESULT ID2D1EffectContext::CheckFeatureSupport([In] D2D1_FEATURE feature,[Out, Buffer] void* featureSupportData,[In] unsigned int featureSupportDataSize)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.EffectContext.IsBufferPrecisionSupported(SharpDX.Direct2D1.BufferPrecision)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="bufferPrecision">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1EffectContext::IsBufferPrecisionSupported']/*"/>	
            <unmanaged>BOOL ID2D1EffectContext::IsBufferPrecisionSupported([In] D2D1_BUFFER_PRECISION bufferPrecision)</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.EffectImpl">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1EffectImpl']/*"/>	
            <unmanaged>ID2D1EffectImpl</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.EffectImpl.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.EffectImpl"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.EffectImpl.Initialize(SharpDX.Direct2D1.EffectContext,SharpDX.Direct2D1.TransformGraph)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="effectContext"><para>An internal factory interface that creates and returns effect author?centric types.</para></param>	
            <param name="transformGraph">No documentation.</param>	
            <returns>If the method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. If it fails, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            This moves resource creation cost to the CreateEffect call, rather than during rendering.If the implementation fails this call, the corresponding <see cref="M:SharpDX.Direct2D1.DeviceContext.CreateEffect(System.Guid,SharpDX.Direct2D1.Effect)"/> call also fails.The following example shows an effect implementing an initialize method.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1EffectImpl::Initialize']/*"/>	
            <unmanaged>HRESULT ID2D1EffectImpl::Initialize([In] ID2D1EffectContext* effectContext,[In] ID2D1TransformGraph* transformGraph)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.EffectImpl.PrepareForRender(SharpDX.Direct2D1.ChangeType)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="changeType"><para>Indicates the type of change the effect should expect.</para></param>	
            <returns>If the method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. If it fails, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            This method is called by the renderer when the effect is within an effect graph that is drawn.The method will be called:If the effect has been initialized but has not previously been drawn. If an effect property has been set since the last draw call. If the context state has changed since the effect was last drawn.The method will not otherwise be called. The transforms created by the effect will be called to handle their input and output rectangles for every draw call.Most effects defer creating any resources or specifying a topology until this call is made. They store their properties and map them to a concrete set of rendering techniques when first drawn.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1EffectImpl::PrepareForRender']/*"/>	
            <unmanaged>HRESULT ID2D1EffectImpl::PrepareForRender([In] D2D1_CHANGE_TYPE changeType)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.EffectImpl.SetGraph(SharpDX.Direct2D1.TransformGraph)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="transformGraph">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1EffectImpl::SetGraph']/*"/>	
            <unmanaged>HRESULT ID2D1EffectImpl::SetGraph([In] ID2D1TransformGraph* transformGraph)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct2D1.EffectImpl.Graph">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1EffectImpl::SetGraph']/*"/>	
            <unmanaged>SetGraph</unmanaged>	
            <unmanaged>HRESULT ID2D1EffectImpl::SetGraph([In] ID2D1TransformGraph* transformGraph)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.EllipseGeometry">
            <summary>	
            Represents an ellipse.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1EllipseGeometry']/*"/>	
            <unmanaged>ID2D1EllipseGeometry</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.Geometry">
            <summary>	
            Represents a geometry resource and defines a set of helper methods for manipulating and measuring geometric shapes.  Interfaces that inherit from <see cref="T:SharpDX.Direct2D1.Geometry"/> define specific shapes.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Geometry']/*"/>	
            <unmanaged>ID2D1Geometry</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Geometry.DefaultFlatteningTolerance">
            <summary>
            Default flattening tolerance used for all methods that are not explicitly using it. Default is set to 0.25f.
            </summary>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.Geometry"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.GetBounds(System.Nullable{SharpDX.Matrix3x2})">
            <summary>	
            Retrieves the bounds of the geometry.	
            </summary>	
            <param name="worldTransform">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Geometry::GetBounds']/*"/>	
            <unmanaged>HRESULT ID2D1Geometry::GetBounds([In, Optional] const D2D_MATRIX_3X2_F* worldTransform,[Out] D2D_RECT_F* bounds)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.GetWidenedBounds(System.Single,SharpDX.Direct2D1.StrokeStyle,System.Nullable{SharpDX.Matrix3x2},System.Single)">
            <summary>	
            Gets the bounds of the geometry after it has been widened by the specified stroke width and style and transformed by the specified matrix.	
            </summary>	
            <param name="strokeWidth"><para>The amount by which to widen the geometry by stroking its outline.</para></param>	
            <param name="strokeStyle"><para>The style of the stroke that widens the geometry.</para></param>	
            <param name="worldTransform"><para>A transform to apply to the geometry after the geometry is transformed and after the geometry has been stroked.</para></param>	
            <param name="flatteningTolerance"><para>When this method returns, contains the bounds of the widened geometry. You must allocate storage for this parameter.</para></param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Geometry::GetWidenedBounds']/*"/>	
            <unmanaged>HRESULT ID2D1Geometry::GetWidenedBounds([In] float strokeWidth,[In, Optional] ID2D1StrokeStyle* strokeStyle,[In, Optional] const D2D_MATRIX_3X2_F* worldTransform,[In] float flatteningTolerance,[Out] D2D_RECT_F* bounds)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.StrokeContainsPoint(SharpDX.DrawingPointF,System.Single,SharpDX.Direct2D1.StrokeStyle,System.Nullable{SharpDX.Matrix3x2},System.Single)">
            <summary>	
            Determines whether the geometry's stroke contains the specified point given the specified stroke thickness, style, and transform.	
            </summary>	
            <param name="point"><para>The point to test for containment.</para></param>	
            <param name="strokeWidth"><para>The thickness of the stroke to apply.</para></param>	
            <param name="strokeStyle"><para>The style of stroke to apply.</para></param>	
            <param name="worldTransform"><para>The transform to apply to the stroked geometry. </para></param>	
            <param name="flatteningTolerance"><para>When this method returns, contains a boolean value set to true if the geometry's stroke contains the specified point; otherwise, false. You must allocate storage for this parameter.</para></param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Geometry::StrokeContainsPoint']/*"/>	
            <unmanaged>HRESULT ID2D1Geometry::StrokeContainsPoint([In] D2D_POINT_2F point,[In] float strokeWidth,[In, Optional] ID2D1StrokeStyle* strokeStyle,[In, Optional] const D2D_MATRIX_3X2_F* worldTransform,[In] float flatteningTolerance,[Out] BOOL* contains)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.FillContainsPoint(SharpDX.DrawingPointF,System.Nullable{SharpDX.Matrix3x2},System.Single)">
            <summary>	
            Indicates whether the area filled by the geometry would contain the specified point given the specified flattening tolerance.	
            </summary>	
            <param name="point"><para>The point to test.</para></param>	
            <param name="worldTransform"><para>The transform to apply to the geometry prior to testing for containment, or <c>null</c>.</para></param>	
            <param name="flatteningTolerance"><para>The numeric accuracy with which the precise geometric path and path intersection is calculated. Points missing the fill by less than the tolerance are still considered inside.  Smaller values produce more accurate results but cause slower execution. </para></param>	
            <returns><para>When this method returns, contains a <see cref="T:System.Boolean"/> value that is TRUE if the area filled by the geometry contains point; otherwise, <see cref="F:SharpDX.Result.False"/>.You must allocate storage for this parameter.</para></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Geometry::FillContainsPoint']/*"/>	
            <unmanaged>HRESULT ID2D1Geometry::FillContainsPoint([In] D2D_POINT_2F point,[In, Optional] const D2D_MATRIX_3X2_F* worldTransform,[In] float flatteningTolerance,[Out] BOOL* contains)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.Compare(SharpDX.Direct2D1.Geometry,System.Nullable{SharpDX.Matrix3x2},System.Single)">
            <summary>	
            Describes the intersection between this geometry and the specified geometry. The comparison is performed by using the specified flattening tolerance.	
            </summary>	
            <param name="inputGeometry"><para>The geometry to test. </para></param>	
            <param name="inputGeometryTransform"><para>The transform to apply to inputGeometry, or <c>null</c>.</para></param>	
            <param name="flatteningTolerance"><para>The maximum bounds on the distance between points in the polygonal approximation of the geometries. Smaller values produce more accurate results but cause slower execution. </para></param>	
            <returns><para>When this method returns, contains a reference to a value that describes how this geometry is related to inputGeometry. You must allocate storage for this parameter.  </para></returns>	
            <remarks>	
            When interpreting the returned relation value, it is important to remember that the member <see cref="F:SharpDX.Direct2D1.GeometryRelation.IsContained"/> of the  <see cref="T:SharpDX.Direct2D1.GeometryRelation"/> enumeration type means that this geometry is contained  inside inputGeometry, not that this geometry contains inputGeometry.For  more information about how to interpret other possible return values, see <see cref="T:SharpDX.Direct2D1.GeometryRelation"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Geometry::CompareWithGeometry']/*"/>	
            <unmanaged>HRESULT ID2D1Geometry::CompareWithGeometry([In] ID2D1Geometry* inputGeometry,[In, Optional] const D2D_MATRIX_3X2_F* inputGeometryTransform,[In] float flatteningTolerance,[Out] D2D1_GEOMETRY_RELATION* relation)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.Simplify_(SharpDX.Direct2D1.GeometrySimplificationOption,System.Nullable{SharpDX.Matrix3x2},System.Single,System.IntPtr)">
            <summary>	
            Creates a simplified version of the geometry that contains only lines and (optionally) cubic Bezier curves and writes the result to an <see cref="T:SharpDX.Direct2D1.SimplifiedGeometrySink"/>.	
            </summary>	
            <param name="simplificationOption">No documentation.</param>	
            <param name="worldTransform">No documentation.</param>	
            <param name="flatteningTolerance">No documentation.</param>	
            <param name="geometrySink">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Geometry::Simplify']/*"/>	
            <unmanaged>HRESULT ID2D1Geometry::Simplify([In] D2D1_GEOMETRY_SIMPLIFICATION_OPTION simplificationOption,[In, Optional] const D2D_MATRIX_3X2_F* worldTransform,[In] float flatteningTolerance,[In] ID2D1SimplifiedGeometrySink* geometrySink)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.Tessellate_(System.Nullable{SharpDX.Matrix3x2},System.Single,System.IntPtr)">
            <summary>	
            Creates a set of clockwise-wound triangles that cover the geometry after it has been transformed using the specified matrix and flattened using the specified tolerance.	
            </summary>	
            <param name="worldTransform">No documentation.</param>	
            <param name="flatteningTolerance">No documentation.</param>	
            <param name="tessellationSink">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Geometry::Tessellate']/*"/>	
            <unmanaged>HRESULT ID2D1Geometry::Tessellate([In, Optional] const D2D_MATRIX_3X2_F* worldTransform,[In] float flatteningTolerance,[In] ID2D1TessellationSink* tessellationSink)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.Combine_(SharpDX.Direct2D1.Geometry,SharpDX.Direct2D1.CombineMode,System.Nullable{SharpDX.Matrix3x2},System.Single,System.IntPtr)">
            <summary>	
            Combines this geometry with the specified geometry and stores the result in an <see cref="T:SharpDX.Direct2D1.SimplifiedGeometrySink"/>.	
            </summary>	
            <param name="inputGeometry">No documentation.</param>	
            <param name="combineMode">No documentation.</param>	
            <param name="inputGeometryTransform">No documentation.</param>	
            <param name="flatteningTolerance">No documentation.</param>	
            <param name="geometrySink">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Geometry::CombineWithGeometry']/*"/>	
            <unmanaged>HRESULT ID2D1Geometry::CombineWithGeometry([In] ID2D1Geometry* inputGeometry,[In] D2D1_COMBINE_MODE combineMode,[In, Optional] const D2D_MATRIX_3X2_F* inputGeometryTransform,[In] float flatteningTolerance,[In] ID2D1SimplifiedGeometrySink* geometrySink)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.Outline_(System.Nullable{SharpDX.Matrix3x2},System.Single,System.IntPtr)">
            <summary>	
            Computes the outline of the geometry and writes the result to an <see cref="T:SharpDX.Direct2D1.SimplifiedGeometrySink"/>.	
            </summary>	
            <param name="worldTransform">No documentation.</param>	
            <param name="flatteningTolerance">No documentation.</param>	
            <param name="geometrySink">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The Outline method allows the caller to produce a geometry with an equivalent fill to the input geometry, with the following additional properties:The output geometry contains no transverse intersections; that is, segments may touch, but they never cross. The outermost figures in the output geometry are all oriented counterclockwise.  The output geometry is fill-mode invariant; that is, the fill of the geometry does not depend on the choice of the fill mode. For more information about the fill mode, see <see cref="T:SharpDX.Direct2D1.FillMode"/>.Additionally, the  Outline method can be useful in removing redundant portions of said geometries to simplify complex geometries. It can also be useful in combination with <see cref="T:SharpDX.Direct2D1.GeometryGroup"/> to create unions among several geometries simultaneously.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Geometry::Outline']/*"/>	
            <unmanaged>HRESULT ID2D1Geometry::Outline([In, Optional] const D2D_MATRIX_3X2_F* worldTransform,[In] float flatteningTolerance,[In] ID2D1SimplifiedGeometrySink* geometrySink)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.ComputeArea(System.Nullable{SharpDX.Matrix3x2},System.Single)">
            <summary>	
            Computes the area of the geometry after it has been transformed by the specified matrix and flattened using the specified tolerance.	
            </summary>	
            <param name="worldTransform"><para>The transform to apply to this geometry before computing its area, or <c>null</c>.</para></param>	
            <param name="flatteningTolerance"><para>The maximum bounds on the distance between points in the polygonal approximation of the geometry. Smaller values produce more accurate results but cause slower execution. </para></param>	
            <returns><para>When this this method returns, contains a reference to the area of the transformed, flattened version of this geometry. You must allocate storage for this parameter.</para></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Geometry::ComputeArea']/*"/>	
            <unmanaged>HRESULT ID2D1Geometry::ComputeArea([In, Optional] const D2D_MATRIX_3X2_F* worldTransform,[In] float flatteningTolerance,[Out] float* area)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.ComputeLength(System.Nullable{SharpDX.Matrix3x2},System.Single)">
            <summary>	
            Calculates the length of the geometry as though each segment were unrolled into a line.	
            </summary>	
            <param name="worldTransform">No documentation.</param>	
            <param name="flatteningTolerance">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Geometry::ComputeLength']/*"/>	
            <unmanaged>HRESULT ID2D1Geometry::ComputeLength([In, Optional] const D2D_MATRIX_3X2_F* worldTransform,[In] float flatteningTolerance,[Out] float* length)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.ComputePointAtLength(System.Single,System.Nullable{SharpDX.Matrix3x2},System.Single,SharpDX.DrawingPointF@)">
            <summary>	
            Calculates the point and tangent vector at the specified distance along the geometry after it has been transformed by the specified matrix and flattened using the specified tolerance.	
            </summary>	
            <param name="length"><para>The distance along the geometry of the point and tangent to find. If this distance is less then 0, this method calculates the first point in the geometry. If this distance is greater than the length of the geometry, this method calculates the last point in the geometry.</para></param>	
            <param name="worldTransform"><para>The transform to apply to the geometry before calculating the specified point and tangent, or <c>null</c>.</para></param>	
            <param name="flatteningTolerance"><para>The maximum bounds on the distance between points in the polygonal approximation of the geometry. Smaller values produce more accurate results but cause slower execution.</para></param>	
            <param name="unitTangentVector"><para>When this method returns, contains a reference to the tangent vector at the specified distance along the geometry. If the geometry is empty,  this vector contains NaN as its x and y values. You must allocate storage for this parameter.</para></param>	
            <returns><para>The location at the specified distance along the geometry. If the geometry is empty,  this point contains NaN as its x and y values.</para></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Geometry::ComputePointAtLength']/*"/>	
            <unmanaged>HRESULT ID2D1Geometry::ComputePointAtLength([In] float length,[In, Optional] const D2D_MATRIX_3X2_F* worldTransform,[In] float flatteningTolerance,[Out, Optional] D2D_POINT_2F* point,[Out, Optional] D2D_POINT_2F* unitTangentVector)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.Widen_(System.Single,SharpDX.Direct2D1.StrokeStyle,System.Nullable{SharpDX.Matrix3x2},System.Single,System.IntPtr)">
            <summary>	
            Widens the geometry by the specified stroke and writes the result to an <see cref="T:SharpDX.Direct2D1.SimplifiedGeometrySink"/> after it has been transformed by the specified matrix and flattened using the default tolerance.	
            </summary>	
            <param name="strokeWidth">No documentation.</param>	
            <param name="strokeStyle">No documentation.</param>	
            <param name="worldTransform">No documentation.</param>	
            <param name="flatteningTolerance">No documentation.</param>	
            <param name="geometrySink">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Geometry::Widen']/*"/>	
            <unmanaged>HRESULT ID2D1Geometry::Widen([In] float strokeWidth,[In, Optional] ID2D1StrokeStyle* strokeStyle,[In, Optional] const D2D_MATRIX_3X2_F* worldTransform,[In] float flatteningTolerance,[In] ID2D1SimplifiedGeometrySink* geometrySink)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.Combine(SharpDX.Direct2D1.Geometry,SharpDX.Direct2D1.CombineMode,SharpDX.Direct2D1.GeometrySink)">
            <summary>	
            Combines this geometry with the specified geometry and stores the result in an <see cref="T:SharpDX.Direct2D1.SimplifiedGeometrySink"/>.  	
            </summary>	
            <param name="inputGeometry">The geometry to combine with this instance.</param>
            <param name="combineMode">The type of combine operation to perform.</param>
            <param name="geometrySink">The result of the combine operation.</param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
            <unmanaged>HRESULT CombineWithGeometry([In] ID2D1Geometry* inputGeometry,[None] D2D1_COMBINE_MODE combineMode,[In, Optional] const D2D1_MATRIX_3X2_F* inputGeometryTransform,[None] FLOAT flatteningTolerance,[In] ID2D1SimplifiedGeometrySink* geometrySink)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.Combine(SharpDX.Direct2D1.Geometry,SharpDX.Direct2D1.CombineMode,System.Single,SharpDX.Direct2D1.GeometrySink)">
            <summary>	
            Combines this geometry with the specified geometry and stores the result in an <see cref="T:SharpDX.Direct2D1.SimplifiedGeometrySink"/>.  	
            </summary>	
            <param name="inputGeometry">The geometry to combine with this instance.</param>
            <param name="combineMode">The type of combine operation to perform.</param>
            <param name="flatteningTolerance">The maximum bounds on the distance between points in the polygonal approximation of the geometries. Smaller values produce more accurate results but cause slower execution. </param>
            <param name="geometrySink">The result of the combine operation.</param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
            <unmanaged>HRESULT CombineWithGeometry([In] ID2D1Geometry* inputGeometry,[None] D2D1_COMBINE_MODE combineMode,[In, Optional] const D2D1_MATRIX_3X2_F* inputGeometryTransform,[None] FLOAT flatteningTolerance,[In] ID2D1SimplifiedGeometrySink* geometrySink)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.Combine(SharpDX.Direct2D1.Geometry,SharpDX.Direct2D1.CombineMode,System.Nullable{SharpDX.Matrix3x2},System.Single,SharpDX.Direct2D1.GeometrySink)">
            <summary>	
            Combines this geometry with the specified geometry and stores the result in an <see cref="T:SharpDX.Direct2D1.SimplifiedGeometrySink"/>.  	
            </summary>	
            <param name="inputGeometry">The geometry to combine with this instance.</param>
            <param name="combineMode">The type of combine operation to perform.</param>
            <param name="inputGeometryTransform">The transform to apply to inputGeometry before combining, or NULL.</param>
            <param name="flatteningTolerance">The maximum bounds on the distance between points in the polygonal approximation of the geometries. Smaller values produce more accurate results but cause slower execution. </param>
            <param name="geometrySink">The result of the combine operation.</param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
            <unmanaged>HRESULT CombineWithGeometry([In] ID2D1Geometry* inputGeometry,[None] D2D1_COMBINE_MODE combineMode,[In, Optional] const D2D1_MATRIX_3X2_F* inputGeometryTransform,[None] FLOAT flatteningTolerance,[In] ID2D1SimplifiedGeometrySink* geometrySink)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.Compare(SharpDX.Direct2D1.Geometry)">
            <summary>	
            Describes the intersection between this geometry and the specified geometry. The comparison is performed by using the specified flattening tolerance.	
            </summary>	
            <remarks>	
            When interpreting the returned relation value, it is important to remember that the member <see cref="F:SharpDX.Direct2D1.GeometryRelation.IsContained" /> of the  D2D1_GEOMETRY_RELATION enumeration type means that this geometry is contained  inside inputGeometry, not that this geometry contains inputGeometry.  For  more information about how to interpret other possible return values, see <see cref="T:SharpDX.Direct2D1.GeometryRelation" />. 	
            </remarks>	
            <param name="inputGeometry">The geometry to test.  </param>
            <returns>When this method returns, contains a reference to a value that describes how this geometry is related to inputGeometry. You must allocate storage for this parameter.   </returns>
            <unmanaged>HRESULT ID2D1Geometry::CompareWithGeometry([In] ID2D1Geometry* inputGeometry,[In, Optional] const D2D1_MATRIX_3X2_F* inputGeometryTransform,[None] float flatteningTolerance,[Out] D2D1_GEOMETRY_RELATION* relation)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.Compare(SharpDX.Direct2D1.Geometry,System.Single)">
            <summary>	
            Describes the intersection between this geometry and the specified geometry. The comparison is performed by using the specified flattening tolerance.	
            </summary>	
            <remarks>	
            When interpreting the returned relation value, it is important to remember that the member <see cref="F:SharpDX.Direct2D1.GeometryRelation.IsContained" /> of the  D2D1_GEOMETRY_RELATION enumeration type means that this geometry is contained  inside inputGeometry, not that this geometry contains inputGeometry.  For  more information about how to interpret other possible return values, see <see cref="T:SharpDX.Direct2D1.GeometryRelation" />. 	
            </remarks>	
            <param name="inputGeometry">The geometry to test.  </param>
            <param name="flatteningTolerance">The maximum bounds on the distance between points in the polygonal approximation of the geometries. Smaller values produce more accurate results but cause slower execution.  </param>
            <returns>When this method returns, contains a reference to a value that describes how this geometry is related to inputGeometry. You must allocate storage for this parameter.   </returns>
            <unmanaged>HRESULT ID2D1Geometry::CompareWithGeometry([In] ID2D1Geometry* inputGeometry,[In, Optional] const D2D1_MATRIX_3X2_F* inputGeometryTransform,[None] float flatteningTolerance,[Out] D2D1_GEOMETRY_RELATION* relation)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.ComputeArea">
            <summary>	
            Computes the area of the geometry after it has been transformed by the specified matrix and flattened using the specified tolerance.	
            </summary>	
            <returns>When this this method returns, contains a reference to the area of the transformed, flattened version of this geometry. You must allocate storage for this parameter. </returns>
            <unmanaged>HRESULT ID2D1Geometry::ComputeArea([In, Optional] const D2D1_MATRIX_3X2_F* worldTransform,[None] float flatteningTolerance,[Out] float* area)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.ComputeArea(System.Single)">
            <summary>	
            Computes the area of the geometry after it has been transformed by the specified matrix and flattened using the specified tolerance.	
            </summary>	
            <param name="flatteningTolerance">The maximum bounds on the distance between points in the polygonal approximation of the geometry. Smaller values produce more accurate results but cause slower execution.  </param>
            <returns>When this this method returns, contains a reference to the area of the transformed, flattened version of this geometry. You must allocate storage for this parameter. </returns>
            <unmanaged>HRESULT ID2D1Geometry::ComputeArea([In, Optional] const D2D1_MATRIX_3X2_F* worldTransform,[None] float flatteningTolerance,[Out] float* area)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.ComputeLength">
            <summary>	
            Calculates the length of the geometry as though each segment were unrolled into a line. 	
            </summary>	
            <returns>When this method returns, contains a reference to the length of the geometry. For closed geometries, the length includes an implicit closing segment. You must allocate storage for this parameter. </returns>
            <unmanaged>HRESULT ID2D1Geometry::ComputeLength([In, Optional] const D2D1_MATRIX_3X2_F* worldTransform,[None] float flatteningTolerance,[Out] float* length)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.ComputeLength(System.Single)">
            <summary>	
            Calculates the length of the geometry as though each segment were unrolled into a line. 	
            </summary>	
            <param name="flatteningTolerance">The maximum bounds on the distance between points in the polygonal approximation of the geometry. Smaller values produce more accurate results but cause slower execution.  </param>
            <returns>When this method returns, contains a reference to the length of the geometry. For closed geometries, the length includes an implicit closing segment. You must allocate storage for this parameter. </returns>
            <unmanaged>HRESULT ID2D1Geometry::ComputeLength([In, Optional] const D2D1_MATRIX_3X2_F* worldTransform,[None] float flatteningTolerance,[Out] float* length)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.ComputePointAtLength(System.Single,SharpDX.DrawingPointF@)">
            <summary>	
            Calculates the point and tangent vector at the specified distance along the geometry after it has been transformed by the specified matrix and flattened using the specified tolerance.	
            </summary>	
            <param name="length">The distance along the geometry of the point and tangent to find. If this distance is less then 0, this method calculates the first point in the geometry. If this distance is greater than the length of the geometry, this method calculates the last point in the geometry. </param>
            <param name="unitTangentVector">Whenthis method returns, contains a reference to the tangent vector at the specified distance along the geometry. If the geometry is empty,  this vector contains NaN as its x and y values. You must allocate storage for this parameter. </param>
            <returns>The location at the specified distance along the geometry. If the geometry is empty,  this point contains NaN as its x and y values. </returns>
            <unmanaged>HRESULT ID2D1Geometry::ComputePointAtLength([None] float length,[In, Optional] const D2D1_MATRIX_3X2_F* worldTransform,[None] float flatteningTolerance,[Out, Optional] D2D1_POINT_2F* point,[Out, Optional] D2D1_POINT_2F* unitTangentVector)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.ComputePointAtLength(System.Single,System.Single,SharpDX.DrawingPointF@)">
            <summary>	
            Calculates the point and tangent vector at the specified distance along the geometry after it has been transformed by the specified matrix and flattened using the specified tolerance.	
            </summary>	
            <param name="length">The distance along the geometry of the point and tangent to find. If this distance is less then 0, this method calculates the first point in the geometry. If this distance is greater than the length of the geometry, this method calculates the last point in the geometry. </param>
            <param name="flatteningTolerance">The maximum bounds on the distance between points in the polygonal approximation of the geometry. Smaller values produce more accurate results but cause slower execution. </param>
            <param name="unitTangentVector">Whenthis method returns, contains a reference to the tangent vector at the specified distance along the geometry. If the geometry is empty,  this vector contains NaN as its x and y values. You must allocate storage for this parameter. </param>
            <returns>The location at the specified distance along the geometry. If the geometry is empty,  this point contains NaN as its x and y values. </returns>
            <unmanaged>HRESULT ID2D1Geometry::ComputePointAtLength([None] float length,[In, Optional] const D2D1_MATRIX_3X2_F* worldTransform,[None] float flatteningTolerance,[Out, Optional] D2D1_POINT_2F* point,[Out, Optional] D2D1_POINT_2F* unitTangentVector)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.FillContainsPoint(SharpDX.DrawingPoint)">
            <summary>	
            Indicates whether the area filled by the geometry would contain the specified point given the specified flattening tolerance. 	
            </summary>	
            <param name="point">The point to test. </param>
            <returns>When this method returns, contains a bool value that is true if the area filled by the geometry contains point; otherwise, false.You must allocate storage for this parameter. </returns>
            <unmanaged>HRESULT ID2D1Geometry::FillContainsPoint([None] D2D1_POINT_2F point,[In, Optional] const D2D1_MATRIX_3X2_F* worldTransform,[None] float flatteningTolerance,[Out] BOOL* contains)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.FillContainsPoint(SharpDX.DrawingPointF)">
            <summary>	
            Indicates whether the area filled by the geometry would contain the specified point given the specified flattening tolerance. 	
            </summary>	
            <param name="point">The point to test. </param>
            <returns>When this method returns, contains a bool value that is true if the area filled by the geometry contains point; otherwise, false.You must allocate storage for this parameter. </returns>
            <unmanaged>HRESULT ID2D1Geometry::FillContainsPoint([None] D2D1_POINT_2F point,[In, Optional] const D2D1_MATRIX_3X2_F* worldTransform,[None] float flatteningTolerance,[Out] BOOL* contains)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.FillContainsPoint(SharpDX.DrawingPoint,System.Single)">
            <summary>	
            Indicates whether the area filled by the geometry would contain the specified point given the specified flattening tolerance. 	
            </summary>	
            <param name="point">The point to test. </param>
            <param name="flatteningTolerance">The numeric accuracy with which the precise geometric path and path intersection is calculated. Points missing the fill by less than the tolerance are still considered inside.  Smaller values produce more accurate results but cause slower execution.  </param>
            <returns>When this method returns, contains a bool value that is true if the area filled by the geometry contains point; otherwise, false.You must allocate storage for this parameter. </returns>
            <unmanaged>HRESULT ID2D1Geometry::FillContainsPoint([None] D2D1_POINT_2F point,[In, Optional] const D2D1_MATRIX_3X2_F* worldTransform,[None] float flatteningTolerance,[Out] BOOL* contains)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.FillContainsPoint(SharpDX.DrawingPointF,System.Single)">
            <summary>	
            Indicates whether the area filled by the geometry would contain the specified point given the specified flattening tolerance. 	
            </summary>	
            <param name="point">The point to test. </param>
            <param name="flatteningTolerance">The numeric accuracy with which the precise geometric path and path intersection is calculated. Points missing the fill by less than the tolerance are still considered inside.  Smaller values produce more accurate results but cause slower execution.  </param>
            <returns>When this method returns, contains a bool value that is true if the area filled by the geometry contains point; otherwise, false.You must allocate storage for this parameter. </returns>
            <unmanaged>HRESULT ID2D1Geometry::FillContainsPoint([None] D2D1_POINT_2F point,[In, Optional] const D2D1_MATRIX_3X2_F* worldTransform,[None] float flatteningTolerance,[Out] BOOL* contains)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.FillContainsPoint(SharpDX.DrawingPoint,SharpDX.Matrix3x2,System.Single)">
            <summary>	
            Indicates whether the area filled by the geometry would contain the specified point given the specified flattening tolerance. 	
            </summary>	
            <param name="point">The point to test. </param>
            <param name="worldTransform">The transform to apply to the geometry prior to testing for containment, or NULL. </param>
            <param name="flatteningTolerance">The numeric accuracy with which the precise geometric path and path intersection is calculated. Points missing the fill by less than the tolerance are still considered inside.  Smaller values produce more accurate results but cause slower execution.  </param>
            <returns>When this method returns, contains a bool value that is true if the area filled by the geometry contains point; otherwise, false.You must allocate storage for this parameter. </returns>
            <unmanaged>HRESULT ID2D1Geometry::FillContainsPoint([None] D2D1_POINT_2F point,[In, Optional] const D2D1_MATRIX_3X2_F* worldTransform,[None] float flatteningTolerance,[Out] BOOL* contains)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.GetBounds">
            <summary>	
            Retrieves the bounds of the geometry.	
            </summary>	
            <returns>When this method returns, contains the bounds of this geometry. If the bounds are empty, this will be a rect where bounds.left &gt; bounds.right. You must allocate storage for this parameter. </returns>
            <unmanaged>HRESULT ID2D1Geometry::GetBounds([In, Optional] const D2D1_MATRIX_3X2_F* worldTransform,[Out] D2D1_RECT_F* bounds)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.GetWidenedBounds(System.Single)">
            <summary>	
            Gets the bounds of the geometry after it has been widened by the specified stroke width and style and transformed by the specified matrix.	
            </summary>	
            <param name="strokeWidth">The amount by which to widen the geometry by stroking its outline. </param>
            <returns>When this method returns, contains the bounds of the widened geometry. You must allocate storage for this parameter. </returns>
            <unmanaged>HRESULT ID2D1Geometry::GetWidenedBounds([None] float strokeWidth,[In, Optional] ID2D1StrokeStyle* strokeStyle,[In, Optional] const D2D1_MATRIX_3X2_F* worldTransform,[None] float flatteningTolerance,[Out] D2D1_RECT_F* bounds)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.GetWidenedBounds(System.Single,System.Single)">
            <summary>	
            Gets the bounds of the geometry after it has been widened by the specified stroke width and style and transformed by the specified matrix.	
            </summary>	
            <param name="strokeWidth">The amount by which to widen the geometry by stroking its outline. </param>
            <param name="flatteningTolerance">The maximum bounds on the distance between points in the polygonal approximation of the geometry. Smaller values produce more accurate results but cause slower execution.  </param>
            <returns>When this method returns, contains the bounds of the widened geometry. You must allocate storage for this parameter. </returns>
            <unmanaged>HRESULT ID2D1Geometry::GetWidenedBounds([None] float strokeWidth,[In, Optional] ID2D1StrokeStyle* strokeStyle,[In, Optional] const D2D1_MATRIX_3X2_F* worldTransform,[None] float flatteningTolerance,[Out] D2D1_RECT_F* bounds)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.GetWidenedBounds(System.Single,SharpDX.Direct2D1.StrokeStyle,System.Single)">
            <summary>	
            Gets the bounds of the geometry after it has been widened by the specified stroke width and style and transformed by the specified matrix.	
            </summary>	
            <param name="strokeWidth">The amount by which to widen the geometry by stroking its outline. </param>
            <param name="strokeStyle">The style of the stroke that widens the geometry. </param>
            <param name="flatteningTolerance">The maximum bounds on the distance between points in the polygonal approximation of the geometry. Smaller values produce more accurate results but cause slower execution.  </param>
            <returns>When this method returns, contains the bounds of the widened geometry. You must allocate storage for this parameter. </returns>
            <unmanaged>HRESULT ID2D1Geometry::GetWidenedBounds([None] float strokeWidth,[In, Optional] ID2D1StrokeStyle* strokeStyle,[In, Optional] const D2D1_MATRIX_3X2_F* worldTransform,[None] float flatteningTolerance,[Out] D2D1_RECT_F* bounds)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.Outline(SharpDX.Direct2D1.GeometrySink)">
            <summary>	
            Computes the outline of the geometry and writes the result to an <see cref="T:SharpDX.Direct2D1.SimplifiedGeometrySink"/>.	
            </summary>	
            <remarks>	
            The {{Outline}} method allows the caller to produce a geometry with an equivalent fill to the input geometry, with the following additional properties: The output geometry contains no transverse intersections; that is, segments may touch, but they never cross.The outermost figures in the output geometry are all oriented counterclockwise. The output geometry is fill-mode invariant; that is, the fill of the geometry does not depend on the choice of the fill mode. For more information about the fill mode, see <see cref="T:SharpDX.Direct2D1.FillMode"/>.Additionally, the  {{Outline}} method can be useful in removing redundant portions of said geometries to simplify complex geometries. It can also be useful in combination with <see cref="T:SharpDX.Direct2D1.GeometryGroup"/> to create unions among several geometries simultaneously.	
            </remarks>	
            <param name="geometrySink">The <see cref="T:SharpDX.Direct2D1.SimplifiedGeometrySink"/> to which the geometry's transformed outline is appended. </param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
            <unmanaged>HRESULT Outline([In, Optional] const D2D1_MATRIX_3X2_F* worldTransform,[None] FLOAT flatteningTolerance,[In] ID2D1SimplifiedGeometrySink* geometrySink)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.Outline(System.Single,SharpDX.Direct2D1.GeometrySink)">
            <summary>	
            Computes the outline of the geometry and writes the result to an <see cref="T:SharpDX.Direct2D1.SimplifiedGeometrySink"/>.	
            </summary>	
            <remarks>	
            The {{Outline}} method allows the caller to produce a geometry with an equivalent fill to the input geometry, with the following additional properties: The output geometry contains no transverse intersections; that is, segments may touch, but they never cross.The outermost figures in the output geometry are all oriented counterclockwise. The output geometry is fill-mode invariant; that is, the fill of the geometry does not depend on the choice of the fill mode. For more information about the fill mode, see <see cref="T:SharpDX.Direct2D1.FillMode"/>.Additionally, the  {{Outline}} method can be useful in removing redundant portions of said geometries to simplify complex geometries. It can also be useful in combination with <see cref="T:SharpDX.Direct2D1.GeometryGroup"/> to create unions among several geometries simultaneously.	
            </remarks>	
            <param name="flatteningTolerance">The maximum bounds on the distance between points in the polygonal approximation of the geometry. Smaller values produce more accurate results but cause slower execution. </param>
            <param name="geometrySink">The <see cref="T:SharpDX.Direct2D1.SimplifiedGeometrySink"/> to which the geometry's transformed outline is appended. </param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
            <unmanaged>HRESULT Outline([In, Optional] const D2D1_MATRIX_3X2_F* worldTransform,[None] FLOAT flatteningTolerance,[In] ID2D1SimplifiedGeometrySink* geometrySink)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.Outline(System.Nullable{SharpDX.Matrix3x2},System.Single,SharpDX.Direct2D1.GeometrySink)">
            <summary>	
            Computes the outline of the geometry and writes the result to an <see cref="T:SharpDX.Direct2D1.SimplifiedGeometrySink"/>.	
            </summary>	
            <remarks>	
            The {{Outline}} method allows the caller to produce a geometry with an equivalent fill to the input geometry, with the following additional properties: The output geometry contains no transverse intersections; that is, segments may touch, but they never cross.The outermost figures in the output geometry are all oriented counterclockwise. The output geometry is fill-mode invariant; that is, the fill of the geometry does not depend on the choice of the fill mode. For more information about the fill mode, see <see cref="T:SharpDX.Direct2D1.FillMode"/>.Additionally, the  {{Outline}} method can be useful in removing redundant portions of said geometries to simplify complex geometries. It can also be useful in combination with <see cref="T:SharpDX.Direct2D1.GeometryGroup"/> to create unions among several geometries simultaneously.	
            </remarks>	
            <param name="worldTransform">The transform to apply to the geometry outline, or NULL.</param>
            <param name="flatteningTolerance">The maximum bounds on the distance between points in the polygonal approximation of the geometry. Smaller values produce more accurate results but cause slower execution. </param>
            <param name="geometrySink">The <see cref="T:SharpDX.Direct2D1.SimplifiedGeometrySink"/> to which the geometry's transformed outline is appended. </param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
            <unmanaged>HRESULT Outline([In, Optional] const D2D1_MATRIX_3X2_F* worldTransform,[None] FLOAT flatteningTolerance,[In] ID2D1SimplifiedGeometrySink* geometrySink)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.Simplify(SharpDX.Direct2D1.GeometrySimplificationOption,SharpDX.Direct2D1.GeometrySink)">
            <summary>	
            Creates a simplified version of the geometry that contains only lines and (optionally) cubic Bezier curves and writes the result to an <see cref="T:SharpDX.Direct2D1.SimplifiedGeometrySink"/>.	
            </summary>	
            <param name="simplificationOption">A value that specifies whether the simplified geometry should contain curves.</param>
            <param name="geometrySink"> The <see cref="T:SharpDX.Direct2D1.SimplifiedGeometrySink"/> to which the simplified geometry is appended. </param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
            <unmanaged>HRESULT Simplify([None] D2D1_GEOMETRY_SIMPLIFICATION_OPTION simplificationOption,[In, Optional] const D2D1_MATRIX_3X2_F* worldTransform,[None] FLOAT flatteningTolerance,[In] ID2D1SimplifiedGeometrySink* geometrySink)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.Simplify(SharpDX.Direct2D1.GeometrySimplificationOption,System.Single,SharpDX.Direct2D1.GeometrySink)">
            <summary>	
            Creates a simplified version of the geometry that contains only lines and (optionally) cubic Bezier curves and writes the result to an <see cref="T:SharpDX.Direct2D1.SimplifiedGeometrySink"/>.	
            </summary>	
            <param name="simplificationOption">A value that specifies whether the simplified geometry should contain curves.</param>
            <param name="flatteningTolerance">The maximum bounds on the distance between points in the polygonal approximation of the geometry. Smaller values produce more accurate results but cause slower execution. </param>
            <param name="geometrySink"> The <see cref="T:SharpDX.Direct2D1.SimplifiedGeometrySink"/> to which the simplified geometry is appended. </param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
            <unmanaged>HRESULT Simplify([None] D2D1_GEOMETRY_SIMPLIFICATION_OPTION simplificationOption,[In, Optional] const D2D1_MATRIX_3X2_F* worldTransform,[None] FLOAT flatteningTolerance,[In] ID2D1SimplifiedGeometrySink* geometrySink)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.Simplify(SharpDX.Direct2D1.GeometrySimplificationOption,System.Nullable{SharpDX.Matrix3x2},System.Single,SharpDX.Direct2D1.GeometrySink)">
            <summary>	
            Creates a simplified version of the geometry that contains only lines and (optionally) cubic Bezier curves and writes the result to an <see cref="T:SharpDX.Direct2D1.SimplifiedGeometrySink"/>.	
            </summary>	
            <param name="simplificationOption">A value that specifies whether the simplified geometry should contain curves.</param>
            <param name="worldTransform">The transform to apply to the simplified geometry, or NULL.</param>
            <param name="flatteningTolerance">The maximum bounds on the distance between points in the polygonal approximation of the geometry. Smaller values produce more accurate results but cause slower execution. </param>
            <param name="geometrySink"> The <see cref="T:SharpDX.Direct2D1.SimplifiedGeometrySink"/> to which the simplified geometry is appended. </param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
            <unmanaged>HRESULT Simplify([None] D2D1_GEOMETRY_SIMPLIFICATION_OPTION simplificationOption,[In, Optional] const D2D1_MATRIX_3X2_F* worldTransform,[None] FLOAT flatteningTolerance,[In] ID2D1SimplifiedGeometrySink* geometrySink)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.StrokeContainsPoint(SharpDX.DrawingPoint,System.Single)">
            <summary>	
            Determines whether the geometry's stroke contains the specified point given the specified stroke thickness, style, and transform. 	
            </summary>	
            <param name="point">The point to test for containment. </param>
            <param name="strokeWidth">The thickness of the stroke to apply. </param>
            <returns>When this method returns, contains a boolean value set to true if the geometry's stroke contains the specified point; otherwise, false. You must allocate storage for this parameter. </returns>
            <unmanaged>HRESULT ID2D1Geometry::StrokeContainsPoint([None] D2D1_POINT_2F point,[None] float strokeWidth,[In, Optional] ID2D1StrokeStyle* strokeStyle,[In, Optional] const D2D1_MATRIX_3X2_F* worldTransform,[None] float flatteningTolerance,[Out] BOOL* contains)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.StrokeContainsPoint(SharpDX.DrawingPointF,System.Single)">
            <summary>	
            Determines whether the geometry's stroke contains the specified point given the specified stroke thickness, style, and transform. 	
            </summary>	
            <param name="point">The point to test for containment. </param>
            <param name="strokeWidth">The thickness of the stroke to apply. </param>
            <returns>When this method returns, contains a boolean value set to true if the geometry's stroke contains the specified point; otherwise, false. You must allocate storage for this parameter. </returns>
            <unmanaged>HRESULT ID2D1Geometry::StrokeContainsPoint([None] D2D1_POINT_2F point,[None] float strokeWidth,[In, Optional] ID2D1StrokeStyle* strokeStyle,[In, Optional] const D2D1_MATRIX_3X2_F* worldTransform,[None] float flatteningTolerance,[Out] BOOL* contains)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.StrokeContainsPoint(SharpDX.DrawingPoint,System.Single,SharpDX.Direct2D1.StrokeStyle)">
            <summary>	
            Determines whether the geometry's stroke contains the specified point given the specified stroke thickness, style, and transform. 	
            </summary>	
            <param name="point">The point to test for containment. </param>
            <param name="strokeWidth">The thickness of the stroke to apply. </param>
            <param name="strokeStyle">The style of stroke to apply. </param>
            <returns>When this method returns, contains a boolean value set to true if the geometry's stroke contains the specified point; otherwise, false. You must allocate storage for this parameter. </returns>
            <unmanaged>HRESULT ID2D1Geometry::StrokeContainsPoint([None] D2D1_POINT_2F point,[None] float strokeWidth,[In, Optional] ID2D1StrokeStyle* strokeStyle,[In, Optional] const D2D1_MATRIX_3X2_F* worldTransform,[None] float flatteningTolerance,[Out] BOOL* contains)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.StrokeContainsPoint(SharpDX.DrawingPointF,System.Single,SharpDX.Direct2D1.StrokeStyle)">
            <summary>	
            Determines whether the geometry's stroke contains the specified point given the specified stroke thickness, style, and transform. 	
            </summary>	
            <param name="point">The point to test for containment. </param>
            <param name="strokeWidth">The thickness of the stroke to apply. </param>
            <param name="strokeStyle">The style of stroke to apply. </param>
            <returns>When this method returns, contains a boolean value set to true if the geometry's stroke contains the specified point; otherwise, false. You must allocate storage for this parameter. </returns>
            <unmanaged>HRESULT ID2D1Geometry::StrokeContainsPoint([None] D2D1_POINT_2F point,[None] float strokeWidth,[In, Optional] ID2D1StrokeStyle* strokeStyle,[In, Optional] const D2D1_MATRIX_3X2_F* worldTransform,[None] float flatteningTolerance,[Out] BOOL* contains)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.StrokeContainsPoint(SharpDX.DrawingPoint,System.Single,SharpDX.Direct2D1.StrokeStyle,SharpDX.Matrix3x2)">
            <summary>	
            Determines whether the geometry's stroke contains the specified point given the specified stroke thickness, style, and transform. 	
            </summary>	
            <param name="point">The point to test for containment. </param>
            <param name="strokeWidth">The thickness of the stroke to apply. </param>
            <param name="strokeStyle">The style of stroke to apply. </param>
            <param name="transform">The transform to apply to the stroked geometry.  </param>
            <returns>When this method returns, contains a boolean value set to true if the geometry's stroke contains the specified point; otherwise, false. You must allocate storage for this parameter. </returns>
            <unmanaged>HRESULT ID2D1Geometry::StrokeContainsPoint([None] D2D1_POINT_2F point,[None] float strokeWidth,[In, Optional] ID2D1StrokeStyle* strokeStyle,[In, Optional] const D2D1_MATRIX_3X2_F* worldTransform,[None] float flatteningTolerance,[Out] BOOL* contains)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.StrokeContainsPoint(SharpDX.DrawingPointF,System.Single,SharpDX.Direct2D1.StrokeStyle,SharpDX.Matrix3x2)">
            <summary>	
            Determines whether the geometry's stroke contains the specified point given the specified stroke thickness, style, and transform. 	
            </summary>	
            <param name="point">The point to test for containment. </param>
            <param name="strokeWidth">The thickness of the stroke to apply. </param>
            <param name="strokeStyle">The style of stroke to apply. </param>
            <param name="transform">The transform to apply to the stroked geometry.  </param>
            <returns>When this method returns, contains a boolean value set to true if the geometry's stroke contains the specified point; otherwise, false. You must allocate storage for this parameter. </returns>
            <unmanaged>HRESULT ID2D1Geometry::StrokeContainsPoint([None] D2D1_POINT_2F point,[None] float strokeWidth,[In, Optional] ID2D1StrokeStyle* strokeStyle,[In, Optional] const D2D1_MATRIX_3X2_F* worldTransform,[None] float flatteningTolerance,[Out] BOOL* contains)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.StrokeContainsPoint(SharpDX.DrawingPoint,System.Single,SharpDX.Direct2D1.StrokeStyle,SharpDX.Matrix3x2,System.Single)">
            <summary>	
            Determines whether the geometry's stroke contains the specified point given the specified stroke thickness, style, and transform. 	
            </summary>	
            <param name="point">The point to test for containment. </param>
            <param name="strokeWidth">The thickness of the stroke to apply. </param>
            <param name="strokeStyle">The style of stroke to apply. </param>
            <param name="transform">The transform to apply to the stroked geometry.  </param>
            <param name="flatteningTolerance">The numeric accuracy with which the precise geometric path and path intersection is calculated. Points missing the stroke by less than the tolerance are still considered inside.  Smaller values produce more accurate results but cause slower execution. </param>
            <returns>When this method returns, contains a boolean value set to true if the geometry's stroke contains the specified point; otherwise, false. You must allocate storage for this parameter. </returns>
            <unmanaged>HRESULT ID2D1Geometry::StrokeContainsPoint([None] D2D1_POINT_2F point,[None] float strokeWidth,[In, Optional] ID2D1StrokeStyle* strokeStyle,[In, Optional] const D2D1_MATRIX_3X2_F* worldTransform,[None] float flatteningTolerance,[Out] BOOL* contains)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.Tessellate(SharpDX.Direct2D1.TessellationSink)">
            <summary>	
            Creates a set of clockwise-wound triangles that cover the geometry after it has been transformed using the specified matrix and flattened using the specified tolerance	
            </summary>	
            <param name="tessellationSink">The <see cref="T:SharpDX.Direct2D1.TessellationSink" /> to which the tessellated is appended.</param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
            <unmanaged>HRESULT Tessellate([In, Optional] const D2D1_MATRIX_3X2_F* worldTransform,[None] FLOAT flatteningTolerance,[In] ID2D1TessellationSink* tessellationSink)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.Tessellate(System.Single,SharpDX.Direct2D1.TessellationSink)">
            <summary>	
            Creates a set of clockwise-wound triangles that cover the geometry after it has been transformed using the specified matrix and flattened using the specified tolerance	
            </summary>	
            <param name="flatteningTolerance">The maximum bounds on the distance between points in the polygonal approximation of the geometry. Smaller values produce more accurate results but cause slower execution. </param>
            <param name="tessellationSink">The <see cref="T:SharpDX.Direct2D1.TessellationSink"/> to which the tessellated is appended.</param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
            <unmanaged>HRESULT Tessellate([In, Optional] const D2D1_MATRIX_3X2_F* worldTransform,[None] FLOAT flatteningTolerance,[In] ID2D1TessellationSink* tessellationSink)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.Tessellate(System.Nullable{SharpDX.Matrix3x2},System.Single,SharpDX.Direct2D1.TessellationSink)">
            <summary>	
            Creates a set of clockwise-wound triangles that cover the geometry after it has been transformed using the specified matrix and flattened using the specified tolerance	
            </summary>	
            <param name="worldTransform">The transform to apply to this geometry, or NULL.</param>
            <param name="flatteningTolerance">The maximum bounds on the distance between points in the polygonal approximation of the geometry. Smaller values produce more accurate results but cause slower execution. </param>
            <param name="tessellationSink">The <see cref="T:SharpDX.Direct2D1.TessellationSink"/> to which the tessellated is appended.</param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
            <unmanaged>HRESULT Tessellate([In, Optional] const D2D1_MATRIX_3X2_F* worldTransform,[None] FLOAT flatteningTolerance,[In] ID2D1TessellationSink* tessellationSink)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.Widen(System.Single,SharpDX.Direct2D1.GeometrySink)">
            <summary>	
            Widens the geometry by the specified stroke and writes the result to an <see cref="T:SharpDX.Direct2D1.SimplifiedGeometrySink"/> after it has been transformed by the specified matrix and flattened using the specified tolerance.	
            </summary>	
            <param name="strokeWidth">The amount by which to widen the geometry.</param>
            <param name="geometrySink">The <see cref="T:SharpDX.Direct2D1.SimplifiedGeometrySink"/> to which the widened geometry is appended.</param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
            <unmanaged>HRESULT Widen([None] FLOAT strokeWidth,[In, Optional] ID2D1StrokeStyle* strokeStyle,[In, Optional] const D2D1_MATRIX_3X2_F* worldTransform,[None] FLOAT flatteningTolerance,[In] ID2D1SimplifiedGeometrySink* geometrySink)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.Widen(System.Single,System.Single,SharpDX.Direct2D1.GeometrySink)">
            <summary>	
            Widens the geometry by the specified stroke and writes the result to an <see cref="T:SharpDX.Direct2D1.SimplifiedGeometrySink"/> after it has been transformed by the specified matrix and flattened using the specified tolerance.	
            </summary>	
            <param name="strokeWidth">The amount by which to widen the geometry.</param>
            <param name="flatteningTolerance">The maximum bounds on the distance between points in the polygonal approximation of the geometry. Smaller values produce more accurate results but cause slower execution.</param>
            <param name="geometrySink">The <see cref="T:SharpDX.Direct2D1.SimplifiedGeometrySink"/> to which the widened geometry is appended.</param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
            <unmanaged>HRESULT Widen([None] FLOAT strokeWidth,[In, Optional] ID2D1StrokeStyle* strokeStyle,[In, Optional] const D2D1_MATRIX_3X2_F* worldTransform,[None] FLOAT flatteningTolerance,[In] ID2D1SimplifiedGeometrySink* geometrySink)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.Widen(System.Single,SharpDX.Direct2D1.StrokeStyle,System.Single,SharpDX.Direct2D1.GeometrySink)">
            <summary>	
            Widens the geometry by the specified stroke and writes the result to an <see cref="T:SharpDX.Direct2D1.SimplifiedGeometrySink"/> after it has been transformed by the specified matrix and flattened using the specified tolerance.	
            </summary>	
            <param name="strokeWidth">The amount by which to widen the geometry.</param>
            <param name="strokeStyle">The style of stroke to apply to the geometry, or NULL.</param>
            <param name="flatteningTolerance">The maximum bounds on the distance between points in the polygonal approximation of the geometry. Smaller values produce more accurate results but cause slower execution.</param>
            <param name="geometrySink">The <see cref="T:SharpDX.Direct2D1.SimplifiedGeometrySink"/> to which the widened geometry is appended.</param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
            <unmanaged>HRESULT Widen([None] FLOAT strokeWidth,[In, Optional] ID2D1StrokeStyle* strokeStyle,[In, Optional] const D2D1_MATRIX_3X2_F* worldTransform,[None] FLOAT flatteningTolerance,[In] ID2D1SimplifiedGeometrySink* geometrySink)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Geometry.Widen(System.Single,SharpDX.Direct2D1.StrokeStyle,System.Nullable{SharpDX.Matrix3x2},System.Single,SharpDX.Direct2D1.GeometrySink)">
            <summary>	
            Widens the geometry by the specified stroke and writes the result to an <see cref="T:SharpDX.Direct2D1.SimplifiedGeometrySink"/> after it has been transformed by the specified matrix and flattened using the specified tolerance.	
            </summary>	
            <param name="strokeWidth">The amount by which to widen the geometry.</param>
            <param name="strokeStyle">The style of stroke to apply to the geometry, or NULL.</param>
            <param name="worldTransform">The transform to apply to the geometry after widening it, or NULL.</param>
            <param name="flatteningTolerance">The maximum bounds on the distance between points in the polygonal approximation of the geometry. Smaller values produce more accurate results but cause slower execution.</param>
            <param name="geometrySink">The <see cref="T:SharpDX.Direct2D1.SimplifiedGeometrySink"/> to which the widened geometry is appended.</param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
            <unmanaged>HRESULT Widen([None] FLOAT strokeWidth,[In, Optional] ID2D1StrokeStyle* strokeStyle,[In, Optional] const D2D1_MATRIX_3X2_F* worldTransform,[None] FLOAT flatteningTolerance,[In] ID2D1SimplifiedGeometrySink* geometrySink)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.Geometry.FlatteningTolerance">
            <summary>
            Get or set the default flattening tolerance used for all methods that are not explicitly using it. Default is set to 0.25f.
            </summary>
        </member>
        <member name="M:SharpDX.Direct2D1.EllipseGeometry.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.EllipseGeometry"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.EllipseGeometry.GetEllipse(SharpDX.Direct2D1.Ellipse@)">
            <summary>	
            Gets the <see cref="T:SharpDX.Direct2D1.Ellipse"/> structure that describes this ellipse geometry.	
            </summary>	
            <param name="ellipse">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1EllipseGeometry::GetEllipse']/*"/>	
            <unmanaged>void ID2D1EllipseGeometry::GetEllipse([Out] D2D1_ELLIPSE* ellipse)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.EllipseGeometry.#ctor(SharpDX.Direct2D1.Factory,SharpDX.Direct2D1.Ellipse)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.EllipseGeometry"/>. 	
            </summary>	
            <param name="factory">an instance of <see cref="T:SharpDX.Direct2D1.Factory"/></param>
            <param name="ellipse">A value that describes the center point, x-radius, and y-radius of the ellipse geometry.</param>
        </member>
        <member name="P:SharpDX.Direct2D1.EllipseGeometry.Ellipse">
            <summary>	
            Gets the <see cref="T:SharpDX.Direct2D1.Ellipse"/> structure that describes this ellipse geometry.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1EllipseGeometry::GetEllipse']/*"/>	
            <unmanaged>GetEllipse</unmanaged>	
            <unmanaged>void ID2D1EllipseGeometry::GetEllipse([Out] D2D1_ELLIPSE* ellipse)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.GdiMetafile">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GdiMetafile']/*"/>	
            <unmanaged>ID2D1GdiMetafile</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.GdiMetafile.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.GdiMetafile"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.GdiMetafile.Stream_(System.IntPtr)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="sink">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GdiMetafile::Stream']/*"/>	
            <unmanaged>HRESULT ID2D1GdiMetafile::Stream([In] ID2D1GdiMetafileSink* sink)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.GdiMetafile.GetBounds(SharpDX.RectangleF@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="bounds">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GdiMetafile::GetBounds']/*"/>	
            <unmanaged>HRESULT ID2D1GdiMetafile::GetBounds([Out] D2D_RECT_F* bounds)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct2D1.GdiMetafile.Bounds">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GdiMetafile::GetBounds']/*"/>	
            <unmanaged>GetBounds</unmanaged>	
            <unmanaged>HRESULT ID2D1GdiMetafile::GetBounds([Out] D2D_RECT_F* bounds)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.GdiMetafileSink">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GdiMetafileSink']/*"/>	
            <unmanaged>ID2D1GdiMetafileSink</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.GdiMetafileSinkNative">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GdiMetafileSink']/*"/>	
            <unmanaged>ID2D1GdiMetafileSink</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.GdiMetafileSinkNative.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.GdiMetafileSinkNative"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.GdiMetafileSinkNative.ProcessRecord_(System.Int32,System.IntPtr,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="recordType">No documentation.</param>	
            <param name="recordData">No documentation.</param>	
            <param name="recordDataSize">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GdiMetafileSink::ProcessRecord']/*"/>	
            <unmanaged>HRESULT ID2D1GdiMetafileSink::ProcessRecord([In] unsigned int recordType,[In, Optional] const void* recordData,[In] unsigned int recordDataSize)</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.GeometryGroup">
            <summary>	
            Represents a composite geometry, composed of other <see cref="T:SharpDX.Direct2D1.Geometry"/> objects.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GeometryGroup']/*"/>	
            <unmanaged>ID2D1GeometryGroup</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.GeometryGroup.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.GeometryGroup"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.GeometryGroup.GetFillMode">
            <summary>	
            Indicates how the intersecting areas of the geometries contained in this geometry group are combined.	
            </summary>	
            <returns>A value that indicates how the intersecting areas of the geometries contained in this geometry group are combined.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GeometryGroup::GetFillMode']/*"/>	
            <unmanaged>D2D1_FILL_MODE ID2D1GeometryGroup::GetFillMode()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.GeometryGroup.GetSourceGeometryCount">
            <summary>	
            Indicates the number of geometry objects in the geometry group.	
            </summary>	
            <returns>The number of geometries in the <see cref="T:SharpDX.Direct2D1.GeometryGroup"/>.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GeometryGroup::GetSourceGeometryCount']/*"/>	
            <unmanaged>unsigned int ID2D1GeometryGroup::GetSourceGeometryCount()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.GeometryGroup.GetSourceGeometries(SharpDX.Direct2D1.Geometry[],System.Int32)">
            <summary>	
            Retrieves the geometries in the geometry group.	
            </summary>	
            <param name="geometries"><para>When this method returns, contains the address of a reference to an array of geometries to be filled by this method. The length of the array is specified by the geometryCount parameter. If the array is <c>null</c>, then this method performs no operation. You must allocate the memory for this array.</para></param>	
            <param name="geometriesCount"><para>A value indicating the number of geometries to return in the geometries array. If this value is less than the number of geometries in the geometry group, the remaining geometries are omitted. If this value is larger than the number of geometries in the geometry group, the extra geometries are set to <c>null</c>. To obtain the number of geometries currently in the geometry group, use the GetSourceGeometryCount method.</para></param>	
            <remarks>	
            The returned geometries are referenced and  counted, and the caller must release them.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GeometryGroup::GetSourceGeometries']/*"/>	
            <unmanaged>void ID2D1GeometryGroup::GetSourceGeometries([Out, Buffer] ID2D1Geometry** geometries,[In] unsigned int geometriesCount)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.GeometryGroup.#ctor(SharpDX.Direct2D1.Factory,SharpDX.Direct2D1.FillMode,SharpDX.Direct2D1.Geometry[])">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.GeometryGroup"/>, which is an object that holds other geometries.	
            </summary>	
            <remarks>	
            Geometry groups are a convenient way to group several geometries simultaneously so all figures of several distinct geometries are concatenated into one. To create a  <see cref="T:SharpDX.Direct2D1.GeometryGroup"/> object, call  the CreateGeometryGroup method on the <see cref="T:SharpDX.Direct2D1.Factory"/> object, passing in the fillMode with possible values of   <see cref="F:SharpDX.Direct2D1.FillMode.Alternate"/> (alternate) and D2D1_FILL_MODE_WINDING, an array of geometry objects to add to the geometry group, and the number of elements in this array. 	
            </remarks>	
            <param name="factory">an instance of <see cref="T:SharpDX.Direct2D1.Factory"/></param>
            <param name="fillMode">A value that specifies the rule that a composite shape uses to determine whether a given point is part of the geometry. </param>
            <param name="geometries">An array containing the geometry objects to add to the geometry group. The number of elements in this array is indicated by the geometriesCount parameter.</param>
        </member>
        <member name="M:SharpDX.Direct2D1.GeometryGroup.GetSourceGeometry">
            <summary>	
            Retrieves the geometries in the geometry group. 	
            </summary>	
            <remarks>	
            The returned geometries are referenced and  counted, and the caller must release them. 	
            </remarks>	
            <returns>an array of geometries to be filled by this method. The length of the array is specified by the geometryCount parameter.</returns>
            <unmanaged>void ID2D1GeometryGroup::GetSourceGeometries([Out, Buffer] ID2D1Geometry** geometries,[None] int geometriesCount)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.GeometryGroup.GetSourceGeometry(System.Int32)">
            <summary>	
            Retrieves the geometries in the geometry group. 	
            </summary>	
            <remarks>	
            The returned geometries are referenced and  counted, and the caller must release them. 	
            </remarks>	
            <param name="geometriesCount">A value indicating the number of geometries to return in the geometries array. If this value is less than the number of geometries in the geometry group, the remaining geometries are omitted. If this value is larger than the number of geometries in the geometry group, the extra geometries are set to NULL. To obtain the number of geometries currently in the geometry group, use the {{GetSourceGeometryCount}} method. </param>
            <returns>an array of geometries to be filled by this method. The length of the array is specified by the geometryCount parameter.</returns>
            <unmanaged>void ID2D1GeometryGroup::GetSourceGeometries([Out, Buffer] ID2D1Geometry** geometries,[None] int geometriesCount)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.GeometryGroup.FillMode">
            <summary>	
            Indicates how the intersecting areas of the geometries contained in this geometry group are combined.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GeometryGroup::GetFillMode']/*"/>	
            <unmanaged>GetFillMode</unmanaged>	
            <unmanaged>D2D1_FILL_MODE ID2D1GeometryGroup::GetFillMode()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.GeometryGroup.SourceGeometryCount">
            <summary>	
            Indicates the number of geometry objects in the geometry group.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GeometryGroup::GetSourceGeometryCount']/*"/>	
            <unmanaged>GetSourceGeometryCount</unmanaged>	
            <unmanaged>unsigned int ID2D1GeometryGroup::GetSourceGeometryCount()</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.GeometrySink">
            <summary>	
            Describes a geometric path that can contain lines, arcs, cubic Bezier curves, and quadratic Bezier curves.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GeometrySink']/*"/>	
            <unmanaged>ID2D1GeometrySink</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.SimplifiedGeometrySink">
            <summary>	
            Describes a geometric path that does not contain quadratic bezier curves or arcs.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1SimplifiedGeometrySink']/*"/>	
            <unmanaged>ID2D1SimplifiedGeometrySink</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.SimplifiedGeometrySink.SetFillMode(SharpDX.Direct2D1.FillMode)">
            <summary>	
            Specifies the method used to determine which points are inside the geometry described by this geometry sink  and which points are outside.  	
            </summary>	
            <remarks>	
            The fill mode defaults to D2D1_FILL_MODE_ALTERNATE. To set the fill mode, call SetFillMode before the first call to {{BeginFigure}}. Not doing will put the geometry sink in an error state. 	
            </remarks>	
            <param name="fillMode">The method used to determine whether a given point is part of the geometry.</param>
            <unmanaged>void SetFillMode([None] D2D1_FILL_MODE fillMode)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.SimplifiedGeometrySink.SetSegmentFlags(SharpDX.Direct2D1.PathSegment)">
            <summary>	
            Specifies stroke and join options to be applied to new segments added to the geometry sink. 	
            </summary>	
            <remarks>	
            After this method is called, the specified segment flags are applied to each segment subsequently added to the sink. The segment flags are applied to every additional segment until this method is called again and a different set of segment flags is specified.     	
            </remarks>	
            <param name="vertexFlags">Stroke and join options to be applied to new segments added to the geometry sink.</param>
            <unmanaged>void SetSegmentFlags([None] D2D1_PATH_SEGMENT vertexFlags)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.SimplifiedGeometrySink.BeginFigure(SharpDX.DrawingPointF,SharpDX.Direct2D1.FigureBegin)">
            <summary>	
            Starts a new figure at the specified point. 	
            </summary>	
            <remarks>	
            If this method is called while a figure is currently in progress, the interface is invalidated and all future methods will fail.	
            </remarks>	
            <param name="startPoint">The point at which to begin the new figure.</param>
            <param name="figureBegin">Whether the new figure should be hollow or filled.</param>
            <unmanaged>void BeginFigure([None] D2D1_POINT_2F startPoint,[None] D2D1_FIGURE_BEGIN figureBegin)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.SimplifiedGeometrySink.AddLines(SharpDX.DrawingPointF[])">
            <summary>	
             Creates a sequence of lines using the specified points and adds them to the geometry sink.	
            </summary>	
            <param name="ointsRef">A pointer to an array of one or more points that describe the lines to draw. A line is drawn from the geometry sink's current point (the end point of the last segment drawn or the location specified by {{BeginFigure}}) to the first point in the array. if the array contains additional points, a line is drawn from the first point to the second point in the array, from the second point to the third point, and so on.   </param>
            <unmanaged>void AddLines([In, Buffer] const D2D1_POINT_2F* points,[None] UINT pointsCount)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.SimplifiedGeometrySink.AddBeziers(SharpDX.Direct2D1.BezierSegment[])">
            <summary>	
            Creates a sequence of cubic Bezier curves and adds them to the geometry sink. 	
            </summary>	
            <param name="beziers">A pointer to an array of Bezier segments that describes the Bezier curves to create. A curve is drawn from the geometry sink's current point (the end point of the last segment drawn or the location specified by {{BeginFigure}}) to the end point of the first Bezier segment in the array. if the array contains additional Bezier segments, each subsequent Bezier segment uses the end point of the preceding Bezier segment as its start point.</param>
            <unmanaged>void AddBeziers([In, Buffer] const D2D1_BEZIER_SEGMENT* beziers,[None] UINT beziersCount)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.SimplifiedGeometrySink.EndFigure(SharpDX.Direct2D1.FigureEnd)">
            <summary>	
             Ends the current figure; optionally, closes it.	
            </summary>	
            <remarks>	
            Calling this method without a matching call to {{BeginFigure}} places the geometry sink in an error state; subsequent calls are ignored, and the overall failure will be returned when the {{Close}} method is called.	
            </remarks>	
            <param name="figureEnd">A value that indicates whether the current figure is closed. If the figure is closed, a line is drawn between the current point and the start point specified by {{BeginFigure}}.</param>
            <unmanaged>void EndFigure([None] D2D1_FIGURE_END figureEnd)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.SimplifiedGeometrySink.Close">
            <summary>	
            Closes the geometry sink, indicates whether it is in an error state, and resets the sink's error state. 	
            </summary>	
            <remarks>	
            Do not close the geometry sink while a figure is still in progress; doing so puts the geometry sink in an error state. For the close operation to be successful, there must be one {{EndFigure}} call for each call to {{BeginFigure}}.After calling this method, the geometry sink might not be usable. Direct2D implementations of this interface do not allow the geometry sink to be modified after it is closed, but other implementations might not impose this restriction.	
            </remarks>	
            <unmanaged>HRESULT Close()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.GeometrySink.AddLine(SharpDX.DrawingPointF)">
            <summary>	
            Creates a line segment between the current point and the specified end point and adds it to the geometry sink. 	
            </summary>	
            <param name="point">The end point of the line to draw.</param>
            <unmanaged>void AddLine([None] D2D1_POINT_2F point)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.GeometrySink.AddBezier(SharpDX.Direct2D1.BezierSegment)">
            <summary>	
             Creates  a cubic Bezier curve between the current point and the specified endpoint.	
            </summary>	
            <param name="bezier">A structure that describes the control points and endpoint of the Bezier curve to add. </param>
            <unmanaged>void AddBezier([In] const D2D1_BEZIER_SEGMENT* bezier)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.GeometrySink.AddQuadraticBezier(SharpDX.Direct2D1.QuadraticBezierSegment)">
            <summary>	
            Creates  a quadratic Bezier curve between the current point and the specified endpoint.	
            </summary>	
            <param name="bezier">A structure that describes the control point and the endpoint of the quadratic Bezier curve to add.</param>
            <unmanaged>void AddQuadraticBezier([In] const D2D1_QUADRATIC_BEZIER_SEGMENT* bezier)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.GeometrySink.AddQuadraticBeziers(SharpDX.Direct2D1.QuadraticBezierSegment[])">
            <summary>	
            Adds a sequence of quadratic Bezier segments as an array in a single call.	
            </summary>	
            <param name="beziers">An array of a sequence of quadratic Bezier segments.</param>
            <unmanaged>void AddQuadraticBeziers([In, Buffer] const D2D1_QUADRATIC_BEZIER_SEGMENT* beziers,[None] UINT beziersCount)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.GeometrySink.AddArc(SharpDX.Direct2D1.ArcSegment)">
            <summary>	
            Adds a single arc to the path geometry.	
            </summary>	
            <param name="arc">The arc segment to add to the figure.</param>
            <unmanaged>void AddArc([In] const D2D1_ARC_SEGMENT* arc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.GeometrySinkNative">
            <summary>	
            Describes a geometric path that can contain lines, arcs, cubic Bezier curves, and quadratic Bezier curves.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GeometrySink']/*"/>	
            <unmanaged>ID2D1GeometrySink</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.SimplifiedGeometrySinkNative">
            <summary>	
            Describes a geometric path that does not contain quadratic bezier curves or arcs.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1SimplifiedGeometrySink']/*"/>	
            <unmanaged>ID2D1SimplifiedGeometrySink</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.SimplifiedGeometrySinkNative.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.SimplifiedGeometrySinkNative"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.SimplifiedGeometrySinkNative.SetFillMode_(SharpDX.Direct2D1.FillMode)">
            <summary>	
            Specifies the method used to determine which points are inside the geometry described by this geometry sink  and which points are outside.	
            </summary>	
            <param name="fillMode"><para>The method used to determine whether a given point is part of the geometry.</para></param>	
            <remarks>	
            The fill mode defaults to <see cref="F:SharpDX.Direct2D1.FillMode.Alternate"/>. To set the fill mode, call SetFillMode before the first call to BeginFigure. Not doing will put the geometry sink in an error state.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1SimplifiedGeometrySink::SetFillMode']/*"/>	
            <unmanaged>void ID2D1SimplifiedGeometrySink::SetFillMode([In] D2D1_FILL_MODE fillMode)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.SimplifiedGeometrySinkNative.SetSegmentFlags_(SharpDX.Direct2D1.PathSegment)">
            <summary>	
            Specifies stroke and join options to be applied to new segments added to the geometry sink.	
            </summary>	
            <param name="vertexFlags"><para>Stroke and join options to be applied to new segments added to the geometry sink.</para></param>	
            <remarks>	
            After this method is called, the specified segment flags are applied to each segment subsequently added to the sink. The segment flags are applied to every additional segment until this method is called again and a different set of segment flags is specified.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1SimplifiedGeometrySink::SetSegmentFlags']/*"/>	
            <unmanaged>void ID2D1SimplifiedGeometrySink::SetSegmentFlags([In] D2D1_PATH_SEGMENT vertexFlags)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.SimplifiedGeometrySinkNative.BeginFigure_(SharpDX.DrawingPointF,SharpDX.Direct2D1.FigureBegin)">
            <summary>	
            Starts a new figure at the specified point.	
            </summary>	
            <param name="startPoint"><para>The point at which to begin the new figure.</para></param>	
            <param name="figureBegin"><para>Whether the new figure should be hollow or filled.</para></param>	
            <remarks>	
            If this method is called while a figure is currently in progress, the interface is invalidated and all future methods will fail.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1SimplifiedGeometrySink::BeginFigure']/*"/>	
            <unmanaged>void ID2D1SimplifiedGeometrySink::BeginFigure([In] D2D_POINT_2F startPoint,[In] D2D1_FIGURE_BEGIN figureBegin)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.SimplifiedGeometrySinkNative.AddLines_(SharpDX.DrawingPointF[],System.Int32)">
            <summary>	
            Creates a sequence of lines using the specified points and adds them to the geometry sink.	
            </summary>	
            <param name="ointsRef"><para>A reference to an array of one or more points that describe the lines to draw. A line is drawn from the geometry sink's current point (the end point of the last segment drawn or the location specified by BeginFigure) to the first point in the array. if the array contains additional points, a line is drawn from the first point to the second point in the array, from the second point to the third point, and so on.   </para></param>	
            <param name="pointsCount"><para>The number of points in the points array.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1SimplifiedGeometrySink::AddLines']/*"/>	
            <unmanaged>void ID2D1SimplifiedGeometrySink::AddLines([In, Buffer] const D2D_POINT_2F* points,[In] unsigned int pointsCount)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.SimplifiedGeometrySinkNative.AddBeziers_(SharpDX.Direct2D1.BezierSegment[],System.Int32)">
            <summary>	
            Creates a sequence of cubic Bezier curves and adds them to the geometry sink.	
            </summary>	
            <param name="beziers"><para>A reference to an array of Bezier segments that describes the Bezier curves to create. A curve is drawn from the geometry sink's current point (the end point of the last segment drawn or the location specified by BeginFigure) to the end point of the first Bezier segment in the array. if the array contains additional Bezier segments, each subsequent Bezier segment uses the end point of the preceding Bezier segment as its start point.</para></param>	
            <param name="beziersCount"><para>The number of Bezier segments in the beziers array.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1SimplifiedGeometrySink::AddBeziers']/*"/>	
            <unmanaged>void ID2D1SimplifiedGeometrySink::AddBeziers([In, Buffer] const D2D1_BEZIER_SEGMENT* beziers,[In] unsigned int beziersCount)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.SimplifiedGeometrySinkNative.EndFigure_(SharpDX.Direct2D1.FigureEnd)">
            <summary>	
            Ends the current figure; optionally, closes it.	
            </summary>	
            <param name="figureEnd"><para>A value that indicates whether the current figure is closed. If the figure is closed, a line is drawn between the current point and the start point specified by BeginFigure.</para></param>	
            <remarks>	
            Calling this method without a matching call to BeginFigure places the geometry sink in an error state; subsequent calls are ignored, and the overall failure will be returned when the Close method is called.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1SimplifiedGeometrySink::EndFigure']/*"/>	
            <unmanaged>void ID2D1SimplifiedGeometrySink::EndFigure([In] D2D1_FIGURE_END figureEnd)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.SimplifiedGeometrySinkNative.Close_">
            <summary>	
            Closes the geometry sink, indicates whether it is in an error state, and resets the sink's error state.	
            </summary>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            Do not close the geometry sink while a figure is still in progress; doing so puts the geometry sink in an error state. For the close operation to be successful, there must be one EndFigure call for each call to BeginFigure.After calling this method, the geometry sink might not be usable. Direct2D implementations of this interface do not allow the geometry sink to be modified after it is closed, but other implementations might not impose this restriction.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1SimplifiedGeometrySink::Close']/*"/>	
            <unmanaged>HRESULT ID2D1SimplifiedGeometrySink::Close()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.GeometrySinkNative.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.GeometrySinkNative"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.GeometrySinkNative.AddLine_(SharpDX.DrawingPointF)">
            <summary>	
            Creates a line segment between the current point and the specified end point and adds it to the geometry sink.	
            </summary>	
            <param name="point"><para>The end point of the line to draw.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GeometrySink::AddLine']/*"/>	
            <unmanaged>void ID2D1GeometrySink::AddLine([In] D2D_POINT_2F point)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.GeometrySinkNative.AddBezier_(SharpDX.Direct2D1.BezierSegment@)">
            <summary>	
            Creates  a cubic Bezier curve between the current point and the specified end point.	
            </summary>	
            <param name="bezier"><para>A structure that describes the control points and end point of the Bezier curve to add.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GeometrySink::AddBezier']/*"/>	
            <unmanaged>void ID2D1GeometrySink::AddBezier([In] const D2D1_BEZIER_SEGMENT* bezier)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.GeometrySinkNative.AddQuadraticBezier_(SharpDX.Direct2D1.QuadraticBezierSegment)">
            <summary>	
            Creates  a quadratic Bezier curve between the current point and the specified endpoint.	
            </summary>	
            <param name="bezier"><para>A structure that describes the control point and the endpoint of the quadratic Bezier curve to add.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GeometrySink::AddQuadraticBezier']/*"/>	
            <unmanaged>void ID2D1GeometrySink::AddQuadraticBezier([In] const D2D1_QUADRATIC_BEZIER_SEGMENT* bezier)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.GeometrySinkNative.AddQuadraticBeziers_(SharpDX.Direct2D1.QuadraticBezierSegment[],System.Int32)">
            <summary>	
            Adds a sequence of quadratic Bezier segments as an array in a single call.	
            </summary>	
            <param name="beziers"><para>An array of a sequence of quadratic Bezier segments.</para></param>	
            <param name="beziersCount"><para>A value indicating the number of quadratic Bezier segments in beziers. </para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GeometrySink::AddQuadraticBeziers']/*"/>	
            <unmanaged>void ID2D1GeometrySink::AddQuadraticBeziers([In, Buffer] const D2D1_QUADRATIC_BEZIER_SEGMENT* beziers,[In] unsigned int beziersCount)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.GeometrySinkNative.AddArc_(SharpDX.Direct2D1.ArcSegment@)">
            <summary>	
            Adds a single arc to the path geometry.	
            </summary>	
            <param name="arc"><para>The arc segment to add to the figure.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GeometrySink::AddArc']/*"/>	
            <unmanaged>void ID2D1GeometrySink::AddArc([In] const D2D1_ARC_SEGMENT* arc)</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.GradientStopCollection">
            <summary>	
            Represents an collection of <see cref="T:SharpDX.Direct2D1.GradientStop"/> objects for linear and radial gradient brushes.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GradientStopCollection']/*"/>	
            <unmanaged>ID2D1GradientStopCollection</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.GradientStopCollection.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.GradientStopCollection"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.GradientStopCollection.GetGradientStopCount">
            <summary>	
            Retrieves the number of gradient stops in the collection.	
            </summary>	
            <returns>The number of gradient stops in the collection.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GradientStopCollection::GetGradientStopCount']/*"/>	
            <unmanaged>unsigned int ID2D1GradientStopCollection::GetGradientStopCount()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.GradientStopCollection.GetGradientStops(SharpDX.Direct2D1.GradientStop[],System.Int32)">
            <summary>	
            Copies the gradient stops from the collection into an array of <see cref="T:SharpDX.Direct2D1.GradientStop"/> structures.	
            </summary>	
            <param name="gradientStops">No documentation.</param>	
            <param name="gradientStopsCount">No documentation.</param>	
            <remarks>	
            Gradient stops are copied in order of position, starting with the gradient stop with the smallest position value and progressing to the gradient stop with the largest position value.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GradientStopCollection::GetGradientStops']/*"/>	
            <unmanaged>void ID2D1GradientStopCollection::GetGradientStops([Out, Buffer] D2D1_GRADIENT_STOP* gradientStops,[In] unsigned int gradientStopsCount)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.GradientStopCollection.GetColorInterpolationGamma">
            <summary>	
            Indicates the gamma space in which the gradient stops are interpolated.	
            </summary>	
            <returns>The gamma space in which the gradient stops are interpolated.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GradientStopCollection::GetColorInterpolationGamma']/*"/>	
            <unmanaged>D2D1_GAMMA ID2D1GradientStopCollection::GetColorInterpolationGamma()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.GradientStopCollection.GetExtendMode">
            <summary>	
            Indicates the behavior of the gradient outside the normalized gradient range.	
            </summary>	
            <returns>The behavior of the gradient outside the [0,1] normalized gradient range.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GradientStopCollection::GetExtendMode']/*"/>	
            <unmanaged>D2D1_EXTEND_MODE ID2D1GradientStopCollection::GetExtendMode()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.GradientStopCollection.#ctor(SharpDX.Direct2D1.RenderTarget,SharpDX.Direct2D1.GradientStop[])">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.GradientStopCollection"/> from the specified gradient stops, a Gamma StandardRgb, and ExtendMode.Clamp.  	
            </summary>	
            <param name="renderTarget">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <param name="gradientStops">A pointer to an array of D2D1_GRADIENT_STOP structures.</param>
            <unmanaged>HRESULT CreateGradientStopCollection([In, Buffer] const D2D1_GRADIENT_STOP* gradientStops,[None] UINT gradientStopsCount,[None] D2D1_GAMMA colorInterpolationGamma,[None] D2D1_EXTEND_MODE extendMode,[Out] ID2D1GradientStopCollection** gradientStopCollection)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.GradientStopCollection.#ctor(SharpDX.Direct2D1.RenderTarget,SharpDX.Direct2D1.GradientStop[],SharpDX.Direct2D1.ExtendMode)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.GradientStopCollection"/> from the specified gradient stops, color Gamma.StandardRgb, and extend mode.  	
            </summary>	
            <param name="renderTarget">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <param name="gradientStops">A pointer to an array of D2D1_GRADIENT_STOP structures.</param>
            <param name="extendMode">The behavior of the gradient outside the [0,1] normalized range.</param>
            <unmanaged>HRESULT CreateGradientStopCollection([In, Buffer] const D2D1_GRADIENT_STOP* gradientStops,[None] UINT gradientStopsCount,[None] D2D1_GAMMA colorInterpolationGamma,[None] D2D1_EXTEND_MODE extendMode,[Out] ID2D1GradientStopCollection** gradientStopCollection)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.GradientStopCollection.#ctor(SharpDX.Direct2D1.RenderTarget,SharpDX.Direct2D1.GradientStop[],SharpDX.Direct2D1.Gamma)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.GradientStopCollection"/> from the specified gradient stops, color interpolation gamma, and ExtendMode.Clamp.  	
            </summary>	
            <param name="renderTarget">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <param name="gradientStops">A pointer to an array of D2D1_GRADIENT_STOP structures.</param>
            <param name="colorInterpolationGamma">The space in which color interpolation between the gradient stops is performed.</param>
            <unmanaged>HRESULT CreateGradientStopCollection([In, Buffer] const D2D1_GRADIENT_STOP* gradientStops,[None] UINT gradientStopsCount,[None] D2D1_GAMMA colorInterpolationGamma,[None] D2D1_EXTEND_MODE extendMode,[Out] ID2D1GradientStopCollection** gradientStopCollection)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.GradientStopCollection.#ctor(SharpDX.Direct2D1.RenderTarget,SharpDX.Direct2D1.GradientStop[],SharpDX.Direct2D1.Gamma,SharpDX.Direct2D1.ExtendMode)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.GradientStopCollection"/> from the specified gradient stops, color interpolation gamma, and extend mode.  	
            </summary>	
            <param name="renderTarget">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <param name="gradientStops">A pointer to an array of D2D1_GRADIENT_STOP structures.</param>
            <param name="colorInterpolationGamma">The space in which color interpolation between the gradient stops is performed.</param>
            <param name="extendMode">The behavior of the gradient outside the [0,1] normalized range.</param>
            <unmanaged>HRESULT CreateGradientStopCollection([In, Buffer] const D2D1_GRADIENT_STOP* gradientStops,[None] UINT gradientStopsCount,[None] D2D1_GAMMA colorInterpolationGamma,[None] D2D1_EXTEND_MODE extendMode,[Out] ID2D1GradientStopCollection** gradientStopCollection)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.GradientStopCollection.GradientStopCount">
            <summary>	
            Retrieves the number of gradient stops in the collection.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GradientStopCollection::GetGradientStopCount']/*"/>	
            <unmanaged>GetGradientStopCount</unmanaged>	
            <unmanaged>unsigned int ID2D1GradientStopCollection::GetGradientStopCount()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.GradientStopCollection.ColorInterpolationGamma">
            <summary>	
            Indicates the gamma space in which the gradient stops are interpolated.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GradientStopCollection::GetColorInterpolationGamma']/*"/>	
            <unmanaged>GetColorInterpolationGamma</unmanaged>	
            <unmanaged>D2D1_GAMMA ID2D1GradientStopCollection::GetColorInterpolationGamma()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.GradientStopCollection.ExtendMode">
            <summary>	
            Indicates the behavior of the gradient outside the normalized gradient range.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GradientStopCollection::GetExtendMode']/*"/>	
            <unmanaged>GetExtendMode</unmanaged>	
            <unmanaged>D2D1_EXTEND_MODE ID2D1GradientStopCollection::GetExtendMode()</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.GradientStopCollection1">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GradientStopCollection1']/*"/>	
            <unmanaged>ID2D1GradientStopCollection1</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.GradientStopCollection1.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.GradientStopCollection1"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.GradientStopCollection1.GetGradientStops1(SharpDX.Direct2D1.GradientStop[],System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="gradientStops">No documentation.</param>	
            <param name="gradientStopsCount">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GradientStopCollection1::GetGradientStops1']/*"/>	
            <unmanaged>void ID2D1GradientStopCollection1::GetGradientStops1([Out, Buffer] D2D1_GRADIENT_STOP* gradientStops,[In] unsigned int gradientStopsCount)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.GradientStopCollection1.GetPreInterpolationSpace">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GradientStopCollection1::GetPreInterpolationSpace']/*"/>	
            <unmanaged>D2D1_COLOR_SPACE ID2D1GradientStopCollection1::GetPreInterpolationSpace()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.GradientStopCollection1.GetPostInterpolationSpace">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <returns>This method returns the color space.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GradientStopCollection1::GetPostInterpolationSpace']/*"/>	
            <unmanaged>D2D1_COLOR_SPACE ID2D1GradientStopCollection1::GetPostInterpolationSpace()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.GradientStopCollection1.GetBufferPrecision">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GradientStopCollection1::GetBufferPrecision']/*"/>	
            <unmanaged>D2D1_BUFFER_PRECISION ID2D1GradientStopCollection1::GetBufferPrecision()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.GradientStopCollection1.GetColorInterpolationMode">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GradientStopCollection1::GetColorInterpolationMode']/*"/>	
            <unmanaged>D2D1_COLOR_INTERPOLATION_MODE ID2D1GradientStopCollection1::GetColorInterpolationMode()</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct2D1.GradientStopCollection1.PreInterpolationSpace">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GradientStopCollection1::GetPreInterpolationSpace']/*"/>	
            <unmanaged>GetPreInterpolationSpace</unmanaged>	
            <unmanaged>D2D1_COLOR_SPACE ID2D1GradientStopCollection1::GetPreInterpolationSpace()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.GradientStopCollection1.PostInterpolationSpace">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GradientStopCollection1::GetPostInterpolationSpace']/*"/>	
            <unmanaged>GetPostInterpolationSpace</unmanaged>	
            <unmanaged>D2D1_COLOR_SPACE ID2D1GradientStopCollection1::GetPostInterpolationSpace()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.GradientStopCollection1.BufferPrecision">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GradientStopCollection1::GetBufferPrecision']/*"/>	
            <unmanaged>GetBufferPrecision</unmanaged>	
            <unmanaged>D2D1_BUFFER_PRECISION ID2D1GradientStopCollection1::GetBufferPrecision()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.GradientStopCollection1.ColorInterpolationMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1GradientStopCollection1::GetColorInterpolationMode']/*"/>	
            <unmanaged>GetColorInterpolationMode</unmanaged>	
            <unmanaged>D2D1_COLOR_INTERPOLATION_MODE ID2D1GradientStopCollection1::GetColorInterpolationMode()</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.ImageBrush">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1ImageBrush']/*"/>	
            <unmanaged>ID2D1ImageBrush</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.ImageBrush.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.ImageBrush"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.ImageBrush.SetImage(SharpDX.Direct2D1.Image)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="image"><para>The image to be associated with the image brush.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1ImageBrush::SetImage']/*"/>	
            <unmanaged>void ID2D1ImageBrush::SetImage([In] ID2D1Image* image)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.ImageBrush.SetExtendModeX(SharpDX.Direct2D1.ExtendMode)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="extendModeX"><para>The extend mode on the x-axis of the image.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1ImageBrush::SetExtendModeX']/*"/>	
            <unmanaged>void ID2D1ImageBrush::SetExtendModeX([In] D2D1_EXTEND_MODE extendModeX)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.ImageBrush.SetExtendModeY(SharpDX.Direct2D1.ExtendMode)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="extendModeY"><para>The extend mode on the y-axis of the image.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1ImageBrush::SetExtendModeY']/*"/>	
            <unmanaged>void ID2D1ImageBrush::SetExtendModeY([In] D2D1_EXTEND_MODE extendModeY)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.ImageBrush.SetInterpolationMode(SharpDX.Direct2D1.InterpolationMode)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="interpolationMode"><para>How the contents of the image will be interpolated to handle the brush transform.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1ImageBrush::SetInterpolationMode']/*"/>	
            <unmanaged>void ID2D1ImageBrush::SetInterpolationMode([In] D2D1_INTERPOLATION_MODE interpolationMode)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.ImageBrush.SetSourceRectangle(SharpDX.RectangleF)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="sourceRectangle">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1ImageBrush::SetSourceRectangle']/*"/>	
            <unmanaged>void ID2D1ImageBrush::SetSourceRectangle([In] const D2D_RECT_F* sourceRectangle)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.ImageBrush.GetImage(SharpDX.Direct2D1.Image@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="image"><para> When this method returns, contains the address of a reference to the image associated with  this brush. </para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1ImageBrush::GetImage']/*"/>	
            <unmanaged>void ID2D1ImageBrush::GetImage([Out] ID2D1Image** image)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.ImageBrush.GetExtendModeX">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1ImageBrush::GetExtendModeX']/*"/>	
            <unmanaged>D2D1_EXTEND_MODE ID2D1ImageBrush::GetExtendModeX()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.ImageBrush.GetExtendModeY">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1ImageBrush::GetExtendModeY']/*"/>	
            <unmanaged>D2D1_EXTEND_MODE ID2D1ImageBrush::GetExtendModeY()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.ImageBrush.GetInterpolationMode">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1ImageBrush::GetInterpolationMode']/*"/>	
            <unmanaged>D2D1_INTERPOLATION_MODE ID2D1ImageBrush::GetInterpolationMode()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.ImageBrush.GetSourceRectangle(SharpDX.RectangleF@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="sourceRectangle">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1ImageBrush::GetSourceRectangle']/*"/>	
            <unmanaged>void ID2D1ImageBrush::GetSourceRectangle([Out] D2D_RECT_F* sourceRectangle)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct2D1.ImageBrush.Image">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1ImageBrush::GetImage']/*"/>	
            <unmanaged>GetImage</unmanaged>	
            <unmanaged>void ID2D1ImageBrush::GetImage([Out] ID2D1Image** image)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.ImageBrush.ExtendModeX">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1ImageBrush::GetExtendModeX']/*"/>	
            <unmanaged>GetExtendModeX</unmanaged>	
            <unmanaged>D2D1_EXTEND_MODE ID2D1ImageBrush::GetExtendModeX()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.ImageBrush.ExtendModeY">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1ImageBrush::GetExtendModeY']/*"/>	
            <unmanaged>GetExtendModeY</unmanaged>	
            <unmanaged>D2D1_EXTEND_MODE ID2D1ImageBrush::GetExtendModeY()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.ImageBrush.InterpolationMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1ImageBrush::GetInterpolationMode']/*"/>	
            <unmanaged>GetInterpolationMode</unmanaged>	
            <unmanaged>D2D1_INTERPOLATION_MODE ID2D1ImageBrush::GetInterpolationMode()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.ImageBrush.SourceRectangle">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1ImageBrush::GetSourceRectangle']/*"/>	
            <unmanaged>GetSourceRectangle</unmanaged>	
            <unmanaged>void ID2D1ImageBrush::GetSourceRectangle([Out] D2D_RECT_F* sourceRectangle)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.Layer">
            <summary>	
            Represents the backing store required to render a layer.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Layer']/*"/>	
            <unmanaged>ID2D1Layer</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Layer.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.Layer"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.Layer.GetSize">
            <summary>	
            Gets the size of the layer in device-independent pixels.	
            </summary>	
            <returns>The size of the layer in device-independent pixels.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Layer::GetSize']/*"/>	
            <unmanaged>D2D_SIZE_F ID2D1Layer::GetSize()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Layer.#ctor(SharpDX.Direct2D1.RenderTarget)">
            <summary>	
            Creates a layer resource that can be used with this render target and its compatible render targets. The new layer has the specified initial size. The layer resource is allocated to the minimum size when {{PushLayer}} is called.
            </summary>	
            <remarks>	
            Regardless of whether a size is initially specified, the layer automatically resizes as needed.	
            </remarks>	
            <param name="renderTarget">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <unmanaged>HRESULT CreateLayer([In, Optional] const D2D1_SIZE_F* size,[Out] ID2D1Layer** layer)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Layer.#ctor(SharpDX.Direct2D1.RenderTarget,System.Nullable{SharpDX.DrawingSizeF})">
            <summary>	
            Creates a layer resource that can be used with this render target and its compatible render targets. The new layer has the specified initial size.  	
            </summary>	
            <remarks>	
            Regardless of whether a size is initially specified, the layer automatically resizes as needed.	
            </remarks>	
            <param name="renderTarget">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <param name="size">If (0, 0) is specified, no backing store is created behind the layer resource. The layer resource is allocated to the minimum size when {{PushLayer}} is called.</param>
            <unmanaged>HRESULT CreateLayer([In, Optional] const D2D1_SIZE_F* size,[Out] ID2D1Layer** layer)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.Layer.Size">
            <summary>	
            Gets the size of the layer in device-independent pixels.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Layer::GetSize']/*"/>	
            <unmanaged>GetSize</unmanaged>	
            <unmanaged>D2D_SIZE_F ID2D1Layer::GetSize()</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.LinearGradientBrush">
            <summary>	
            Paints an area with a linear gradient.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1LinearGradientBrush']/*"/>	
            <unmanaged>ID2D1LinearGradientBrush</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.LinearGradientBrush.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.LinearGradientBrush"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.LinearGradientBrush.SetStartPoint(SharpDX.DrawingPointF)">
            <summary>	
            Sets the starting coordinates of the linear gradient in the brush's coordinate space.	
            </summary>	
            <param name="startPoint"><para>The starting two-dimensional coordinates of the linear gradient, in the brush's coordinate space.</para></param>	
            <remarks>	
            The start point and end point are described in the brush's space and are mapped to the render target when the brush is used.  If there is a non-identity brush transform or render target transform, the brush's start point and end point are also transformed.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1LinearGradientBrush::SetStartPoint']/*"/>	
            <unmanaged>void ID2D1LinearGradientBrush::SetStartPoint([In] D2D_POINT_2F startPoint)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.LinearGradientBrush.SetEndPoint(SharpDX.DrawingPointF)">
            <summary>	
            Sets the ending coordinates of the linear gradient in the brush's coordinate space.	
            </summary>	
            <param name="endPoint"><para>The ending two-dimensional coordinates of the linear gradient, in the brush's coordinate space.</para></param>	
            <remarks>	
            The start point and end point are described in the brush's space and are mapped to the render target when the brush is used.  If there is a non-identity brush transform or render target transform, the brush's start point and end point are also transformed.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1LinearGradientBrush::SetEndPoint']/*"/>	
            <unmanaged>void ID2D1LinearGradientBrush::SetEndPoint([In] D2D_POINT_2F endPoint)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.LinearGradientBrush.GetStartPoint">
            <summary>	
            Retrieves the starting coordinates of the linear gradient.	
            </summary>	
            <returns>The starting two-dimensional coordinates of the linear gradient, in the brush's coordinate space.</returns>	
            <remarks>	
            The start point and end point are described in the brush's space and are mapped to the render target when the brush is used.  If there is a non-identity brush transform or render target transform, the brush's start point and end point are also transformed.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1LinearGradientBrush::GetStartPoint']/*"/>	
            <unmanaged>D2D_POINT_2F ID2D1LinearGradientBrush::GetStartPoint()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.LinearGradientBrush.GetEndPoint">
            <summary>	
            Retrieves the ending coordinates of the linear gradient.	
            </summary>	
            <returns>The ending two-dimensional coordinates of the linear gradient, in the brush's coordinate space.</returns>	
            <remarks>	
            The start point and end point are described in the brush's space and are mapped to the render target when the brush is used.  If there is a non-identity brush transform or render target transform, the brush's start point and end point are also transformed.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1LinearGradientBrush::GetEndPoint']/*"/>	
            <unmanaged>D2D_POINT_2F ID2D1LinearGradientBrush::GetEndPoint()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.LinearGradientBrush.GetGradientStopCollection(SharpDX.Direct2D1.GradientStopCollection@)">
            <summary>	
            Retrieves the <see cref="T:SharpDX.Direct2D1.GradientStopCollection"/> associated with this linear gradient brush.	
            </summary>	
            <param name="gradientStopCollection">No documentation.</param>	
            <remarks>	
            <see cref="T:SharpDX.Direct2D1.GradientStopCollection"/> contains an array of <see cref="T:SharpDX.Direct2D1.GradientStop"/> structures and information, such as the extend mode and the color interpolation mode.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1LinearGradientBrush::GetGradientStopCollection']/*"/>	
            <unmanaged>void ID2D1LinearGradientBrush::GetGradientStopCollection([Out] ID2D1GradientStopCollection** gradientStopCollection)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.LinearGradientBrush.#ctor(SharpDX.Direct2D1.RenderTarget,SharpDX.Direct2D1.LinearGradientBrushProperties,SharpDX.Direct2D1.GradientStopCollection)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.LinearGradientBrush"/> that contains the specified gradient stops and has the specified transform and base opacity. 	
            </summary>	
            <param name="renderTarget">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <param name="linearGradientBrushProperties">The start and end points of the gradient.</param>
            <param name="gradientStopCollection">A collection of <see cref="T:SharpDX.Direct2D1.GradientStop"/> structures that describe the colors in the brush's gradient and their locations along the gradient line.</param>
            <unmanaged>HRESULT CreateLinearGradientBrush([In] const D2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES* linearGradientBrushProperties,[In, Optional] const D2D1_BRUSH_PROPERTIES* brushProperties,[In] ID2D1GradientStopCollection* gradientStopCollection,[Out] ID2D1LinearGradientBrush** linearGradientBrush)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.LinearGradientBrush.#ctor(SharpDX.Direct2D1.RenderTarget,SharpDX.Direct2D1.LinearGradientBrushProperties,System.Nullable{SharpDX.Direct2D1.BrushProperties},SharpDX.Direct2D1.GradientStopCollection)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.LinearGradientBrush"/> that contains the specified gradient stops and has the specified transform and base opacity. 	
            </summary>	
            <param name="renderTarget">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <param name="linearGradientBrushProperties">The start and end points of the gradient.</param>
            <param name="brushProperties">The transform and base opacity of the new brush, or NULL. If this value is NULL, the brush defaults to a base opacity of 1.0f and the identity matrix as its transformation.</param>
            <param name="gradientStopCollection">A collection of <see cref="T:SharpDX.Direct2D1.GradientStop"/> structures that describe the colors in the brush's gradient and their locations along the gradient line.</param>
            <unmanaged>HRESULT CreateLinearGradientBrush([In] const D2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES* linearGradientBrushProperties,[In, Optional] const D2D1_BRUSH_PROPERTIES* brushProperties,[In] ID2D1GradientStopCollection* gradientStopCollection,[Out] ID2D1LinearGradientBrush** linearGradientBrush)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.LinearGradientBrush.StartPoint">
            <summary>	
            Retrieves the starting coordinates of the linear gradient.	
            </summary>	
            <remarks>	
            The start point and end point are described in the brush's space and are mapped to the render target when the brush is used.  If there is a non-identity brush transform or render target transform, the brush's start point and end point are also transformed.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1LinearGradientBrush::GetStartPoint']/*"/>	
            <unmanaged>GetStartPoint</unmanaged>	
            <unmanaged>D2D_POINT_2F ID2D1LinearGradientBrush::GetStartPoint()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.LinearGradientBrush.EndPoint">
            <summary>	
            Retrieves the ending coordinates of the linear gradient.	
            </summary>	
            <remarks>	
            The start point and end point are described in the brush's space and are mapped to the render target when the brush is used.  If there is a non-identity brush transform or render target transform, the brush's start point and end point are also transformed.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1LinearGradientBrush::GetEndPoint']/*"/>	
            <unmanaged>GetEndPoint</unmanaged>	
            <unmanaged>D2D_POINT_2F ID2D1LinearGradientBrush::GetEndPoint()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.LinearGradientBrush.GradientStopCollection">
            <summary>	
            Retrieves the <see cref="T:SharpDX.Direct2D1.GradientStopCollection"/> associated with this linear gradient brush.	
            </summary>	
            <remarks>	
            <see cref="T:SharpDX.Direct2D1.GradientStopCollection"/> contains an array of <see cref="T:SharpDX.Direct2D1.GradientStop"/> structures and information, such as the extend mode and the color interpolation mode.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1LinearGradientBrush::GetGradientStopCollection']/*"/>	
            <unmanaged>GetGradientStopCollection</unmanaged>	
            <unmanaged>void ID2D1LinearGradientBrush::GetGradientStopCollection([Out] ID2D1GradientStopCollection** gradientStopCollection)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.Mesh">
            <summary>	
            Represents a set of vertices that form a list of triangles.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Mesh']/*"/>	
            <unmanaged>ID2D1Mesh</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Mesh.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.Mesh"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.Mesh.Open_(SharpDX.Direct2D1.TessellationSink@)">
            <summary>	
            Opens the mesh for population.	
            </summary>	
            <param name="tessellationSink"><para>When this method returns, contains a reference to a reference to an <see cref="T:SharpDX.Direct2D1.TessellationSink"/> that is used to populate the mesh. This parameter is passed uninitialized.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1Mesh::Open']/*"/>	
            <unmanaged>HRESULT ID2D1Mesh::Open([Out] ID2D1TessellationSink** tessellationSink)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.Mesh.#ctor(SharpDX.Direct2D1.RenderTarget)">
            <summary>	
            Create a mesh that uses triangles to describe a shape.	
            </summary>	
            <remarks>	
            To populate a mesh, use its {{Open}} method to obtain an <see cref="T:SharpDX.Direct2D1.TessellationSink"/>. To draw the mesh, use the render target's {{FillMesh}} method.	
            </remarks>	
            <param name="renderTarget">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <unmanaged>HRESULT CreateMesh([Out] ID2D1Mesh** mesh)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Mesh.#ctor(SharpDX.Direct2D1.RenderTarget,SharpDX.Direct2D1.Triangle[])">
            <summary>	
            Create a mesh that uses triangles to describe a shape and populates it with triangles.
            </summary>	
            <param name="renderTarget">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <param name="triangles">An array of <see cref="T:SharpDX.Direct2D1.Triangle"/> structures that describe the triangles to add to this mesh.</param>
            <unmanaged>HRESULT CreateMesh([Out] ID2D1Mesh** mesh)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.Mesh.Open">
            <summary>	
            Opens the mesh for population.	
            </summary>	
            <returns>When this method returns, contains a pointer to a pointer to an <see cref="T:SharpDX.Direct2D1.TessellationSink"/> that is used to populate the mesh. This parameter is passed uninitialized.</returns>
            <unmanaged>HRESULT Open([Out] ID2D1TessellationSink** tessellationSink)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.OffsetTransform">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1OffsetTransform']/*"/>	
            <unmanaged>ID2D1OffsetTransform</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.OffsetTransform.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.OffsetTransform"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.OffsetTransform.SetOffset(SharpDX.DrawingPoint)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="offset"><para>The new offset to apply to the offset transform.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1OffsetTransform::SetOffset']/*"/>	
            <unmanaged>void ID2D1OffsetTransform::SetOffset([In] POINT offset)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.OffsetTransform.GetOffset">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <returns>The current transform offset.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1OffsetTransform::GetOffset']/*"/>	
            <unmanaged>POINT ID2D1OffsetTransform::GetOffset()</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct2D1.OffsetTransform.Offset">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1OffsetTransform::GetOffset']/*"/>	
            <unmanaged>GetOffset</unmanaged>	
            <unmanaged>POINT ID2D1OffsetTransform::GetOffset()</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.PathGeometry">
            <summary>	
            Represents a complex shape that may be composed of arcs, curves, and lines.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1PathGeometry']/*"/>	
            <unmanaged>ID2D1PathGeometry</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.PathGeometry.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.PathGeometry"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.PathGeometry.Open">
            <summary>	
            Retrieves the geometry sink that is used to populate the path geometry with figures and segments.	
            </summary>	
            <returns><para>When this method returns, geometrySink contains the address of a reference to the geometry sink that is used to populate the path geometry with figures and segments. This parameter is passed uninitialized.</para></returns>	
            <remarks>	
            Because path geometries are immutable and can only be populated once, it is an error to call Open on a path geometry more than once.Note that the fill mode defaults to <see cref="F:SharpDX.Direct2D1.FillMode.Alternate"/>. To set the fill mode, call SetFillMode before the first call to BeginFigure. Failure to do so will put the geometry sink in an error state.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1PathGeometry::Open']/*"/>	
            <unmanaged>HRESULT ID2D1PathGeometry::Open([Out] ID2D1GeometrySink** geometrySink)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.PathGeometry.Stream_(System.IntPtr)">
            <summary>	
            Copies the contents of the path geometry to the specified <see cref="T:SharpDX.Direct2D1.GeometrySink"/>.	
            </summary>	
            <param name="geometrySink">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1PathGeometry::Stream']/*"/>	
            <unmanaged>HRESULT ID2D1PathGeometry::Stream([In] ID2D1GeometrySink* geometrySink)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.PathGeometry.GetSegmentCount(System.Int32@)">
            <summary>	
            Retrieves the number of segments in the path geometry.	
            </summary>	
            <param name="count"><para>A reference that receives the number of segments in the path geometry when this method returns. You must allocate storage for this parameter.   </para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1PathGeometry::GetSegmentCount']/*"/>	
            <unmanaged>HRESULT ID2D1PathGeometry::GetSegmentCount([Out] unsigned int* count)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.PathGeometry.GetFigureCount(System.Int32@)">
            <summary>	
            Retrieves the number of figures in the path geometry.	
            </summary>	
            <param name="count"><para>A reference that receives the number of figures in the path geometry when this method returns. You must allocate storage for this parameter.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1PathGeometry::GetFigureCount']/*"/>	
            <unmanaged>HRESULT ID2D1PathGeometry::GetFigureCount([Out] unsigned int* count)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.PathGeometry.#ctor(SharpDX.Direct2D1.Factory)">
            <summary>	
            Creates an empty <see cref="T:SharpDX.Direct2D1.PathGeometry"/>.	
            </summary>	
            <param name="factory">an instance of <see cref="T:SharpDX.Direct2D1.Factory"/></param>
        </member>
        <member name="M:SharpDX.Direct2D1.PathGeometry.Stream(SharpDX.Direct2D1.GeometrySink)">
            <summary>	
            Copies the contents of the path geometry to the specified <see cref="T:SharpDX.Direct2D1.GeometrySink"/>.	
            </summary>	
            <param name="geometrySink">The sink to which the path geometry's contents are copied. Modifying this sink does not change the contents of this path geometry.</param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
            <unmanaged>HRESULT Stream([In] ID2D1GeometrySink* geometrySink)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.PathGeometry.SegmentCount">
            <summary>	
            Retrieves the number of segments in the path geometry.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1PathGeometry::GetSegmentCount']/*"/>	
            <unmanaged>GetSegmentCount</unmanaged>	
            <unmanaged>HRESULT ID2D1PathGeometry::GetSegmentCount([Out] unsigned int* count)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.PathGeometry.FigureCount">
            <summary>	
            Retrieves the number of figures in the path geometry.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1PathGeometry::GetFigureCount']/*"/>	
            <unmanaged>GetFigureCount</unmanaged>	
            <unmanaged>HRESULT ID2D1PathGeometry::GetFigureCount([Out] unsigned int* count)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.PathGeometry1">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1PathGeometry1']/*"/>	
            <unmanaged>ID2D1PathGeometry1</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.PathGeometry1.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.PathGeometry1"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.PathGeometry1.ComputePointAndSegmentAtLength(System.Single,System.Int32,System.Nullable{SharpDX.Matrix3x2},System.Single,SharpDX.Direct2D1.PointDescription@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="length">No documentation.</param>	
            <param name="startSegment">No documentation.</param>	
            <param name="worldTransform">No documentation.</param>	
            <param name="flatteningTolerance">No documentation.</param>	
            <param name="ointDescriptionRef">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1PathGeometry1::ComputePointAndSegmentAtLength']/*"/>	
            <unmanaged>HRESULT ID2D1PathGeometry1::ComputePointAndSegmentAtLength([In] float length,[In] unsigned int startSegment,[In, Optional] const D2D_MATRIX_3X2_F* worldTransform,[In] float flatteningTolerance,[Out] D2D1_POINT_DESCRIPTION* pointDescription)</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.RadialGradientBrush">
            <summary>	
            Paints an area with a radial gradient.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RadialGradientBrush']/*"/>	
            <unmanaged>ID2D1RadialGradientBrush</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RadialGradientBrush.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.RadialGradientBrush"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.RadialGradientBrush.SetCenter(SharpDX.DrawingPointF)">
            <summary>	
            Specifies the center of the gradient ellipse in the brush's coordinate space.	
            </summary>	
            <param name="center"><para>The center of the gradient ellipse, in the brush's coordinate space.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RadialGradientBrush::SetCenter']/*"/>	
            <unmanaged>void ID2D1RadialGradientBrush::SetCenter([In] D2D_POINT_2F center)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RadialGradientBrush.SetGradientOriginOffset(SharpDX.DrawingPointF)">
            <summary>	
            Specifies the offset of the gradient origin relative to the gradient ellipse's center.	
            </summary>	
            <param name="gradientOriginOffset"><para>The offset of the gradient origin from the center of the gradient ellipse.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RadialGradientBrush::SetGradientOriginOffset']/*"/>	
            <unmanaged>void ID2D1RadialGradientBrush::SetGradientOriginOffset([In] D2D_POINT_2F gradientOriginOffset)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RadialGradientBrush.SetRadiusX(System.Single)">
            <summary>	
            Specifies the x-radius of the gradient ellipse, in the brush's coordinate space.	
            </summary>	
            <param name="radiusX"><para>The x-radius of the gradient ellipse. This value is in the brush's coordinate space.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RadialGradientBrush::SetRadiusX']/*"/>	
            <unmanaged>void ID2D1RadialGradientBrush::SetRadiusX([In] float radiusX)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RadialGradientBrush.SetRadiusY(System.Single)">
            <summary>	
            Specifies the y-radius of the gradient ellipse, in the brush's coordinate space.	
            </summary>	
            <param name="radiusY"><para>The y-radius of the gradient ellipse. This value is in the brush's coordinate space.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RadialGradientBrush::SetRadiusY']/*"/>	
            <unmanaged>void ID2D1RadialGradientBrush::SetRadiusY([In] float radiusY)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RadialGradientBrush.GetCenter">
            <summary>	
            Retrieves the center of the gradient ellipse.	
            </summary>	
            <returns>The center of the gradient ellipse. This value is expressed in the brush's coordinate space.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RadialGradientBrush::GetCenter']/*"/>	
            <unmanaged>D2D_POINT_2F ID2D1RadialGradientBrush::GetCenter()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RadialGradientBrush.GetGradientOriginOffset">
            <summary>	
            Retrieves the offset of the gradient origin relative to the gradient ellipse's center.	
            </summary>	
            <returns>The offset of the gradient origin from the center of the gradient ellipse. This value is expressed in the brush's coordinate space.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RadialGradientBrush::GetGradientOriginOffset']/*"/>	
            <unmanaged>D2D_POINT_2F ID2D1RadialGradientBrush::GetGradientOriginOffset()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RadialGradientBrush.GetRadiusX">
            <summary>	
            Retrieves the x-radius of the gradient ellipse.	
            </summary>	
            <returns>The x-radius of the gradient ellipse. This value is expressed in the brush's coordinate space.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RadialGradientBrush::GetRadiusX']/*"/>	
            <unmanaged>float ID2D1RadialGradientBrush::GetRadiusX()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RadialGradientBrush.GetRadiusY">
            <summary>	
            Retrieves the y-radius of the gradient ellipse.	
            </summary>	
            <returns>The y-radius of the gradient ellipse. This value is expressed in the brush's coordinate space.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RadialGradientBrush::GetRadiusY']/*"/>	
            <unmanaged>float ID2D1RadialGradientBrush::GetRadiusY()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RadialGradientBrush.GetGradientStopCollection(SharpDX.Direct2D1.GradientStopCollection@)">
            <summary>	
            Retrieves the <see cref="T:SharpDX.Direct2D1.GradientStopCollection"/> associated with this radial gradient brush object.	
            </summary>	
            <param name="gradientStopCollection">No documentation.</param>	
            <remarks>	
            <see cref="T:SharpDX.Direct2D1.GradientStopCollection"/> contains an array of <see cref="T:SharpDX.Direct2D1.GradientStop"/> structures and additional information, such as the extend mode and the color interpolation mode.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RadialGradientBrush::GetGradientStopCollection']/*"/>	
            <unmanaged>void ID2D1RadialGradientBrush::GetGradientStopCollection([Out] ID2D1GradientStopCollection** gradientStopCollection)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RadialGradientBrush.#ctor(SharpDX.Direct2D1.RenderTarget,SharpDX.Direct2D1.RadialGradientBrushProperties@,SharpDX.Direct2D1.GradientStopCollection)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.RadialGradientBrush"/> that contains the specified gradient stops and has the specified transform and base opacity. 	
            </summary>	
            <param name="renderTarget">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <param name="radialGradientBrushProperties">The center, gradient origin offset, and x-radius and y-radius of the brush's gradient.</param>
            <param name="gradientStopCollection">A collection of <see cref="T:SharpDX.Direct2D1.GradientStop"/> structures that describe the colors in the brush's gradient and their locations along the gradient.</param>
            <unmanaged>HRESULT CreateRadialGradientBrush([In] const D2D1_RADIAL_GRADIENT_BRUSH_PROPERTIES* radialGradientBrushProperties,[In, Optional] const D2D1_BRUSH_PROPERTIES* brushProperties,[In] ID2D1GradientStopCollection* gradientStopCollection,[Out] ID2D1RadialGradientBrush** radialGradientBrush)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.RadialGradientBrush.#ctor(SharpDX.Direct2D1.RenderTarget,SharpDX.Direct2D1.RadialGradientBrushProperties,SharpDX.Direct2D1.GradientStopCollection)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.RadialGradientBrush"/> that contains the specified gradient stops and has the specified transform and base opacity. 	
            </summary>	
            <param name="renderTarget">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <param name="radialGradientBrushProperties">The center, gradient origin offset, and x-radius and y-radius of the brush's gradient.</param>
            <param name="gradientStopCollection">A collection of <see cref="T:SharpDX.Direct2D1.GradientStop"/> structures that describe the colors in the brush's gradient and their locations along the gradient.</param>
            <unmanaged>HRESULT CreateRadialGradientBrush([In] const D2D1_RADIAL_GRADIENT_BRUSH_PROPERTIES* radialGradientBrushProperties,[In, Optional] const D2D1_BRUSH_PROPERTIES* brushProperties,[In] ID2D1GradientStopCollection* gradientStopCollection,[Out] ID2D1RadialGradientBrush** radialGradientBrush)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.RadialGradientBrush.#ctor(SharpDX.Direct2D1.RenderTarget,SharpDX.Direct2D1.RadialGradientBrushProperties,SharpDX.Direct2D1.BrushProperties,SharpDX.Direct2D1.GradientStopCollection)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.RadialGradientBrush"/> that contains the specified gradient stops and has the specified transform and base opacity. 	
            </summary>	
            <param name="renderTarget">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <param name="radialGradientBrushProperties">The center, gradient origin offset, and x-radius and y-radius of the brush's gradient.</param>
            <param name="brushProperties">The transform and base opacity of the new brush, or NULL. If this value is NULL, the brush defaults to a base opacity of 1.0f and the identity matrix as its transformation.</param>
            <param name="gradientStopCollection">A collection of <see cref="T:SharpDX.Direct2D1.GradientStop"/> structures that describe the colors in the brush's gradient and their locations along the gradient.</param>
            <unmanaged>HRESULT CreateRadialGradientBrush([In] const D2D1_RADIAL_GRADIENT_BRUSH_PROPERTIES* radialGradientBrushProperties,[In, Optional] const D2D1_BRUSH_PROPERTIES* brushProperties,[In] ID2D1GradientStopCollection* gradientStopCollection,[Out] ID2D1RadialGradientBrush** radialGradientBrush)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.RadialGradientBrush.#ctor(SharpDX.Direct2D1.RenderTarget,SharpDX.Direct2D1.RadialGradientBrushProperties@,System.Nullable{SharpDX.Direct2D1.BrushProperties},SharpDX.Direct2D1.GradientStopCollection)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.RadialGradientBrush"/> that contains the specified gradient stops and has the specified transform and base opacity. 	
            </summary>
            <param name="renderTarget">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <param name="radialGradientBrushProperties">The center, gradient origin offset, and x-radius and y-radius of the brush's gradient.</param>
            <param name="brushProperties">The transform and base opacity of the new brush, or NULL. If this value is NULL, the brush defaults to a base opacity of 1.0f and the identity matrix as its transformation.</param>
            <param name="gradientStopCollection">A collection of <see cref="T:SharpDX.Direct2D1.GradientStop"/> structures that describe the colors in the brush's gradient and their locations along the gradient.</param>
            <unmanaged>HRESULT CreateRadialGradientBrush([In] const D2D1_RADIAL_GRADIENT_BRUSH_PROPERTIES* radialGradientBrushProperties,[In, Optional] const D2D1_BRUSH_PROPERTIES* brushProperties,[In] ID2D1GradientStopCollection* gradientStopCollection,[Out] ID2D1RadialGradientBrush** radialGradientBrush)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.RadialGradientBrush.Center">
            <summary>	
            Retrieves the center of the gradient ellipse.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RadialGradientBrush::GetCenter']/*"/>	
            <unmanaged>GetCenter</unmanaged>	
            <unmanaged>D2D_POINT_2F ID2D1RadialGradientBrush::GetCenter()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.RadialGradientBrush.GradientOriginOffset">
            <summary>	
            Retrieves the offset of the gradient origin relative to the gradient ellipse's center.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RadialGradientBrush::GetGradientOriginOffset']/*"/>	
            <unmanaged>GetGradientOriginOffset</unmanaged>	
            <unmanaged>D2D_POINT_2F ID2D1RadialGradientBrush::GetGradientOriginOffset()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.RadialGradientBrush.RadiusX">
            <summary>	
            Retrieves the x-radius of the gradient ellipse.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RadialGradientBrush::GetRadiusX']/*"/>	
            <unmanaged>GetRadiusX</unmanaged>	
            <unmanaged>float ID2D1RadialGradientBrush::GetRadiusX()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.RadialGradientBrush.RadiusY">
            <summary>	
            Retrieves the y-radius of the gradient ellipse.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RadialGradientBrush::GetRadiusY']/*"/>	
            <unmanaged>GetRadiusY</unmanaged>	
            <unmanaged>float ID2D1RadialGradientBrush::GetRadiusY()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.RadialGradientBrush.GradientStopCollection">
            <summary>	
            Retrieves the <see cref="T:SharpDX.Direct2D1.GradientStopCollection"/> associated with this radial gradient brush object.	
            </summary>	
            <remarks>	
            <see cref="T:SharpDX.Direct2D1.GradientStopCollection"/> contains an array of <see cref="T:SharpDX.Direct2D1.GradientStop"/> structures and additional information, such as the extend mode and the color interpolation mode.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RadialGradientBrush::GetGradientStopCollection']/*"/>	
            <unmanaged>GetGradientStopCollection</unmanaged>	
            <unmanaged>void ID2D1RadialGradientBrush::GetGradientStopCollection([Out] ID2D1GradientStopCollection** gradientStopCollection)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.RectangleGeometry">
            <summary>	
            Describes a two-dimensional rectangle.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RectangleGeometry']/*"/>	
            <unmanaged>ID2D1RectangleGeometry</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RectangleGeometry.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.RectangleGeometry"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.RectangleGeometry.GetRectangle(SharpDX.RectangleF@)">
            <summary>	
            Retrieves the rectangle that describes the rectangle geometry's dimensions.	
            </summary>	
            <param name="rect"><para>Contains a reference to a rectangle that describes the rectangle geometry's dimensions when this method returns. You must allocate storage for this parameter. </para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RectangleGeometry::GetRect']/*"/>	
            <unmanaged>void ID2D1RectangleGeometry::GetRect([Out] D2D_RECT_F* rect)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RectangleGeometry.#ctor(SharpDX.Direct2D1.Factory,SharpDX.RectangleF)">
            <summary>	
             Creates an <see cref="T:SharpDX.Direct2D1.RectangleGeometry"/>. 	
            </summary>	
            <param name="factory">an instance of <see cref="T:SharpDX.Direct2D1.Factory"/></param>
            <param name="rectangle">The coordinates of the rectangle geometry. </param>
        </member>
        <member name="P:SharpDX.Direct2D1.RectangleGeometry.Rectangle">
            <summary>	
            Retrieves the rectangle that describes the rectangle geometry's dimensions.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RectangleGeometry::GetRect']/*"/>	
            <unmanaged>GetRect</unmanaged>	
            <unmanaged>void ID2D1RectangleGeometry::GetRect([Out] D2D_RECT_F* rect)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.ResourceTexture">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1ResourceTexture']/*"/>	
            <unmanaged>ID2D1ResourceTexture</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.ResourceTexture.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.ResourceTexture"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.ResourceTexture.Update(System.Int32[],System.Int32[],System.Int32[],System.Int32,System.Byte[],System.Int32)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="minimumExtents"><para>The "left" extent of the updates if specified; if <c>null</c>, the entire texture is updated.</para></param>	
            <param name="maximimumExtents"><para>The "right" extent of the updates if specified; if <c>null</c>, the entire texture is updated.</para></param>	
            <param name="strides"><para>The stride to advance through the input data, according to dimension.</para></param>	
            <param name="dimensions"><para>The number of dimensions in the resource texture. This must match the number used to load the texture.</para></param>	
            <param name="data"><para>The data to be placed into the resource texture.</para></param>	
            <param name="dataCount"><para>The size of the data buffer to be used to update the resource texture.</para></param>	
            <returns>This method does not return a value.</returns>	
            <remarks>	
            The number of dimensions in the update must match those of the created texture.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1ResourceTexture::Update']/*"/>	
            <unmanaged>HRESULT ID2D1ResourceTexture::Update([In, Buffer, Optional] const unsigned int* minimumExtents,[In, Buffer, Optional] const unsigned int* maximimumExtents,[In, Buffer, Optional] const unsigned int* strides,[In] unsigned int dimensions,[In, Buffer] const unsigned char* data,[In] unsigned int dataCount)</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.RoundedRectangleGeometry">
            <summary>	
            Retrieves a rounded rectangle that describes this rounded rectangle geometry.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RoundedRectangleGeometry']/*"/>	
            <unmanaged>ID2D1RoundedRectangleGeometry</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RoundedRectangleGeometry.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.RoundedRectangleGeometry"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.RoundedRectangleGeometry.GetRoundedRect(SharpDX.Direct2D1.RoundedRect@)">
            <summary>	
            Retrieves a rounded rectangle that describes this rounded rectangle geometry.	
            </summary>	
            <param name="roundedRect"><para>A reference that receives a rounded rectangle that describes this rounded rectangle geometry. You must allocate storage for this parameter. </para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RoundedRectangleGeometry::GetRoundedRect']/*"/>	
            <unmanaged>void ID2D1RoundedRectangleGeometry::GetRoundedRect([Out] D2D1_ROUNDED_RECT* roundedRect)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RoundedRectangleGeometry.#ctor(SharpDX.Direct2D1.Factory,SharpDX.Direct2D1.RoundedRect)">
            <summary>	
             Creates an <see cref="T:SharpDX.Direct2D1.RoundedRectangleGeometry"/>. 	
            </summary>	
            <param name="factory">an instance of <see cref="T:SharpDX.Direct2D1.Factory"/></param>
            <param name="roundedRectangle">The coordinates and corner radii of the rounded rectangle geometry.</param>
        </member>
        <member name="P:SharpDX.Direct2D1.RoundedRectangleGeometry.RoundedRect">
            <summary>	
            Retrieves a rounded rectangle that describes this rounded rectangle geometry.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1RoundedRectangleGeometry::GetRoundedRect']/*"/>	
            <unmanaged>GetRoundedRect</unmanaged>	
            <unmanaged>void ID2D1RoundedRectangleGeometry::GetRoundedRect([Out] D2D1_ROUNDED_RECT* roundedRect)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.SolidColorBrush">
            <summary>	
            Paints an area with a solid color.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1SolidColorBrush']/*"/>	
            <unmanaged>ID2D1SolidColorBrush</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.SolidColorBrush.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.SolidColorBrush"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.SolidColorBrush.SetColor(SharpDX.Color4)">
            <summary>	
            Specifies the color of this solid-color brush.	
            </summary>	
            <param name="color"><para>The color of this solid-color brush.</para></param>	
            <remarks>	
            To help create colors, Direct2D provides the ColorF class. It offers several helper methods for creating colors and provides a set or predefined colors.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1SolidColorBrush::SetColor']/*"/>	
            <unmanaged>void ID2D1SolidColorBrush::SetColor([In] const D2D_COLOR_F* color)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.SolidColorBrush.GetColor">
            <summary>	
            Retrieves the color of the solid color brush.	
            </summary>	
            <returns>The color of this solid color brush.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1SolidColorBrush::GetColor']/*"/>	
            <unmanaged>D2D_COLOR_F ID2D1SolidColorBrush::GetColor()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.SolidColorBrush.#ctor(SharpDX.Direct2D1.RenderTarget,SharpDX.Color4)">
            <summary>	
            Creates a new <see cref="T:SharpDX.Direct2D1.SolidColorBrush"/> that has the specified color and opacity. 	
            </summary>	
            <param name="renderTarget">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <param name="color">The red, green, blue, and alpha values of the brush's color.</param>
        </member>
        <member name="M:SharpDX.Direct2D1.SolidColorBrush.#ctor(SharpDX.Direct2D1.RenderTarget,SharpDX.Color4,System.Nullable{SharpDX.Direct2D1.BrushProperties})">
            <summary>	
            Creates a new <see cref="T:SharpDX.Direct2D1.SolidColorBrush"/> that has the specified color and opacity. 	
            </summary>	
            <param name="renderTarget">an instance of <see cref="T:SharpDX.Direct2D1.RenderTarget"/></param>
            <param name="color">The red, green, blue, and alpha values of the brush's color.</param>
            <param name="brushProperties">The base opacity of the brush.</param>
        </member>
        <member name="P:SharpDX.Direct2D1.SolidColorBrush.Color">
            <summary>	
            Retrieves the color of the solid color brush.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1SolidColorBrush::GetColor']/*"/>	
            <unmanaged>GetColor</unmanaged>	
            <unmanaged>D2D_COLOR_F ID2D1SolidColorBrush::GetColor()</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.SourceTransform">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1SourceTransform']/*"/>	
            <unmanaged>ID2D1SourceTransform</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.SourceTransform.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.SourceTransform"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.SourceTransform.SetRenderInfo(SharpDX.Direct2D1.RenderInfo)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="renderInfo"><para>The interface supplied to the transform to allow specifying the precision-based transform pass.</para></param>	
            <returns>If the method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. If it fails, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            Provides a render information interface to the source transform to allow it to specify state to the rendering system. This part of the render information interface is shared with the GPU transform.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1SourceTransform::SetRenderInfo']/*"/>	
            <unmanaged>HRESULT ID2D1SourceTransform::SetRenderInfo([In] ID2D1RenderInfo* renderInfo)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.SourceTransform.Draw(SharpDX.Direct2D1.Bitmap1,SharpDX.Rectangle,SharpDX.DrawingPoint)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="target">No documentation.</param>	
            <param name="drawRect">No documentation.</param>	
            <param name="targetOrigin">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1SourceTransform::Draw']/*"/>	
            <unmanaged>HRESULT ID2D1SourceTransform::Draw([In] ID2D1Bitmap1* target,[In] const RECT* drawRect,[In] D2D_POINT_2U targetOrigin)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct2D1.SourceTransform.RenderInfo">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            Provides a render information interface to the source transform to allow it to specify state to the rendering system. This part of the render information interface is shared with the GPU transform.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1SourceTransform::SetRenderInfo']/*"/>	
            <unmanaged>SetRenderInfo</unmanaged>	
            <unmanaged>HRESULT ID2D1SourceTransform::SetRenderInfo([In] ID2D1RenderInfo* renderInfo)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.StrokeStyle">
            <summary>	
            Describes the caps, miter limit, line join, and dash information for a stroke.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1StrokeStyle']/*"/>	
            <unmanaged>ID2D1StrokeStyle</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.StrokeStyle.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.StrokeStyle"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.StrokeStyle.GetStartCap">
            <summary>	
            Retrieves the type of shape used at the beginning of a stroke.	
            </summary>	
            <returns>The type of shape used at the beginning of a stroke.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1StrokeStyle::GetStartCap']/*"/>	
            <unmanaged>D2D1_CAP_STYLE ID2D1StrokeStyle::GetStartCap()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.StrokeStyle.GetEndCap">
            <summary>	
            Retrieves the type of shape used at the end of a stroke.	
            </summary>	
            <returns>The type of shape used at the end of a stroke.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1StrokeStyle::GetEndCap']/*"/>	
            <unmanaged>D2D1_CAP_STYLE ID2D1StrokeStyle::GetEndCap()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.StrokeStyle.GetDashCap">
            <summary>	
            Gets a value that specifies how the ends of each dash are drawn.	
            </summary>	
            <returns>A value that specifies how the ends of each dash are drawn.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1StrokeStyle::GetDashCap']/*"/>	
            <unmanaged>D2D1_CAP_STYLE ID2D1StrokeStyle::GetDashCap()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.StrokeStyle.GetMiterLimit">
            <summary>	
            Retrieves the limit on the ratio of the miter length to half the stroke's thickness.	
            </summary>	
            <returns>A positive number greater than or equal to 1.0f that describes the limit on the ratio of the miter length to half the stroke's thickness.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1StrokeStyle::GetMiterLimit']/*"/>	
            <unmanaged>float ID2D1StrokeStyle::GetMiterLimit()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.StrokeStyle.GetLineJoin">
            <summary>	
            Retrieves the type of joint used at the vertices of a shape's outline.	
            </summary>	
            <returns>A value that specifies the type of joint used at the vertices of a shape's outline.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1StrokeStyle::GetLineJoin']/*"/>	
            <unmanaged>D2D1_LINE_JOIN ID2D1StrokeStyle::GetLineJoin()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.StrokeStyle.GetDashOffset">
            <summary>	
            Retrieves a value that specifies how far in the dash sequence the stroke will start.	
            </summary>	
            <returns>A value that specifies how far in the dash sequence the stroke will start.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1StrokeStyle::GetDashOffset']/*"/>	
            <unmanaged>float ID2D1StrokeStyle::GetDashOffset()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.StrokeStyle.GetDashStyle">
            <summary>	
            Gets a value that describes the stroke's dash pattern.	
            </summary>	
            <returns>A value that describes the predefined dash pattern used, or <see cref="F:SharpDX.Direct2D1.DashStyle.Custom"/> if a custom dash style is used.</returns>	
            <remarks>	
            If a custom dash style is specified, the dash pattern is described by the dashes array, which can be retrieved by calling the GetDashes method.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1StrokeStyle::GetDashStyle']/*"/>	
            <unmanaged>D2D1_DASH_STYLE ID2D1StrokeStyle::GetDashStyle()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.StrokeStyle.GetDashesCount">
            <summary>	
            Retrieves the number of entries in the dashes array.	
            </summary>	
            <returns>The number of entries in the dashes array if the stroke is dashed; otherwise, 0.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1StrokeStyle::GetDashesCount']/*"/>	
            <unmanaged>unsigned int ID2D1StrokeStyle::GetDashesCount()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.StrokeStyle.GetDashes(System.Single[],System.Int32)">
            <summary>	
            Copies the dash pattern to the specified array.	
            </summary>	
            <param name="dashes"><para>A reference to an array that will receive the dash pattern. The array must be able to contain at least as many elements as specified by dashesCount. You must allocate storage for this array.</para></param>	
            <param name="dashesCount"><para>The number of dashes to copy. If this value is less than the number of dashes in the stroke style's dashes array, the returned dashes are truncated to dashesCount. If this value is greater than the number of dashes in the stroke style's dashes array, the extra dashes are set to 0.0f. To obtain the actual number of dashes in the stroke style's dashes array, use the GetDashesCount method. </para></param>	
            <remarks>	
            The dashes are specified in units that are a multiple of the stroke width, with subsequent members of the array indicating the dashes and gaps between dashes: the first entry indicates a filled dash, the second a gap, and so on.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1StrokeStyle::GetDashes']/*"/>	
            <unmanaged>void ID2D1StrokeStyle::GetDashes([Out, Buffer] float* dashes,[In] unsigned int dashesCount)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.StrokeStyle.#ctor(SharpDX.Direct2D1.Factory,SharpDX.Direct2D1.StrokeStyleProperties)">
            <summary>
            Creates an <see cref="T:SharpDX.Direct2D1.StrokeStyle"/> that describes start cap, dash pattern, and other features of a stroke.	
            </summary>	
            <param name="factory">an instance of <see cref="T:SharpDX.Direct2D1.Factory"/></param>
            <param name="properties">a definition for this render target</param>
        </member>
        <member name="M:SharpDX.Direct2D1.StrokeStyle.#ctor(SharpDX.Direct2D1.Factory,SharpDX.Direct2D1.StrokeStyleProperties,System.Single[])">
            <summary>
            Creates an <see cref="T:SharpDX.Direct2D1.StrokeStyle"/> that describes start cap, dash pattern, and other features of a stroke.	
            </summary>	
            <param name="factory">an instance of <see cref="T:SharpDX.Direct2D1.Factory"/></param>
            <param name="properties">A structure that describes the stroke's line cap, dash offset, and other details of a stroke.</param>
            <param name="dashes">An array whose elements are set to the length of each dash and space in the dash pattern. The first element sets the length of a dash, the second element sets the length of a space, the third element sets the length of a dash, and so on. The length of each dash and space in the dash pattern is the product of the element value in the array and the stroke width. </param>
        </member>
        <member name="P:SharpDX.Direct2D1.StrokeStyle.StartCap">
            <summary>	
            Retrieves the type of shape used at the beginning of a stroke.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1StrokeStyle::GetStartCap']/*"/>	
            <unmanaged>GetStartCap</unmanaged>	
            <unmanaged>D2D1_CAP_STYLE ID2D1StrokeStyle::GetStartCap()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.StrokeStyle.EndCap">
            <summary>	
            Retrieves the type of shape used at the end of a stroke.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1StrokeStyle::GetEndCap']/*"/>	
            <unmanaged>GetEndCap</unmanaged>	
            <unmanaged>D2D1_CAP_STYLE ID2D1StrokeStyle::GetEndCap()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.StrokeStyle.DashCap">
            <summary>	
            Gets a value that specifies how the ends of each dash are drawn.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1StrokeStyle::GetDashCap']/*"/>	
            <unmanaged>GetDashCap</unmanaged>	
            <unmanaged>D2D1_CAP_STYLE ID2D1StrokeStyle::GetDashCap()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.StrokeStyle.MiterLimit">
            <summary>	
            Retrieves the limit on the ratio of the miter length to half the stroke's thickness.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1StrokeStyle::GetMiterLimit']/*"/>	
            <unmanaged>GetMiterLimit</unmanaged>	
            <unmanaged>float ID2D1StrokeStyle::GetMiterLimit()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.StrokeStyle.LineJoin">
            <summary>	
            Retrieves the type of joint used at the vertices of a shape's outline.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1StrokeStyle::GetLineJoin']/*"/>	
            <unmanaged>GetLineJoin</unmanaged>	
            <unmanaged>D2D1_LINE_JOIN ID2D1StrokeStyle::GetLineJoin()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.StrokeStyle.DashOffset">
            <summary>	
            Retrieves a value that specifies how far in the dash sequence the stroke will start.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1StrokeStyle::GetDashOffset']/*"/>	
            <unmanaged>GetDashOffset</unmanaged>	
            <unmanaged>float ID2D1StrokeStyle::GetDashOffset()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.StrokeStyle.DashStyle">
            <summary>	
            Gets a value that describes the stroke's dash pattern.	
            </summary>	
            <remarks>	
            If a custom dash style is specified, the dash pattern is described by the dashes array, which can be retrieved by calling the GetDashes method.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1StrokeStyle::GetDashStyle']/*"/>	
            <unmanaged>GetDashStyle</unmanaged>	
            <unmanaged>D2D1_DASH_STYLE ID2D1StrokeStyle::GetDashStyle()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.StrokeStyle.DashesCount">
            <summary>	
            Retrieves the number of entries in the dashes array.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1StrokeStyle::GetDashesCount']/*"/>	
            <unmanaged>GetDashesCount</unmanaged>	
            <unmanaged>unsigned int ID2D1StrokeStyle::GetDashesCount()</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.StrokeStyle1">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1StrokeStyle1']/*"/>	
            <unmanaged>ID2D1StrokeStyle1</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.StrokeStyle1.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.StrokeStyle1"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.StrokeStyle1.GetStrokeTransformType">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <returns>This method returns the stroke transform type.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1StrokeStyle1::GetStrokeTransformType']/*"/>	
            <unmanaged>D2D1_STROKE_TRANSFORM_TYPE ID2D1StrokeStyle1::GetStrokeTransformType()</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct2D1.StrokeStyle1.StrokeTransformType">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1StrokeStyle1::GetStrokeTransformType']/*"/>	
            <unmanaged>GetStrokeTransformType</unmanaged>	
            <unmanaged>D2D1_STROKE_TRANSFORM_TYPE ID2D1StrokeStyle1::GetStrokeTransformType()</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.TessellationSink">
            <summary>	
            Populates an <see cref="T:SharpDX.Direct2D1.Mesh"/> object with triangles.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1TessellationSink']/*"/>	
            <unmanaged>ID2D1TessellationSink</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.TessellationSink.AddTriangles(SharpDX.Direct2D1.Triangle[])">
            <summary>	
            Copies the specified triangles to the sink.  	
            </summary>	
            <param name="triangles">An array of <see cref="T:SharpDX.Direct2D1.Triangle"/> structures that describe the triangles to add to the sink.</param>
            <unmanaged>void AddTriangles([In, Buffer] const D2D1_TRIANGLE* triangles,[None] UINT trianglesCount)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct2D1.TessellationSink.Close">
            <summary>	
             Closes the sink.	
            </summary>	
            <unmanaged>HRESULT Close()</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.TessellationSinkNative">
            <summary>	
            Populates an <see cref="T:SharpDX.Direct2D1.Mesh"/> object with triangles.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1TessellationSink']/*"/>	
            <unmanaged>ID2D1TessellationSink</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.TessellationSinkNative.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.TessellationSinkNative"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.TessellationSinkNative.AddTriangles_(SharpDX.Direct2D1.Triangle[],System.Int32)">
            <summary>	
            Copies the specified triangles to the sink.	
            </summary>	
            <param name="triangles"><para>An array of <see cref="T:SharpDX.Direct2D1.Triangle"/> structures that describe the triangles to add to the sink.</para></param>	
            <param name="trianglesCount"><para>The number of triangles to copy from the triangles array.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1TessellationSink::AddTriangles']/*"/>	
            <unmanaged>void ID2D1TessellationSink::AddTriangles([In, Buffer] const D2D1_TRIANGLE* triangles,[In] unsigned int trianglesCount)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.TessellationSinkNative.Close_">
            <summary>	
            Closes the sink and returns its error status.	
            </summary>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1TessellationSink::Close']/*"/>	
            <unmanaged>HRESULT ID2D1TessellationSink::Close()</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.TransformedGeometry">
            <summary>	
            Represents a geometry that has been transformed.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1TransformedGeometry']/*"/>	
            <unmanaged>ID2D1TransformedGeometry</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.TransformedGeometry.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.TransformedGeometry"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.TransformedGeometry.GetSourceGeometry(SharpDX.Direct2D1.Geometry@)">
            <summary>	
            Retrieves the source geometry of this transformed geometry object.	
            </summary>	
            <param name="sourceGeometry"><para>When this method returns, contains a reference to a reference to the source geometry for this transformed geometry object. This parameter is passed uninitialized.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1TransformedGeometry::GetSourceGeometry']/*"/>	
            <unmanaged>void ID2D1TransformedGeometry::GetSourceGeometry([Out] ID2D1Geometry** sourceGeometry)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.TransformedGeometry.GetTransform(SharpDX.Matrix3x2@)">
            <summary>	
            Retrieves the matrix used to transform the <see cref="T:SharpDX.Direct2D1.TransformedGeometry"/> object's source geometry.	
            </summary>	
            <param name="transform">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1TransformedGeometry::GetTransform']/*"/>	
            <unmanaged>void ID2D1TransformedGeometry::GetTransform([Out] D2D_MATRIX_3X2_F* transform)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.TransformedGeometry.#ctor(SharpDX.Direct2D1.Factory,SharpDX.Direct2D1.Geometry,SharpDX.Matrix3x2)">
            <summary>
            Default Constructor for a <see cref="T:SharpDX.Direct2D1.TransformedGeometry"/>.
            </summary>
            <param name="factory">an instance of <see cref="T:SharpDX.Direct2D1.Factory"/></param>
            <param name="geometrySource"></param>
            <param name="matrix3X2"></param>
        </member>
        <member name="P:SharpDX.Direct2D1.TransformedGeometry.SourceGeometry">
            <summary>	
            Retrieves the source geometry of this transformed geometry object.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1TransformedGeometry::GetSourceGeometry']/*"/>	
            <unmanaged>GetSourceGeometry</unmanaged>	
            <unmanaged>void ID2D1TransformedGeometry::GetSourceGeometry([Out] ID2D1Geometry** sourceGeometry)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.TransformedGeometry.Transform">
            <summary>	
            Retrieves the matrix used to transform the <see cref="T:SharpDX.Direct2D1.TransformedGeometry"/> object's source geometry.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1TransformedGeometry::GetTransform']/*"/>	
            <unmanaged>GetTransform</unmanaged>	
            <unmanaged>void ID2D1TransformedGeometry::GetTransform([Out] D2D_MATRIX_3X2_F* transform)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.TransformGraph">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1TransformGraph']/*"/>	
            <unmanaged>ID2D1TransformGraph</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.TransformGraph.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.TransformGraph"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.TransformGraph.GetInputCount">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1TransformGraph::GetInputCount']/*"/>	
            <unmanaged>unsigned int ID2D1TransformGraph::GetInputCount()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.TransformGraph.SetSingleTransformNode(SharpDX.Direct2D1.TransformNode)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="node"><para>The node to be set.</para></param>	
            <returns>The method returns an <see cref="T:SharpDX.Result"/>. Possible values include, but are not limited to, those in the following table.HRESULTDescription S_OKNo error occurred E_OUTOFMEMORYDirect2D could not allocate sufficient memory to complete the call.?</returns>	
            <remarks>	
            This equivalent to calling <see cref="M:SharpDX.Direct2D1.TransformGraph.Clear"/>, adding a single node, and connecting all of the node inputs to the effect inputs in order.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1TransformGraph::SetSingleTransformNode']/*"/>	
            <unmanaged>HRESULT ID2D1TransformGraph::SetSingleTransformNode([In] ID2D1TransformNode* node)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.TransformGraph.AddNode(SharpDX.Direct2D1.TransformNode)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="node"><para>The node that will be added to the transform graph.</para></param>	
            <returns>The method returns an <see cref="T:SharpDX.Result"/>. Possible values include, but are not limited to, those in the following table.HRESULTDescription S_OKNo error occurred E_OUTOFMEMORYDirect2D could not allocate sufficient memory to complete the call.?</returns>	
            <remarks>	
            This adds a transform node to the transform graph. A node must be added to the transform graph before it can be interconnected in any way.A transform graph cannot be directly added to another transform graph. 	
            Any other kind of interface derived from <see cref="T:SharpDX.Direct2D1.TransformNode"/> can be added to the transform graph.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1TransformGraph::AddNode']/*"/>	
            <unmanaged>HRESULT ID2D1TransformGraph::AddNode([In] ID2D1TransformNode* node)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.TransformGraph.RemoveNode(SharpDX.Direct2D1.TransformNode)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="node"><para>The node that will be removed from the transform graph.</para></param>	
            <returns>The method returns an <see cref="T:SharpDX.Result"/>. Possible values include, but are not limited to, those in the following table.HRESULTDescription S_OKNo error occurred D2DERR_NOT_FOUND = (HRESULT_FROM_WIN32(<see cref="F:SharpDX.Win32.ErrorCode.NotFound"/>))Direct2D could not locate the specified node.?</returns>	
            <remarks>	
            The node must already exist in the graph; otherwise, the call fails with D2DERR_NOT_FOUND.Any connections to this node will be removed when the node is removed.After the node is removed, it cannot be used by the interface until it has been added to the graph by AddNode.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1TransformGraph::RemoveNode']/*"/>	
            <unmanaged>HRESULT ID2D1TransformGraph::RemoveNode([In] ID2D1TransformNode* node)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.TransformGraph.SetOutputNode(SharpDX.Direct2D1.TransformNode)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="node">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1TransformGraph::SetOutputNode']/*"/>	
            <unmanaged>HRESULT ID2D1TransformGraph::SetOutputNode([In] ID2D1TransformNode* node)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.TransformGraph.ConnectNode(SharpDX.Direct2D1.TransformNode,SharpDX.Direct2D1.TransformNode,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="fromNode">No documentation.</param>	
            <param name="toNode">No documentation.</param>	
            <param name="toNodeInput">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1TransformGraph::ConnectNode']/*"/>	
            <unmanaged>HRESULT ID2D1TransformGraph::ConnectNode([In] ID2D1TransformNode* fromNode,[In] ID2D1TransformNode* toNode,[In] unsigned int toNodeInput)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.TransformGraph.ConnectToEffectInput(System.Int32,SharpDX.Direct2D1.TransformNode,System.Int32)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="toEffectInput"><para>The effect input to which the transform node will be bound.</para></param>	
            <param name="node"><para>The node to which the connection will be made.</para></param>	
            <param name="toNodeInput"><para>The node input that will be connected.</para></param>	
            <returns>The method returns an <see cref="T:SharpDX.Result"/>. Possible values include, but are not limited to, those in the following table.HRESULTDescription S_OKNo error occurred D2DERR_NOT_FOUND = (HRESULT_FROM_WIN32(<see cref="F:SharpDX.Win32.ErrorCode.NotFound"/>))Direct2D could not locate the specified node.?</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1TransformGraph::ConnectToEffectInput']/*"/>	
            <unmanaged>HRESULT ID2D1TransformGraph::ConnectToEffectInput([In] unsigned int toEffectInput,[In] ID2D1TransformNode* node,[In] unsigned int toNodeInput)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.TransformGraph.Clear">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            Used when enough changes to transfoms would make  editing of the transform graph inefficient.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1TransformGraph::Clear']/*"/>	
            <unmanaged>void ID2D1TransformGraph::Clear()</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct2D1.TransformGraph.InputCount">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1TransformGraph::GetInputCount']/*"/>	
            <unmanaged>GetInputCount</unmanaged>	
            <unmanaged>unsigned int ID2D1TransformGraph::GetInputCount()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.TransformGraph.SingleTransformNode">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            This equivalent to calling <see cref="M:SharpDX.Direct2D1.TransformGraph.Clear"/>, adding a single node, and connecting all of the node inputs to the effect inputs in order.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1TransformGraph::SetSingleTransformNode']/*"/>	
            <unmanaged>SetSingleTransformNode</unmanaged>	
            <unmanaged>HRESULT ID2D1TransformGraph::SetSingleTransformNode([In] ID2D1TransformNode* node)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct2D1.TransformGraph.OutputNode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1TransformGraph::SetOutputNode']/*"/>	
            <unmanaged>SetOutputNode</unmanaged>	
            <unmanaged>HRESULT ID2D1TransformGraph::SetOutputNode([In] ID2D1TransformNode* node)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.VertexBuffer">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1VertexBuffer']/*"/>	
            <unmanaged>ID2D1VertexBuffer</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.VertexBuffer.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.VertexBuffer"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.VertexBuffer.Map(System.Byte[],System.Int32)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="data"><para>When this method returns, contains the address of a reference to the available buffer.</para></param>	
            <param name="bufferSize"><para>The desired size of the buffer.</para></param>	
            <returns>The method returns an <see cref="T:SharpDX.Result"/>. Possible values include, but are not limited to, those in the following table.HRESULTDescription S_OKNo error occurred. E_INVALIDARGAn invalid parameter was passed to the returning function. D3DERR_DEVICELOSTThe device has been lost but cannot be reset at this time.?</returns>	
            <remarks>	
            If data is larger than bufferSize, this method fails.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1VertexBuffer::Map']/*"/>	
            <unmanaged>HRESULT ID2D1VertexBuffer::Map([Out, Buffer] unsigned char** data,[In] unsigned int bufferSize)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.VertexBuffer.Unmap">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <returns>The method returns an <see cref="T:SharpDX.Result"/>. Possible values include, but are not limited to, those in the following table.HRESULTDescription S_OKNo error occurred. D2DERR_WRONG_STATEThe object was not in the correct state to process the method.?</returns>	
            <remarks>	
            After this method returns, the mapped memory from the vertex buffer is no longer accessible by the effect.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1VertexBuffer::Unmap']/*"/>	
            <unmanaged>HRESULT ID2D1VertexBuffer::Unmap()</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.WindowRenderTarget">
            <summary>	
            Renders drawing instructions to a window.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1HwndRenderTarget']/*"/>	
            <unmanaged>ID2D1HwndRenderTarget</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.WindowRenderTarget.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.WindowRenderTarget"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct2D1.WindowRenderTarget.CheckWindowState">
            <summary>	
            Indicates whether the <see cref="T:System.IntPtr"/> associated with this render target is occluded.	
            </summary>	
            <returns>A value that indicates whether the <see cref="T:System.IntPtr"/> associated with this render target is occluded.</returns>	
            <remarks>	
            Note??If the window was occluded the last time  that EndDraw was called, the next time that the render target calls CheckWindowState, it will return <see cref="F:SharpDX.Direct2D1.WindowState.Occluded"/> regardless of the current window state. If you want to use CheckWindowState to determine the current window state, you should call CheckWindowState after every EndDraw call and ignore its return value. This call will ensure that your next call to CheckWindowState state will return the actual window state.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1HwndRenderTarget::CheckWindowState']/*"/>	
            <unmanaged>D2D1_WINDOW_STATE ID2D1HwndRenderTarget::CheckWindowState()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.WindowRenderTarget.Resize(SharpDX.DrawingSize)">
            <summary>	
            Changes the size of the render target to the specified pixel size.	
            </summary>	
            <param name="ixelSizeRef">No documentation.</param>	
            <returns>No documentation.</returns>	
            <remarks>	
            After this method is called, the contents of the render target's back-buffer are not defined, even if the <see cref="F:SharpDX.Direct2D1.PresentOptions.RetainContents"/> option was specified when the render target was created.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1HwndRenderTarget::Resize']/*"/>	
            <unmanaged>HRESULT ID2D1HwndRenderTarget::Resize([In] const D2D_SIZE_U* pixelSize)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.WindowRenderTarget.GetHwnd">
            <summary>	
            Returns the <see cref="T:System.IntPtr"/> associated with this render target.	
            </summary>	
            <returns>The <see cref="T:System.IntPtr"/> associated with this render target.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1HwndRenderTarget::GetHwnd']/*"/>	
            <unmanaged>HWND ID2D1HwndRenderTarget::GetHwnd()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.WindowRenderTarget.#ctor(SharpDX.Direct2D1.Factory,SharpDX.Direct2D1.RenderTargetProperties,SharpDX.Direct2D1.HwndRenderTargetProperties)">
            <summary>	
            Creates an <see cref="T:SharpDX.Direct2D1.WindowRenderTarget"/>, a render target that renders to a window.	
            </summary>	
            <remarks>	
            When you create a render target and hardware acceleration is available, you allocate resources on the computer's GPU. By creating a render target once and retaining it as long as possible, you gain performance benefits. Your application should create render targets once and hold onto them for the life of the application or until the {{D2DERR_RECREATE_TARGET}} error is received. When you receive this error, you need to recreate the render target (and any resources it created).	
            </remarks>
            <param name="factory">an instance of <see cref="T:SharpDX.Direct2D1.Factory"/></param>
            <param name="renderTargetProperties">The rendering mode, pixel format, remoting options, DPI information, and the minimum DirectX support required for hardware rendering. For information about supported pixel formats, see  {{Supported Pixel  Formats and Alpha Modes}}.</param>
            <param name="hwndProperties">The window handle, initial size (in pixels), and present options.</param>
        </member>
        <member name="P:SharpDX.Direct2D1.WindowRenderTarget.Hwnd">
            <summary>	
            Returns the <see cref="T:System.IntPtr"/> associated with this render target.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID2D1HwndRenderTarget::GetHwnd']/*"/>	
            <unmanaged>GetHwnd</unmanaged>	
            <unmanaged>HWND ID2D1HwndRenderTarget::GetHwnd()</unmanaged>
        </member>
        <member name="T:SharpDX.Direct2D1.ArcSegment">
            <summary>	
            Describes an elliptical arc between two points.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_ARC_SEGMENT']/*"/>	
            <unmanaged>D2D1_ARC_SEGMENT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ArcSegment.Point">
            <summary>	
            <para>The end point of the arc.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_ARC_SEGMENT::point']/*"/>	
            <unmanaged>D2D_POINT_2F point</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ArcSegment.Size">
            <summary>	
            <para>The x-radius and y-radius of the arc.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_ARC_SEGMENT::size']/*"/>	
            <unmanaged>D2D_SIZE_F size</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ArcSegment.RotationAngle">
            <summary>	
            <para>A value that specifies how many degrees in the clockwise direction the ellipse is rotated relative to the current coordinate system.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_ARC_SEGMENT::rotationAngle']/*"/>	
            <unmanaged>float rotationAngle</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ArcSegment.SweepDirection">
            <summary>	
            <para>A value that specifies whether the arc sweep is clockwise or counterclockwise.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_ARC_SEGMENT::sweepDirection']/*"/>	
            <unmanaged>D2D1_SWEEP_DIRECTION sweepDirection</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ArcSegment.ArcSize">
            <summary>	
            <para>A value that specifies whether the given arc is larger than 180 degrees.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_ARC_SEGMENT::arcSize']/*"/>	
            <unmanaged>D2D1_ARC_SIZE arcSize</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.BezierSegment">
            <summary>	
            Represents a cubic bezier segment drawn  between two points.	
            </summary>	
            <remarks>	
            A cubic Bezier curve is defined by four points: a start point, an end point (point3), and two control points (point1 and point2). A Bezier segment does not contain a property for the starting point of the curve; it defines only the end point. The beginning point of the curve is the current point of the path to which the Bezier curve is added.The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve. The first control point, point1, affects the beginning portion of the curve; the second control point, point2, affects the ending portion of the curve.Note??The curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BEZIER_SEGMENT']/*"/>	
            <unmanaged>D2D1_BEZIER_SEGMENT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BezierSegment.Point1">
            <summary>	
            <para>The first control point for the Bezier segment.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BEZIER_SEGMENT::point1']/*"/>	
            <unmanaged>D2D_POINT_2F point1</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BezierSegment.Point2">
            <summary>	
            <para>The second control point for the Bezier segment.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BEZIER_SEGMENT::point2']/*"/>	
            <unmanaged>D2D_POINT_2F point2</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BezierSegment.Point3">
            <summary>	
            <para>The end point for the Bezier segment.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BEZIER_SEGMENT::point3']/*"/>	
            <unmanaged>D2D_POINT_2F point3</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.BitmapBrushProperties">
            <summary>	
            Describes the extend modes and the interpolation mode of an <see cref="T:SharpDX.Direct2D1.BitmapBrush"/>.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAP_BRUSH_PROPERTIES']/*"/>	
            <unmanaged>D2D1_BITMAP_BRUSH_PROPERTIES</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BitmapBrushProperties.ExtendModeX">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAP_BRUSH_PROPERTIES::extendModeX']/*"/>	
            <unmanaged>D2D1_EXTEND_MODE extendModeX</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BitmapBrushProperties.ExtendModeY">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAP_BRUSH_PROPERTIES::extendModeY']/*"/>	
            <unmanaged>D2D1_EXTEND_MODE extendModeY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BitmapBrushProperties.InterpolationMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAP_BRUSH_PROPERTIES::interpolationMode']/*"/>	
            <unmanaged>D2D1_BITMAP_INTERPOLATION_MODE interpolationMode</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.BitmapBrushProperties1">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAP_BRUSH_PROPERTIES1']/*"/>	
            <unmanaged>D2D1_BITMAP_BRUSH_PROPERTIES1</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BitmapBrushProperties1.ExtendModeX">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAP_BRUSH_PROPERTIES1::extendModeX']/*"/>	
            <unmanaged>D2D1_EXTEND_MODE extendModeX</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BitmapBrushProperties1.ExtendModeY">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAP_BRUSH_PROPERTIES1::extendModeY']/*"/>	
            <unmanaged>D2D1_EXTEND_MODE extendModeY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BitmapBrushProperties1.InterpolationMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BITMAP_BRUSH_PROPERTIES1::interpolationMode']/*"/>	
            <unmanaged>D2D1_INTERPOLATION_MODE interpolationMode</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.BlendDescription">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_DESCRIPTION']/*"/>	
            <unmanaged>D2D1_BLEND_DESCRIPTION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendDescription.SourceBlend">
            <summary>	
            <para>Specifies the first RGB data source and includes an optional preblend operation.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_DESCRIPTION::sourceBlend']/*"/>	
            <unmanaged>D2D1_BLEND sourceBlend</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendDescription.DestinationBlend">
            <summary>	
            <para>Specifies the second RGB data source and includes an optional preblend operation.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_DESCRIPTION::destinationBlend']/*"/>	
            <unmanaged>D2D1_BLEND destinationBlend</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendDescription.BlendOperation">
            <summary>	
            <para>Specifies how to combine the RGB data sources.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_DESCRIPTION::blendOperation']/*"/>	
            <unmanaged>D2D1_BLEND_OPERATION blendOperation</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendDescription.SourceBlendAlpha">
            <summary>	
            <para>Specifies the first alpha data source and includes an optional preblend operation. Blend options that end in _COLOR are not allowed.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_DESCRIPTION::sourceBlendAlpha']/*"/>	
            <unmanaged>D2D1_BLEND sourceBlendAlpha</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendDescription.DestinationBlendAlpha">
            <summary>	
            <para>Specifies the second alpha data source and includes an optional preblend operation. Blend options that end in _COLOR are not allowed.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_DESCRIPTION::destinationBlendAlpha']/*"/>	
            <unmanaged>D2D1_BLEND destinationBlendAlpha</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendDescription.BlendOperationAlpha">
            <summary>	
            <para>Specifies how to combine the alpha data sources.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_DESCRIPTION::blendOperationAlpha']/*"/>	
            <unmanaged>D2D1_BLEND_OPERATION blendOperationAlpha</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BlendDescription.BlendFactor">
            <summary>	
            <para>Parameters to the blend operations. The blend must use <see cref="F:SharpDX.Direct2D1.Blend.BlendFactor"/> for this to be used.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BLEND_DESCRIPTION::blendFactor']/*"/>	
            <unmanaged>SHARPDX_COLOR4 blendFactor</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.BrushProperties">
            <summary>	
            Describes the opacity and transformation of a brush.	
            </summary>	
            <remarks>	
            This structure is used when creating a brush. For convenience, Direct2D provides the D2D1::BrushProperties function for creating <see cref="T:SharpDX.Direct2D1.BrushProperties"/> structures.After creating a brush, you can change its opacity or transform by calling the SetOpacity or SetTransform methods.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BRUSH_PROPERTIES']/*"/>	
            <unmanaged>D2D1_BRUSH_PROPERTIES</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BrushProperties.Opacity">
            <summary>	
            <para>A value between 0.0f and 1.0f, inclusive, that specifies the degree of opacity of the brush.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BRUSH_PROPERTIES::opacity']/*"/>	
            <unmanaged>float opacity</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.BrushProperties.Transform">
            <summary>	
            <para>The transformation that is applied to the brush.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_BRUSH_PROPERTIES::transform']/*"/>	
            <unmanaged>D2D_MATRIX_3X2_F transform</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.CreationProperties">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CREATION_PROPERTIES']/*"/>	
            <unmanaged>D2D1_CREATION_PROPERTIES</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.CreationProperties.ThreadingMode">
            <summary>	
            <para>The threading mode with which the corresponding root objects will be created.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CREATION_PROPERTIES::threadingMode']/*"/>	
            <unmanaged>D2D1_THREADING_MODE threadingMode</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.CreationProperties.DebugLevel">
            <summary>	
            <para>The debug level that the root objects should be created with.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CREATION_PROPERTIES::debugLevel']/*"/>	
            <unmanaged>D2D1_DEBUG_LEVEL debugLevel</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.CreationProperties.Options">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CREATION_PROPERTIES::options']/*"/>	
            <unmanaged>D2D1_DEVICE_CONTEXT_OPTIONS options</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.CustomVertexBufferProperties">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            The vertex shader will be loaded by the CreateVertexBuffer call that accepts the vertex buffer properties.This structure does not need to be specified if one of the standard vertex shaders is used.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CUSTOM_VERTEX_BUFFER_PROPERTIES']/*"/>	
            <unmanaged>D2D1_CUSTOM_VERTEX_BUFFER_PROPERTIES</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.CustomVertexBufferProperties.ShaderBufferWithInputSignature">
            <summary>	
            <para>The unique ID of the vertex shader.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CUSTOM_VERTEX_BUFFER_PROPERTIES::shaderBufferWithInputSignature']/*"/>	
            <unmanaged>const unsigned char* shaderBufferWithInputSignature</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.CustomVertexBufferProperties.ShaderBufferSize">
            <summary>	
            <para>An array of input assembler stage data types.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CUSTOM_VERTEX_BUFFER_PROPERTIES::shaderBufferSize']/*"/>	
            <unmanaged>unsigned int shaderBufferSize</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.CustomVertexBufferProperties.InputElements">
            <summary>	
            <para>The number of input elements in the vertex shader.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CUSTOM_VERTEX_BUFFER_PROPERTIES::inputElements']/*"/>	
            <unmanaged>const D2D1_INPUT_ELEMENT_DESC* inputElements</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.CustomVertexBufferProperties.ElementCount">
            <summary>	
            <para>The vertex stride.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CUSTOM_VERTEX_BUFFER_PROPERTIES::elementCount']/*"/>	
            <unmanaged>unsigned int elementCount</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.CustomVertexBufferProperties.Stride">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_CUSTOM_VERTEX_BUFFER_PROPERTIES::stride']/*"/>	
            <unmanaged>unsigned int stride</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.DrawingStateDescription">
            <summary>	
            Describes the drawing state of a render target.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DRAWING_STATE_DESCRIPTION']/*"/>	
            <unmanaged>D2D1_DRAWING_STATE_DESCRIPTION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DrawingStateDescription.AntialiasMode">
            <summary>	
            <para>The antialiasing mode for subsequent nontext drawing operations. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DRAWING_STATE_DESCRIPTION::antialiasMode']/*"/>	
            <unmanaged>D2D1_ANTIALIAS_MODE antialiasMode</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DrawingStateDescription.TextAntialiasMode">
            <summary>	
            <para>The antialiasing mode for subsequent text and glyph drawing operations.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DRAWING_STATE_DESCRIPTION::textAntialiasMode']/*"/>	
            <unmanaged>D2D1_TEXT_ANTIALIAS_MODE textAntialiasMode</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DrawingStateDescription.Tag1">
            <summary>	
            <para>A label for subsequent drawing operations.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DRAWING_STATE_DESCRIPTION::tag1']/*"/>	
            <unmanaged>unsigned longlong tag1</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DrawingStateDescription.Tag2">
            <summary>	
            <para>A label for subsequent drawing operations.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DRAWING_STATE_DESCRIPTION::tag2']/*"/>	
            <unmanaged>unsigned longlong tag2</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DrawingStateDescription.Transform">
            <summary>	
            <para>The transformation to apply to subsequent drawing operations.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DRAWING_STATE_DESCRIPTION::transform']/*"/>	
            <unmanaged>D2D_MATRIX_3X2_F transform</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.DrawingStateDescription1">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DRAWING_STATE_DESCRIPTION1']/*"/>	
            <unmanaged>D2D1_DRAWING_STATE_DESCRIPTION1</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DrawingStateDescription1.AntialiasMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DRAWING_STATE_DESCRIPTION1::antialiasMode']/*"/>	
            <unmanaged>D2D1_ANTIALIAS_MODE antialiasMode</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DrawingStateDescription1.TextAntialiasMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DRAWING_STATE_DESCRIPTION1::textAntialiasMode']/*"/>	
            <unmanaged>D2D1_TEXT_ANTIALIAS_MODE textAntialiasMode</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DrawingStateDescription1.Tag1">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DRAWING_STATE_DESCRIPTION1::tag1']/*"/>	
            <unmanaged>unsigned longlong tag1</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DrawingStateDescription1.Tag2">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DRAWING_STATE_DESCRIPTION1::tag2']/*"/>	
            <unmanaged>unsigned longlong tag2</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DrawingStateDescription1.Transform">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DRAWING_STATE_DESCRIPTION1::transform']/*"/>	
            <unmanaged>D2D_MATRIX_3X2_F transform</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DrawingStateDescription1.PrimitiveBlend">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DRAWING_STATE_DESCRIPTION1::primitiveBlend']/*"/>	
            <unmanaged>D2D1_PRIMITIVE_BLEND primitiveBlend</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.DrawingStateDescription1.UnitMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_DRAWING_STATE_DESCRIPTION1::unitMode']/*"/>	
            <unmanaged>D2D1_UNIT_MODE unitMode</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.EffectInputDescription">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            Note??The caller should not rely heavily on the input rectangles returned by this structure. They can change due to subtle changes in effect implementations and due to optimization changes in the effect rendering system.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_EFFECT_INPUT_DESCRIPTION']/*"/>	
            <unmanaged>D2D1_EFFECT_INPUT_DESCRIPTION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.EffectInputDescription.Effect">
            <summary>	
            <para>The effect whose input connection is being specified.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_EFFECT_INPUT_DESCRIPTION::effect']/*"/>	
            <unmanaged>ID2D1Effect* effect</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.EffectInputDescription.InputIndex">
            <summary>	
            <para>The input index of the effect that is being considered.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_EFFECT_INPUT_DESCRIPTION::inputIndex']/*"/>	
            <unmanaged>unsigned int inputIndex</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.EffectInputDescription.InputRectangle">
            <summary>	
            <para>The amount of data that would be available on the input. This can be used to query this information when the data is not yet available. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_EFFECT_INPUT_DESCRIPTION::inputRectangle']/*"/>	
            <unmanaged>D2D_RECT_F inputRectangle</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.FactoryOptions">
            <summary>	
            Contains the debugging level of an <see cref="T:SharpDX.Direct2D1.Factory"/> object.	
            </summary>	
            <remarks>	
            To enable debugging, you must install the Direct2D Debug Layer.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_FACTORY_OPTIONS']/*"/>	
            <unmanaged>D2D1_FACTORY_OPTIONS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.FactoryOptions.DebugLevel">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_FACTORY_OPTIONS::debugLevel']/*"/>	
            <unmanaged>D2D1_DEBUG_LEVEL debugLevel</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.FeatureDataD3D10XHardwareOptions">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS']/*"/>	
            <unmanaged>D2D1_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct2D1.FeatureDataD3D10XHardwareOptions.ComputeShadersPlusRawAndStructuredBuffersViaShader4X">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS::computeShaders_Plus_RawAndStructuredBuffers_Via_Shader_4_x']/*"/>	
            <unmanaged>BOOL computeShaders_Plus_RawAndStructuredBuffers_Via_Shader_4_x</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.FeatureDataDoubles">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_FEATURE_DATA_DOUBLES']/*"/>	
            <unmanaged>D2D1_FEATURE_DATA_DOUBLES</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct2D1.FeatureDataDoubles.DoublePrecisionFloatShaderOps">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_FEATURE_DATA_DOUBLES::doublePrecisionFloatShaderOps']/*"/>	
            <unmanaged>BOOL doublePrecisionFloatShaderOps</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.GradientStop">
            <summary>	
            Contains the position and color of a gradient stop.	
            </summary>	
            <remarks>	
            Gradient stops can be specified in any order if they are at different positions. Two stops may share a position. In this case, the first stop specified is treated as the "low" stop (nearer 0.0f) and subsequent stops are treated as "higher" (nearer 1.0f). This behavior is useful if a caller wants an instant transition in the middle of a stop.Typically, there are at least two points in a collection, although creation with only one stop is permitted. For example, one point is at position 0.0f, another point is at position 1.0f, and additional points are distributed in the [0, 1] range. Where the gradient progression is beyond the range of [0, 1], the stops are stored, but may affect the gradient.When drawn, the [0, 1] range of positions is mapped to the brush, in a brush-dependent way. For details, see <see cref="T:SharpDX.Direct2D1.LinearGradientBrush"/> and <see cref="T:SharpDX.Direct2D1.RadialGradientBrush"/>.Gradient stops with a position outside the [0, 1] range cannot be seen explicitly, but they can still affect the colors produced in the [0, 1] range. For example, a two-stop gradient 0.0f, Black}, {2.0f, White is indistinguishable visually from 0.0f, Black}, {1.0f, Mid-level gray. Also, the colors are clamped before interpolation.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GRADIENT_STOP']/*"/>	
            <unmanaged>D2D1_GRADIENT_STOP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.GradientStop.Position">
            <summary>	
            <para>A value that indicates the relative position of the gradient stop in the brush. This value must be in the [0.0f, 1.0f] range if the gradient stop is to be seen explicitly. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GRADIENT_STOP::position']/*"/>	
            <unmanaged>float position</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.GradientStop.Color">
            <summary>	
            <para>The color of the gradient stop.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_GRADIENT_STOP::color']/*"/>	
            <unmanaged>D2D_COLOR_F color</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.HwndRenderTargetProperties">
            <summary>	
            Contains the <see cref="T:System.IntPtr"/>, pixel size, and presentation options for an <see cref="T:SharpDX.Direct2D1.WindowRenderTarget"/>.	
            </summary>	
            <remarks>	
            Use this structure when you call the CreateHwndRenderTarget method to create a new <see cref="T:SharpDX.Direct2D1.WindowRenderTarget"/>.For convenience, Direct2D provides the D2D1::HwndRenderTargetProperties function for creating new <see cref="T:SharpDX.Direct2D1.HwndRenderTargetProperties"/> structures.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_HWND_RENDER_TARGET_PROPERTIES']/*"/>	
            <unmanaged>D2D1_HWND_RENDER_TARGET_PROPERTIES</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.HwndRenderTargetProperties.Hwnd">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_HWND_RENDER_TARGET_PROPERTIES::hwnd']/*"/>	
            <unmanaged>HWND hwnd</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.HwndRenderTargetProperties.PixelSize">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_HWND_RENDER_TARGET_PROPERTIES::pixelSize']/*"/>	
            <unmanaged>D2D_SIZE_U pixelSize</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.HwndRenderTargetProperties.PresentOptions">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_HWND_RENDER_TARGET_PROPERTIES::presentOptions']/*"/>	
            <unmanaged>D2D1_PRESENT_OPTIONS presentOptions</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.ImageBrushProperties">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_IMAGE_BRUSH_PROPERTIES']/*"/>	
            <unmanaged>D2D1_IMAGE_BRUSH_PROPERTIES</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ImageBrushProperties.SourceRectangle">
            <summary>	
            <para>The extend mode in the image x-axis.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_IMAGE_BRUSH_PROPERTIES::sourceRectangle']/*"/>	
            <unmanaged>D2D_RECT_F sourceRectangle</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ImageBrushProperties.ExtendModeX">
            <summary>	
            <para>The extend mode in the image y-axis.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_IMAGE_BRUSH_PROPERTIES::extendModeX']/*"/>	
            <unmanaged>D2D1_EXTEND_MODE extendModeX</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ImageBrushProperties.ExtendModeY">
            <summary>	
            <para>The source rectangle in the image space from which the image will be tiled or interpolated.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_IMAGE_BRUSH_PROPERTIES::extendModeY']/*"/>	
            <unmanaged>D2D1_EXTEND_MODE extendModeY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ImageBrushProperties.InterpolationMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_IMAGE_BRUSH_PROPERTIES::interpolationMode']/*"/>	
            <unmanaged>D2D1_INTERPOLATION_MODE interpolationMode</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.InputDescription">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_INPUT_DESCRIPTION']/*"/>	
            <unmanaged>D2D1_INPUT_DESCRIPTION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.InputDescription.Filter">
            <summary>	
            <para>The type of filter to apply to the input texture.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_INPUT_DESCRIPTION::filter']/*"/>	
            <unmanaged>D2D1_FILTER filter</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.InputDescription.LevelOfDetailCount">
            <summary>	
            <para>The mip level to retrieve from the upstream transform, if specified.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_INPUT_DESCRIPTION::levelOfDetailCount']/*"/>	
            <unmanaged>unsigned int levelOfDetailCount</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.InputElementDescription">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            This structure is a subset of <see cref="!:SharpDX.Direct3D11.InputElement"/> that omits fields required to define a vertex layout.If the D2D1_APPEND_ALIGNED_ELEMENT constant is used for  alignedByteOffset, the elements will be packed contiguously for convenience.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_INPUT_ELEMENT_DESC']/*"/>	
            <unmanaged>D2D1_INPUT_ELEMENT_DESC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.InputElementDescription.SemanticName">
            <summary>	
            <para>The HLSL semantic associated with this element in a shader input-signature.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_INPUT_ELEMENT_DESC::semanticName']/*"/>	
            <unmanaged>const char* semanticName</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.InputElementDescription.SemanticIndex">
            <summary>	
            <para>The semantic index for the element. A semantic index modifies a semantic, with an integer index number. A semantic index is only needed in a case where there is more than one element with the same semantic. For example, a 4x4 matrix would have four components each with the semantic name matrix; however, each of the four components would have different semantic indices (0, 1, 2, and 3).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_INPUT_ELEMENT_DESC::semanticIndex']/*"/>	
            <unmanaged>unsigned int semanticIndex</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.InputElementDescription.Format">
            <summary>	
            <para>The data type of the element data.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_INPUT_ELEMENT_DESC::format']/*"/>	
            <unmanaged>DXGI_FORMAT format</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.InputElementDescription.InputSlot">
            <summary>	
            <para>An integer value that identifies the input-assembler. Valid values are between 0 and 15.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_INPUT_ELEMENT_DESC::inputSlot']/*"/>	
            <unmanaged>unsigned int inputSlot</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.InputElementDescription.AlignedByteOffset">
            <summary>	
            <para>The offset in bytes between each element.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_INPUT_ELEMENT_DESC::alignedByteOffset']/*"/>	
            <unmanaged>unsigned int alignedByteOffset</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.LayerParameters">
            <summary>	
            Contains the content bounds, mask information, opacity settings, and other options for a layer resource.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LAYER_PARAMETERS']/*"/>	
            <unmanaged>D2D1_LAYER_PARAMETERS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.LayerParameters.ContentBounds">
            <summary>	
            <para>The content bounds of the layer. Content outside these bounds is not guaranteed to render.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LAYER_PARAMETERS::contentBounds']/*"/>	
            <unmanaged>D2D_RECT_F contentBounds</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.LayerParameters.GeometricMask">
            <summary>	
            <para>The geometric mask specifies the area of the layer that is composited into the render target. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LAYER_PARAMETERS::geometricMask']/*"/>	
            <unmanaged>ID2D1Geometry* geometricMask</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.LayerParameters.MaskAntialiasMode">
            <summary>	
            <para>A value that specifies the antialiasing mode for the geometricMask.  </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LAYER_PARAMETERS::maskAntialiasMode']/*"/>	
            <unmanaged>D2D1_ANTIALIAS_MODE maskAntialiasMode</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.LayerParameters.MaskTransform">
            <summary>	
            <para> A value that specifies the transform that is applied to the geometric mask when composing the layer.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LAYER_PARAMETERS::maskTransform']/*"/>	
            <unmanaged>D2D_MATRIX_3X2_F maskTransform</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.LayerParameters.Opacity">
            <summary>	
            <para>An opacity value that is applied uniformly to all resources in the layer when compositing to the target.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LAYER_PARAMETERS::opacity']/*"/>	
            <unmanaged>float opacity</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.LayerParameters.OpacityBrush">
            <summary>	
            <para>A brush that is used to modify the opacity of the layer. The brush 	
            is mapped to the layer, and the alpha channel of each mapped brush pixel is multiplied against the corresponding layer pixel. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LAYER_PARAMETERS::opacityBrush']/*"/>	
            <unmanaged>ID2D1Brush* opacityBrush</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.LayerParameters.LayerOptions">
            <summary>	
            <para> A value that specifies whether the layer intends to render text with ClearType antialiasing.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LAYER_PARAMETERS::layerOptions']/*"/>	
            <unmanaged>D2D1_LAYER_OPTIONS layerOptions</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.LayerParameters1">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LAYER_PARAMETERS1']/*"/>	
            <unmanaged>D2D1_LAYER_PARAMETERS1</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.LayerParameters1.ContentBounds">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LAYER_PARAMETERS1::contentBounds']/*"/>	
            <unmanaged>D2D_RECT_F contentBounds</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.LayerParameters1.GeometricMask">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LAYER_PARAMETERS1::geometricMask']/*"/>	
            <unmanaged>ID2D1Geometry* geometricMask</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.LayerParameters1.MaskAntialiasMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LAYER_PARAMETERS1::maskAntialiasMode']/*"/>	
            <unmanaged>D2D1_ANTIALIAS_MODE maskAntialiasMode</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.LayerParameters1.MaskTransform">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LAYER_PARAMETERS1::maskTransform']/*"/>	
            <unmanaged>D2D_MATRIX_3X2_F maskTransform</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.LayerParameters1.Opacity">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LAYER_PARAMETERS1::opacity']/*"/>	
            <unmanaged>float opacity</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.LayerParameters1.OpacityBrush">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LAYER_PARAMETERS1::opacityBrush']/*"/>	
            <unmanaged>ID2D1Brush* opacityBrush</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.LayerParameters1.LayerOptions">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LAYER_PARAMETERS1::layerOptions']/*"/>	
            <unmanaged>D2D1_LAYER_OPTIONS1 layerOptions</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.LinearGradientBrushProperties">
            <summary>	
            Contains the starting point and endpoint of the gradient axis for an <see cref="T:SharpDX.Direct2D1.LinearGradientBrush"/>.	
            </summary>	
            <remarks>	
            Use this method when creating new <see cref="T:SharpDX.Direct2D1.LinearGradientBrush"/> objects with the CreateLinearGradientBrush method. For convenience, Direct2D provides the D2D1::LinearGradientBrushProperties helper function for creating new <see cref="T:SharpDX.Direct2D1.LinearGradientBrushProperties"/> structures.The following illustration shows how a linear gradient changes as you change its start and end points.  For the first gradient, the start point is set to (0,0) and the end point to (150, 50); this creates a diagonal gradient that starts at the upper-left corner and extends to the lower-right corner of the area being painted. When you set the start point to (0, 25) and the end point to (150, 25), a horizontal gradient is created. Similarly, setting the start point  to (75, 0) and the end point to (75, 50) creates a vertical gradient. Setting the start point to  (0, 50) and the end point to (150, 0)  creates a diagonal gradient that starts at the lower-left corner and extends to the upper-right corner of the area being painted.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES']/*"/>	
            <unmanaged>D2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.LinearGradientBrushProperties.StartPoint">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES::startPoint']/*"/>	
            <unmanaged>D2D_POINT_2F startPoint</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.LinearGradientBrushProperties.EndPoint">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_LINEAR_GRADIENT_BRUSH_PROPERTIES::endPoint']/*"/>	
            <unmanaged>D2D_POINT_2F endPoint</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.MappedRect">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            The mapped rectangle is used to map a rectangle into the caller's address space.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_MAPPED_RECT']/*"/>	
            <unmanaged>D2D1_MAPPED_RECT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.MappedRect.Pitch">
            <summary>	
            <para>The size in bytes of an individual scanline in the bitmap.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_MAPPED_RECT::pitch']/*"/>	
            <unmanaged>unsigned int pitch</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.MappedRect.Height">
            <summary>	
            <para>The height of the bitmap that has been mapped.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_MAPPED_RECT::height']/*"/>	
            <unmanaged>unsigned int height</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.MappedRect.Bits">
            <summary>	
            <para>The data inside the bitmap.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_MAPPED_RECT::bits']/*"/>	
            <unmanaged>unsigned char* bits</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.PixelFormat">
            <summary>	
            Contains the data format and alpha mode for a bitmap or render target.	
            </summary>	
            <remarks>	
            For more information about the pixel formats and alpha modes supported by each render target, see Supported Pixel Formats and Alpha Modes.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PIXEL_FORMAT']/*"/>	
            <unmanaged>D2D1_PIXEL_FORMAT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PixelFormat.Format">
            <summary>	
            <para>A value that specifies the size and arrangement of channels in each pixel.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PIXEL_FORMAT::format']/*"/>	
            <unmanaged>DXGI_FORMAT format</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PixelFormat.AlphaMode">
            <summary>	
            <para>A value that specifies whether the alpha channel is using pre-multiplied alpha, straight alpha, whether it should be ignored and considered opaque, or whether it is unkown.  </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PIXEL_FORMAT::alphaMode']/*"/>	
            <unmanaged>D2D1_ALPHA_MODE alphaMode</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.PixelFormat.#ctor(SharpDX.DXGI.Format,SharpDX.Direct2D1.AlphaMode)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.PixelFormat"/> struct.
            </summary>
            <param name="format">A value that specifies the size and arrangement of channels in each pixel.</param>
            <param name="alphaMode">A value that specifies whether the alpha channel is using pre-multiplied alpha, straight alpha, whether it should be ignored and considered opaque, or whether it is unkown.</param>
        </member>
        <member name="T:SharpDX.Direct2D1.PointDescription">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_POINT_DESCRIPTION']/*"/>	
            <unmanaged>D2D1_POINT_DESCRIPTION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PointDescription.Point">
            <summary>	
            <para>The end point after walking the path.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_POINT_DESCRIPTION::point']/*"/>	
            <unmanaged>D2D_POINT_2F point</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PointDescription.UnitTangentVector">
            <summary>	
            <para>A unit vector indicating the tangent point.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_POINT_DESCRIPTION::unitTangentVector']/*"/>	
            <unmanaged>D2D_POINT_2F unitTangentVector</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PointDescription.EndSegment">
            <summary>	
            <para>The index of the segment on which point resides. This index is global to the entire path, not just to a particular figure.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_POINT_DESCRIPTION::endSegment']/*"/>	
            <unmanaged>unsigned int endSegment</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PointDescription.EndFigure">
            <summary>	
            <para>The index of the figure on which point resides.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_POINT_DESCRIPTION::endFigure']/*"/>	
            <unmanaged>unsigned int endFigure</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PointDescription.LengthToEndSegment">
            <summary>	
            <para>The length of the section of the path stretching from the start of the path  to the start of endSegment.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_POINT_DESCRIPTION::lengthToEndSegment']/*"/>	
            <unmanaged>float lengthToEndSegment</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.PrintControlProperties">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PRINT_CONTROL_PROPERTIES']/*"/>	
            <unmanaged>D2D1_PRINT_CONTROL_PROPERTIES</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PrintControlProperties.FontSubset">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PRINT_CONTROL_PROPERTIES::fontSubset']/*"/>	
            <unmanaged>D2D1_PRINT_FONT_SUBSET_MODE fontSubset</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PrintControlProperties.RasterDPI">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PRINT_CONTROL_PROPERTIES::rasterDPI']/*"/>	
            <unmanaged>float rasterDPI</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PrintControlProperties.ColorSpace">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PRINT_CONTROL_PROPERTIES::colorSpace']/*"/>	
            <unmanaged>D2D1_COLOR_SPACE colorSpace</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.PropertyBinding">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            The propertyName is used to cross-correlate the property binding with the registration XML. The propertyName must be present in the XML call or the registration will fail. The property index is used to define the index of the exposed property regardless of the order of the entries in the property binding array or the order of the properties in the registration XML.  While the property indices must be contiguous, they do not have to be ordered. All properties must be bound.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PROPERTY_BINDING']/*"/>	
            <unmanaged>D2D1_PROPERTY_BINDING</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PropertyBinding.PropertyName">
            <summary>	
            <para> The name of the property. This must exist in the XML schema.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PROPERTY_BINDING::propertyName']/*"/>	
            <unmanaged>const wchar_t* propertyName</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PropertyBinding.SetFunction">
            <summary>	
            <para> The function that will receive the data to set.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PROPERTY_BINDING::setFunction']/*"/>	
            <unmanaged>__function__stdcall* setFunction</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.PropertyBinding.GetFunction">
            <summary>	
            <para>The function that will be asked to write the output data.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_PROPERTY_BINDING::getFunction']/*"/>	
            <unmanaged>__function__stdcall* getFunction</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.QuadraticBezierSegment">
            <summary>	
            Contains the control point and end point for a quadratic Bezier segment.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_QUADRATIC_BEZIER_SEGMENT']/*"/>	
            <unmanaged>D2D1_QUADRATIC_BEZIER_SEGMENT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.QuadraticBezierSegment.Point1">
            <summary>	
            <para>The control point of the quadratic Bezier segment.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_QUADRATIC_BEZIER_SEGMENT::point1']/*"/>	
            <unmanaged>D2D_POINT_2F point1</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.QuadraticBezierSegment.Point2">
            <summary>	
            <para>The end point of the quadratic Bezier segment.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_QUADRATIC_BEZIER_SEGMENT::point2']/*"/>	
            <unmanaged>D2D_POINT_2F point2</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.RadialGradientBrushProperties">
            <summary>	
            Contains the gradient origin offset and the size and position of the gradient ellipse for an <see cref="T:SharpDX.Direct2D1.RadialGradientBrush"/>.	
            </summary>	
            <remarks>	
            Different values for center,  gradientOriginOffset,  radiusX and/or radiusY produce different gradients.   The following illustration shows several radial gradients that have different gradient origin offsets, creating the appearance of the light illuminating the circles from different angles.For convenience, Direct2D provides the D2D1::RadialGradientBrushProperties function for creating new D2D1_RADIAL_GRADIENT_BRUSH structures.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_RADIAL_GRADIENT_BRUSH_PROPERTIES']/*"/>	
            <unmanaged>D2D1_RADIAL_GRADIENT_BRUSH_PROPERTIES</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.RadialGradientBrushProperties.Center">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_RADIAL_GRADIENT_BRUSH_PROPERTIES::center']/*"/>	
            <unmanaged>D2D_POINT_2F center</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.RadialGradientBrushProperties.GradientOriginOffset">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_RADIAL_GRADIENT_BRUSH_PROPERTIES::gradientOriginOffset']/*"/>	
            <unmanaged>D2D_POINT_2F gradientOriginOffset</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.RadialGradientBrushProperties.RadiusX">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_RADIAL_GRADIENT_BRUSH_PROPERTIES::radiusX']/*"/>	
            <unmanaged>float radiusX</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.RadialGradientBrushProperties.RadiusY">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_RADIAL_GRADIENT_BRUSH_PROPERTIES::radiusY']/*"/>	
            <unmanaged>float radiusY</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.RenderingControls">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            The renderer can allocate tiles larger than the minimum tile allocation. The allocated tiles will be powers of two of the minimum size on each axis, except that the size on each axis will not exceed the guaranteed maximum texture size for the device feature level.The minimumPixelRenderExtent is the size of the square tile below which the renderer will expand the tile allocation rather than attempting to subdivide the rendering tile any further. When this threshold is reached, the allocation tile size is expanded. This might occur repeatedly until rendering can either proceed or it is determined that the graph cannot be rendered.The buffer precision is used for intermediate buffers if it is otherwise unspecified by the effects or the internal effect topology. The application can also use the Output.BufferPrecision method to specify the output precision for a particular effect. This takes precedence over the context precision. In addition, the effect might set a different precision internally if required. If the buffer type on the context is <see cref="F:SharpDX.Direct2D1.BufferPrecision.Unknown"/> and otherwise not specified by the effect or transform, the precision of the output will be the maximum precision of the inputs to the transform. The buffer precision does not affect the number of channels used.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_RENDERING_CONTROLS']/*"/>	
            <unmanaged>D2D1_RENDERING_CONTROLS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.RenderingControls.BufferPrecision">
            <summary>	
            <para>The buffer precision used by default if the buffer precision is not otherwise specified by the effect or the transform.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_RENDERING_CONTROLS::bufferPrecision']/*"/>	
            <unmanaged>D2D1_BUFFER_PRECISION bufferPrecision</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.RenderingControls.TileSize">
            <summary>	
            <para>The minimum tile allocation size to be used by the imaging effect renderer.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_RENDERING_CONTROLS::tileSize']/*"/>	
            <unmanaged>D2D_SIZE_U tileSize</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.RenderTargetProperties">
            <summary>	
            Contains rendering options (hardware or software), pixel format, DPI information, remoting options, and Direct3D support requirements for a render target.	
            </summary>	
            <remarks>	
            Use this structure when creating a render target, or use it with the <see cref="M:SharpDX.Direct2D1.RenderTarget.IsSupported(SharpDX.Direct2D1.RenderTargetProperties@)"/> method to check the properties supported by an existing render target.As a convenience, Direct2D provides the D2D1::RenderTargetProperties helper function for creating <see cref="T:SharpDX.Direct2D1.RenderTargetProperties"/> structures. An easy way to create a <see cref="T:SharpDX.Direct2D1.RenderTargetProperties"/> structure that works for most render targets is to call the function without specifying any parameters. Doing so creates a <see cref="T:SharpDX.Direct2D1.RenderTargetProperties"/> structure that has its fields set to default values. For more information, see   D2D1::RenderTargetProperties.Not all render targets support hardware rendering. For a list, see the Render Targets Overview.Using Default DPI SettingsTo use the default DPI, set dpiX and dpiY to 0. The default DPI varies depending on the render target:For a compatible render target, the default DPI is the DPI of the parent render target. For a <see cref="T:SharpDX.Direct2D1.WindowRenderTarget"/>, the default DPI is the system DPI obtained from the render target's <see cref="T:SharpDX.Direct2D1.Factory"/>. For other render targets, the default DPI is 96.To use the default DPI setting, both dpiX and dpiY must be set to 0. Setting only one value to 0 causes an  E_INVALIDARG error when attempting to create a render target.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_RENDER_TARGET_PROPERTIES']/*"/>	
            <unmanaged>D2D1_RENDER_TARGET_PROPERTIES</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.RenderTargetProperties.Type">
            <summary>	
            <para>A value that specifies whether the render target should force hardware or software rendering. A value of <see cref="F:SharpDX.Direct2D1.RenderTargetType.Default"/> specifies that the render target should use hardware rendering if it is available; otherwise, it uses software rendering. Note that WIC bitmap render targets do not support hardware rendering.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_RENDER_TARGET_PROPERTIES::type']/*"/>	
            <unmanaged>D2D1_RENDER_TARGET_TYPE type</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.RenderTargetProperties.PixelFormat">
            <summary>	
            <para>The pixel format and alpha mode of the render target. You can use the D2D1::PixelFormat function to create a pixel format that specifies that Direct2D should select the pixel format and alpha mode for you. For a list of pixel formats and alpha modes supported by each render target, see Supported Pixel Formats and Alpha Modes.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_RENDER_TARGET_PROPERTIES::pixelFormat']/*"/>	
            <unmanaged>D2D1_PIXEL_FORMAT pixelFormat</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.RenderTargetProperties.DpiX">
            <summary>	
            <para>The horizontal DPI of the render target.  To use the default DPI, set dpiX and dpiY to 0. For more information, see the Remarks section. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_RENDER_TARGET_PROPERTIES::dpiX']/*"/>	
            <unmanaged>float dpiX</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.RenderTargetProperties.DpiY">
            <summary>	
            <para>The vertical DPI of the render target. To use the default DPI, set dpiX and dpiY to 0.  For more information, see the Remarks section. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_RENDER_TARGET_PROPERTIES::dpiY']/*"/>	
            <unmanaged>float dpiY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.RenderTargetProperties.Usage">
            <summary>	
            <para>A value that specifies how the render target is remoted and whether it should be GDI-compatible.  Set to <see cref="F:SharpDX.Direct2D1.RenderTargetUsage.None"/> to create a render target that is not compatible with GDI and uses Direct3D command-stream remoting if it  is available. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_RENDER_TARGET_PROPERTIES::usage']/*"/>	
            <unmanaged>D2D1_RENDER_TARGET_USAGE usage</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.RenderTargetProperties.MinLevel">
            <summary>	
            <para>A value that specifies the minimum Direct3D feature level required for hardware rendering. If the specified minimum level is not available, the render target uses software rendering if the type  member is set to <see cref="F:SharpDX.Direct2D1.RenderTargetType.Default"/>; if  type  is set to to <see cref="F:SharpDX.Direct2D1.RenderTargetType.Hardware"/>, render target creation fails. A value of <see cref="F:SharpDX.Direct2D1.FeatureLevel.Level_DEFAULT"/> indicates that Direct2D should determine whether the Direct3D feature level of the device is adequate. This field is used only when creating <see cref="T:SharpDX.Direct2D1.WindowRenderTarget"/> and <see cref="T:SharpDX.Direct2D1.DeviceContextRenderTarget"/> objects.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_RENDER_TARGET_PROPERTIES::minLevel']/*"/>	
            <unmanaged>D2D1_FEATURE_LEVEL minLevel</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTargetProperties.#ctor(SharpDX.Direct2D1.PixelFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.RenderTargetProperties"/> struct.
            </summary>
            <param name="pixelFormat">The pixel format and alpha mode of the render target. You can use the {{D2D1::PixelFormat}} function to create a pixel format that specifies that Direct2D should select the pixel format and alpha mode for you. For a list of pixel formats and alpha modes supported by each render target, see {{Supported Pixel Formats and Alpha Modes}}.</param>
        </member>
        <member name="M:SharpDX.Direct2D1.RenderTargetProperties.#ctor(SharpDX.Direct2D1.RenderTargetType,SharpDX.Direct2D1.PixelFormat,System.Single,System.Single,SharpDX.Direct2D1.RenderTargetUsage,SharpDX.Direct2D1.FeatureLevel)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct2D1.RenderTargetProperties"/> struct.
            </summary>
            <param name="type">A value that specifies whether the render target should force hardware or software rendering. A value of <see cref="F:SharpDX.Direct2D1.RenderTargetType.Default"/> specifies that the render target should use hardware rendering if it is available; otherwise, it uses software rendering. Note that WIC bitmap render targets do not support hardware rendering.</param>
            <param name="pixelFormat">The pixel format and alpha mode of the render target. You can use the {{D2D1::PixelFormat}} function to create a pixel format that specifies that Direct2D should select the pixel format and alpha mode for you. For a list of pixel formats and alpha modes supported by each render target, see {{Supported Pixel Formats and Alpha Modes}}.</param>
            <param name="dpiX">The horizontal DPI of the render target.  To use the default DPI, set dpiX and dpiY to 0. For more information, see the Remarks section. 	</param>
            <param name="dpiY">The vertical DPI of the render target. To use the default DPI, set dpiX and dpiY to 0.  For more information, see the Remarks section. 	</param>
            <param name="usage">A value that specifies how the render target is remoted and whether it should be GDI-compatible.  Set to <see cref="F:SharpDX.Direct2D1.RenderTargetUsage.None"/> to create a render target that is not compatible with GDI and uses Direct3D command-stream remoting if it  is available.</param>
            <param name="minLevel">A value that specifies the minimum Direct3D feature level required for hardware rendering. If the specified minimum level is not available, the render target uses software rendering if the type  member is set to <see cref="F:SharpDX.Direct2D1.RenderTargetType.Default"/>; if  type  is set to to D2D1_RENDER_TARGET_TYPE_HARDWARE, render target creation fails. A value of <see cref="F:SharpDX.Direct2D1.FeatureLevel.Level_DEFAULT"/> indicates that Direct2D should determine whether the Direct3D feature level of the device is adequate. This field is used only when creating <see cref="T:SharpDX.Direct2D1.WindowRenderTarget"/> and <see cref="T:SharpDX.Direct2D1.DeviceContextRenderTarget"/> objects.	</param>  
        </member>
        <member name="T:SharpDX.Direct2D1.ResourceTextureProperties">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_RESOURCE_TEXTURE_PROPERTIES']/*"/>	
            <unmanaged>D2D1_RESOURCE_TEXTURE_PROPERTIES</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ResourceTextureProperties.Extents">
            <summary>	
            <para>The extents of the resource table in each dimension.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_RESOURCE_TEXTURE_PROPERTIES::extents']/*"/>	
            <unmanaged>const unsigned int* extents</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ResourceTextureProperties.Dimensions">
            <summary>	
            <para>The number of dimensions in the resource texture. This must be a number from 1 to 3.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_RESOURCE_TEXTURE_PROPERTIES::dimensions']/*"/>	
            <unmanaged>unsigned int dimensions</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ResourceTextureProperties.BufferPrecision">
            <summary>	
            <para>The precision of the resource texture to create. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_RESOURCE_TEXTURE_PROPERTIES::bufferPrecision']/*"/>	
            <unmanaged>D2D1_BUFFER_PRECISION bufferPrecision</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ResourceTextureProperties.ChannelDepth">
            <summary>	
            <para>The number of channels in the resource texture.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_RESOURCE_TEXTURE_PROPERTIES::channelDepth']/*"/>	
            <unmanaged>D2D1_CHANNEL_DEPTH channelDepth</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ResourceTextureProperties.Filter">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_RESOURCE_TEXTURE_PROPERTIES::filter']/*"/>	
            <unmanaged>D2D1_FILTER filter</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.ResourceTextureProperties.ExtendModes">
            <summary>	
            <para>Specifies how pixel values beyond the extent of the texture will be sampled, in every dimension.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_RESOURCE_TEXTURE_PROPERTIES::extendModes']/*"/>	
            <unmanaged>const D2D1_EXTEND_MODE* extendModes</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.RoundedRect">
            <summary>	
            Contains the dimensions and corner radii of a rounded rectangle.	
            </summary>	
            <remarks>	
            Each corner of the rectangle specified by the rect is replaced with a quarter ellipse, with a radius in each direction specified by radiusX and radiusY.If the radiusX is greater than or equal to half the width of the rectangle, and the radiusY is greater than or equal to one-half the height, the rounded rectangle is an ellipse with the same width and height of the rect.Even when both radiuX and radiusY are zero, the rounded rectangle is different from a rectangle., When stroked, the corners of the rounded rectangle are roundly joined, not mitered (square).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_ROUNDED_RECT']/*"/>	
            <unmanaged>D2D1_ROUNDED_RECT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.RoundedRect.Rect">
            <summary>	
            <para>The coordinates of the rectangle.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_ROUNDED_RECT::rect']/*"/>	
            <unmanaged>D2D_RECT_F rect</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.RoundedRect.RadiusX">
            <summary>	
            <para>The x-radius for the quarter ellipse that is drawn to replace every corner of the rectangle.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_ROUNDED_RECT::radiusX']/*"/>	
            <unmanaged>float radiusX</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.RoundedRect.RadiusY">
            <summary>	
            <para>The y-radius for the quarter ellipse that is drawn to replace every corner of the rectangle.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_ROUNDED_RECT::radiusY']/*"/>	
            <unmanaged>float radiusY</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.StrokeStyleProperties">
            <summary>	
            Describes the stroke that outlines a shape.	
            </summary>	
            <remarks>	
            The following illustration shows different dashOffset values for the same custom dash style.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_STROKE_STYLE_PROPERTIES']/*"/>	
            <unmanaged>D2D1_STROKE_STYLE_PROPERTIES</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.StrokeStyleProperties.StartCap">
            <summary>	
            <para>The cap applied to the start of all the open figures in a stroked geometry.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_STROKE_STYLE_PROPERTIES::startCap']/*"/>	
            <unmanaged>D2D1_CAP_STYLE startCap</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.StrokeStyleProperties.EndCap">
            <summary>	
            <para>The cap applied to the end of all the open figures in a stroked geometry.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_STROKE_STYLE_PROPERTIES::endCap']/*"/>	
            <unmanaged>D2D1_CAP_STYLE endCap</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.StrokeStyleProperties.DashCap">
            <summary>	
            <para>The shape  at either end of each dash segment.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_STROKE_STYLE_PROPERTIES::dashCap']/*"/>	
            <unmanaged>D2D1_CAP_STYLE dashCap</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.StrokeStyleProperties.LineJoin">
            <summary>	
            <para>A value that describes how segments are joined. This value is ignored for a vertex if the segment flags specify that the segment should have a smooth join. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_STROKE_STYLE_PROPERTIES::lineJoin']/*"/>	
            <unmanaged>D2D1_LINE_JOIN lineJoin</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.StrokeStyleProperties.MiterLimit">
            <summary>	
            <para>The limit of the thickness of the join on a mitered corner. This value is always treated as though it is greater than or equal to 1.0f. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_STROKE_STYLE_PROPERTIES::miterLimit']/*"/>	
            <unmanaged>float miterLimit</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.StrokeStyleProperties.DashStyle">
            <summary>	
            <para>A value that specifies whether the stroke has a dash pattern and, if so, the dash style. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_STROKE_STYLE_PROPERTIES::dashStyle']/*"/>	
            <unmanaged>D2D1_DASH_STYLE dashStyle</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.StrokeStyleProperties.DashOffset">
            <summary>	
            <para>A value that specifies an offset in the dash sequence.   A positive dash offset value  shifts the dash pattern, in units of  stroke width, toward the start of the stroked geometry.  A negative dash offset value  shifts the dash pattern, in units of  stroke width, toward the end of the stroked geometry.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_STROKE_STYLE_PROPERTIES::dashOffset']/*"/>	
            <unmanaged>float dashOffset</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.StrokeStyleProperties1">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_STROKE_STYLE_PROPERTIES1']/*"/>	
            <unmanaged>D2D1_STROKE_STYLE_PROPERTIES1</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.StrokeStyleProperties1.StartCap">
            <summary>	
            <para>The cap to use at the start of each open figure.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_STROKE_STYLE_PROPERTIES1::startCap']/*"/>	
            <unmanaged>D2D1_CAP_STYLE startCap</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.StrokeStyleProperties1.EndCap">
            <summary>	
            <para>The cap to use at the end of each open figure.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_STROKE_STYLE_PROPERTIES1::endCap']/*"/>	
            <unmanaged>D2D1_CAP_STYLE endCap</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.StrokeStyleProperties1.DashCap">
            <summary>	
            <para>The cap to use at the start and end of each dash.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_STROKE_STYLE_PROPERTIES1::dashCap']/*"/>	
            <unmanaged>D2D1_CAP_STYLE dashCap</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.StrokeStyleProperties1.LineJoin">
            <summary>	
            <para>The line join to use.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_STROKE_STYLE_PROPERTIES1::lineJoin']/*"/>	
            <unmanaged>D2D1_LINE_JOIN lineJoin</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.StrokeStyleProperties1.MiterLimit">
            <summary>	
            <para>The limit beyond which miters are either clamped or converted to bevels.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_STROKE_STYLE_PROPERTIES1::miterLimit']/*"/>	
            <unmanaged>float miterLimit</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.StrokeStyleProperties1.DashStyle">
            <summary>	
            <para>The type of dash to use.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_STROKE_STYLE_PROPERTIES1::dashStyle']/*"/>	
            <unmanaged>D2D1_DASH_STYLE dashStyle</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.StrokeStyleProperties1.DashOffset">
            <summary>	
            <para>The location of the first dash, relative to the start of the figure. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_STROKE_STYLE_PROPERTIES1::dashOffset']/*"/>	
            <unmanaged>float dashOffset</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.StrokeStyleProperties1.TransformType">
            <summary>	
            <para>The rule that determines what render target properties affect the nib of the stroke.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_STROKE_STYLE_PROPERTIES1::transformType']/*"/>	
            <unmanaged>D2D1_STROKE_TRANSFORM_TYPE transformType</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.Triangle">
            <summary>	
            Contains the three vertices that describe a triangle.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_TRIANGLE']/*"/>	
            <unmanaged>D2D1_TRIANGLE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Triangle.Point1">
            <summary>	
            <para>The first vertex of a triangle.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_TRIANGLE::point1']/*"/>	
            <unmanaged>D2D_POINT_2F point1</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Triangle.Point2">
            <summary>	
            <para>The second vertex of a triangle.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_TRIANGLE::point2']/*"/>	
            <unmanaged>D2D_POINT_2F point2</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.Triangle.Point3">
            <summary>	
            <para>The third vertex of a triangle.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_TRIANGLE::point3']/*"/>	
            <unmanaged>D2D_POINT_2F point3</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.VertexBufferProperties">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            If usage is dynamic, the system might return a system memory buffer and copy these vertices into the rendering vertex buffer for each element.If the initialization data is not specified, the buffer will be uninitialized.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_VERTEX_BUFFER_PROPERTIES']/*"/>	
            <unmanaged>D2D1_VERTEX_BUFFER_PROPERTIES</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.VertexBufferProperties.InputCount">
            <summary>	
            <para>The number of inputs to the vertex shader.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_VERTEX_BUFFER_PROPERTIES::inputCount']/*"/>	
            <unmanaged>unsigned int inputCount</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.VertexBufferProperties.Usage">
            <summary>	
            <para>Indicates how frequently the vertex buffer is likely to be updated.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_VERTEX_BUFFER_PROPERTIES::usage']/*"/>	
            <unmanaged>D2D1_VERTEX_USAGE usage</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.VertexBufferProperties.Data">
            <summary>	
            <para>The initial contents of the vertex buffer.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_VERTEX_BUFFER_PROPERTIES::data']/*"/>	
            <unmanaged>const unsigned char* data</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.VertexBufferProperties.ByteWidth">
            <summary>	
            <para>The size of the vertex buffer, in bytes.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_VERTEX_BUFFER_PROPERTIES::byteWidth']/*"/>	
            <unmanaged>unsigned int byteWidth</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.VertexRange">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_VERTEX_RANGE']/*"/>	
            <unmanaged>D2D1_VERTEX_RANGE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.VertexRange.StartVertex">
            <summary>	
            <para>The first vertex in the range to process.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_VERTEX_RANGE::startVertex']/*"/>	
            <unmanaged>unsigned int startVertex</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct2D1.VertexRange.VertexCount">
            <summary>	
            <para>The number of vertices in the count to use.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D2D1_VERTEX_RANGE::vertexCount']/*"/>	
            <unmanaged>unsigned int vertexCount</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct2D1.GeometrySinkShadow">
            <summary>
            Internal GeometrySink Callback
            </summary>
        </member>
        <member name="T:SharpDX.Direct2D1.SimplifiedGeometrySinkShadow">
            <summary>
            Internal SimplifiedGeometrySink Callback
            </summary>
        </member>
        <member name="M:SharpDX.Direct2D1.SimplifiedGeometrySinkShadow.ToIntPtr(SharpDX.Direct2D1.SimplifiedGeometrySink)">
            <summary>
            Return a pointer to the unamanged version of this callback.
            </summary>
            <param name="callback">The callback.</param>
            <returns>A pointer to a shadow c++ callback</returns>
        </member>
        <member name="M:SharpDX.Direct2D1.GeometrySinkShadow.ToIntPtr(SharpDX.Direct2D1.GeometrySink)">
            <summary>
            Get a native callback pointer from a managed callback.
            </summary>
            <param name="geometrySink">The geometry sink.</param>
            <returns>A pointer to the unmanaged geomerty sink counterpart</returns>
        </member>
        <member name="T:SharpDX.Direct2D1.TessellationSinkShadow">
            <summary>
            Internal TessellationSink Callback
            </summary>
        </member>
        <member name="M:SharpDX.Direct2D1.TessellationSinkShadow.ToIntPtr(SharpDX.Direct2D1.TessellationSink)">
            <summary>
            Get a native callback pointer from a managed callback.
            </summary>
            <param name="tessellationSink">The geometry sink.</param>
            <returns>A pointer to the unmanaged geomerty sink counterpart</returns>
        </member>
        <member name="T:SharpDX.WIC.BitmapEncoderOptions">
            <summary>
            BitmapEncoderOptions used for encoding.
            </summary>
        </member>
        <member name="M:SharpDX.WIC.BitmapEncoderOptions.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.BitmapEncoderOptions"/> class.
            </summary>
            <param name="propertyBagPointer">The property bag pointer.</param>
        </member>
        <member name="P:SharpDX.WIC.BitmapEncoderOptions.ImageQuality">
            <summary>
            Gets or sets the image quality.
            </summary>
            <value>
            The image quality.
            </value>
            <remarks>
            Range value: 0-1.0f
            Applicable Codecs: JPEG, HDPhoto
            </remarks>
        </member>
        <member name="P:SharpDX.WIC.BitmapEncoderOptions.CompressionQuality">
            <summary>
            Gets or sets the compression quality.
            </summary>
            <value>
            The compression quality.
            </value>
            <remarks>
            Range value: 0-1.0f 
            Applicable Codecs: TIFF
            </remarks>
        </member>
        <member name="P:SharpDX.WIC.BitmapEncoderOptions.LossLess">
            <summary>
            Gets or sets a value indicating whether loss less compression is enabled.
            </summary>
            <value>
              <c>true</c> if [loss less]; otherwise, <c>false</c>.
            </value>
            <remarks>
            Range value: true-false
            Applicable Codecs: HDPhoto
            </remarks>
        </member>
        <member name="P:SharpDX.WIC.BitmapEncoderOptions.BitmapTransform">
            <summary>
            Gets or sets the bitmap transform.
            </summary>
            <value>
            The bitmap transform.
            </value>
            <remarks>
            Range value: <see cref="T:SharpDX.WIC.BitmapTransformOptions"/>
            Applicable Codecs: JPEG
            </remarks>
        </member>
        <member name="P:SharpDX.WIC.BitmapEncoderOptions.InterlaceOption">
            <summary>
            Gets or sets a value indicating whether [interlace option].
            </summary>
            <value>
              <c>true</c> if [interlace option]; otherwise, <c>false</c>.
            </value>
            <remarks>
            Range value: true-false
            Applicable Codecs: PNG
            </remarks>
        </member>
        <member name="P:SharpDX.WIC.BitmapEncoderOptions.FilterOption">
            <summary>
            Gets or sets the filter option.
            </summary>
            <value>
            The filter option.
            </value>
            <remarks>
            Range value: <see cref="T:SharpDX.WIC.PngFilterOption"/>
            Applicable Codecs: PNG
            </remarks>
        </member>
        <member name="P:SharpDX.WIC.BitmapEncoderOptions.TiffCompressionMethod">
            <summary>
            Gets or sets the TIFF compression method.
            </summary>
            <value>
            The TIFF compression method.
            </value>
            <remarks>
            Range value: <see cref="T:SharpDX.WIC.TiffCompressionOption"/>
            Applicable Codecs: TIFF
            </remarks>
        </member>
        <member name="P:SharpDX.WIC.BitmapEncoderOptions.Luminance">
            <summary>
            Gets or sets the luminance.
            </summary>
            <value>
            The luminance.
            </value>
            <remarks>
            Range value: 64 Entries (DCT)
            Applicable Codecs: JPEG
            </remarks>
        </member>
        <member name="P:SharpDX.WIC.BitmapEncoderOptions.Chrominance">
            <summary>
            Gets or sets the chrominance.
            </summary>
            <value>
            The chrominance.
            </value>
            <remarks>
            Range value: 64 Entries (DCT)
            Applicable Codecs: JPEG
            </remarks>
        </member>
        <member name="P:SharpDX.WIC.BitmapEncoderOptions.JpegYCrCbSubsampling">
            <summary>
            Gets or sets the JPEG Y cr cb subsampling.
            </summary>
            <value>
            The JPEG Y cr cb subsampling.
            </value>
            <remarks>
            Range value: <see cref="T:SharpDX.WIC.JpegYCrCbSubsamplingOption"/>
            Applicable Codecs: JPEG
            </remarks>
        </member>
        <member name="P:SharpDX.WIC.BitmapEncoderOptions.SuppressApp0">
            <summary>
            Gets or sets a value indicating whether [suppress app0].
            </summary>
            <value>
              <c>true</c> if [suppress app0]; otherwise, <c>false</c>.
            </value>
            <remarks>
            Range value: true-false
            Applicable Codecs: JPEG
            </remarks>
        </member>
        <member name="T:SharpDX.WIC.BmpBitmapDecoder">
            <summary>
            Bmp bitmap encoder using <see cref="T:SharpDX.WIC.BitmapDecoder"/> initialized with default guid <see cref="F:SharpDX.WIC.ContainerFormatGuids.Bmp"/>.
            </summary>
        </member>
        <member name="M:SharpDX.WIC.BmpBitmapDecoder.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.BmpBitmapDecoder"/> class.
            </summary>
            <param name="nativePtr">The native PTR.</param>
        </member>
        <member name="M:SharpDX.WIC.BmpBitmapDecoder.#ctor(SharpDX.WIC.ImagingFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.BmpBitmapDecoder"/> class.
            </summary>
            <param name="factory">The factory.</param>
        </member>
        <member name="M:SharpDX.WIC.BmpBitmapDecoder.#ctor(SharpDX.WIC.ImagingFactory,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.BmpBitmapDecoder"/> class.
            </summary>
            <param name="factory">The factory.</param>
            <param name="guidVendorRef">The GUID vendor ref.</param>
        </member>
        <member name="T:SharpDX.WIC.BmpBitmapEncoder">
            <summary>
            Bmp bitmap encoder using <see cref="T:SharpDX.WIC.BitmapEncoder"/> initialized with default guid <see cref="F:SharpDX.WIC.ContainerFormatGuids.Bmp"/>.
            </summary>
        </member>
        <member name="M:SharpDX.WIC.BmpBitmapEncoder.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.BmpBitmapEncoder"/> class.
            </summary>
            <param name="nativePtr">The native PTR.</param>
        </member>
        <member name="M:SharpDX.WIC.BmpBitmapEncoder.#ctor(SharpDX.WIC.ImagingFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.BmpBitmapEncoder"/> class.
            </summary>
            <param name="factory">The factory.</param>
        </member>
        <member name="M:SharpDX.WIC.BmpBitmapEncoder.#ctor(SharpDX.WIC.ImagingFactory,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.BmpBitmapEncoder"/> class.
            </summary>
            <param name="factory">The factory.</param>
            <param name="guidVendorRef">The GUID vendor ref.</param>
        </member>
        <member name="T:SharpDX.WIC.GifBitmapDecoder">
            <summary>
            Gif bitmap encoder using <see cref="T:SharpDX.WIC.BitmapDecoder"/> initialized with default guid <see cref="F:SharpDX.WIC.ContainerFormatGuids.Gif"/>.
            </summary>
        </member>
        <member name="M:SharpDX.WIC.GifBitmapDecoder.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.GifBitmapDecoder"/> class.
            </summary>
            <param name="nativePtr">The native PTR.</param>
        </member>
        <member name="M:SharpDX.WIC.GifBitmapDecoder.#ctor(SharpDX.WIC.ImagingFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.GifBitmapDecoder"/> class.
            </summary>
            <param name="factory">The factory.</param>
        </member>
        <member name="M:SharpDX.WIC.GifBitmapDecoder.#ctor(SharpDX.WIC.ImagingFactory,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.GifBitmapDecoder"/> class.
            </summary>
            <param name="factory">The factory.</param>
            <param name="guidVendorRef">The GUID vendor ref.</param>
        </member>
        <member name="T:SharpDX.WIC.GifBitmapEncoder">
            <summary>
            Gif bitmap encoder using <see cref="T:SharpDX.WIC.BitmapEncoder"/> initialized with default guid <see cref="F:SharpDX.WIC.ContainerFormatGuids.Gif"/>.
            </summary>
        </member>
        <member name="M:SharpDX.WIC.GifBitmapEncoder.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.GifBitmapEncoder"/> class.
            </summary>
            <param name="nativePtr">The native PTR.</param>
        </member>
        <member name="M:SharpDX.WIC.GifBitmapEncoder.#ctor(SharpDX.WIC.ImagingFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.GifBitmapEncoder"/> class.
            </summary>
            <param name="factory">The factory.</param>
        </member>
        <member name="M:SharpDX.WIC.GifBitmapEncoder.#ctor(SharpDX.WIC.ImagingFactory,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.GifBitmapEncoder"/> class.
            </summary>
            <param name="factory">The factory.</param>
            <param name="guidVendorRef">The GUID vendor ref.</param>
        </member>
        <member name="T:SharpDX.WIC.JpegBitmapDecoder">
            <summary>
            Tiff bitmap encoder using <see cref="T:SharpDX.WIC.BitmapDecoder"/> initialized with default guid <see cref="F:SharpDX.WIC.ContainerFormatGuids.Jpeg"/>.
            </summary>
        </member>
        <member name="M:SharpDX.WIC.JpegBitmapDecoder.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.JpegBitmapDecoder"/> class.
            </summary>
            <param name="nativePtr">The native PTR.</param>
        </member>
        <member name="M:SharpDX.WIC.JpegBitmapDecoder.#ctor(SharpDX.WIC.ImagingFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.JpegBitmapDecoder"/> class.
            </summary>
            <param name="factory">The factory.</param>
        </member>
        <member name="M:SharpDX.WIC.JpegBitmapDecoder.#ctor(SharpDX.WIC.ImagingFactory,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.JpegBitmapDecoder"/> class.
            </summary>
            <param name="factory">The factory.</param>
            <param name="guidVendorRef">The GUID vendor ref.</param>
        </member>
        <member name="T:SharpDX.WIC.JpegBitmapEncoder">
            <summary>
            Tiff bitmap encoder using <see cref="T:SharpDX.WIC.BitmapEncoder"/> initialized with default guid <see cref="F:SharpDX.WIC.ContainerFormatGuids.Jpeg"/>.
            </summary>
        </member>
        <member name="M:SharpDX.WIC.JpegBitmapEncoder.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.JpegBitmapEncoder"/> class.
            </summary>
            <param name="nativePtr">The native PTR.</param>
        </member>
        <member name="M:SharpDX.WIC.JpegBitmapEncoder.#ctor(SharpDX.WIC.ImagingFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.JpegBitmapEncoder"/> class.
            </summary>
            <param name="factory">The factory.</param>
        </member>
        <member name="M:SharpDX.WIC.JpegBitmapEncoder.#ctor(SharpDX.WIC.ImagingFactory,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.JpegBitmapEncoder"/> class.
            </summary>
            <param name="factory">The factory.</param>
            <param name="guidVendorRef">The GUID vendor ref.</param>
        </member>
        <member name="T:SharpDX.WIC.PngBitmapDecoder">
            <summary>
            Png bitmap encoder using <see cref="T:SharpDX.WIC.BitmapDecoder"/> initialized with default guid <see cref="F:SharpDX.WIC.ContainerFormatGuids.Png"/>.
            </summary>
        </member>
        <member name="M:SharpDX.WIC.PngBitmapDecoder.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.PngBitmapDecoder"/> class.
            </summary>
            <param name="nativePtr">The native PTR.</param>
        </member>
        <member name="M:SharpDX.WIC.PngBitmapDecoder.#ctor(SharpDX.WIC.ImagingFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.PngBitmapDecoder"/> class.
            </summary>
            <param name="factory">The factory.</param>
        </member>
        <member name="M:SharpDX.WIC.PngBitmapDecoder.#ctor(SharpDX.WIC.ImagingFactory,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.PngBitmapDecoder"/> class.
            </summary>
            <param name="factory">The factory.</param>
            <param name="guidVendorRef">The GUID vendor ref.</param>
        </member>
        <member name="T:SharpDX.WIC.PngBitmapEncoder">
            <summary>
            Png bitmap encoder using <see cref="T:SharpDX.WIC.BitmapEncoder"/> initialized with default guid <see cref="F:SharpDX.WIC.ContainerFormatGuids.Png"/>.
            </summary>
        </member>
        <member name="M:SharpDX.WIC.PngBitmapEncoder.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.PngBitmapEncoder"/> class.
            </summary>
            <param name="nativePtr">The native PTR.</param>
        </member>
        <member name="M:SharpDX.WIC.PngBitmapEncoder.#ctor(SharpDX.WIC.ImagingFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.PngBitmapEncoder"/> class.
            </summary>
            <param name="factory">The factory.</param>
        </member>
        <member name="M:SharpDX.WIC.PngBitmapEncoder.#ctor(SharpDX.WIC.ImagingFactory,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.PngBitmapEncoder"/> class.
            </summary>
            <param name="factory">The factory.</param>
            <param name="guidVendorRef">The GUID vendor ref.</param>
        </member>
        <member name="T:SharpDX.WIC.TiffBitmapDecoder">
            <summary>
            Tiff bitmap encoder using <see cref="T:SharpDX.WIC.BitmapDecoder"/> initialized with default guid <see cref="F:SharpDX.WIC.ContainerFormatGuids.Tiff"/>.
            </summary>
        </member>
        <member name="M:SharpDX.WIC.TiffBitmapDecoder.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.TiffBitmapDecoder"/> class.
            </summary>
            <param name="nativePtr">The native PTR.</param>
        </member>
        <member name="M:SharpDX.WIC.TiffBitmapDecoder.#ctor(SharpDX.WIC.ImagingFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.TiffBitmapDecoder"/> class.
            </summary>
            <param name="factory">The factory.</param>
        </member>
        <member name="M:SharpDX.WIC.TiffBitmapDecoder.#ctor(SharpDX.WIC.ImagingFactory,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.TiffBitmapDecoder"/> class.
            </summary>
            <param name="factory">The factory.</param>
            <param name="guidVendorRef">The GUID vendor ref.</param>
        </member>
        <member name="T:SharpDX.WIC.TiffBitmapEncoder">
            <summary>
            Tiff bitmap encoder using <see cref="T:SharpDX.WIC.BitmapEncoder"/> initialized with default guid <see cref="F:SharpDX.WIC.ContainerFormatGuids.Tiff"/>.
            </summary>
        </member>
        <member name="M:SharpDX.WIC.TiffBitmapEncoder.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.TiffBitmapEncoder"/> class.
            </summary>
            <param name="nativePtr">The native PTR.</param>
        </member>
        <member name="M:SharpDX.WIC.TiffBitmapEncoder.#ctor(SharpDX.WIC.ImagingFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.TiffBitmapEncoder"/> class.
            </summary>
            <param name="factory">The factory.</param>
        </member>
        <member name="M:SharpDX.WIC.TiffBitmapEncoder.#ctor(SharpDX.WIC.ImagingFactory,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.TiffBitmapEncoder"/> class.
            </summary>
            <param name="factory">The factory.</param>
            <param name="guidVendorRef">The GUID vendor ref.</param>
        </member>
        <member name="T:SharpDX.WIC.WmpBitmapDecoder">
            <summary>
            Wmp bitmap encoder using <see cref="T:SharpDX.WIC.BitmapDecoder"/> initialized with default guid <see cref="F:SharpDX.WIC.ContainerFormatGuids.Wmp"/>.
            </summary>
        </member>
        <member name="M:SharpDX.WIC.WmpBitmapDecoder.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.WmpBitmapDecoder"/> class.
            </summary>
            <param name="nativePtr">The native PTR.</param>
        </member>
        <member name="M:SharpDX.WIC.WmpBitmapDecoder.#ctor(SharpDX.WIC.ImagingFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.WmpBitmapDecoder"/> class.
            </summary>
            <param name="factory">The factory.</param>
        </member>
        <member name="M:SharpDX.WIC.WmpBitmapDecoder.#ctor(SharpDX.WIC.ImagingFactory,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.WmpBitmapDecoder"/> class.
            </summary>
            <param name="factory">The factory.</param>
            <param name="guidVendorRef">The GUID vendor ref.</param>
        </member>
        <member name="T:SharpDX.WIC.WmpBitmapEncoder">
            <summary>
            Wmp bitmap encoder using <see cref="T:SharpDX.WIC.BitmapEncoder"/> initialized with default guid <see cref="F:SharpDX.WIC.ContainerFormatGuids.Wmp"/>.
            </summary>
        </member>
        <member name="M:SharpDX.WIC.WmpBitmapEncoder.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.WmpBitmapEncoder"/> class.
            </summary>
            <param name="nativePtr">The native PTR.</param>
        </member>
        <member name="M:SharpDX.WIC.WmpBitmapEncoder.#ctor(SharpDX.WIC.ImagingFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.WmpBitmapEncoder"/> class.
            </summary>
            <param name="factory">The factory.</param>
        </member>
        <member name="M:SharpDX.WIC.WmpBitmapEncoder.#ctor(SharpDX.WIC.ImagingFactory,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.WIC.WmpBitmapEncoder"/> class.
            </summary>
            <param name="factory">The factory.</param>
            <param name="guidVendorRef">The GUID vendor ref.</param>
        </member>
    </members>
</doc>

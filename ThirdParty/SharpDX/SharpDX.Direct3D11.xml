<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SharpDX.Direct3D11</name>
    </assembly>
    <members>
        <member name="T:SharpDX.Direct3D11.BlendState">
            <summary>	
            The blend-state interface holds a description for blending state that you can bind to the output-merger stage.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11BlendState']/*"/>	
            <unmanaged>ID3D11BlendState</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.DeviceChild">
            <summary>	
            A device-child interface accesses data used by a device.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceChild']/*"/>	
            <unmanaged>ID3D11DeviceChild</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceChild.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.DeviceChild"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceChild.GetDevice(SharpDX.Direct3D11.Device@)">
            <summary>	
            Get a reference to the device that created this interface.	
            </summary>	
            <param name="deviceOut"><para>Address of a reference to a device (see <see cref="T:SharpDX.Direct3D11.Device"/>).</para></param>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one, so be sure to call ::release() on the returned reference(s) before they are freed or else you will have a memory leak.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceChild::GetDevice']/*"/>	
            <unmanaged>void ID3D11DeviceChild::GetDevice([Out] ID3D11Device** ppDevice)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceChild.GetPrivateData(System.Guid,System.Int32@,System.IntPtr)">
            <summary>	
            Get application-defined data from a device child.	
            </summary>	
            <param name="guid"><para>Guid associated with the data.</para></param>	
            <param name="dataSizeRef"><para>A reference to a variable that on input contains the size, in bytes, of the buffer that pData points to, and on output contains the size, in bytes, of the amount of data that GetPrivateData retrieved.</para></param>	
            <param name="dataRef"><para>A reference to a buffer that GetPrivateData fills with data from the device child if pDataSize points to a value that specifies a buffer large enough to hold the data.</para></param>	
            <returns>This method returns one of the codes described in the topic Direct3D 11 Return Codes.</returns>	
            <remarks>	
            The data stored in the device child is set by calling <see cref="M:SharpDX.Direct3D11.DeviceChild.SetPrivateData(System.Guid,System.Int32,System.IntPtr)"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceChild::GetPrivateData']/*"/>	
            <unmanaged>HRESULT ID3D11DeviceChild::GetPrivateData([In] const GUID&amp; guid,[InOut] unsigned int* pDataSize,[Out, Buffer, Optional] void* pData)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceChild.SetPrivateData(System.Guid,System.Int32,System.IntPtr)">
            <summary>	
            Set application-defined data to a device child and associate that data with an application-defined guid.	
            </summary>	
            <param name="guid"><para>Guid associated with the data.</para></param>	
            <param name="dataSize"><para>Size of the data.</para></param>	
            <param name="dataRef"><para>Pointer to the data to be stored with this device child. If pData is <c>null</c>, DataSize must also be 0, and any data previously associated with the specified guid will be destroyed.</para></param>	
            <returns>This method returns one of the following Direct3D 11 Return Codes.</returns>	
            <remarks>	
            The data stored in the device child with this method can be retrieved with <see cref="M:SharpDX.Direct3D11.DeviceChild.GetPrivateData(System.Guid,System.Int32@,System.IntPtr)"/>.The debug layer reports memory leaks by outputting a list of object interface references along with their friendly names. The default friendly name is "&lt;unnamed&gt;". You can set the friendly name so that you can determine if the corresponding object interface reference caused the leak. To set the friendly name, use the SetPrivateData method and the <see cref="F:SharpDX.Direct3D.CommonGuid.DebugObjectName"/> <see cref="T:System.Guid"/> that is in D3Dcommon.h. For example, to give pContext a friendly name of My name, use the following code:<code>	
             static const char c_szName[] = "My name";	
            hr = pContext-&gt;SetPrivateData( <see cref="F:SharpDX.Direct3D.CommonGuid.DebugObjectName"/>, sizeof( c_szName ) - 1, c_szName );	
            	
            </code>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceChild::SetPrivateData']/*"/>	
            <unmanaged>HRESULT ID3D11DeviceChild::SetPrivateData([In] const GUID&amp; guid,[In] unsigned int DataSize,[In, Buffer, Optional] const void* pData)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceChild.SetPrivateDataInterface(System.Guid,SharpDX.ComObject)">
            <summary>	
            Associate an <see cref="T:SharpDX.ComObject"/>-derived interface with this device child and associate that interface with an application-defined guid.	
            </summary>	
            <param name="guid"><para>Guid associated with the interface.</para></param>	
            <param name="dataRef"><para>Pointer to an <see cref="T:SharpDX.ComObject"/>-derived interface to be associated with the device child.</para></param>	
            <returns>This method returns one of the following Direct3D 11 Return Codes.</returns>	
            <remarks>	
            When this method is called ::addref() will be called on the <see cref="T:SharpDX.ComObject"/>-derived interface, and when the device child is detroyed ::release() will be called on the <see cref="T:SharpDX.ComObject"/>-derived interface.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceChild::SetPrivateDataInterface']/*"/>	
            <unmanaged>HRESULT ID3D11DeviceChild::SetPrivateDataInterface([In] const GUID&amp; guid,[In, Optional] const IUnknown* pData)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.DeviceChild.DebugName">
            <summary>
            Gets or sets the debug-name for this object.
            </summary>
            <value>
            The debug name.
            </value>
        </member>
        <member name="P:SharpDX.Direct3D11.DeviceChild.Device">
            <summary>	
            Get a reference to the device that created this interface.	
            </summary>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one, so be sure to call ::release() on the returned reference(s) before they are freed or else you will have a memory leak.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceChild::GetDevice']/*"/>	
            <unmanaged>GetDevice</unmanaged>	
            <unmanaged>void ID3D11DeviceChild::GetDevice([Out] ID3D11Device** ppDevice)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.BlendState.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.BlendStateDescription)">
            <summary>
              Constructs a new <see cref = "T:SharpDX.Direct3D11.BlendState" /> based on the specified description.
            </summary>
            <param name = "device">The device with which to associate the state object.</param>
            <param name = "description">The state description.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.BlendState.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.BlendStateDescription@)">
            <summary>
              Constructs a new <see cref = "T:SharpDX.Direct3D11.BlendState" /> based on the specified description.
            </summary>
            <param name = "device">The device with which to associate the state object.</param>
            <param name = "description">The state description.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.BlendState.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.BlendState"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.BlendState.GetDescription(SharpDX.Direct3D11.BlendStateDescription@)">
            <summary>	
            Gets the description for blending state that you used to create the blend-state object.	
            </summary>	
            <param name="descRef"><para>A reference to a <see cref="T:SharpDX.Direct3D11.BlendStateDescription"/> structure that receives a description of the blend state.</para></param>	
            <remarks>	
            You use the description for blending state in a call to the <see cref="M:SharpDX.Direct3D11.Device.CreateBlendState(SharpDX.Direct3D11.BlendStateDescription@,SharpDX.Direct3D11.BlendState)"/> method to create the blend-state object.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11BlendState::GetDesc']/*"/>	
            <unmanaged>void ID3D11BlendState::GetDesc([Out] D3D11_BLEND_DESC* pDesc)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.BlendState.Description">
            <summary>	
            Gets the description for blending state that you used to create the blend-state object.	
            </summary>	
            <remarks>	
            You use the description for blending state in a call to the <see cref="M:SharpDX.Direct3D11.Device.CreateBlendState(SharpDX.Direct3D11.BlendStateDescription@,SharpDX.Direct3D11.BlendState)"/> method to create the blend-state object.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11BlendState::GetDesc']/*"/>	
            <unmanaged>GetDesc</unmanaged>	
            <unmanaged>void ID3D11BlendState::GetDesc([Out] D3D11_BLEND_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.Buffer">
            <summary>	
            A buffer interface accesses a buffer resource, which is unstructured memory. Buffers typically store vertex or index data.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Buffer']/*"/>	
            <unmanaged>ID3D11Buffer</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.Resource">
            <summary>	
            A resource interface provides common actions on all resources.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Resource']/*"/>	
            <unmanaged>ID3D11Resource</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Resource.MaximumMipLevels">
            <summary>Constant MaximumMipLevels.</summary>
            <unmanaged>D3D11_REQ_MIP_LEVELS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.Resource.ResourceSizeInMegabytes">
            <summary>Constant ResourceSizeInMegabytes.</summary>
            <unmanaged>D3D11_REQ_RESOURCE_SIZE_IN_MEGABYTES_EXPRESSION_A_TERM</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.Resource.MaximumTexture1DArraySize">
            <summary>Constant MaximumTexture1DArraySize.</summary>
            <unmanaged>D3D11_REQ_TEXTURE1D_ARRAY_AXIS_DIMENSION</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.Resource.MaximumTexture2DArraySize">
            <summary>Constant MaximumTexture2DArraySize.</summary>
            <unmanaged>D3D11_REQ_TEXTURE2D_ARRAY_AXIS_DIMENSION</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.Resource.MaximumTexture1DSize">
            <summary>Constant MaximumTexture1DSize.</summary>
            <unmanaged>D3D11_REQ_TEXTURE1D_U_DIMENSION</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.Resource.MaximumTexture2DSize">
            <summary>Constant MaximumTexture2DSize.</summary>
            <unmanaged>D3D11_REQ_TEXTURE2D_U_OR_V_DIMENSION</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.Resource.MaximumTexture3DSize">
            <summary>Constant MaximumTexture3DSize.</summary>
            <unmanaged>D3D11_REQ_TEXTURE3D_U_V_OR_W_DIMENSION</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.Resource.MaximumTextureCubeSize">
            <summary>Constant MaximumTextureCubeSize.</summary>
            <unmanaged>D3D11_REQ_TEXTURECUBE_DIMENSION</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.Resource.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.Resource"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.Resource.GetDimension(SharpDX.Direct3D11.ResourceDimension@)">
            <summary>	
            Get the type of the resource.	
            </summary>	
            <param name="resourceDimensionRef"><para>Pointer to the resource type (see <see cref="T:SharpDX.Direct3D11.ResourceDimension"/>).</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Resource::GetType']/*"/>	
            <unmanaged>void ID3D11Resource::GetType([Out] D3D11_RESOURCE_DIMENSION* pResourceDimension)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Resource.SetEvictionPriority(System.Int32)">
            <summary>	
            Set the eviction priority of a resource.	
            </summary>	
            <param name="evictionPriority"><para>Eviction priority for the resource, which is one of the following values:</para>  <see cref="F:SharpDX.DXGI.ResourcePriority.Minimum"/> <see cref="F:SharpDX.DXGI.ResourcePriority.Low"/> <see cref="F:SharpDX.DXGI.ResourcePriority.Normal"/> <see cref="F:SharpDX.DXGI.ResourcePriority.High"/> <see cref="F:SharpDX.DXGI.ResourcePriority.Maximum"/></param>	
            <remarks>	
            Resource priorities determine which resource to evict from video memory when the system has run out of video memory. The resource will not be lost; it will be removed from video memory and placed into system memory, or possibly placed onto the hard drive. The resource will be loaded back into video memory when it is required.A resource that is set to the maximum priority, <see cref="F:SharpDX.DXGI.ResourcePriority.Maximum"/>, is only evicted if there is no other way of resolving the incoming memory request. The Windows Display Driver Model (WDDM) tries to split an incoming memory request to its minimum size and evict lower-priority resources before evicting a resource with maximum priority.Changing the priorities of resources should be done carefully. The wrong eviction priorities could be a detriment to performance rather than an improvement.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Resource::SetEvictionPriority']/*"/>	
            <unmanaged>void ID3D11Resource::SetEvictionPriority([In] unsigned int EvictionPriority)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Resource.GetEvictionPriority">
            <summary>	
            Get the eviction priority of a resource.	
            </summary>	
            <returns>One of the following values, which specifies the eviction priority for the resource:<see cref="F:SharpDX.DXGI.ResourcePriority.Minimum"/> <see cref="F:SharpDX.DXGI.ResourcePriority.Low"/> <see cref="F:SharpDX.DXGI.ResourcePriority.Normal"/> <see cref="F:SharpDX.DXGI.ResourcePriority.High"/> <see cref="F:SharpDX.DXGI.ResourcePriority.Maximum"/></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Resource::GetEvictionPriority']/*"/>	
            <unmanaged>unsigned int ID3D11Resource::GetEvictionPriority()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Resource.FromSwapChain``1(SharpDX.DXGI.SwapChain,System.Int32)">
            <summary>
              Gets a swap chain back buffer.
            </summary>
            <typeparam name = "T">The type of the buffer.</typeparam>
            <param name = "swapChain">The swap chain to get the buffer from.</param>
            <param name = "index">The index of the desired buffer.</param>
            <returns>The buffer interface, or <c>null</c> on failure.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.Resource.CalculateSubResourceIndex(System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculates the sub resource index from a miplevel.
            </summary>
            <param name="mipSlice">A zero-based index for the mipmap level to address; 0 indicates the first, most detailed mipmap level.</param>
            <param name="arraySlice">The zero-based index for the array level to address; always use 0 for volume (3D) textures.</param>
            <param name="mipLevel">Number of mipmap levels in the resource.</param>
            <returns>
            The index which equals MipSlice + (ArraySlice * MipLevels).
            </returns>
            <unmanaged>D3D11CalcSubresource</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.Resource.CalculateMipSize(System.Int32,System.Int32)">
            <summary>
            Calculates the resulting size at a single level for an original size.
            </summary>
            <param name="mipLevel">The mip level to get the size.</param>
            <param name="baseSize">Size of the base.</param>
            <returns>
            Size of the mipLevel
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.Resource.CalculateSubResourceIndex(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Calculates the sub resource index for a particular mipSlice and arraySlice.
            </summary>
            <param name="mipSlice">The mip slice.</param>
            <param name="arraySlice">The array slice.</param>
            <param name="mipSize">The size of slice. This values is resource dependent. Texture1D -> mipSize of the Width. Texture2D -> mipSize of the Height. Texture3D -> mipsize of the Depth</param>
            <returns>The resulting miplevel calulated for this instance with this mipSlice and arraySlice.</returns>
        </member>
        <member name="P:SharpDX.Direct3D11.Resource.Dimension">
            <summary>	
            Get the type of the resource.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Resource::GetType']/*"/>	
            <unmanaged>GetType</unmanaged>	
            <unmanaged>void ID3D11Resource::GetType([Out] D3D11_RESOURCE_DIMENSION* pResourceDimension)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.Resource.EvictionPriority">
            <summary>	
            Get the eviction priority of a resource.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Resource::GetEvictionPriority']/*"/>	
            <unmanaged>GetEvictionPriority</unmanaged>	
            <unmanaged>unsigned int ID3D11Resource::GetEvictionPriority()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.Buffer.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.BufferDescription)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.Buffer" /> class.
            </summary>
            <param name = "device">The device with which to associate the buffer.</param>
            <param name = "description">The description of the buffer.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.Buffer.#ctor(SharpDX.Direct3D11.Device,SharpDX.DataStream,SharpDX.Direct3D11.BufferDescription)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.Buffer" /> class.
            </summary>
            <param name = "device">The device with which to associate the buffer.</param>
            <param name = "data">Initial data used to initialize the buffer.</param>
            <param name = "description">The description of the buffer.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.Buffer.#ctor(SharpDX.Direct3D11.Device,System.Int32,SharpDX.Direct3D11.ResourceUsage,SharpDX.Direct3D11.BindFlags,SharpDX.Direct3D11.CpuAccessFlags,SharpDX.Direct3D11.ResourceOptionFlags,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.Buffer" /> class.
            </summary>
            <param name = "device">The device with which to associate the buffer.</param>
            <param name = "sizeInBytes">The size, in bytes, of the buffer.</param>
            <param name = "usage">The usage pattern for the buffer.</param>
            <param name = "bindFlags">Flags specifying how the buffer will be bound to the pipeline.</param>
            <param name = "accessFlags">Flags specifying how the buffer will be accessible from the CPU.</param>
            <param name = "optionFlags">Miscellaneous resource options.</param>
            <param name = "structureByteStride">The size (in bytes) of the structure element for structured buffers.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.Buffer.#ctor(SharpDX.Direct3D11.Device,SharpDX.DataStream,System.Int32,SharpDX.Direct3D11.ResourceUsage,SharpDX.Direct3D11.BindFlags,SharpDX.Direct3D11.CpuAccessFlags,SharpDX.Direct3D11.ResourceOptionFlags,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.Buffer" /> class.
            </summary>
            <param name = "device">The device with which to associate the buffer.</param>
            <param name = "data">Initial data used to initialize the buffer.</param>
            <param name = "sizeInBytes">The size, in bytes, of the buffer.</param>
            <param name = "usage">The usage pattern for the buffer.</param>
            <param name = "bindFlags">Flags specifying how the buffer will be bound to the pipeline.</param>
            <param name = "accessFlags">Flags specifying how the buffer will be accessible from the CPU.</param>
            <param name = "optionFlags">Miscellaneous resource options.</param>
            <param name = "structureByteStride">The size (in bytes) of the structure element for structured buffers.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.Buffer.Create``1(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.BindFlags,``0@,System.Int32,SharpDX.Direct3D11.ResourceUsage,SharpDX.Direct3D11.CpuAccessFlags,SharpDX.Direct3D11.ResourceOptionFlags,System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:SharpDX.Direct3D11.Buffer"/> class.
            </summary>
            <typeparam name="T">Type of the data to upload</typeparam>
            <param name="device">The device with which to associate the buffer.</param>
            <param name="bindFlags">Flags specifying how the buffer will be bound to the pipeline.</param>
            <param name="data">Initial data used to initialize the buffer.</param>
            <param name="sizeInBytes">The size, in bytes, of the buffer. If 0 is specified, sizeof(T) is used. </param>
            <param name="usage">The usage pattern for the buffer.</param>
            <param name="accessFlags">Flags specifying how the buffer will be accessible from the CPU.</param>
            <param name="optionFlags">Miscellaneous resource options.</param>
            <param name="structureByteStride">The size (in bytes) of the structure element for structured buffers.</param>
            <returns>An initialized buffer</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.Buffer.Create``1(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.BindFlags,``0[],System.Int32,SharpDX.Direct3D11.ResourceUsage,SharpDX.Direct3D11.CpuAccessFlags,SharpDX.Direct3D11.ResourceOptionFlags,System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:SharpDX.Direct3D11.Buffer"/> class.
            </summary>
            <typeparam name="T">Type of the data to upload</typeparam>
            <param name="device">The device with which to associate the buffer.</param>
            <param name="bindFlags">Flags specifying how the buffer will be bound to the pipeline.</param>
            <param name="data">Initial data used to initialize the buffer.</param>
            <param name="sizeInBytes">The size, in bytes, of the buffer. If 0 is specified, sizeof(T) * data.Length is used.</param>
            <param name="usage">The usage pattern for the buffer.</param>
            <param name="accessFlags">Flags specifying how the buffer will be accessible from the CPU.</param>
            <param name="optionFlags">Miscellaneous resource options.</param>
            <param name="structureByteStride">The size (in bytes) of the structure element for structured buffers.</param>
            <returns>An initialized buffer</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.Buffer.Create``1(SharpDX.Direct3D11.Device,``0@,SharpDX.Direct3D11.BufferDescription)">
            <summary>
            Creates a new instance of the <see cref="T:SharpDX.Direct3D11.Buffer"/> class.
            </summary>
            <typeparam name="T">Type of the data to upload</typeparam>
            <param name="device">The device with which to associate the buffer.</param>
            <param name="data">Initial data used to initialize the buffer.</param>
            <param name="description">The description.</param>
            <returns>
            An initialized buffer
            </returns>
            <remarks>
            If the <see cref="F:SharpDX.Direct3D11.BufferDescription.SizeInBytes"/> is at 0, sizeof(T) is used.
            </remarks>
        </member>
        <member name="M:SharpDX.Direct3D11.Buffer.Create``1(SharpDX.Direct3D11.Device,``0[],SharpDX.Direct3D11.BufferDescription)">
            <summary>
            Creates a new instance of the <see cref="T:SharpDX.Direct3D11.Buffer"/> class.
            </summary>
            <typeparam name="T">Type of the data to upload</typeparam>
            <param name="device">The device with which to associate the buffer.</param>
            <param name="data">Initial data used to initialize the buffer.</param>
            <param name="description">The description.</param>
            <returns>
            An initialized buffer
            </returns>
            <remarks>
            If the <see cref="F:SharpDX.Direct3D11.BufferDescription.SizeInBytes"/> is at 0, sizeof(T) * data.Length is used.
            </remarks>
        </member>
        <member name="M:SharpDX.Direct3D11.Buffer.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.Buffer"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.Buffer.GetDescription(SharpDX.Direct3D11.BufferDescription@)">
            <summary>	
            Get the properties of a buffer resource.	
            </summary>	
            <param name="descRef"><para>Pointer to a resource description (see <see cref="T:SharpDX.Direct3D11.BufferDescription"/>) filled in by the method.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Buffer::GetDesc']/*"/>	
            <unmanaged>void ID3D11Buffer::GetDesc([Out] D3D11_BUFFER_DESC* pDesc)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.Buffer.Description">
            <summary>	
            Get the properties of a buffer resource.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Buffer::GetDesc']/*"/>	
            <unmanaged>GetDesc</unmanaged>	
            <unmanaged>void ID3D11Buffer::GetDesc([Out] D3D11_BUFFER_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.BufferDescription">
            <summary>	
            Describes a buffer resource.	
            </summary>	
            <remarks>	
            This structure is used by <see cref="M:SharpDX.Direct3D11.Device.CreateBuffer(SharpDX.Direct3D11.BufferDescription@,System.Nullable{SharpDX.DataBox},SharpDX.Direct3D11.Buffer)"/> to create buffer resources.In addition to this structure, there is also a derived structure in D3D11.h (CD3D11_BUFFER_DESC) which behaves like an inherited class to help create a buffer description.If the bind flag is <see cref="F:SharpDX.Direct3D11.BindFlags.ConstantBuffer"/> then the ByteWidth value must be in multiples of 16, and less than or equal to D3D11_REQ_CONSTANT_BUFFER_ELEMENT_COUNT.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_DESC']/*"/>	
            <unmanaged>D3D11_BUFFER_DESC</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.BufferDescription.#ctor(System.Int32,SharpDX.Direct3D11.ResourceUsage,SharpDX.Direct3D11.BindFlags,SharpDX.Direct3D11.CpuAccessFlags,SharpDX.Direct3D11.ResourceOptionFlags,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.BufferDescription"/> struct.
            </summary>
            <param name="sizeInBytes">The size in bytes.</param>
            <param name="usage">The usage.</param>
            <param name="bindFlags">The bind flags.</param>
            <param name="cpuAccessFlags">The cpu access flags.</param>
            <param name="optionFlags">The option flags.</param>
            <param name="structureByteStride">The structure byte stride.</param>
        </member>
        <member name="F:SharpDX.Direct3D11.BufferDescription.SizeInBytes">
            <summary>	
            <para>Size of the buffer in bytes.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_DESC::ByteWidth']/*"/>	
            <unmanaged>unsigned int ByteWidth</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BufferDescription.Usage">
            <summary>	
            <para>Identify how the buffer is expected to be read from and written to. Frequency of update is a key factor. The most common value is typically <see cref="F:SharpDX.Direct3D11.ResourceUsage.Default"/>; see <see cref="T:SharpDX.Direct3D11.ResourceUsage"/> for all possible values.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_DESC::Usage']/*"/>	
            <unmanaged>D3D11_USAGE Usage</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BufferDescription.BindFlags">
            <summary>	
            <para>Identify how the buffer will be bound to the pipeline. Flags (see <see cref="T:SharpDX.Direct3D11.BindFlags"/>) can be combined with a logical OR.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_DESC::BindFlags']/*"/>	
            <unmanaged>D3D11_BIND_FLAG BindFlags</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BufferDescription.CpuAccessFlags">
            <summary>	
            <para>CPU access flags (see <see cref="T:SharpDX.Direct3D11.CpuAccessFlags"/>) or 0 if no CPU access is necessary. Flags can be combined with a logical OR.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_DESC::CPUAccessFlags']/*"/>	
            <unmanaged>D3D11_CPU_ACCESS_FLAG CPUAccessFlags</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BufferDescription.OptionFlags">
            <summary>	
            <para>Miscellaneous flags (see <see cref="T:SharpDX.Direct3D11.ResourceOptionFlags"/>) or 0 if unused. Flags can be combined with a logical OR.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_DESC::MiscFlags']/*"/>	
            <unmanaged>D3D11_RESOURCE_MISC_FLAG MiscFlags</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BufferDescription.StructureByteStride">
            <summary>	
            <para>The size of the structure (in bytes) when it represents a structured buffer.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_DESC::StructureByteStride']/*"/>	
            <unmanaged>unsigned int StructureByteStride</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.ClassInstance">
            <summary>	
            This interface encapsulates an HLSL class.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11ClassInstance']/*"/>	
            <unmanaged>ID3D11ClassInstance</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.ClassInstance.#ctor(SharpDX.Direct3D11.ClassLinkage,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>	
            Initializes a class-instance object that represents an HLSL class instance.	
            </summary>	
            <remarks>	
            Instances can be created (or gotten) before or after a shader is created. Use the same shader linkage object to acquire a class instance and create the shader the instance is going to be used in. For more information about using the <see cref="T:SharpDX.Direct3D11.ClassLinkage"/> interface, see {{Dynamic Linking}}. 	
            </remarks>	
            <param name="linkage">An instance of <see cref="P:SharpDX.Direct3D11.ClassInstance.ClassLinkage"/>.</param>
            <param name="classTypeName">The type name of a class to initialize. </param>
            <param name="constantBufferOffset">Identifies the constant buffer that contains the class data. </param>
            <param name="constantVectorOffset">The four-component vector offset from the start of the constant buffer where the class data will begin. Consequently, this is not a byte offset. </param>
            <param name="textureOffset">The texture slot for the first texture; there may be multiple textures following the offset. </param>
            <param name="samplerOffset">The sampler slot for the first sampler; there may be multiple samplers following the offset. </param>
            <returns>Returns S_OK if successful; otherwise, returns one of the following {{Direct3D 11 Return Codes}}. </returns>
            <unmanaged>HRESULT ID3D11ClassLinkage::CreateClassInstance([In] const char* pClassTypeName,[In] int ConstantBufferOffset,[In] int ConstantVectorOffset,[In] int TextureOffset,[In] int SamplerOffset,[Out] ID3D11ClassInstance** ppInstance)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.ClassInstance.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.ClassInstance"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.ClassInstance.GetClassLinkage(SharpDX.Direct3D11.ClassLinkage@)">
            <summary>	
            Gets the <see cref="T:SharpDX.Direct3D11.ClassLinkage"/> object associated with the current HLSL class.	
            </summary>	
            <param name="linkageOut">No documentation.</param>	
            <remarks>	
            For more information about using the <see cref="T:SharpDX.Direct3D11.ClassInstance"/> interface, see Dynamic Linking.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11ClassInstance::GetClassLinkage']/*"/>	
            <unmanaged>void ID3D11ClassInstance::GetClassLinkage([Out] ID3D11ClassLinkage** ppLinkage)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.ClassInstance.GetDescription(SharpDX.Direct3D11.ClassInstanceDescription@)">
            <summary>	
            Gets a description of the current HLSL class.	
            </summary>	
            <param name="descRef"><para>A reference to a <see cref="T:SharpDX.Direct3D11.ClassInstanceDescription"/> structure that describes the current HLSL class.</para></param>	
            <remarks>	
            For more information about using the <see cref="T:SharpDX.Direct3D11.ClassInstance"/> interface, see Dynamic Linking.An instance is not restricted to being used for a single type in a single shader. An instance is flexible and can be used for any shader that used the same type name or instance name when the instance was generated.A created instance will work for any shader that contains a type of the same type name. For instance, a class instance created with the type name DefaultShader would work in any shader that contained a type DefaultShader even though several shaders could describe a different type. A gotten instance maps directly to an instance name/index in a shader.  A class instance aquired using GetClassInstance will work for any shader that contains a class instance of the name used to generate the runtime instance, the instance does not have to be the same type in all of the shaders it's used in.An instance does not replace the importance of reflection for a particular shader since a gotten instance will not know its slot location and a created instance only specifies a type name.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11ClassInstance::GetDesc']/*"/>	
            <unmanaged>void ID3D11ClassInstance::GetDesc([Out] D3D11_CLASS_INSTANCE_DESC* pDesc)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.ClassInstance.GetInstanceName(System.IntPtr,SharpDX.PointerSize@)">
            <summary>	
            Gets the instance name of the current HLSL class.	
            </summary>	
            <param name="instanceNameRef"><para>The instance name of the current HLSL class.</para></param>	
            <param name="bufferLengthRef"><para>The length of the pInstanceName parameter.</para></param>	
            <remarks>	
            GetInstanceName will return a valid name only for instances acquired using <see cref="M:SharpDX.Direct3D11.ClassLinkage.GetClassInstance(System.String,System.Int32)"/>.For more information about using the <see cref="T:SharpDX.Direct3D11.ClassInstance"/> interface, see Dynamic Linking.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11ClassInstance::GetInstanceName']/*"/>	
            <unmanaged>void ID3D11ClassInstance::GetInstanceName([Out, Buffer, Optional] char* pInstanceName,[InOut] SIZE_T* pBufferLength)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.ClassInstance.GetTypeName(System.IntPtr,SharpDX.PointerSize@)">
            <summary>	
            Gets the type of the current HLSL class.	
            </summary>	
            <param name="typeNameRef"><para>Type of the current HLSL class.</para></param>	
            <param name="bufferLengthRef"><para>The length of the pTypeName parameter.</para></param>	
            <remarks>	
            GetTypeName will return a valid name only for instances acquired using <see cref="M:SharpDX.Direct3D11.ClassLinkage.GetClassInstance(System.String,System.Int32)"/>.For more information about using the <see cref="T:SharpDX.Direct3D11.ClassInstance"/> interface, see Dynamic Linking.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11ClassInstance::GetTypeName']/*"/>	
            <unmanaged>void ID3D11ClassInstance::GetTypeName([Out, Buffer, Optional] char* pTypeName,[InOut] SIZE_T* pBufferLength)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.ClassInstance.InstanceName">
            <summary>
              Gets the instance name of the current HLSL class.
            </summary>
            <remarks>
              GetInstanceName will return a valid name only for instances acquired using <see cref="M:SharpDX.Direct3D11.ClassLinkage.GetClassInstance(System.String,System.Int32)"/>.For more information about using the <see cref="T:SharpDX.Direct3D11.ClassInstance"/> interface, see {{Dynamic Linking}}.
            </remarks>
            <returns>The instance name of the current HLSL class.</returns>
            <unmanaged>void GetInstanceName([Out, Buffer, Optional] LPSTR pInstanceName,[InOut] SIZE_T* pBufferLength)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.ClassInstance.TypeName">
            <summary>
              Gets the type of the current HLSL class.
            </summary>
            <remarks>
              GetTypeName will return a valid name only for instances acquired using <see cref="M:SharpDX.Direct3D11.ClassLinkage.GetClassInstance(System.String,System.Int32)"/>.For more information about using the <see cref="T:SharpDX.Direct3D11.ClassInstance"/> interface, see {{Dynamic Linking}}.
            </remarks>
            <returns>Type of the current HLSL class.</returns>
            <unmanaged>void GetTypeName([Out, Buffer, Optional] LPSTR pTypeName,[InOut] SIZE_T* pBufferLength)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.ClassInstance.ClassLinkage">
            <summary>	
            Gets the <see cref="T:SharpDX.Direct3D11.ClassLinkage"/> object associated with the current HLSL class.	
            </summary>	
            <remarks>	
            For more information about using the <see cref="T:SharpDX.Direct3D11.ClassInstance"/> interface, see Dynamic Linking.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11ClassInstance::GetClassLinkage']/*"/>	
            <unmanaged>GetClassLinkage</unmanaged>	
            <unmanaged>void ID3D11ClassInstance::GetClassLinkage([Out] ID3D11ClassLinkage** ppLinkage)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.ClassInstance.Description">
            <summary>	
            Gets a description of the current HLSL class.	
            </summary>	
            <remarks>	
            For more information about using the <see cref="T:SharpDX.Direct3D11.ClassInstance"/> interface, see Dynamic Linking.An instance is not restricted to being used for a single type in a single shader. An instance is flexible and can be used for any shader that used the same type name or instance name when the instance was generated.A created instance will work for any shader that contains a type of the same type name. For instance, a class instance created with the type name DefaultShader would work in any shader that contained a type DefaultShader even though several shaders could describe a different type. A gotten instance maps directly to an instance name/index in a shader.  A class instance aquired using GetClassInstance will work for any shader that contains a class instance of the name used to generate the runtime instance, the instance does not have to be the same type in all of the shaders it's used in.An instance does not replace the importance of reflection for a particular shader since a gotten instance will not know its slot location and a created instance only specifies a type name.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11ClassInstance::GetDesc']/*"/>	
            <unmanaged>GetDesc</unmanaged>	
            <unmanaged>void ID3D11ClassInstance::GetDesc([Out] D3D11_CLASS_INSTANCE_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.ClassLinkage">
            <summary>	
            This interface encapsulates an HLSL dynamic linkage.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11ClassLinkage']/*"/>	
            <unmanaged>ID3D11ClassLinkage</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.ClassLinkage.#ctor(SharpDX.Direct3D11.Device)">
            <summary>
              Create a new instance of <see cref = "T:SharpDX.Direct3D11.ClassLinkage" />.
            </summary>
            <param name = "device"></param>
        </member>
        <member name="M:SharpDX.Direct3D11.ClassLinkage.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.ClassLinkage"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.ClassLinkage.GetClassInstance(System.String,System.Int32)">
            <summary>	
            Gets the class-instance object that represents the specified HLSL class.	
            </summary>	
            <param name="classInstanceNameRef"><para>The name of a class for which to get the class instance.</para></param>	
            <param name="instanceIndex"><para>The index of the class instance.</para></param>	
            <returns><para>The address of a reference to an <see cref="T:SharpDX.Direct3D11.ClassInstance"/> interface to initialize.</para></returns>	
            <remarks>	
            For more information about using the <see cref="T:SharpDX.Direct3D11.ClassLinkage"/> interface, see Dynamic Linking.A class instance must have at least 1 data member in order to be available for the runtime to use with <see cref="M:SharpDX.Direct3D11.ClassLinkage.GetClassInstance(System.String,System.Int32)"/>. Any instance with no members will be optimized out of a compiled shader blob as a zero-sized object. If you have a class with no data members, use <see cref="M:SharpDX.Direct3D11.ClassLinkage.CreateClassInstance(System.String,System.Int32,System.Int32,System.Int32,System.Int32,SharpDX.Direct3D11.ClassInstance)"/> instead.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11ClassLinkage::GetClassInstance']/*"/>	
            <unmanaged>HRESULT ID3D11ClassLinkage::GetClassInstance([In] const char* pClassInstanceName,[In] unsigned int InstanceIndex,[Out] ID3D11ClassInstance** ppInstance)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.ClassLinkage.CreateClassInstance(System.String,System.Int32,System.Int32,System.Int32,System.Int32,SharpDX.Direct3D11.ClassInstance)">
            <summary>	
            Initializes a class-instance object that represents an HLSL class instance.	
            </summary>	
            <param name="classTypeNameRef"><para>The type name of a class to initialize.</para></param>	
            <param name="constantBufferOffset"><para>Identifies the constant buffer that contains the class data.</para></param>	
            <param name="constantVectorOffset"><para>The four-component vector offset from the start of the constant buffer where the class data will begin. Consequently, this is not a byte offset.</para></param>	
            <param name="textureOffset"><para>The texture slot for the first texture; there may be multiple textures following the offset.</para></param>	
            <param name="samplerOffset"><para>The sampler slot for the first sampler; there may be multiple samplers following the offset.</para></param>	
            <param name="instanceOut"><para>The address of a reference to an <see cref="T:SharpDX.Direct3D11.ClassInstance"/> interface to initialize.</para></param>	
            <returns>Returns <see cref="F:SharpDX.Result.Ok"/> if successful; otherwise, returns one of the following Direct3D 11 Return Codes.</returns>	
            <remarks>	
            Instances can be created (or gotten) before or after a shader is created. Use the same shader linkage object to acquire a class instance and create the shader the instance is going to be used in.For more information about using the <see cref="T:SharpDX.Direct3D11.ClassLinkage"/> interface, see Dynamic Linking.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11ClassLinkage::CreateClassInstance']/*"/>	
            <unmanaged>HRESULT ID3D11ClassLinkage::CreateClassInstance([In] const char* pClassTypeName,[In] unsigned int ConstantBufferOffset,[In] unsigned int ConstantVectorOffset,[In] unsigned int TextureOffset,[In] unsigned int SamplerOffset,[Out, Fast] ID3D11ClassInstance** ppInstance)</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.ComputeShader">
            <summary>	
            A compute-shader interface manages an executable program (a compute shader) that controls the compute-shader stage.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11ComputeShader']/*"/>	
            <unmanaged>ID3D11ComputeShader</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShader.#ctor(SharpDX.Direct3D11.Device,SharpDX.D3DCompiler.ShaderBytecode)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.ComputeShader" /> class.
            </summary>
            <param name = "device">The device used to create the shader.</param>
            <param name = "shaderBytecode">The compiled shader bytecode.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShader.#ctor(SharpDX.Direct3D11.Device,SharpDX.D3DCompiler.ShaderBytecode,SharpDX.Direct3D11.ClassLinkage)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.ComputeShader" /> class.
            </summary>
            <param name = "device">The device used to create the shader.</param>
            <param name = "shaderBytecode">The compiled shader bytecode.</param>
            <param name = "linkage">A dynamic class linkage interface.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShader.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.ComputeShader"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="T:SharpDX.Direct3D11.Counter">
            <summary>	
            This interface encapsulates methods for measuring GPU performance.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Counter']/*"/>	
            <unmanaged>ID3D11Counter</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.Asynchronous">
            <summary>	
            This interface encapsulates methods for retrieving data from the GPU asynchronously.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Asynchronous']/*"/>	
            <unmanaged>ID3D11Asynchronous</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Asynchronous.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.Asynchronous"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.Asynchronous.GetDataSize">
            <summary>	
            Get the size of the data (in bytes) that is output when calling <see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/>.	
            </summary>	
            <returns>Size of the data (in bytes) that is output when calling GetData.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Asynchronous::GetDataSize']/*"/>	
            <unmanaged>unsigned int ID3D11Asynchronous::GetDataSize()</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.Asynchronous.DataSize">
            <summary>	
            Get the size of the data (in bytes) that is output when calling <see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/>.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Asynchronous::GetDataSize']/*"/>	
            <unmanaged>GetDataSize</unmanaged>	
            <unmanaged>unsigned int ID3D11Asynchronous::GetDataSize()</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.Counter.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.CounterDescription)">
            <summary>
              Constructs a new <see cref = "T:SharpDX.Direct3D11.Counter" /> based on the specified description.
            </summary>
            <param name = "device">The device with which to associate the state object.</param>
            <param name = "description">The counter description.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.Counter.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.Counter"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.Counter.GetDescription(SharpDX.Direct3D11.CounterDescription@)">
            <summary>	
            Get a counter description.	
            </summary>	
            <param name="descRef"><para>Pointer to a counter description (see <see cref="T:SharpDX.Direct3D11.CounterDescription"/>).</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Counter::GetDesc']/*"/>	
            <unmanaged>void ID3D11Counter::GetDesc([Out] D3D11_COUNTER_DESC* pDesc)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.Counter.Description">
            <summary>	
            Get a counter description.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Counter::GetDesc']/*"/>	
            <unmanaged>GetDesc</unmanaged>	
            <unmanaged>void ID3D11Counter::GetDesc([Out] D3D11_COUNTER_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.CounterMetadata">
            <summary>
            Counter metadata that contains the type, name, units of measure, and a description of an existing counter.
            </summary>
        </member>
        <member name="P:SharpDX.Direct3D11.CounterMetadata.Type">
            <summary>
            Gets the data type of a counter (see <see cref="T:SharpDX.Direct3D11.CounterType"/>).
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:SharpDX.Direct3D11.CounterMetadata.HardwareCounterCount">
            <summary>
            Gets the number of hardware counters that are needed for this counter type to be created. All instances of the same counter type use the same hardware counters.
            </summary>
            <value>The hardware counter count.</value>
        </member>
        <member name="P:SharpDX.Direct3D11.CounterMetadata.Name">
            <summary>
            Gets a brief name for the counter.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:SharpDX.Direct3D11.CounterMetadata.Units">
            <summary>
            Gets the units a counter measures.
            </summary>
            <value>The units.</value>
        </member>
        <member name="P:SharpDX.Direct3D11.CounterMetadata.Description">
            <summary>
            Gets a description of the counter.
            </summary>
            <value>The description.</value>
        </member>
        <member name="T:SharpDX.Direct3D11.DepthStencilState">
            <summary>	
            The depth-stencil-state interface holds a description for depth-stencil state that you can bind to the output-merger stage.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DepthStencilState']/*"/>	
            <unmanaged>ID3D11DepthStencilState</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DepthStencilState.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.DepthStencilStateDescription)">
            <summary>
              Constructs a new <see cref = "T:SharpDX.Direct3D11.DepthStencilState" /> based on the specified description.
            </summary>
            <param name = "device">The device with which to associate the state object.</param>
            <param name = "description">The state description.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.DepthStencilState.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.DepthStencilStateDescription@)">
            <summary>
              Constructs a new <see cref = "T:SharpDX.Direct3D11.DepthStencilState" /> based on the specified description.
            </summary>
            <param name = "device">The device with which to associate the state object.</param>
            <param name = "description">The state description.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.DepthStencilState.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.DepthStencilState"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.DepthStencilState.GetDescription(SharpDX.Direct3D11.DepthStencilStateDescription@)">
            <summary>	
            Gets the description for depth-stencil state that you used to create the depth-stencil-state object.	
            </summary>	
            <param name="descRef"><para>A reference to a <see cref="T:SharpDX.Direct3D11.DepthStencilStateDescription"/> structure that receives a description of the depth-stencil state.</para></param>	
            <remarks>	
            You use the description for depth-stencil state in a call to the <see cref="M:SharpDX.Direct3D11.Device.CreateDepthStencilState(SharpDX.Direct3D11.DepthStencilStateDescription@,SharpDX.Direct3D11.DepthStencilState)"/> method to create the depth-stencil-state object.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DepthStencilState::GetDesc']/*"/>	
            <unmanaged>void ID3D11DepthStencilState::GetDesc([Out] D3D11_DEPTH_STENCIL_DESC* pDesc)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.DepthStencilState.Description">
            <summary>	
            Gets the description for depth-stencil state that you used to create the depth-stencil-state object.	
            </summary>	
            <remarks>	
            You use the description for depth-stencil state in a call to the <see cref="M:SharpDX.Direct3D11.Device.CreateDepthStencilState(SharpDX.Direct3D11.DepthStencilStateDescription@,SharpDX.Direct3D11.DepthStencilState)"/> method to create the depth-stencil-state object.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DepthStencilState::GetDesc']/*"/>	
            <unmanaged>GetDesc</unmanaged>	
            <unmanaged>void ID3D11DepthStencilState::GetDesc([Out] D3D11_DEPTH_STENCIL_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.DepthStencilView">
            <summary>	
            A depth-stencil-view interface accesses a texture resource during depth-stencil testing.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DepthStencilView']/*"/>	
            <unmanaged>ID3D11DepthStencilView</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.ResourceView">
            <summary>	
            A view interface specifies the parts of a resource the pipeline can access during rendering.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11View']/*"/>	
            <unmanaged>ID3D11View</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.ResourceView.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.ResourceView"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.ResourceView.GetResource(SharpDX.Direct3D11.Resource@)">
            <summary>	
            Get the resource that is accessed through this view.	
            </summary>	
            <param name="resourceOut"><para>Address of a reference to the resource that is accessed through this view. (See <see cref="T:SharpDX.Direct3D11.Resource"/>.)</para></param>	
            <remarks>	
            This function increments the reference count of the resource by one, so it is necessary to call Release on the returned reference when the application is done with it. Destroying (or losing) the returned reference before Release is called will result in a memory leak.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11View::GetResource']/*"/>	
            <unmanaged>void ID3D11View::GetResource([Out] ID3D11Resource** ppResource)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.ResourceView.Resource">
            <summary>	
            Get the resource that is accessed through this view.	
            </summary>	
            <remarks>	
            This function increments the reference count of the resource by one, so it is necessary to call Release on the returned reference when the application is done with it. Destroying (or losing) the returned reference before Release is called will result in a memory leak.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11View::GetResource']/*"/>	
            <unmanaged>GetResource</unmanaged>	
            <unmanaged>void ID3D11View::GetResource([Out] ID3D11Resource** ppResource)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.DepthStencilView.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Resource)">
            <summary>
              Creates a <see cref = "T:SharpDX.Direct3D11.DepthStencilView" /> for accessing resource data.
            </summary>
            <param name = "device">The device to use when creating this <see cref = "T:SharpDX.Direct3D11.DepthStencilView" />.</param>
            <param name = "resource">The resource that represents the render-target surface. This surface must have been created with the <see cref = "T:SharpDX.Direct3D11.BindFlags">DepthStencil</see> flag.</param>
            <unmanaged>ID3D11Device::CreateDepthStencilView</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.DepthStencilView.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Resource,SharpDX.Direct3D11.DepthStencilViewDescription)">
            <summary>
              Creates a <see cref = "T:SharpDX.Direct3D11.DepthStencilView" /> for accessing resource data.
            </summary>
            <param name = "device">The device to use when creating this <see cref = "T:SharpDX.Direct3D11.DepthStencilView" />.</param>
            <param name = "resource">The resource that represents the render-target surface. This surface must have been created with the <see cref = "T:SharpDX.Direct3D11.BindFlags">DepthStencil</see> flag.</param>
            <param name = "description">A structure describing the <see cref = "T:SharpDX.Direct3D11.DepthStencilView" /> to be created.</param>
            <unmanaged>ID3D11Device::CreateDepthStencilView</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.DepthStencilView.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.DepthStencilView"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.DepthStencilView.GetDescription(SharpDX.Direct3D11.DepthStencilViewDescription@)">
            <summary>	
            Get the depth-stencil view.	
            </summary>	
            <param name="descRef"><para>Pointer to a depth-stencil-view description (see <see cref="T:SharpDX.Direct3D11.DepthStencilViewDescription"/>).</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DepthStencilView::GetDesc']/*"/>	
            <unmanaged>void ID3D11DepthStencilView::GetDesc([Out] D3D11_DEPTH_STENCIL_VIEW_DESC* pDesc)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.DepthStencilView.Description">
            <summary>	
            Get the depth-stencil view.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DepthStencilView::GetDesc']/*"/>	
            <unmanaged>GetDesc</unmanaged>	
            <unmanaged>void ID3D11DepthStencilView::GetDesc([Out] D3D11_DEPTH_STENCIL_VIEW_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.Device">
            <summary>	
            The device interface represents a virtual adapter; it is used to create resources.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device']/*"/>	
            <unmanaged>ID3D11Device</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Device.MultisampleCountMaximum">
            <summary>Constant MultisampleCountMaximum.</summary>
            <unmanaged>D3D11_MAX_MULTISAMPLE_SAMPLE_COUNT</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.Device.#ctor(SharpDX.Direct3D.DriverType)">
            <summary>
              Constructor for a D3D11 Device. See <see cref="M:SharpDX.Direct3D11.D3D11.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.Direct3D11.Device,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/> for more information.
            </summary>
            <param name="driverType"></param>
        </member>
        <member name="M:SharpDX.Direct3D11.Device.#ctor(SharpDX.DXGI.Adapter)">
            <summary>
              Constructor for a D3D11 Device. See <see cref="M:SharpDX.Direct3D11.D3D11.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.Direct3D11.Device,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/> for more information.
            </summary>
            <param name="adapter"></param>
        </member>
        <member name="M:SharpDX.Direct3D11.Device.#ctor(SharpDX.Direct3D.DriverType,SharpDX.Direct3D11.DeviceCreationFlags)">
            <summary>
              Constructor for a D3D11 Device. See <see cref="M:SharpDX.Direct3D11.D3D11.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.Direct3D11.Device,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/> for more information.
            </summary>
            <param name="driverType"></param>
            <param name="flags"></param>
        </member>
        <member name="M:SharpDX.Direct3D11.Device.#ctor(SharpDX.DXGI.Adapter,SharpDX.Direct3D11.DeviceCreationFlags)">
            <summary>
              Constructor for a D3D11 Device. See <see cref="M:SharpDX.Direct3D11.D3D11.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.Direct3D11.Device,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/> for more information.
            </summary>
            <param name="adapter"></param>
            <param name="flags"></param>
        </member>
        <member name="M:SharpDX.Direct3D11.Device.#ctor(SharpDX.Direct3D.DriverType,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[])">
            <summary>
              Constructor for a D3D11 Device. See <see cref="M:SharpDX.Direct3D11.D3D11.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.Direct3D11.Device,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/> for more information.
            </summary>
            <param name="driverType"></param>
            <param name="flags"></param>
            <param name="featureLevels"></param>
        </member>
        <member name="M:SharpDX.Direct3D11.Device.#ctor(SharpDX.DXGI.Adapter,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[])">
            <summary>
              Constructor for a D3D11 Device. See <see cref="M:SharpDX.Direct3D11.D3D11.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.Direct3D11.Device,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/> for more information.
            </summary>
            <param name="adapter"></param>
            <param name="flags"></param>
            <param name="featureLevels"></param>
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[])">
            <summary>
              Internal CreateDevice
            </summary>
            <param name = "adapter"></param>
            <param name = "driverType"></param>
            <param name = "flags"></param>
            <param name = "featureLevels"></param>
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateWithSwapChain(SharpDX.Direct3D.DriverType,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.DXGI.SwapChainDescription,SharpDX.Direct3D11.Device@,SharpDX.DXGI.SwapChain@)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.Device" /> class along with a new <see cref = "T:SharpDX.DXGI.SwapChain" /> used for rendering.
            </summary>
            <param name = "driverType">The type of device to create.</param>
            <param name = "flags">A list of runtime layers to enable.</param>
            <param name = "swapChainDescription">Details used to create the swap chain.</param>
            <param name = "device">When the method completes, contains the created device instance.</param>
            <param name = "swapChain">When the method completes, contains the created swap chain instance.</param>
            <returns>A <see cref = "T:SharpDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateWithSwapChain(SharpDX.DXGI.Adapter,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.DXGI.SwapChainDescription,SharpDX.Direct3D11.Device@,SharpDX.DXGI.SwapChain@)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.Device" /> class along with a new <see cref = "T:SharpDX.DXGI.SwapChain" /> used for rendering.
            </summary>
            <param name = "adapter">The video adapter on which the device should be created.</param>
            <param name = "flags">A list of runtime layers to enable.</param>
            <param name = "swapChainDescription">Details used to create the swap chain.</param>
            <param name = "device">When the method completes, contains the created device instance.</param>
            <param name = "swapChain">When the method completes, contains the created swap chain instance.</param>
            <returns>A <see cref = "T:SharpDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateWithSwapChain(SharpDX.Direct3D.DriverType,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],SharpDX.DXGI.SwapChainDescription,SharpDX.Direct3D11.Device@,SharpDX.DXGI.SwapChain@)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.Device" /> class along with a new <see cref = "T:SharpDX.DXGI.SwapChain" /> used for rendering.
            </summary>
            <param name = "driverType">The type of device to create.</param>
            <param name = "flags">A list of runtime layers to enable.</param>
            <param name = "featureLevels">A list of feature levels which determine the order of feature levels to attempt to create.</param>
            <param name = "swapChainDescription">Details used to create the swap chain.</param>
            <param name = "device">When the method completes, contains the created device instance.</param>
            <param name = "swapChain">When the method completes, contains the created swap chain instance.</param>
            <returns>A <see cref = "T:SharpDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateWithSwapChain(SharpDX.DXGI.Adapter,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],SharpDX.DXGI.SwapChainDescription,SharpDX.Direct3D11.Device@,SharpDX.DXGI.SwapChain@)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.Device" /> class along with a new <see cref = "T:SharpDX.DXGI.SwapChain" /> used for rendering.
            </summary>
            <param name = "adapter">The video adapter on which the device should be created.</param>
            <param name = "flags">A list of runtime layers to enable.</param>
            <param name = "featureLevels">A list of feature levels which determine the order of feature levels to attempt to create.</param>
            <param name = "swapChainDescription">Details used to create the swap chain.</param>
            <param name = "device">When the method completes, contains the created device instance.</param>
            <param name = "swapChain">When the method completes, contains the created swap chain instance.</param>
            <returns>A <see cref = "T:SharpDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateWithSwapChain(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],SharpDX.DXGI.SwapChainDescription,SharpDX.Direct3D11.Device@,SharpDX.DXGI.SwapChain@)">
            <summary>
              This overload has been deprecated. Use one of the alternatives that does not take both an adapter and a driver type.
            </summary>
        </member>
        <member name="M:SharpDX.Direct3D11.Device.GetCounterMetadata(SharpDX.Direct3D11.CounterDescription)">
            <summary>
            Get the type, name, units of measure, and a description of an existing counter.	
            </summary>
            <param name="counterDescription">The counter description.</param>
            <returns>Description of the counter</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.Device.OpenSharedResource``1(System.IntPtr)">
            <summary>
            Give a device access to a shared resource created on a different Direct3d device.
            </summary>
            <typeparam name="T">The type of the resource we are gaining access to.</typeparam>
            <param name="resourceHandle">A resource handle. See remarks.</param>
            <returns>
            This method returns a reference to the resource we are gaining access to.
            </returns>
            <remarks>
            To share a resource between two Direct3D 10 devices the resource must have been created with the  <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.Shared"/> flag, if it was created using the ID3D10Device interface.  If it was created using the IDXGIDevice interface, then the resource is always shared. The REFIID, or GUID, of the interface to the resource can be obtained by using the __uuidof() macro.  For example, __uuidof(ID3D10Buffer) will get the GUID of the interface to a buffer resource. When sharing a resource between two Direct3D 10 devices the unique handle of the resource can be obtained by querying the resource for the <see cref="T:SharpDX.DXGI.Resource"/> interface and then calling {{GetSharedHandle}}.
            <code> IDXGIResource* pOtherResource(NULL);
            hr = pOtherDeviceResource-&gt;QueryInterface( __uuidof(IDXGIResource), (void**)&amp;pOtherResource );
            HANDLE sharedHandle;
            pOtherResource-&gt;GetSharedHandle(&amp;sharedHandle); </code>
            The only resources that can be shared are 2D non-mipmapped textures. To share a resource between a Direct3D 9 device and a Direct3D 10 device the texture must have been created using  the pSharedHandle argument of {{CreateTexture}}.   The shared Direct3D 9 handle is then passed to OpenSharedResource in the hResource argument. The following code illustrates the method calls involved.
            <code> sharedHandle = NULL; // must be set to NULL to create, can use a valid handle here to open in D3D9
            pDevice9-&gt;CreateTexture(..., pTex2D_9, &amp;sharedHandle);
            ...
            pDevice10-&gt;OpenSharedResource(sharedHandle, __uuidof(ID3D10Resource), (void**)(&amp;tempResource10));
            tempResource10-&gt;QueryInterface(__uuidof(ID3D10Texture2D), (void**)(&amp;pTex2D_10));
            tempResource10-&gt;Release();
            // now use pTex2D_10 with pDevice10    </code>
            Textures being shared from D3D9 to D3D10 have the following restrictions.  Textures must be 2D Only 1 mip level is allowed Texture must have default usage Texture must be write only MSAA textures are not allowed Bind flags must have SHADER_RESOURCE and RENDER_TARGET set Only R10G10B10A2_UNORM, R16G16B16A16_FLOAT and R8G8B8A8_UNORM formats are allowed  If a shared texture is updated on one device <see cref="M:SharpDX.Direct3D11.DeviceContext.Flush"/> must be called on that device.
            </remarks>
            <unmanaged>HRESULT ID3D10Device::OpenSharedResource([In] void* hResource,[In] GUID* ReturnedInterface,[Out, Optional] void** ppResource)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CheckComputeShaderFormatSupport(SharpDX.DXGI.Format)">
            <summary>
            Check if this device is supporting compute shaders for the specified format.
            </summary>
            <param name="format">The format for which to check support.</param>
            <returns>Flags indicating usage contexts in which the specified format is supported.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CheckFeatureSupport(SharpDX.Direct3D11.Feature)">
            <summary>
            Check if this device is supporting a feature.
            </summary>
            <param name="feature">The feature to check.</param>
            <returns>Returns true if this device supports this feature, otherwise false.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CheckThreadingSupport(System.Boolean@,System.Boolean@)">
            <summary>
            Check if this device is supporting threading.
            </summary>
            <param name="supportsConcurrentResources">Support concurrent resources.</param>
            <param name="supportsCommandLists">Support command lists.</param>
            <returns>A <see cref = "T:SharpDX.Result" /> object describing the result of the operation.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.Device.GetSupportedFeatureLevel">
            <summary>
            Gets the highest supported hardware feature level of the primary adapter.
            </summary>
            <returns>The highest supported hardware feature level.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.Device.GetSupportedFeatureLevel(SharpDX.DXGI.Adapter)">
            <summary>
            Gets the highest supported hardware feature level of the primary adapter.
            </summary>
            <param name="adapter">The adapter.</param>
            <returns>
            The highest supported hardware feature level.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.Device.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.Device"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateBuffer(SharpDX.Direct3D11.BufferDescription@,System.Nullable{SharpDX.DataBox},SharpDX.Direct3D11.Buffer)">
            <summary>	
            Creates a buffer (vertex buffer, index buffer, or shader-constant buffer).	
            </summary>	
            <param name="descRef"><para>A reference to a <see cref="T:SharpDX.Direct3D11.BufferDescription"/> structure that describes the buffer.</para></param>	
            <param name="initialDataRef"><para>A reference to a <see cref="T:SharpDX.DataBox"/> structure that describes  the initialization data;  use <c>null</c> to allocate space only (with the exception that it cannot be <c>null</c> if the usage flag is <see cref="F:SharpDX.Direct3D11.ResourceUsage.Immutable"/>).</para></param>	
            <param name="bufferOut"><para>Address of a reference to the <see cref="T:SharpDX.Direct3D11.Buffer"/> interface for the buffer object created.  Set this parameter to <c>null</c> to validate the other input parameters (S_FALSE indicates a pass).</para></param>	
            <returns>This method returns E_OUTOFMEMORY if there is insufficient memory to create the buffer.   See Direct3D 11 Return Codes for other possible return values.</returns>	
            <remarks>	
            For example code, see How to: Create a Vertex Buffer,  How to: Create an Index Buffer or How to: Create a Constant Buffer.The Direct3D 11.1 runtime, which is available on Windows Developer Preview and later operating systems, provides the following new functionality for CreateBuffer.You can create a constant buffer that is larger than the maximum constant buffer size that a shader can access (4096 32-bit*4-component constants ? 64KB).  When you bind the constant buffer to the pipeline (for example, via PSSetConstantBuffers or PSSetConstantBuffers1), you can define a range of the buffer that the shader can access that fits within the 4096 constant limit.The runtime will emulate this feature for feature level 9.1, 9.2, and 9.3; therefore, this feature is supported for feature level 9.1, 9.2, and 9.3.  This feature is always available on new drivers for feature level 10 and higher.  On existing drivers that are implemented to feature level 10 and higher, a call to CreateBuffer to request a constant buffer that is larger than 4096 fails.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateBuffer']/*"/>	
            <unmanaged>HRESULT ID3D11Device::CreateBuffer([In] const D3D11_BUFFER_DESC* pDesc,[In, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Buffer** ppBuffer)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateTexture1D(SharpDX.Direct3D11.Texture1DDescription@,SharpDX.DataBox[],SharpDX.Direct3D11.Texture1D)">
            <summary>	
            Creates an array of 1D textures.	
            </summary>	
            <param name="descRef">No documentation.</param>	
            <param name="initialDataRef">No documentation.</param>	
            <param name="texture1DOut">No documentation.</param>	
            <returns>If the method succeeds, the return code is <see cref="F:SharpDX.Result.Ok"/>. See Direct3D 11 Return Codes for failing error codes.</returns>	
            <remarks>	
            CreateTexture1D creates a 1D texture resource, which can contain a number of 1D subresources. The number of textures is specified in the texture description. All textures in a resource must have the same format, size, and number of mipmap levels.All resources are made up of one or more subresources. To load data into the texture, applications can supply the data initially as an array of <see cref="T:SharpDX.DataBox"/> structures pointed to by pInitialData, or they can use one of the D3DX texture functions such as D3DX11CreateTextureFromFile.For a 32 width texture with a full mipmap chain, the pInitialData array has the following 6 elements:pInitialData[0] = 32x1 pInitialData[1] = 16x1 pInitialData[2] = 8x1 pInitialData[3] = 4x1	
             pInitialData[4] = 2x1	
             pInitialData[5] = 1x1	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateTexture1D']/*"/>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture1D([In] const D3D11_TEXTURE1D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture1D** ppTexture1D)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateTexture2D(SharpDX.Direct3D11.Texture2DDescription@,SharpDX.DataBox[],SharpDX.Direct3D11.Texture2D)">
            <summary>	
            Create an array of 2D textures.	
            </summary>	
            <param name="descRef">No documentation.</param>	
            <param name="initialDataRef">No documentation.</param>	
            <param name="texture2DOut">No documentation.</param>	
            <returns>If the method succeeds, the return code is <see cref="F:SharpDX.Result.Ok"/>. See Direct3D 11 Return Codes for failing error codes.</returns>	
            <remarks>	
            CreateTexture2D creates a 2D texture resource, which can contain a number of 2D subresources. The number of textures is specified in the texture description. All textures in a resource must have the same format, size, and number of mipmap levels.All resources are made up of one or more subresources. To load data into the texture, applications can supply the data initially as an array of <see cref="T:SharpDX.DataBox"/> structures pointed to by pInitialData, or it may use one of the D3DX texture functions such as D3DX11CreateTextureFromFile.For a 32 x 32 texture with a full mipmap chain, the pInitialData array has the following 6 elements:pInitialData[0] = 32x32 pInitialData[1] = 16x16 pInitialData[2] = 8x8 pInitialData[3] = 4x4	
             pInitialData[4] = 2x2	
             pInitialData[5] = 1x1	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateTexture2D']/*"/>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture2D([In] const D3D11_TEXTURE2D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture2D** ppTexture2D)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateTexture3D(SharpDX.Direct3D11.Texture3DDescription@,SharpDX.DataBox[],SharpDX.Direct3D11.Texture3D)">
            <summary>	
            Create a single 3D texture.	
            </summary>	
            <param name="descRef">No documentation.</param>	
            <param name="initialDataRef">No documentation.</param>	
            <param name="texture3DOut">No documentation.</param>	
            <returns>If the method succeeds, the return code is <see cref="F:SharpDX.Result.Ok"/>. See Direct3D 11 Return Codes for failing error codes.</returns>	
            <remarks>	
            CreateTexture3D creates a 3D texture resource, which can contain a number of 3D subresources. The number of textures is specified in the texture description. All textures in a resource must have the same format, size, and number of mipmap levels.All resources are made up of one or more subresources. To load data into the texture, applications can supply the data initially as an array of <see cref="T:SharpDX.DataBox"/> structures pointed to by pInitialData, or they can use one of the D3DX texture functions such as D3DX11CreateTextureFromFile.Each element of pInitialData provides all of the slices that are defined for a given miplevel. For example, for a 32 x 32 x 4 volume texture with a full mipmap chain, the array has the following 6 elements:pInitialData[0] = 32x32 with 4 slices pInitialData[1] = 16x16 with 2 slices pInitialData[2] = 8x8 with 1 slice pInitialData[3] = 4x4	
            with 1 slice pInitialData[4] = 2x2	
            with 1 slice pInitialData[5] = 1x1	
            with 1 slice	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateTexture3D']/*"/>	
            <unmanaged>HRESULT ID3D11Device::CreateTexture3D([In] const D3D11_TEXTURE3D_DESC* pDesc,[In, Buffer, Optional] const D3D11_SUBRESOURCE_DATA* pInitialData,[Out, Fast] ID3D11Texture3D** ppTexture3D)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)">
            <summary>	
            Create a shader-resource view for accessing data in a resource.	
            </summary>	
            <param name="resourceRef"><para>Pointer to the resource that will serve as input to a shader. This resource must have been created with the  <see cref="F:SharpDX.Direct3D11.BindFlags.ShaderResource"/> flag.</para></param>	
            <param name="descRef"><para>Pointer to a shader-resource view description (see <see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription"/>). Set this parameter to <c>null</c> to create a  view that accesses the entire resource (using the format the resource was created with).</para></param>	
            <param name="sRViewOut"><para>Address of a reference to an <see cref="T:SharpDX.Direct3D11.ShaderResourceView"/>. Set this parameter to <c>null</c> to validate the  other input parameters (the method will return S_FALSE if the other input parameters pass validation).</para></param>	
            <returns>This method returns one of the following Direct3D 11 Return Codes.</returns>	
            <remarks>	
            A resource is made up of one or more subresources; a view identifies which subresources to allow the pipeline to access. In addition, each resource is bound to the pipeline using a view. A shader-resource view is designed to bind any buffer or texture resource to the shader stages using the following  API methods: <see cref="M:SharpDX.Direct3D11.VertexShaderStage.SetShaderResources(System.Int32,System.Int32,System.IntPtr)"/>, <see cref="M:SharpDX.Direct3D11.GeometryShaderStage.SetShaderResources(System.Int32,System.Int32,System.IntPtr)"/> and <see cref="M:SharpDX.Direct3D11.PixelShaderStage.SetShaderResources(System.Int32,System.Int32,System.IntPtr)"/>.Because a view is fully typed, this means that typeless resources become fully typed when bound to the pipeline.Note??To successfully create a shader-resource view from a typeless buffer (for example, <see cref="F:SharpDX.DXGI.Format.R32G32B32A32_Typeless"/>), you must set the <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.BufferAllowRawViews"/> flag when you create the buffer.The Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, allows you to use CreateShaderResourceView for the following new purpose.You can create shader-resource views of video resources so that Direct3D shaders can process those shader-resource views. These video resources are either Texture2D or Texture2DArray. The value in the ViewDimension member of the <see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription"/> structure for a created shader-resource view must match the type of video resource, D3D11_SRV_DIMENSION_TEXTURE2D          for Texture2D and D3D11_SRV_DIMENSION_TEXTURE2DARRAY for Texture2DArray. Additionally, the format of the underlying video resource restricts the formats that the view can use. The video resource format values on the <see cref="T:SharpDX.DXGI.Format"/> reference page specify the format values that views are restricted to.The runtime read+write conflict prevention logic (which stops a resource from being bound as an SRV and RTV or UAV at the same time) treats views of different parts of the same video surface as conflicting for simplicity.  Therefore, the runtime does not allow an application to read from luma while the application simultaneously renders to chroma in the same surface even though the hardware might allow these simultaneous operations.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateShaderResourceView']/*"/>	
            <unmanaged>HRESULT ID3D11Device::CreateShaderResourceView([In] ID3D11Resource* pResource,[In, Optional] const D3D11_SHADER_RESOURCE_VIEW_DESC* pDesc,[Out, Fast] ID3D11ShaderResourceView** ppSRView)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateUnorderedAccessView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.UnorderedAccessViewDescription},SharpDX.Direct3D11.UnorderedAccessView)">
            <summary>	
            Creates a view for accessing an unordered access resource.	
            </summary>	
            <param name="resourceRef">No documentation.</param>	
            <param name="descRef">No documentation.</param>	
            <param name="uAViewOut">No documentation.</param>	
            <returns>This method returns one of the Direct3D 11 Return Codes.</returns>	
            <remarks>	
            The Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, allows you to use CreateUnorderedAccessView for the following new purpose.You can create unordered-access views of video resources so that Direct3D shaders can process those unordered-access views. These video resources are either Texture2D or Texture2DArray. The value in the ViewDimension member of the <see cref="T:SharpDX.Direct3D11.UnorderedAccessViewDescription"/> structure for a created unordered-access view must match the type of video resource, <see cref="F:SharpDX.Direct3D11.UnorderedAccessViewDimension.Texture2D"/>          for Texture2D and <see cref="F:SharpDX.Direct3D11.UnorderedAccessViewDimension.Texture2DArray"/> for Texture2DArray. Additionally, the format of the underlying video resource restricts the formats that the view can use. The video resource format values on the <see cref="T:SharpDX.DXGI.Format"/> reference page specify the format values that views are restricted to.The runtime read+write conflict prevention logic (which stops a resource from being bound as an SRV and RTV or UAV at the same time) treats views of different parts of the same video surface as conflicting for simplicity.  Therefore, the runtime does not allow an application to read from luma while the application simultaneously renders to chroma in the same surface even though the hardware might allow these simultaneous operations.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateUnorderedAccessView']/*"/>	
            <unmanaged>HRESULT ID3D11Device::CreateUnorderedAccessView([In] ID3D11Resource* pResource,[In, Optional] const D3D11_UNORDERED_ACCESS_VIEW_DESC* pDesc,[Out, Fast] ID3D11UnorderedAccessView** ppUAView)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateRenderTargetView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.RenderTargetViewDescription},SharpDX.Direct3D11.RenderTargetView)">
            <summary>	
            Creates a render-target view for accessing resource data.	
            </summary>	
            <param name="resourceRef"><para>Pointer to a <see cref="T:SharpDX.Direct3D11.Resource"/> that represents a render target. This resource must have been created with the <see cref="F:SharpDX.Direct3D11.BindFlags.RenderTarget"/> flag.</para></param>	
            <param name="descRef"><para>Pointer to a <see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription"/> that represents a render-target view description. Set this parameter to <c>null</c> to create a view that accesses all of the subresources in mipmap level 0.</para></param>	
            <param name="rTViewOut"><para>Address of a reference to an <see cref="T:SharpDX.Direct3D11.RenderTargetView"/>. Set this parameter to <c>null</c> to validate the other input parameters (the method will return S_FALSE if the other input parameters pass validation).</para></param>	
            <returns>This method returns one of the Direct3D 11 Return Codes.</returns>	
            <remarks>	
            A render-target view can be bound to the output-merger stage by calling <see cref="M:SharpDX.Direct3D11.OutputMergerStage.SetRenderTargets(System.Int32,System.IntPtr,SharpDX.Direct3D11.DepthStencilView)"/>.The Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, allows you to use CreateRenderTargetView for the following new purpose.You can create render-target views of video resources so that Direct3D shaders can process those render-target views. These video resources are either Texture2D or Texture2DArray. The value in the ViewDimension member of the <see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription"/> structure for a created render-target view must match the type of video resource, <see cref="F:SharpDX.Direct3D11.RenderTargetViewDimension.Texture2D"/>          for Texture2D and <see cref="F:SharpDX.Direct3D11.RenderTargetViewDimension.Texture2DArray"/> for Texture2DArray. Additionally, the format of the underlying video resource restricts the formats that the view can use. The video resource format values on the <see cref="T:SharpDX.DXGI.Format"/> reference page specify the format values that views are restricted to.The runtime read+write conflict prevention logic (which stops a resource from being bound as an SRV and RTV or UAV at the same time) treats views of different parts of the same video surface as conflicting for simplicity.  Therefore, the runtime does not allow an application to read from luma while the application simultaneously renders to chroma in the same surface even though the hardware might allow these simultaneous operations.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateRenderTargetView']/*"/>	
            <unmanaged>HRESULT ID3D11Device::CreateRenderTargetView([In] ID3D11Resource* pResource,[In, Optional] const D3D11_RENDER_TARGET_VIEW_DESC* pDesc,[Out, Fast] ID3D11RenderTargetView** ppRTView)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateDepthStencilView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.DepthStencilViewDescription},SharpDX.Direct3D11.DepthStencilView)">
            <summary>	
            Create a depth-stencil view for accessing resource data.	
            </summary>	
            <param name="resourceRef"><para>Pointer to the resource that will serve as the depth-stencil surface. This resource must have been created with the <see cref="F:SharpDX.Direct3D11.BindFlags.DepthStencil"/> flag.</para></param>	
            <param name="descRef"><para>Pointer to a depth-stencil-view description (see <see cref="T:SharpDX.Direct3D11.DepthStencilViewDescription"/>). Set this parameter to <c>null</c> to create a view that accesses mipmap level 0 of the entire resource (using the format the resource was created with).</para></param>	
            <param name="depthStencilViewOut"><para>Address of a reference to an <see cref="T:SharpDX.Direct3D11.DepthStencilView"/>. Set this parameter to <c>null</c> to validate the other input parameters (the method will return S_FALSE if the other input parameters pass validation).</para></param>	
            <returns>This method returns one of the following Direct3D 11 Return Codes.</returns>	
            <remarks>	
            A depth-stencil view can be bound to the output-merger stage by calling <see cref="M:SharpDX.Direct3D11.OutputMergerStage.SetRenderTargets(System.Int32,System.IntPtr,SharpDX.Direct3D11.DepthStencilView)"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateDepthStencilView']/*"/>	
            <unmanaged>HRESULT ID3D11Device::CreateDepthStencilView([In] ID3D11Resource* pResource,[In, Optional] const D3D11_DEPTH_STENCIL_VIEW_DESC* pDesc,[Out, Fast] ID3D11DepthStencilView** ppDepthStencilView)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateInputLayout(SharpDX.Direct3D11.InputElement[],System.Int32,System.IntPtr,SharpDX.PointerSize,SharpDX.Direct3D11.InputLayout)">
            <summary>	
            Create an input-layout object to describe the input-buffer data for the input-assembler stage.	
            </summary>	
            <param name="inputElementDescsRef"><para>An array of the input-assembler stage input data types; each type is described by an element description (see <see cref="T:SharpDX.Direct3D11.InputElement"/>).</para></param>	
            <param name="numElements"><para>The number of input-data types in the array of input-elements.</para></param>	
            <param name="shaderBytecodeWithInputSignatureRef"><para>A reference to the compiled shader.  The compiled shader code contains a input signature which is validated against the array of elements. See remarks.</para></param>	
            <param name="bytecodeLength"><para>Size of the compiled shader.</para></param>	
            <param name="inputLayoutOut"><para>A reference to the input-layout object created (see <see cref="T:SharpDX.Direct3D11.InputLayout"/>). To validate the other input parameters, set this reference to be <c>null</c> and verify that the method returns S_FALSE.</para></param>	
            <returns>If the method succeeds, the return code is <see cref="F:SharpDX.Result.Ok"/>. See Direct3D 11 Return Codes for failing error codes.</returns>	
            <remarks>	
            After creating an input layout object, it must be bound to the input-assembler stage before calling a draw API.Once an input-layout object is created from a shader signature, the input-layout object can be reused with any other shader that has an identical input signature (semantics included). This can simplify the creation of input-layout objects when you are working with many shaders with identical inputs.If a data type in the input-layout declaration does not match the data type in a shader-input signature, CreateInputLayout will generate a warning during compilation. The warning is simply to call attention to the fact that the data may be reinterpreted when read from a register. You may either disregard this warning (if reinterpretation is intentional) or make the data types match in both declarations to eliminate the warning.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateInputLayout']/*"/>	
            <unmanaged>HRESULT ID3D11Device::CreateInputLayout([In, Buffer] const D3D11_INPUT_ELEMENT_DESC* pInputElementDescs,[In] unsigned int NumElements,[In] const void* pShaderBytecodeWithInputSignature,[In] SIZE_T BytecodeLength,[Out, Fast] ID3D11InputLayout** ppInputLayout)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateVertexShader(System.IntPtr,SharpDX.PointerSize,SharpDX.Direct3D11.ClassLinkage,SharpDX.Direct3D11.VertexShader)">
            <summary>	
            Create a vertex-shader object from a compiled shader.	
            </summary>	
            <param name="shaderBytecodeRef"><para>A reference to the compiled shader. </para></param>	
            <param name="bytecodeLength"><para>Size of the compiled vertex shader.</para></param>	
            <param name="classLinkageRef"><para>A reference to a class linkage interface (see <see cref="T:SharpDX.Direct3D11.ClassLinkage"/>); the value can be <c>null</c>.</para></param>	
            <param name="vertexShaderOut"><para>Address of a reference to a <see cref="T:SharpDX.Direct3D11.VertexShader"/> interface. If this is <c>null</c>, all other parameters will be validated, and if all parameters pass validation this API will return S_FALSE instead of <see cref="F:SharpDX.Result.Ok"/>.</para></param>	
            <returns>This method returns one of the Direct3D 11 Return Codes.</returns>	
            <remarks>	
            The Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, provides the following new functionality for CreateVertexShader.The following shader model 5.0 instructions are available to just pixel shaders and compute shaders in the Direct3D 11.0 runtime. For the Direct3D 11.1 runtime, because unordered access views (UAV) are available at all shader stages, you can use these instructions in all shader stages.Therefore, if you use the following shader model 5.0 instructions in a vertex shader, you can successfully pass the compiled vertex shader to pShaderBytecode. That is, the call to CreateVertexShader succeeds.If you pass a compiled shader to pShaderBytecode that uses any of the following instructions on a device that doesn?t support UAVs at every shader stage (including existing drivers that are not implemented to support UAVs at every shader stage), CreateVertexShader fails.  CreateVertexShader also fails if the shader tries to use a UAV slot beyond the set of UAV slots that the hardware supports.dcl_uav_typed   dcl_uav_raw   dcl_uav_structured   ld_raw   ld_structured   ld_uav_typed   store_raw   store_structured   store_uav_typed   sync_uglobal  All atomics and immediate atomics (for example, atomic_and and imm_atomic_and)	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateVertexShader']/*"/>	
            <unmanaged>HRESULT ID3D11Device::CreateVertexShader([In] const void* pShaderBytecode,[In] SIZE_T BytecodeLength,[In, Optional] ID3D11ClassLinkage* pClassLinkage,[Out, Fast] ID3D11VertexShader** ppVertexShader)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateGeometryShader(System.IntPtr,SharpDX.PointerSize,SharpDX.Direct3D11.ClassLinkage,SharpDX.Direct3D11.GeometryShader)">
            <summary>	
            Create a geometry shader.	
            </summary>	
            <param name="shaderBytecodeRef"><para>A reference to the compiled shader.  </para></param>	
            <param name="bytecodeLength"><para>Size of the compiled geometry shader.</para></param>	
            <param name="classLinkageRef"><para>A reference to a class linkage interface (see <see cref="T:SharpDX.Direct3D11.ClassLinkage"/>); the value can be <c>null</c>.</para></param>	
            <param name="geometryShaderOut"><para>Address of a reference to a <see cref="T:SharpDX.Direct3D11.GeometryShader"/> interface. If this is <c>null</c>, all other parameters will be validated, and if all parameters pass validation this API will return S_FALSE instead of <see cref="F:SharpDX.Result.Ok"/>.</para></param>	
            <returns>This method returns one of the following Direct3D 11 Return Codes.</returns>	
            <remarks>	
            After it is created, the shader can be set to the device by calling <see cref="M:SharpDX.Direct3D11.GeometryShaderStage.SetShader(SharpDX.Direct3D11.GeometryShader,SharpDX.Direct3D11.ClassInstance[],System.Int32)"/>.The Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, provides the following new functionality for CreateGeometryShader.The following shader model 5.0 instructions are available to just pixel shaders and compute shaders in the Direct3D 11.0 runtime. For the Direct3D 11.1 runtime, because unordered access views (UAV) are available at all shader stages, you can use these instructions in all shader stages.Therefore, if you use the following shader model 5.0 instructions in a geometry shader, you can successfully pass the compiled geometry shader to pShaderBytecode. That is, the call to CreateGeometryShader succeeds.If you pass a compiled shader to pShaderBytecode that uses any of the following instructions on a device that doesn?t support UAVs at every shader stage (including existing drivers that are not implemented to support UAVs at every shader stage), CreateGeometryShader fails.  CreateGeometryShader also fails if the shader tries to use a UAV slot beyond the set of UAV slots that the hardware supports.dcl_uav_typed   dcl_uav_raw   dcl_uav_structured   ld_raw   ld_structured   ld_uav_typed   store_raw   store_structured   store_uav_typed   sync_uglobal  All atomics and immediate atomics (for example, atomic_and and imm_atomic_and)	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateGeometryShader']/*"/>	
            <unmanaged>HRESULT ID3D11Device::CreateGeometryShader([In] const void* pShaderBytecode,[In] SIZE_T BytecodeLength,[In, Optional] ID3D11ClassLinkage* pClassLinkage,[Out, Fast] ID3D11GeometryShader** ppGeometryShader)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateGeometryShaderWithStreamOutput(System.IntPtr,SharpDX.PointerSize,SharpDX.Direct3D11.StreamOutputElement[],System.Int32,System.Int32[],System.Int32,System.Int32,SharpDX.Direct3D11.ClassLinkage,SharpDX.Direct3D11.GeometryShader)">
            <summary>	
            Creates a geometry shader that can write to streaming output buffers.	
            </summary>	
            <param name="shaderBytecodeRef"><para>A reference to the compiled geometry shader for a standard geometry shader plus stream output. For info on how to get this reference, see Getting a Pointer to a Compiled Shader.</para> <para>To create the stream output without using a geometry shader, pass a reference to the output signature for the prior stage. To obtain this output signature, call the <see cref="M:SharpDX.D3DCompiler.D3D.GetOutputSignatureBlob(System.IntPtr,SharpDX.PointerSize,SharpDX.Direct3D.Blob@)"/> compiler function. You can also pass a reference to the compiled shader for the prior stage (for example, the vertex-shader stage or domain-shader stage). This compiled shader provides the output signature for the data.</para></param>	
            <param name="bytecodeLength"><para>Size of the compiled geometry shader.</para></param>	
            <param name="sODeclarationRef"><para>Pointer to a <see cref="T:SharpDX.Direct3D11.StreamOutputElement"/> array. Cannot be <c>null</c> if NumEntries &gt; 0.</para></param>	
            <param name="numEntries"><para>The number of entries in the stream output declaration ( ranges from 0 to D3D11_SO_STREAM_COUNT * D3D11_SO_OUTPUT_COMPONENT_COUNT ).</para></param>	
            <param name="bufferStridesRef"><para>An array of buffer strides; each stride is the size of an element for that buffer.</para></param>	
            <param name="numStrides"><para>The number of strides (or buffers) in pBufferStrides (ranges from 0 to D3D11_SO_BUFFER_SLOT_COUNT).</para></param>	
            <param name="rasterizedStream"><para>The index number of the stream to be sent to the rasterizer stage (ranges from 0 to D3D11_SO_STREAM_COUNT - 1).  Set to D3D11_SO_NO_RASTERIZED_STREAM if no stream is to be rasterized.</para></param>	
            <param name="classLinkageRef"><para>A reference to a class linkage interface (see <see cref="T:SharpDX.Direct3D11.ClassLinkage"/>); the value can be <c>null</c>.</para></param>	
            <param name="geometryShaderOut"><para>Address of a reference to an <see cref="T:SharpDX.Direct3D11.GeometryShader"/> interface, representing the geometry shader that was created.  Set this to <c>null</c> to validate the other parameters; if validation passes, the method will return S_FALSE instead of <see cref="F:SharpDX.Result.Ok"/>.</para></param>	
            <returns>This method returns one of the Direct3D 11 Return Codes.</returns>	
            <remarks>	
            For more info about using CreateGeometryShaderWithStreamOutput, see Create a Geometry-Shader Object with Stream Output.The Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, provides the following new functionality for CreateGeometryShaderWithStreamOutput.The following shader model 5.0 instructions are available to just pixel shaders and compute shaders in the Direct3D 11.0 runtime. For the Direct3D 11.1 runtime, because unordered access views (UAV) are available at all shader stages, you can use these instructions in all shader stages.Therefore, if you use the following shader model 5.0 instructions in a geometry shader, you can successfully pass the compiled geometry shader to pShaderBytecode. That is, the call to CreateGeometryShaderWithStreamOutput succeeds.If you pass a compiled shader to pShaderBytecode that uses any of the following instructions on a device that doesn?t support UAVs at every shader stage (including existing drivers that are not implemented to support UAVs at every shader stage), CreateGeometryShaderWithStreamOutput fails.  CreateGeometryShaderWithStreamOutput also fails if the shader tries to use a UAV slot beyond the set of UAV slots that the hardware supports.dcl_uav_typed   dcl_uav_raw   dcl_uav_structured   ld_raw   ld_structured   ld_uav_typed   store_raw   store_structured   store_uav_typed   sync_uglobal  All atomics and immediate atomics (for example, atomic_and and imm_atomic_and)	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateGeometryShaderWithStreamOutput']/*"/>	
            <unmanaged>HRESULT ID3D11Device::CreateGeometryShaderWithStreamOutput([In] const void* pShaderBytecode,[In] SIZE_T BytecodeLength,[In, Buffer, Optional] const D3D11_SO_DECLARATION_ENTRY* pSODeclaration,[In] unsigned int NumEntries,[In, Buffer, Optional] const unsigned int* pBufferStrides,[In] unsigned int NumStrides,[In] unsigned int RasterizedStream,[In, Optional] ID3D11ClassLinkage* pClassLinkage,[Out, Fast] ID3D11GeometryShader** ppGeometryShader)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreatePixelShader(System.IntPtr,SharpDX.PointerSize,SharpDX.Direct3D11.ClassLinkage,SharpDX.Direct3D11.PixelShader)">
            <summary>	
            Create a pixel shader.	
            </summary>	
            <param name="shaderBytecodeRef"><para>A reference to the compiled shader. </para></param>	
            <param name="bytecodeLength"><para>Size of the compiled pixel shader.</para></param>	
            <param name="classLinkageRef"><para>A reference to a class linkage interface (see <see cref="T:SharpDX.Direct3D11.ClassLinkage"/>); the value can be <c>null</c>.</para></param>	
            <param name="pixelShaderOut"><para>Address of a reference to a <see cref="T:SharpDX.Direct3D11.PixelShader"/> interface. If this is <c>null</c>, all other parameters will be validated, and if all parameters pass validation this API will return S_FALSE instead of <see cref="F:SharpDX.Result.Ok"/>.</para></param>	
            <returns>This method returns one of the following Direct3D 11 Return Codes.</returns>	
            <remarks>	
            After creating the pixel shader, you can set it to the device using <see cref="M:SharpDX.Direct3D11.PixelShaderStage.SetShader(SharpDX.Direct3D11.PixelShader,SharpDX.Direct3D11.ClassInstance[],System.Int32)"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreatePixelShader']/*"/>	
            <unmanaged>HRESULT ID3D11Device::CreatePixelShader([In] const void* pShaderBytecode,[In] SIZE_T BytecodeLength,[In, Optional] ID3D11ClassLinkage* pClassLinkage,[Out, Fast] ID3D11PixelShader** ppPixelShader)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateHullShader(System.IntPtr,SharpDX.PointerSize,SharpDX.Direct3D11.ClassLinkage,SharpDX.Direct3D11.HullShader)">
            <summary>	
            Create a hull shader.	
            </summary>	
            <param name="shaderBytecodeRef">No documentation.</param>	
            <param name="bytecodeLength">No documentation.</param>	
            <param name="classLinkageRef">No documentation.</param>	
            <param name="hullShaderOut">No documentation.</param>	
            <returns>This method returns one of the Direct3D 11 Return Codes.</returns>	
            <remarks>	
            The Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, provides the following new functionality for CreateHullShader.The following shader model 5.0 instructions are available to just pixel shaders and compute shaders in the Direct3D 11.0 runtime. For the Direct3D 11.1 runtime, because unordered access views (UAV) are available at all shader stages, you can use these instructions in all shader stages.Therefore, if you use the following shader model 5.0 instructions in a hull shader, you can successfully pass the compiled hull shader to pShaderBytecode. That is, the call to CreateHullShader succeeds.If you pass a compiled shader to pShaderBytecode that uses any of the following instructions on a device that doesn?t support UAVs at every shader stage (including existing drivers that are not implemented to support UAVs at every shader stage), CreateHullShader fails.  CreateHullShader also fails if the shader tries to use a UAV slot beyond the set of UAV slots that the hardware supports.dcl_uav_typed   dcl_uav_raw   dcl_uav_structured   ld_raw   ld_structured   ld_uav_typed   store_raw   store_structured   store_uav_typed   sync_uglobal  All atomics and immediate atomics (for example, atomic_and and imm_atomic_and)	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateHullShader']/*"/>	
            <unmanaged>HRESULT ID3D11Device::CreateHullShader([In] const void* pShaderBytecode,[In] SIZE_T BytecodeLength,[In, Optional] ID3D11ClassLinkage* pClassLinkage,[Out, Fast] ID3D11HullShader** ppHullShader)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateDomainShader(System.IntPtr,SharpDX.PointerSize,SharpDX.Direct3D11.ClassLinkage,SharpDX.Direct3D11.DomainShader)">
            <summary>	
            Create a domain shader .	
            </summary>	
            <param name="shaderBytecodeRef">No documentation.</param>	
            <param name="bytecodeLength">No documentation.</param>	
            <param name="classLinkageRef">No documentation.</param>	
            <param name="domainShaderOut">No documentation.</param>	
            <returns>This method returns one of the following Direct3D 11 Return Codes.</returns>	
            <remarks>	
            The Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, provides the following new functionality for CreateDomainShader.The following shader model 5.0 instructions are available to just pixel shaders and compute shaders in the Direct3D 11.0 runtime. For the Direct3D 11.1 runtime, because unordered access views (UAV) are available at all shader stages, you can use these instructions in all shader stages.Therefore, if you use the following shader model 5.0 instructions in a domain shader, you can successfully pass the compiled domain shader to pShaderBytecode. That is, the call to CreateDomainShader succeeds.If you pass a compiled shader to pShaderBytecode that uses any of the following instructions on a device that doesn?t support UAVs at every shader stage (including existing drivers that are not implemented to support UAVs at every shader stage), CreateDomainShader fails.  CreateDomainShader also fails if the shader tries to use a UAV slot beyond the set of UAV slots that the hardware supports.dcl_uav_typed   dcl_uav_raw   dcl_uav_structured   ld_raw   ld_structured   ld_uav_typed   store_raw   store_structured   store_uav_typed   sync_uglobal  All atomics and immediate atomics (for example, atomic_and and imm_atomic_and)	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateDomainShader']/*"/>	
            <unmanaged>HRESULT ID3D11Device::CreateDomainShader([In] const void* pShaderBytecode,[In] SIZE_T BytecodeLength,[In, Optional] ID3D11ClassLinkage* pClassLinkage,[Out, Fast] ID3D11DomainShader** ppDomainShader)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateComputeShader(System.IntPtr,SharpDX.PointerSize,SharpDX.Direct3D11.ClassLinkage,SharpDX.Direct3D11.ComputeShader)">
            <summary>	
            Create a compute shader.	
            </summary>	
            <param name="shaderBytecodeRef">No documentation.</param>	
            <param name="bytecodeLength">No documentation.</param>	
            <param name="classLinkageRef">No documentation.</param>	
            <param name="computeShaderOut">No documentation.</param>	
            <returns>This method returns E_OUTOFMEMORY if there is insufficient memory to create the compute shader.   See Direct3D 11 Return Codes for other possible return values.</returns>	
            <remarks>	
            For an example, see How To: Create a Compute Shader and HDRToneMappingCS11 Sample.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateComputeShader']/*"/>	
            <unmanaged>HRESULT ID3D11Device::CreateComputeShader([In] const void* pShaderBytecode,[In] SIZE_T BytecodeLength,[In, Optional] ID3D11ClassLinkage* pClassLinkage,[Out, Fast] ID3D11ComputeShader** ppComputeShader)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateClassLinkage(SharpDX.Direct3D11.ClassLinkage)">
            <summary>	
            Creates class linkage libraries to enable dynamic shader linkage.	
            </summary>	
            <param name="linkageOut"><para>A reference to a class-linkage interface reference (see <see cref="T:SharpDX.Direct3D11.ClassLinkage"/>).</para></param>	
            <returns>This method returns one of the following Direct3D 11 Return Codes.</returns>	
            <remarks>	
            The <see cref="T:SharpDX.Direct3D11.ClassLinkage"/> interface returned in ppLinkage is associated with a shader by passing it as a parameter to one of the <see cref="T:SharpDX.Direct3D11.Device"/> create shader methods such as <see cref="M:SharpDX.Direct3D11.Device.CreatePixelShader(System.IntPtr,SharpDX.PointerSize,SharpDX.Direct3D11.ClassLinkage,SharpDX.Direct3D11.PixelShader)"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateClassLinkage']/*"/>	
            <unmanaged>HRESULT ID3D11Device::CreateClassLinkage([Out, Fast] ID3D11ClassLinkage** ppLinkage)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateBlendState(SharpDX.Direct3D11.BlendStateDescription@,SharpDX.Direct3D11.BlendState)">
            <summary>	
            Create a blend-state object that encapsules blend state for the output-merger stage.	
            </summary>	
            <param name="blendStateDescRef"><para>Pointer to a blend-state description (see <see cref="T:SharpDX.Direct3D11.BlendStateDescription"/>).</para></param>	
            <param name="blendStateOut"><para>Address of a reference to the blend-state object created (see <see cref="T:SharpDX.Direct3D11.BlendState"/>).</para></param>	
            <returns>This method returns E_OUTOFMEMORY if there is insufficient memory to create the blend-state object.   See Direct3D 11 Return Codes for other possible return values.</returns>	
            <remarks>	
            An application can create up to 4096 unique blend-state objects. For each object created, the runtime checks to see if a previous object  has the same state. If such a previous object exists, the runtime will return a reference to previous instance instead of creating a duplicate object.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateBlendState']/*"/>	
            <unmanaged>HRESULT ID3D11Device::CreateBlendState([In] const D3D11_BLEND_DESC* pBlendStateDesc,[Out, Fast] ID3D11BlendState** ppBlendState)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateDepthStencilState(SharpDX.Direct3D11.DepthStencilStateDescription@,SharpDX.Direct3D11.DepthStencilState)">
            <summary>	
            Create a depth-stencil state object that encapsulates depth-stencil test information for the output-merger stage.	
            </summary>	
            <param name="depthStencilDescRef"><para>Pointer to a depth-stencil state description (see <see cref="T:SharpDX.Direct3D11.DepthStencilStateDescription"/>).</para></param>	
            <param name="depthStencilStateOut"><para>Address of a reference to the depth-stencil state object created (see <see cref="T:SharpDX.Direct3D11.DepthStencilState"/>).</para></param>	
            <returns>This method returns one of the following Direct3D 11 Return Codes.</returns>	
            <remarks>	
            4096 unique depth-stencil state objects can be created on a device at a time.If an application attempts to create a depth-stencil-state interface with the same state as an existing interface, the same interface will be returned and the total number of unique depth-stencil state objects will stay the same.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateDepthStencilState']/*"/>	
            <unmanaged>HRESULT ID3D11Device::CreateDepthStencilState([In] const D3D11_DEPTH_STENCIL_DESC* pDepthStencilDesc,[Out, Fast] ID3D11DepthStencilState** ppDepthStencilState)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateRasterizerState(SharpDX.Direct3D11.RasterizerStateDescription@,SharpDX.Direct3D11.RasterizerState)">
            <summary>	
            Create a rasterizer state object that tells the rasterizer stage how to behave.	
            </summary>	
            <param name="rasterizerDescRef"><para>Pointer to a rasterizer state description (see <see cref="T:SharpDX.Direct3D11.RasterizerStateDescription"/>).</para></param>	
            <param name="rasterizerStateOut"><para>Address of a reference to the rasterizer state object created (see <see cref="T:SharpDX.Direct3D11.RasterizerState"/>).</para></param>	
            <returns>This method returns E_OUTOFMEMORY if there is insufficient memory to create the compute shader.  See Direct3D 11 Return Codes for other possible return values.</returns>	
            <remarks>	
            4096 unique rasterizer state objects can be created on a device at a time.If an application attempts to create a rasterizer-state interface with the same state as an existing interface, the same interface will be returned and the total number of unique rasterizer state objects will stay the same.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateRasterizerState']/*"/>	
            <unmanaged>HRESULT ID3D11Device::CreateRasterizerState([In] const D3D11_RASTERIZER_DESC* pRasterizerDesc,[Out, Fast] ID3D11RasterizerState** ppRasterizerState)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateSamplerState(SharpDX.Direct3D11.SamplerStateDescription@,SharpDX.Direct3D11.SamplerState)">
            <summary>	
            Create a sampler-state object that encapsulates sampling information for a texture.	
            </summary>	
            <param name="samplerDescRef"><para>Pointer to a sampler state description (see <see cref="T:SharpDX.Direct3D11.SamplerStateDescription"/>).</para></param>	
            <param name="samplerStateOut"><para>Address of a reference to the sampler state object created (see <see cref="T:SharpDX.Direct3D11.SamplerState"/>).</para></param>	
            <returns>This method returns one of the following Direct3D 11 Return Codes.</returns>	
            <remarks>	
            4096 unique sampler state objects can be created on a device at a time.If an application attempts to create a sampler-state interface with the same state as an existing interface, the same interface will be returned and the total number of unique sampler state objects will stay the same.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateSamplerState']/*"/>	
            <unmanaged>HRESULT ID3D11Device::CreateSamplerState([In] const D3D11_SAMPLER_DESC* pSamplerDesc,[Out, Fast] ID3D11SamplerState** ppSamplerState)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateQuery(SharpDX.Direct3D11.QueryDescription,SharpDX.Direct3D11.Query)">
            <summary>	
            This interface encapsulates methods for querying information from the GPU.	
            </summary>	
            <param name="queryDescRef"><para>Pointer to a query description (see <see cref="T:SharpDX.Direct3D11.QueryDescription"/>).</para></param>	
            <param name="queryOut"><para>Address of a reference to the query object created (see <see cref="T:SharpDX.Direct3D11.Query"/>).</para></param>	
            <returns>This method returns E_OUTOFMEMORY if there is insufficient memory to create the query object.   See Direct3D 11 Return Codes for other possible return values.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateQuery']/*"/>	
            <unmanaged>HRESULT ID3D11Device::CreateQuery([In] const D3D11_QUERY_DESC* pQueryDesc,[Out, Fast] ID3D11Query** ppQuery)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreatePredicate(SharpDX.Direct3D11.QueryDescription,SharpDX.Direct3D11.Predicate)">
            <summary>	
            Creates a predicate.	
            </summary>	
            <param name="predicateDescRef"><para>Pointer to a query description where the type of query must be a <see cref="F:SharpDX.Direct3D11.QueryType.StreamOutputOverflowPredicate"/> or <see cref="F:SharpDX.Direct3D11.QueryType.OcclusionPredicate"/> (see <see cref="T:SharpDX.Direct3D11.QueryDescription"/>).</para></param>	
            <param name="predicateOut"><para>Address of a reference to a predicate (see <see cref="T:SharpDX.Direct3D11.Predicate"/>).</para></param>	
            <returns>This method returns one of the following Direct3D 11 Return Codes.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreatePredicate']/*"/>	
            <unmanaged>HRESULT ID3D11Device::CreatePredicate([In] const D3D11_QUERY_DESC* pPredicateDesc,[Out, Fast] ID3D11Predicate** ppPredicate)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateCounter(SharpDX.Direct3D11.CounterDescription,SharpDX.Direct3D11.Counter)">
            <summary>	
            Create a counter object for measuring GPU performance.	
            </summary>	
            <param name="counterDescRef"><para>Pointer to a counter description (see <see cref="T:SharpDX.Direct3D11.CounterDescription"/>).</para></param>	
            <param name="counterOut"><para>Address of a reference to a counter (see <see cref="T:SharpDX.Direct3D11.Counter"/>).</para></param>	
            <returns>If this function succeeds, it will return <see cref="F:SharpDX.Result.Ok"/>. If it fails, possible return values are: S_FALSE, E_OUTOFMEMORY, <see cref="F:SharpDX.DXGI.DXGIError.Unsupported"/>, <see cref="F:SharpDX.DXGI.DXGIError.Nonexclusive"/>, or E_INVALIDARG.DXGI_ERROR_UNSUPPORTED is returned whenever the application requests to create a well-known counter, but the current device does not support it.DXGI_ERROR_NONEXCLUSIVE indicates that another device object is currently using the counters, so they cannot be used by this device at the moment.E_INVALIDARG is returned whenever an out-of-range well-known or device-dependent counter is requested, or when the simulataneously active counters have been exhausted.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateCounter']/*"/>	
            <unmanaged>HRESULT ID3D11Device::CreateCounter([In] const D3D11_COUNTER_DESC* pCounterDesc,[Out, Fast] ID3D11Counter** ppCounter)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CreateDeferredContext(System.Int32,SharpDX.Direct3D11.DeviceContext)">
            <summary>	
            Creates a deferred context for play back of command lists.	
            </summary>	
            <param name="contextFlags"><para>Reserved for future use.  Pass 0.</para></param>	
            <param name="deferredContextOut"><para>Upon completion of the method, the passed reference to an <see cref="T:SharpDX.Direct3D11.DeviceContext"/> interface reference is initialized.</para></param>	
            <returns>Returns <see cref="F:SharpDX.Result.Ok"/> if successful; otherwise, returns one of the following:Returns <see cref="F:SharpDX.DXGI.DXGIError.DeviceRemoved"/> if the video card has been physically removed from the system, or a driver upgrade for the video card has occurred. If this error occurs, you should destroy and recreate the device. Returns <see cref="F:SharpDX.DXGI.DXGIError.InvalidCall"/> if the CreateDeferredContext method cannot be called from the current context. For example, if the device was created with the <see cref="F:SharpDX.Direct3D11.DeviceCreationFlags.SingleThreaded"/> value,  CreateDeferredContext returns <see cref="F:SharpDX.DXGI.DXGIError.InvalidCall"/>. Returns E_INVALIDARG if the ContextFlags parameter is invalid. Returns E_OUTOFMEMORY if the application has exhausted available memory.</returns>	
            <remarks>	
            A deferred context is a thread-safe context that you can use to record graphics commands on a thread other than the main rendering thread.  Using a deferred context, you can record graphics commands into a command list that is encapsulated by the <see cref="T:SharpDX.Direct3D11.CommandList"/> interface.  After all scene items are recorded, you can then submit them to the main render thread for final rendering.  In this manner, you can perform rendering tasks concurrently across multiple threads and potentially improve performance in multi-core CPU scenarios.You can create multiple deferred contexts.Note??If you use the <see cref="F:SharpDX.Direct3D11.DeviceCreationFlags.SingleThreaded"/> value to create the device that is represented by <see cref="T:SharpDX.Direct3D11.Device"/>, the CreateDeferredContext method will fail, and you will not be able to create a deferred context.For more information about deferred contexts, see Immediate and Deferred Rendering.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CreateDeferredContext']/*"/>	
            <unmanaged>HRESULT ID3D11Device::CreateDeferredContext([In] unsigned int ContextFlags,[Out, Fast] ID3D11DeviceContext** ppDeferredContext)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.OpenSharedResource(System.IntPtr,System.Guid,System.IntPtr@)">
            <summary>	
            Give a device access to a shared resource created on a different device.	
            </summary>	
            <param name="hResource"><para>A resource handle. See remarks.</para></param>	
            <param name="returnedInterface"><para>The globally unique identifier (<see cref="T:System.Guid"/>) for the resource interface. See remarks.</para></param>	
            <param name="resourceOut"><para>Address of a reference to the resource we are gaining access to.</para></param>	
            <returns>This method returns one of the following Direct3D 11 Return Codes.</returns>	
            <remarks>	
            The REFIID, or <see cref="T:System.Guid"/>, of the interface to the resource can be obtained by using the __uuidof() macro. For example, __uuidof(<see cref="T:SharpDX.Direct3D11.Buffer"/>) will get the <see cref="T:System.Guid"/> of the interface to a buffer resource.The unique handle of the resource is obtained differently depending on the type of device that originally created the resource.To share a resource between two Direct3D 11 devices the resource must have been created with the  <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.Shared"/> flag, if it was created using the <see cref="T:SharpDX.Direct3D11.Device"/> interface.  If it was created using a DXGI device interface, then the resource is always shared.The REFIID, or <see cref="T:System.Guid"/>, of the interface to the resource can be obtained by using the __uuidof() macro.  For example, __uuidof(<see cref="T:SharpDX.Direct3D11.Buffer"/>) will get the <see cref="T:System.Guid"/> of the interface to a buffer resource.When sharing a resource between two Direct3D 10/11 devices the unique handle of the resource can be obtained by querying the resource for the <see cref="T:SharpDX.DXGI.Resource"/> interface and then calling GetSharedHandle.<code>	
             <see cref="T:SharpDX.DXGI.Resource"/>* pOtherResource(<c>null</c>);	
            hr = pOtherDeviceResource-&gt;QueryInterface( __uuidof(<see cref="T:SharpDX.DXGI.Resource"/>), (void**)&amp;pOtherResource );	
            HANDLE sharedHandle;	
            pOtherResource-&gt;GetSharedHandle(&amp;sharedHandle); 	
            </code>The only resources that can be shared are 2D non-mipmapped textures.To share a resource between a Direct3D 9 device and a Direct3D 11 device the texture must have been created using  the pSharedHandle argument of CreateTexture.   The shared Direct3D 9 handle is then passed to OpenSharedResource in the hResource argument.The following code illustrates the method calls involved.<code>	
             sharedHandle = <c>null</c>; // must be set to <c>null</c> to create, can use a valid handle here to open in D3D9 	
            pDevice9-&gt;CreateTexture(..., pTex2D_9, &amp;sharedHandle); 	
            ... 	
            pDevice11-&gt;OpenSharedResource(sharedHandle, __uuidof(<see cref="T:SharpDX.Direct3D11.Resource"/>), (void**)(&amp;tempResource11)); 	
            tempResource11-&gt;QueryInterface(__uuidof(<see cref="T:SharpDX.Direct3D11.Texture2D"/>), (void**)(&amp;pTex2D_11)); 	
            tempResource11-&gt;Release(); 	
            // now use pTex2D_11 with pDevice11    	
            </code>Textures being shared from D3D9 to D3D11 have the following restrictions.Textures must be 2D Only 1 mip level is allowed Texture must have default usage Texture must be write only MSAA textures are not allowed Bind flags must have SHADER_RESOURCE and RENDER_TARGET set Only R10G10B10A2_UNORM, R16G16B16A16_FLOAT and R8G8B8A8_UNORM formats are allowedIf a shared texture is updated on one device <see cref="M:SharpDX.Direct3D11.DeviceContext.Flush"/> must be called on that device.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::OpenSharedResource']/*"/>	
            <unmanaged>HRESULT ID3D11Device::OpenSharedResource([In] void* hResource,[In] const GUID&amp; ReturnedInterface,[Out, Optional] void** ppResource)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CheckFormatSupport(SharpDX.DXGI.Format)">
            <summary>	
            Get the support of a given format on the installed video device.	
            </summary>	
            <param name="format"><para>A <see cref="T:SharpDX.DXGI.Format"/> enumeration that describes a format for which to check for support.</para></param>	
            <returns><para>A bitfield of <see cref="T:SharpDX.Direct3D11.FormatSupport"/> enumeration values describing how the specified format is supported on the installed device.  The values are ORed together.</para></returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CheckFormatSupport']/*"/>	
            <unmanaged>HRESULT ID3D11Device::CheckFormatSupport([In] DXGI_FORMAT Format,[Out] D3D11_FORMAT_SUPPORT* pFormatSupport)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CheckMultisampleQualityLevels(SharpDX.DXGI.Format,System.Int32)">
            <summary>	
            Get the number of quality levels available during multisampling.	
            </summary>	
            <param name="format"><para>The texture format. See <see cref="T:SharpDX.DXGI.Format"/>.</para></param>	
            <param name="sampleCount"><para>The number of samples during multisampling.</para></param>	
            <returns><para>Number of quality levels supported by the adapter. See remarks.</para></returns>	
            <remarks>	
            When multisampling a texture, the number of quality levels available for an adapter is dependent on the texture format used and the number of  samples requested. The maximum number of quality levels is defined by <see cref="F:SharpDX.Direct3D11.Device.MultisampleCountMaximum"/> in D3D11.h. If this method returns 0, the format  and sample count combination is not supported for the installed adapter.Furthermore, the definition of a quality level is up to each hardware vendor to define, however no facility is provided by Direct3D to help discover  this information.Note that FEATURE_LEVEL_10_1 devices are required to support 4x MSAA for all render targets except R32G32B32A32 and R32G32B32. FEATURE_LEVEL_11_0 devices are required to support 4x MSAA for all render target formats, and 8x MSAA for all render target formats  except R32G32B32A32 formats.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CheckMultisampleQualityLevels']/*"/>	
            <unmanaged>HRESULT ID3D11Device::CheckMultisampleQualityLevels([In] DXGI_FORMAT Format,[In] unsigned int SampleCount,[Out] unsigned int* pNumQualityLevels)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.GetCounterCapabilities">
            <summary>	
            Get a counter's information.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CheckCounterInfo']/*"/>	
            <unmanaged>void ID3D11Device::CheckCounterInfo([Out] D3D11_COUNTER_INFO* pCounterInfo)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CheckCounter(SharpDX.Direct3D11.CounterDescription,SharpDX.Direct3D11.CounterType@,System.Int32@,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>	
            Get the type, name, units of measure, and a description of an existing counter.	
            </summary>	
            <param name="descRef"><para>Pointer to a counter description (see <see cref="T:SharpDX.Direct3D11.CounterDescription"/>). Specifies which counter information is to be retrieved about.</para></param>	
            <param name="typeRef"><para>Pointer to the data type of a counter (see <see cref="T:SharpDX.Direct3D11.CounterType"/>). Specifies the data type of the counter being retrieved.</para></param>	
            <param name="activeCountersRef"><para>Pointer to the number of hardware counters that are needed for this counter type to be created. All instances of the same counter type use the same hardware counters.</para></param>	
            <param name="szName"><para>String to be filled with a brief name for the counter. May be <c>null</c> if the application is not interested in the name of the counter.</para></param>	
            <param name="nameLengthRef"><para>Length of the string returned to szName. Can be <c>null</c>.</para></param>	
            <param name="szUnits"><para>Name of the units a counter measures, provided the memory the reference points to has enough room to hold the string. Can be <c>null</c>. The returned string will always be in English.</para></param>	
            <param name="unitsLengthRef"><para>Length of the string returned to szUnits. Can be <c>null</c>.</para></param>	
            <param name="szDescription"><para>A description of the counter, provided the memory the reference points to has enough room to hold the string. Can be <c>null</c>. The returned string will always be in English.</para></param>	
            <param name="descriptionLengthRef"><para>Length of the string returned to szDescription. Can be <c>null</c>.</para></param>	
            <returns>This method returns one of the following Direct3D 11 Return Codes.</returns>	
            <remarks>	
            Length parameters can be <c>null</c>, which indicates the application is not interested in the length nor the corresponding string value. When a length parameter is non-<c>null</c> and the corresponding string is <c>null</c>, the input value of the length parameter is ignored, and the length of the corresponding string (including terminating <c>null</c>) will be returned through the length parameter. When length and the corresponding parameter are both non-<c>null</c>, the input value of length is checked to ensure there is enough room, and then the length of the string (including terminating <c>null</c> character) is passed out through the length parameter.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CheckCounter']/*"/>	
            <unmanaged>HRESULT ID3D11Device::CheckCounter([In] const D3D11_COUNTER_DESC* pDesc,[Out] D3D11_COUNTER_TYPE* pType,[Out] unsigned int* pActiveCounters,[Out, Buffer, Optional] char* szName,[InOut, Optional] unsigned int* pNameLength,[Out, Buffer, Optional] char* szUnits,[InOut, Optional] unsigned int* pUnitsLength,[Out, Buffer, Optional] char* szDescription,[InOut, Optional] unsigned int* pDescriptionLength)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.CheckFeatureSupport(SharpDX.Direct3D11.Feature,System.IntPtr,System.Int32)">
            <summary>	
            Gets information about the features that are supported by the current graphics driver.	
            </summary>	
            <param name="feature"><para>A member of the <see cref="T:SharpDX.Direct3D11.Feature"/> enumerated type that describes which feature to query for support.</para></param>	
            <param name="featureSupportDataRef"><para>Upon completion of the method, the passed structure is filled with data that describes the feature support.</para></param>	
            <param name="featureSupportDataSize"><para>The size of the structure passed to the pFeatureSupportData parameter.</para></param>	
            <returns>Returns <see cref="F:SharpDX.Result.Ok"/> if successful; otherwise, returns E_INVALIDARG if an unsupported data type is passed to the pFeatureSupportData parameter  or a size mismatch is detected for the FeatureSupportDataSize parameter.</returns>	
            <remarks>	
            To query for multi-threading support, pass the <see cref="F:SharpDX.Direct3D11.Feature.Threading"/> value to the Feature parameter, pass  the <see cref="T:SharpDX.Direct3D11.FeatureDataThreading"/> structure to the  pFeatureSupportData parameter, and pass the size of  the <see cref="T:SharpDX.Direct3D11.FeatureDataThreading"/> structure to the FeatureSupportDataSize parameter.Calling CheckFeatureSupport with Feature set to <see cref="F:SharpDX.Direct3D11.Feature.FormatSupport"/> causes the method to return the same information that would be returned  by <see cref="M:SharpDX.Direct3D11.Device.CheckFormatSupport(SharpDX.DXGI.Format)"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::CheckFeatureSupport']/*"/>	
            <unmanaged>HRESULT ID3D11Device::CheckFeatureSupport([In] D3D11_FEATURE Feature,[Out, Buffer] void* pFeatureSupportData,[In] unsigned int FeatureSupportDataSize)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.GetPrivateData(System.Guid,System.Int32@,System.IntPtr)">
            <summary>	
            Get application-defined data from a device.	
            </summary>	
            <param name="guid"><para>Guid associated with the data.</para></param>	
            <param name="dataSizeRef"><para>A reference to a variable that on input contains the size, in bytes, of the buffer that pData points to, and on output contains the size, in bytes, of the amount of data that GetPrivateData retrieved.</para></param>	
            <param name="dataRef"><para>A reference to a buffer that GetPrivateData fills with data from the device if pDataSize points to a value that specifies a buffer large enough to hold the data.</para></param>	
            <returns>This method returns one of the codes described in the topic Direct3D 11 Return Codes.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::GetPrivateData']/*"/>	
            <unmanaged>HRESULT ID3D11Device::GetPrivateData([In] const GUID&amp; guid,[InOut] unsigned int* pDataSize,[Out, Buffer, Optional] void* pData)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.SetPrivateData(System.Guid,System.Int32,System.IntPtr)">
            <summary>	
            Set data to a device and associate that data with a guid.	
            </summary>	
            <param name="guid"><para>Guid associated with the data.</para></param>	
            <param name="dataSize"><para>Size of the data.</para></param>	
            <param name="dataRef"><para>Pointer to the data to be stored with this device. If pData is <c>null</c>, DataSize must also be 0, and any data previously associated with the guid will be destroyed.</para></param>	
            <returns>This method returns one of the following Direct3D 11 Return Codes.</returns>	
            <remarks>	
            The data stored in the device with this method can be retrieved with <see cref="M:SharpDX.Direct3D11.Device.GetPrivateData(System.Guid,System.Int32@,System.IntPtr)"/>.The data and guid set with this method will typically be application-defined.If an application uses this method to change the device type using GUID_DeviceType, results are undefined. However, GUID_DeviceType can be used to retrieve the device type using <see cref="M:SharpDX.Direct3D11.Device.GetPrivateData(System.Guid,System.Int32@,System.IntPtr)"/>.The debug layer reports memory leaks by outputting a list of object interface references along with their friendly names. The default friendly name is "&lt;unnamed&gt;". You can set the friendly name so that you can determine if the corresponding object interface reference caused the leak. To set the friendly name, use the SetPrivateData method and the <see cref="F:SharpDX.Direct3D.CommonGuid.DebugObjectName"/> <see cref="T:System.Guid"/> that is in D3Dcommon.h. For example, to give pContext a friendly name of My name, use the following code:<code>	
             static const char c_szName[] = "My name";	
            hr = pContext-&gt;SetPrivateData( <see cref="F:SharpDX.Direct3D.CommonGuid.DebugObjectName"/>, sizeof( c_szName ) - 1, c_szName );	
            	
            </code>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::SetPrivateData']/*"/>	
            <unmanaged>HRESULT ID3D11Device::SetPrivateData([In] const GUID&amp; guid,[In] unsigned int DataSize,[In, Buffer, Optional] const void* pData)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.SetPrivateDataInterface(System.Guid,SharpDX.ComObject)">
            <summary>	
            Associate an <see cref="T:SharpDX.ComObject"/>-derived interface with this device child and associate that interface with an application-defined guid.	
            </summary>	
            <param name="guid"><para>Guid associated with the interface.</para></param>	
            <param name="dataRef"><para>Pointer to an <see cref="T:SharpDX.ComObject"/>-derived interface to be associated with the device child.</para></param>	
            <returns>This method returns one of the following Direct3D 11 Return Codes.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::SetPrivateDataInterface']/*"/>	
            <unmanaged>HRESULT ID3D11Device::SetPrivateDataInterface([In] const GUID&amp; guid,[In, Optional] const IUnknown* pData)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.GetFeatureLevel">
            <summary>	
            Gets the feature level of the hardware device.	
            </summary>	
            <returns>A member of the <see cref="T:SharpDX.Direct3D.FeatureLevel"/> enumerated type that describes the feature level of the hardware device.</returns>	
            <remarks>	
            Feature levels determine the capabilities of your device.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::GetFeatureLevel']/*"/>	
            <unmanaged>D3D_FEATURE_LEVEL ID3D11Device::GetFeatureLevel()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.GetCreationFlags">
            <summary>	
            Get the flags used during the call to create the device with <see cref="M:SharpDX.Direct3D11.D3D11.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.Direct3D11.Device,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/>.	
            </summary>	
            <returns>A bitfield containing the flags used to create the device. See <see cref="T:SharpDX.Direct3D11.DeviceCreationFlags"/>.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::GetCreationFlags']/*"/>	
            <unmanaged>unsigned int ID3D11Device::GetCreationFlags()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.GetDeviceRemovedReason">
            <summary>	
            Get the reason why the device was removed.	
            </summary>	
            <returns>Possible return values include:<see cref="F:SharpDX.DXGI.DXGIError.DeviceHung"/> <see cref="F:SharpDX.DXGI.DXGIError.DeviceRemoved"/> <see cref="F:SharpDX.DXGI.DXGIError.DeviceReset"/> <see cref="F:SharpDX.DXGI.DXGIError.DriverInternalError"/> <see cref="F:SharpDX.DXGI.DXGIError.InvalidCall"/> <see cref="F:SharpDX.Result.Ok"/>For more detail on these return codes, see DXGI_ERROR.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::GetDeviceRemovedReason']/*"/>	
            <unmanaged>HRESULT ID3D11Device::GetDeviceRemovedReason()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.GetImmediateContext(SharpDX.Direct3D11.DeviceContext@)">
            <summary>	
            Gets an immediate context which can record command lists.	
            </summary>	
            <param name="immediateContextOut"><para>Upon completion of the method, the passed reference to an <see cref="T:SharpDX.Direct3D11.DeviceContext"/> interface reference is initialized.</para></param>	
            <remarks>	
            The GetImmediateContext method returns an <see cref="T:SharpDX.Direct3D11.DeviceContext"/> object that represents an immediate context which is used to perform rendering that you want immediately submitted to a device. For most applications, an immediate context is the primary object that is used to draw your scene.The GetImmediateContext method increments the reference count of the immediate context by one. Therefore, you must call Release on the returned interface reference when you are done with it to avoid a memory leak.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::GetImmediateContext']/*"/>	
            <unmanaged>void ID3D11Device::GetImmediateContext([Out] ID3D11DeviceContext** ppImmediateContext)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.SetExceptionMode(System.Int32)">
            <summary>	
            Get the exception-mode flags.	
            </summary>	
            <param name="raiseFlags"><para>A value that contains one or more exception flags; each flag specifies a condition which will cause an exception to be raised. The flags are listed in D3D11_RAISE_FLAG. A default value of 0 means there are no flags.</para></param>	
            <returns>This method returns one of the following Direct3D 11 Return Codes.</returns>	
            <remarks>	
            Set an exception-mode flag to elevate an error condition to a non-continuable exception.Whenever an error occurs, a Direct3D device enters the DEVICEREMOVED state and if the appropriate exception flag has been set, an exception is raised. A raised exception is designed to terminate an application. Before termination, the last chance an application has to persist data is by using an UnhandledExceptionFilter (see Structured Exception Handling). In general, UnhandledExceptionFilters are leveraged to try to persist data when an application is crashing (to disk, for example). Any code that executes during an UnhandledExceptionFilter is not guaranteed to reliably execute (due to possible process corruption). Any data that the UnhandledExceptionFilter manages to persist, before the UnhandledExceptionFilter crashes again, should be treated as suspect, and therefore inspected by a new, non-corrupted process to see if it is usable.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::SetExceptionMode']/*"/>	
            <unmanaged>HRESULT ID3D11Device::SetExceptionMode([In] unsigned int RaiseFlags)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device.GetExceptionMode">
            <summary>	
            Get the exception-mode flags.	
            </summary>	
            <returns>A value that contains one or more exception flags; each flag specifies a condition which will cause an exception to be raised. The flags are listed in D3D11_RAISE_FLAG. A default value of 0 means there are no flags.</returns>	
            <remarks>	
            An exception-mode flag is used to elevate an error condition to a non-continuable exception.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::GetExceptionMode']/*"/>	
            <unmanaged>unsigned int ID3D11Device::GetExceptionMode()</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.Device.ImmediateContext">
            <summary>
              Get the imediate <see cref="T:SharpDX.Direct3D11.DeviceContext"/> attached to this Device.
            </summary>
        </member>
        <member name="P:SharpDX.Direct3D11.Device.DebugName">
            <summary>
            Gets or sets the debug-name for this object.
            </summary>
            <value>
            The debug name.
            </value>
        </member>
        <member name="P:SharpDX.Direct3D11.Device.FeatureLevel">
            <summary>	
            Gets the feature level of the hardware device.	
            </summary>	
            <remarks>	
            Feature levels determine the capabilities of your device.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::GetFeatureLevel']/*"/>	
            <unmanaged>GetFeatureLevel</unmanaged>	
            <unmanaged>D3D_FEATURE_LEVEL ID3D11Device::GetFeatureLevel()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.Device.CreationFlags">
            <summary>	
            Get the flags used during the call to create the device with <see cref="M:SharpDX.Direct3D11.D3D11.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.Direct3D11.Device,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/>.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::GetCreationFlags']/*"/>	
            <unmanaged>GetCreationFlags</unmanaged>	
            <unmanaged>unsigned int ID3D11Device::GetCreationFlags()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.Device.DeviceRemovedReason">
            <summary>	
            Get the reason why the device was removed.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::GetDeviceRemovedReason']/*"/>	
            <unmanaged>GetDeviceRemovedReason</unmanaged>	
            <unmanaged>HRESULT ID3D11Device::GetDeviceRemovedReason()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.Device.ExceptionMode">
            <summary>	
            Get the exception-mode flags.	
            </summary>	
            <remarks>	
            An exception-mode flag is used to elevate an error condition to a non-continuable exception.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device::GetExceptionMode']/*"/>	
            <unmanaged>GetExceptionMode</unmanaged>	
            <unmanaged>unsigned int ID3D11Device::GetExceptionMode()</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.StreamOutputStage">
            <summary>	
            The <see cref="T:SharpDX.Direct3D11.DeviceContext"/> interface represents a device context which generates rendering commands.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext']/*"/>	
            <unmanaged>ID3D11DeviceContext</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.StreamOutputStage.SetTargets(SharpDX.Direct3D11.StreamOutputBufferBinding[])">
            <summary>	
            Set the target output {{buffers}} for the {{StreamOutput}} stage, which enables/disables the pipeline to stream-out data.	
            </summary>	
            <remarks>	
            Call ID3D10Device::SOSetTargets (before any draw calls) to stream data out; call SOSetTargets with NULL to stop streaming data out. For an example, see Exercise 01 from the GDC 2007 workshop, which sets the stream output rendertargets before calling draw methods in the RenderInstanceToStream function. An offset of -1 will cause the stream output buffer to be appended, continuing after the last location written to the buffer in a previous stream output pass. Calling this method using a buffer that is currently bound for writing will effectively bind NULL instead because a buffer cannot be bound as both an input and an output at the same time. The {{Debug Layer}} will generate a warning whenever a resource is prevented from being bound simultaneously as an input and an output, but this will not prevent invalid data from being used by the runtime. The method will not hold a reference to the interfaces passed in. For that reason, applications should be careful not to release an interface currently in use by the device. 	
            </remarks>	
            <param name="bufferBindings">an array of output buffers (see <see cref="T:SharpDX.Direct3D11.StreamOutputBufferBinding"/>) to bind to the device. The buffers must have been created with the <see cref="F:SharpDX.Direct3D11.BindFlags.StreamOutput"/> flag. </param>
            <unmanaged>void SOSetTargets([In] int NumBuffers,[In, Buffer, Optional] const ID3D10Buffer** ppSOTargets,[In, Buffer, Optional] const int* pOffsets)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.StreamOutputStage.GetTargets(System.Int32)">
            <summary>	
            Get the target output {{buffers}} for the {{StreamOutput}} stage of the pipeline.	
            </summary>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call {{IUnknown::Release}} on the returned interfaces when they are no longer needed to avoid memory leaks. 	
            </remarks>	
            <param name="numBuffers">Number of buffers to get. A maximum of four output buffers can be retrieved. </param>
            <returns>an array of output buffers (see <see cref="T:SharpDX.Direct3D11.Buffer"/>) to bind to the device.</returns>
            <unmanaged>void SOGetTargets([In] int NumBuffers,[Out, Buffer, Optional] ID3D10Buffer** ppSOTargets,[Out, Buffer, Optional] int* pOffsets)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.StreamOutputStage.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.StreamOutputStage"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.StreamOutputStage.SetTargets(System.Int32,SharpDX.Direct3D11.Buffer[],System.Int32[])">
            <summary>	
            Set the target output buffers for the stream-output stage of the pipeline.	
            </summary>	
            <param name="numBuffers"><para>The number of buffer to bind to the device. A maximum of four output buffers can be set. If less than four are defined by the call, the remaining buffer slots are set to <c>null</c>. See Remarks.</para></param>	
            <param name="sOTargetsOut"><para>The array of output buffers (see <see cref="T:SharpDX.Direct3D11.Buffer"/>) to bind to the device. The buffers must have been created with the <see cref="F:SharpDX.Direct3D11.BindFlags.StreamOutput"/> flag.</para></param>	
            <param name="offsetsRef"><para>Array of offsets to the output buffers from ppSOTargets, one offset for each buffer. The offset values must be in bytes.</para></param>	
            <remarks>	
            An offset of -1 will cause the stream output buffer to be appended, continuing after the last location written to the buffer in a previous stream output pass.Calling this method using a buffer that is currently bound for writing will effectively bind <c>null</c> instead because a buffer cannot be bound as both an input and an output at the same time.The debug layer will generate a warning whenever a resource is prevented from being bound simultaneously as an input and an output, but this will not prevent invalid data from being used by the runtime.The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::SOSetTargets']/*"/>	
            <unmanaged>void ID3D11DeviceContext::SOSetTargets([In] unsigned int NumBuffers,[In, Buffer, Optional] const ID3D11Buffer** ppSOTargets,[In, Buffer, Optional] const unsigned int* pOffsets)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.StreamOutputStage.SetTargets(System.Int32,SharpDX.ComArray{SharpDX.Direct3D11.Buffer},System.Int32[])">
            <summary>	
            Set the target output buffers for the stream-output stage of the pipeline.	
            </summary>	
            <param name="numBuffers"><para>The number of buffer to bind to the device. A maximum of four output buffers can be set. If less than four are defined by the call, the remaining buffer slots are set to <c>null</c>. See Remarks.</para></param>	
            <param name="sOTargetsOut"><para>The array of output buffers (see <see cref="T:SharpDX.Direct3D11.Buffer"/>) to bind to the device. The buffers must have been created with the <see cref="F:SharpDX.Direct3D11.BindFlags.StreamOutput"/> flag.</para></param>	
            <param name="offsetsRef"><para>Array of offsets to the output buffers from ppSOTargets, one offset for each buffer. The offset values must be in bytes.</para></param>	
            <remarks>	
            An offset of -1 will cause the stream output buffer to be appended, continuing after the last location written to the buffer in a previous stream output pass.Calling this method using a buffer that is currently bound for writing will effectively bind <c>null</c> instead because a buffer cannot be bound as both an input and an output at the same time.The debug layer will generate a warning whenever a resource is prevented from being bound simultaneously as an input and an output, but this will not prevent invalid data from being used by the runtime.The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::SOSetTargets']/*"/>	
            <unmanaged>void ID3D11DeviceContext::SOSetTargets([In] unsigned int NumBuffers,[In, Buffer, Optional] const ID3D11Buffer** ppSOTargets,[In, Buffer, Optional] const unsigned int* pOffsets)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.StreamOutputStage.GetTargets(System.Int32,SharpDX.Direct3D11.Buffer[])">
            <summary>	
            Get the target output buffers for the stream-output stage of the pipeline.	
            </summary>	
            <param name="numBuffers"><para>Number of buffers to get.</para></param>	
            <param name="sOTargetsOut"><para>An array of output buffers (see <see cref="T:SharpDX.Direct3D11.Buffer"/>) to be retrieved from the device.</para></param>	
            <remarks>	
            A maximum of four output buffers can be retrieved.The offsets to the output buffers pointed to in the returned ppSOTargets array may be assumed to be -1 (append), as defined for use in <see cref="M:SharpDX.Direct3D11.StreamOutputStage.SetTargets(SharpDX.Direct3D11.StreamOutputBufferBinding[])"/>.Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::SOGetTargets']/*"/>	
            <unmanaged>void ID3D11DeviceContext::SOGetTargets([In] unsigned int NumBuffers,[Out, Buffer, Optional] ID3D11Buffer** ppSOTargets)</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.CommonShaderStage">
            <summary>
            Common Shader class. Provides a common set of methods for a Shader Stage.
            TODO: check if usage of abstract is not introducing an unacceptable overhead...
            </summary>
            <typeparam name="T">Type of the shader</typeparam>
            <summary>	
            Functions	
            </summary>	
            <!-- Failed to insert some or all of included XML --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.Direct3D11.CommonShaderStage']/*"/>	
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.ImmediateConstantBufferRegisterComponents">
            <summary>Constant ImmediateConstantBufferRegisterComponents.</summary>
            <unmanaged>D3D11_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_COMPONENTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.SamplerRegisterComponents">
            <summary>Constant SamplerRegisterComponents.</summary>
            <unmanaged>D3D11_COMMONSHADER_SAMPLER_REGISTER_COMPONENTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.SamplerRegisterCount">
            <summary>Constant SamplerRegisterCount.</summary>
            <unmanaged>D3D11_COMMONSHADER_SAMPLER_REGISTER_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.TempRegisterReadPorts">
            <summary>Constant TempRegisterReadPorts.</summary>
            <unmanaged>D3D11_COMMONSHADER_TEMP_REGISTER_READ_PORTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferRegisterReadPorts">
            <summary>Constant ConstantBufferRegisterReadPorts.</summary>
            <unmanaged>D3D11_COMMONSHADER_CONSTANT_BUFFER_REGISTER_READ_PORTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.TempRegisterCount">
            <summary>Constant TempRegisterCount.</summary>
            <unmanaged>D3D11_COMMONSHADER_TEMP_REGISTER_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.TempRegisterComponents">
            <summary>Constant TempRegisterComponents.</summary>
            <unmanaged>D3D11_COMMONSHADER_TEMP_REGISTER_COMPONENTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.FlowcontrolNestingLimit">
            <summary>Constant FlowcontrolNestingLimit.</summary>
            <unmanaged>D3D11_COMMONSHADER_FLOWCONTROL_NESTING_LIMIT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.TempRegisterComponentBitCount">
            <summary>Constant TempRegisterComponentBitCount.</summary>
            <unmanaged>D3D11_COMMONSHADER_TEMP_REGISTER_COMPONENT_BIT_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceRegisterComponents">
            <summary>Constant InputResourceRegisterComponents.</summary>
            <unmanaged>D3D11_COMMONSHADER_INPUT_RESOURCE_REGISTER_COMPONENTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount">
            <summary>Constant InputResourceSlotCount.</summary>
            <unmanaged>D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.SamplerRegisterReadsPerInst">
            <summary>Constant SamplerRegisterReadsPerInst.</summary>
            <unmanaged>D3D11_COMMONSHADER_SAMPLER_REGISTER_READS_PER_INST</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceRegisterReadPorts">
            <summary>Constant InputResourceRegisterReadPorts.</summary>
            <unmanaged>D3D11_COMMONSHADER_INPUT_RESOURCE_REGISTER_READ_PORTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.TexcoordRangeReductionMaximum">
            <summary>Constant TexcoordRangeReductionMaximum.</summary>
            <unmanaged>D3D11_COMMONSHADER_TEXCOORD_RANGE_REDUCTION_MAX</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.SamplerRegisterReadPorts">
            <summary>Constant SamplerRegisterReadPorts.</summary>
            <unmanaged>D3D11_COMMONSHADER_SAMPLER_REGISTER_READ_PORTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.TexelOffsetMaximumNegative">
            <summary>Constant TexelOffsetMaximumNegative.</summary>
            <unmanaged>D3D11_COMMONSHADER_TEXEL_OFFSET_MAX_NEGATIVE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceRegisterCount">
            <summary>Constant InputResourceRegisterCount.</summary>
            <unmanaged>D3D11_COMMONSHADER_INPUT_RESOURCE_REGISTER_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.ImmediateConstantBufferRegisterCount">
            <summary>Constant ImmediateConstantBufferRegisterCount.</summary>
            <unmanaged>D3D11_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferRegisterCount">
            <summary>Constant ConstantBufferRegisterCount.</summary>
            <unmanaged>D3D11_COMMONSHADER_CONSTANT_BUFFER_REGISTER_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferRegisterReadsPerInst">
            <summary>Constant ConstantBufferRegisterReadsPerInst.</summary>
            <unmanaged>D3D11_COMMONSHADER_CONSTANT_BUFFER_REGISTER_READS_PER_INST</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.TexelOffsetMaximumPositive">
            <summary>Constant TexelOffsetMaximumPositive.</summary>
            <unmanaged>D3D11_COMMONSHADER_TEXEL_OFFSET_MAX_POSITIVE</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.ImmediateConstantBufferRegisterReadsPerInst">
            <summary>Constant ImmediateConstantBufferRegisterReadsPerInst.</summary>
            <unmanaged>D3D11_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_READS_PER_INST</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.TexcoordRangeReductionMinimum">
            <summary>Constant TexcoordRangeReductionMinimum.</summary>
            <unmanaged>D3D11_COMMONSHADER_TEXCOORD_RANGE_REDUCTION_MIN</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferComponentBitCount">
            <summary>Constant ConstantBufferComponentBitCount.</summary>
            <unmanaged>D3D11_COMMONSHADER_CONSTANT_BUFFER_COMPONENT_BIT_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.TempRegisterReadsPerInst">
            <summary>Constant TempRegisterReadsPerInst.</summary>
            <unmanaged>D3D11_COMMONSHADER_TEMP_REGISTER_READS_PER_INST</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.ImmediateValueComponentBitCount">
            <summary>Constant ImmediateValueComponentBitCount.</summary>
            <unmanaged>D3D11_COMMONSHADER_IMMEDIATE_VALUE_COMPONENT_BIT_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferHwSlotCount">
            <summary>Constant ConstantBufferHwSlotCount.</summary>
            <unmanaged>D3D11_COMMONSHADER_CONSTANT_BUFFER_HW_SLOT_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.SubroutineNestingLimit">
            <summary>Constant SubroutineNestingLimit.</summary>
            <unmanaged>D3D11_COMMONSHADER_SUBROUTINE_NESTING_LIMIT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount">
            <summary>Constant SamplerSlotCount.</summary>
            <unmanaged>D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferRegisterComponents">
            <summary>Constant ConstantBufferRegisterComponents.</summary>
            <unmanaged>D3D11_COMMONSHADER_CONSTANT_BUFFER_REGISTER_COMPONENTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.ImmediateConstantBufferRegisterReadPorts">
            <summary>Constant ImmediateConstantBufferRegisterReadPorts.</summary>
            <unmanaged>D3D11_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_READ_PORTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferPartialUpdateExtentsByteAlignment">
            <summary>Constant ConstantBufferPartialUpdateExtentsByteAlignment.</summary>
            <unmanaged>D3D11_COMMONSHADER_CONSTANT_BUFFER_PARTIAL_UPDATE_EXTENTS_BYTE_ALIGNMENT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceRegisterReadsPerInst">
            <summary>Constant InputResourceRegisterReadsPerInst.</summary>
            <unmanaged>D3D11_COMMONSHADER_INPUT_RESOURCE_REGISTER_READS_PER_INST</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount">
            <summary>Constant ConstantBufferApiSlotCount.</summary>
            <unmanaged>D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferComponents">
            <summary>Constant ConstantBufferComponents.</summary>
            <unmanaged>D3D11_COMMONSHADER_CONSTANT_BUFFER_COMPONENTS</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.CommonShaderStage`1"/> class.
            </summary>
            <param name="pointer">The pointer.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.GetConstantBuffers(System.Int32,System.Int32)">
            <summary>
              Gets the constant buffers used by the shader stage.
            </summary>
            <param name = "startSlot">Index into the device's zero-based array from which to begin retrieving constant buffers.</param>
            <param name = "count">Number of buffers to retrieve.</param>
            <returns>An array of constant buffers.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.GetSamplers(System.Int32,System.Int32)">
            <summary>
              Gets the sampler states used by the shader stage.
            </summary>
            <param name = "startSlot">Index into the device's zero-based array from which to begin retrieving samplers.</param>
            <param name = "count">Number of samplers to retrieve.</param>
            <returns>An array of sampler states.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.GetShaderResources(System.Int32,System.Int32)">
            <summary>
              Gets the shader resources used by the shader stage.
            </summary>
            <param name = "startSlot">Index into the device's zero-based array from which to begin retrieving shader resources.</param>
            <param name = "count">Number of resources to retrieve.</param>
            <returns>An array of shader resources.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.SetConstantBuffer(System.Int32,SharpDX.Direct3D11.Buffer)">
            <summary>
              Sets a single constant buffer to be used by the shader stage.
            </summary>
            <param name = "slot">Index into the device's zero-based array to which to set the constant buffer.</param>
            <param name = "constantBuffer">constant buffer to set</param>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.SetConstantBuffers(System.Int32,SharpDX.Direct3D11.Buffer[])">
            <summary>
              Sets an array of constant buffers to be used by the shader stage.
            </summary>
            <param name = "slot">Index into the device's zero-based array to which to set the array of constant buffers.</param>
            <param name = "constantBuffers">An array of constant buffer to set</param>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.SetConstantBuffers(System.Int32,SharpDX.ComArray{SharpDX.Direct3D11.Buffer})">
            <summary>
              Sets an array of constant buffers to be used by the shader stage.
            </summary>
            <param name = "slot">Index into the device's zero-based array to which to set the array of constant buffers.</param>
            <param name = "constantBuffers">An array of constant buffer to set</param>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.SetSampler(System.Int32,SharpDX.Direct3D11.SamplerState)">
            <summary>
              Sets a single sampler to be used by the shader stage.
            </summary>
            <param name = "slot">Index into the device's zero-based array to which to set the sampler.</param>
            <param name = "sampler">sampler state to set</param>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.SetSamplers(System.Int32,SharpDX.Direct3D11.SamplerState[])">
            <summary>
              Sets an array of samplers to be used by the shader stage.
            </summary>
            <param name = "slot">Index into the device's zero-based array to which to set the array of sampler states.</param>
            <param name = "samplers">An array of sampler state to set</param>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.SetSamplers(System.Int32,SharpDX.ComArray{SharpDX.Direct3D11.SamplerState})">
            <summary>
              Sets an array of samplesr to be used by the shader stage.
            </summary>
            <param name = "slot">Index into the device's zero-based array to which  to set the array of sampler states.</param>
            <param name = "samplers">An array of sampler state to set</param>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.SetShaderResource(System.Int32,SharpDX.Direct3D11.ShaderResourceView)">
            <summary>
              Sets a single shader resource to be used by the shader stage.
            </summary>
            <param name = "slot">Index into the device's zero-based array to which to set the resource.</param>
            <param name = "resourceView">Resource view to attach</param>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.SetShaderResources(System.Int32,SharpDX.Direct3D11.ShaderResourceView[])">
            <summary>
              Bind an array of shader resources to the shader stage.
            </summary>
            <remarks>
              If an overlapping resource view is already bound to an output slot, such as a rendertarget, then this API will fill the destination shader resource slot with NULL.For information about creating shader-resource views, see <see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/>. The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.
            </remarks>
            <param name="startSlot">Index into the device's zero-based array to begin setting shader resources to (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</param>
            <param name="shaderResourceViews">Array of {{shader resource view}} interfaces to set to the device.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.SetShaderResources(System.Int32,SharpDX.ComArray{SharpDX.Direct3D11.ShaderResourceView})">
            <summary>
              Bind an array of shader resources to the shader stage.
            </summary>
            <remarks>
              If an overlapping resource view is already bound to an output slot, such as a rendertarget, then this API will fill the destination shader resource slot with NULL.For information about creating shader-resource views, see <see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/>. The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.
            </remarks>
            <param name="startSlot">Index into the device's zero-based array to begin setting shader resources to (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</param>
            <param name="shaderResourceViews">Array of {{shader resource view}} interfaces to set to the device.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.GetShaderResources(System.Int32,System.Int32,SharpDX.Direct3D11.ShaderResourceView[])">
            <summary>
              Get the shader resources.
            </summary>
            <remarks>
              Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.
            </remarks>
            <param name = "startSlot">Index into the device's zero-based array to begin getting shader resources from (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</param>
            <param name = "numViews">The number of resources to get from the device. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</param>
            <param name = "shaderResourceViewsRef">Array of {{shader resource view}} interfaces to be returned by the device.</param>
            <unmanaged>void PSGetShaderResources([In] UINT StartSlot,[In] UINT NumViews,[Out, Buffer] ID3D11ShaderResourceView** ppShaderResourceViews)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.GetSamplers(System.Int32,System.Int32,SharpDX.Direct3D11.SamplerState[])">
            <summary>
              Get an array of sampler states from the shader pipeline stage.
            </summary>
            <remarks>
              Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.
            </remarks>
            <param name="startSlot">Index into a zero-based array to begin getting samplers from (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</param>
            <param name="numSamplers">Number of samplers to get from a device context. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</param>
            <param name="samplersRef">Arry of sampler-state interface pointers (see <see cref="T:SharpDX.Direct3D11.SamplerState"/>) to be returned by the device.</param>
            <unmanaged>void PSGetSamplers([In] UINT StartSlot,[In] UINT NumSamplers,[Out, Buffer] ID3D11SamplerState** ppSamplers)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.GetConstantBuffers(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[])">
            <summary>
              Get the constant buffers used by the shader pipeline stage.
            </summary>
            <remarks>
              Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.
            </remarks>
            <param name="startSlot">Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</param>
            <param name="numBuffers">Number of buffers to retrieve (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot).</param>
            <param name="constantBuffersRef">Array of constant buffer interface pointers (see <see cref="T:SharpDX.Direct3D11.Buffer"/>) to be returned by the method.</param>
            <unmanaged>void PSGetConstantBuffers([In] UINT StartSlot,[In] UINT NumBuffers,[Out, Buffer] ID3D11Buffer** ppConstantBuffers)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.SetShaderResources(System.Int32,System.Int32,SharpDX.Direct3D11.ShaderResourceView[])">
            <summary>
              Bind an array of shader resources to the shader stage.
            </summary>
            <remarks>
              If an overlapping resource view is already bound to an output slot, such as a rendertarget, then this API will fill the destination shader resource slot with NULL.For information about creating shader-resource views, see <see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/>. The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.
            </remarks>
            <param name="startSlot">Index into the device's zero-based array to begin setting shader resources to (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</param>
            <param name="numViews">Number of shader resources to set. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</param>
            <param name="shaderResourceViews">Array of {{shader resource view}} interfaces to set to the device.</param>
            <unmanaged>void PSSetShaderResources([In] UINT StartSlot,[In] UINT NumViews,[In, Buffer] const ID3D11ShaderResourceView** ppShaderResourceViews)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.SetShaderResources(System.Int32,System.Int32,SharpDX.ComArray{SharpDX.Direct3D11.ShaderResourceView})">
            <summary>
              Bind an array of shader resources to the shader stage.
            </summary>
            <remarks>
              If an overlapping resource view is already bound to an output slot, such as a rendertarget, then this API will fill the destination shader resource slot with NULL.For information about creating shader-resource views, see <see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/>. The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.
            </remarks>
            <param name="startSlot">Index into the device's zero-based array to begin setting shader resources to (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</param>
            <param name="numViews">Number of shader resources to set. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</param>
            <param name="shaderResourceViewsRef">Array of {{shader resource view}} interfaces to set to the device.</param>
            <unmanaged>void PSSetShaderResources([In] UINT StartSlot,[In] UINT NumViews,[In, Buffer] const ID3D11ShaderResourceView** ppShaderResourceViews)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.SetShaderResources(System.Int32,System.Int32,System.IntPtr)">
            <summary>
              Bind an array of shader resources to the shader stage.
            </summary>
            <remarks>
              If an overlapping resource view is already bound to an output slot, such as a rendertarget, then this API will fill the destination shader resource slot with NULL.For information about creating shader-resource views, see <see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/>. The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.
            </remarks>
            <param name="startSlot">Index into the device's zero-based array to begin setting shader resources to (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1).</param>
            <param name="numViews">Number of shader resources to set. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot).</param>
            <param name="shaderResourceViewsRef">Array of {{shader resource view}} interfaces to set to the device.</param>
            <unmanaged>void PSSetShaderResources([In] UINT StartSlot,[In] UINT NumViews,[In, Buffer] const ID3D11ShaderResourceView** ppShaderResourceViews)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.SetSamplers(System.Int32,System.Int32,SharpDX.Direct3D11.SamplerState[])">
            <summary>
              Set an array of sampler states to the shader pipeline stage.
            </summary>
            <remarks>
              Any sampler may be set to NULL; this invokes the default state, which is defined to be the following.StateDefault ValueFilterD3D11_FILTER_MIN_MAG_MIP_LINEARAddressUD3D11_TEXTURE_ADDRESS_CLAMPAddressVD3D11_TEXTURE_ADDRESS_CLAMPAddressWD3D11_TEXTURE_ADDRESS_CLAMPMipLODBias0MaxAnisotropy1ComparisonFuncD3D11_COMPARISON_NEVERBorderColor[0]1.0fBorderColor[1]1.0fBorderColor[2]1.0fBorderColor[3]1.0fMinLOD-FLT_MAXMaxLODFLT_MAX  The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.
            </remarks>
            <param name="startSlot">Index into the device's zero-based array to begin setting samplers to (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</param>
            <param name="numSamplers">Number of samplers in the array. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</param>
            <param name="samplers">Pointer to an array of sampler-state interfaces (see <see cref="T:SharpDX.Direct3D11.SamplerState"/>). See Remarks.</param>
            <unmanaged>void PSSetSamplers([In] UINT StartSlot,[In] UINT NumSamplers,[In, Buffer] const ID3D11SamplerState** ppSamplers)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.SetSamplers(System.Int32,System.Int32,SharpDX.ComArray{SharpDX.Direct3D11.SamplerState})">
            <summary>
              Set an array of sampler states to the shader pipeline stage.
            </summary>
            <remarks>
              Any sampler may be set to NULL; this invokes the default state, which is defined to be the following.StateDefault ValueFilterD3D11_FILTER_MIN_MAG_MIP_LINEARAddressUD3D11_TEXTURE_ADDRESS_CLAMPAddressVD3D11_TEXTURE_ADDRESS_CLAMPAddressWD3D11_TEXTURE_ADDRESS_CLAMPMipLODBias0MaxAnisotropy1ComparisonFuncD3D11_COMPARISON_NEVERBorderColor[0]1.0fBorderColor[1]1.0fBorderColor[2]1.0fBorderColor[3]1.0fMinLOD-FLT_MAXMaxLODFLT_MAX  The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.
            </remarks>
            <param name="startSlot">Index into the device's zero-based array to begin setting samplers to (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - 1).</param>
            <param name="numSamplers">Number of samplers in the array. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to D3D11_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot).</param>
            <param name="samplers">Pointer to an array of sampler-state interfaces (see <see cref="T:SharpDX.Direct3D11.SamplerState"/>). See Remarks.</param>
            <unmanaged>void PSSetSamplers([In] UINT StartSlot,[In] UINT NumSamplers,[In, Buffer] const ID3D11SamplerState** ppSamplers)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.SetConstantBuffers(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[])">
            <summary>
              Set the constant buffers used by the shader pipeline stage.
            </summary>
            <remarks>
              The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.
            </remarks>
            <param name="startSlot">Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</param>
            <param name="numBuffers">Number of buffers to set (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot).</param>
            <param name="constantBuffers">Array of constant buffers (see <see cref="T:SharpDX.Direct3D11.Buffer"/>) being given to the device.</param>
            <unmanaged>void PSSetConstantBuffers([In] UINT StartSlot,[In] UINT NumBuffers,[In, Buffer] const ID3D11Buffer** ppConstantBuffers)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage.SetConstantBuffers(System.Int32,System.Int32,SharpDX.ComArray{SharpDX.Direct3D11.Buffer})">
            <summary>
              Set the constant buffers used by the shader pipeline stage.
            </summary>
            <remarks>
              The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.
            </remarks>
            <param name="startSlot">Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1).</param>
            <param name="numBuffers">Number of buffers to set (ranges from 0 to D3D11_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot).</param>
            <param name="constantBuffers">Array of constant buffers (see <see cref="T:SharpDX.Direct3D11.Buffer"/>) being given to the device.</param>
            <unmanaged>void PSSetConstantBuffers([In] UINT StartSlot,[In] UINT NumBuffers,[In, Buffer] const ID3D11Buffer** ppConstantBuffers)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.CommonShaderStage`1">
            <summary>
            Common Shader class. Provides a common set of methods for a Shader Stage.
            TODO: check if usage of abstract is not introducing an unacceptable overhead...
            </summary>
            <typeparam name = "T">Type of the shader</typeparam>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage`1.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.CommonShaderStage`1"/> class.
            </summary>
            <param name="pointer">The pointer.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage`1.Get">
            <summary>
              Gets the shader currently assigned to the device.
            </summary>
            <returns>The shader (null if no shader is assigned).</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage`1.Get(SharpDX.Direct3D11.ClassInstance[])">
            <summary>
              Gets the shader currently assigned to the device.
            </summary>
            <param name = "classInstances">An array that will be used to contain any class instances currently active.</param>
            <returns>The shader (null if no shader is assigned).</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage`1.Set(`0)">
            <summary>
              Assigns a compute shader to the device.
            </summary>
            <param name = "shader">The shader to assign to the device. Assign null to disable the compute shader.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage`1.Set(`0,SharpDX.Direct3D11.ClassInstance[])">
            <summary>
              Assigns a compute shader to the device.
            </summary>
            <param name = "shader">The shader to assign to the device. Assign <c>null</c> to disable the compute shader.</param>
            <param name = "classInstances">An array of class-instance interfaces. Each interface used by a shader must have a corresponding class instance or the shader will get disabled.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.CommonShaderStage`1.Set(`0,SharpDX.ComArray{SharpDX.Direct3D11.ClassInstance})">
            <summary>
              Assigns a compute shader to the device.
            </summary>
            <param name = "shader">The shader to assign to the device. Assign <c>null</c> to disable the compute shader.</param>
            <param name = "classInstances">An array of class-instance interfaces. Each interface used by a shader must have a corresponding class instance or the shader will get disabled.</param>
        </member>
        <member name="T:SharpDX.Direct3D11.ComputeShaderStage">
            <summary>	
            The <see cref="T:SharpDX.Direct3D11.DeviceContext"/> interface represents a device context which generates rendering commands.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext']/*"/>	
            <unmanaged>ID3D11DeviceContext</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShaderStage.GetUnorderedAccessViews(System.Int32,System.Int32)">
            <summary>	
            Gets an array of views for an unordered resource.	
            </summary>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks. 	
            </remarks>	
            <param name="startSlot">Index of the first element in the zero-based array to return (ranges from 0 to D3D11_PS_CS_UAV_REGISTER_COUNT - 1). </param>
            <param name="count">Number of views to get (ranges from 0 to D3D11_PS_CS_UAV_REGISTER_COUNT - StartSlot). </param>
            <unmanaged>void CSGetUnorderedAccessViews([In] int StartSlot,[In] int NumUAVs,[Out, Buffer] ID3D11UnorderedAccessView** ppUnorderedAccessViews)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShaderStage.SetUnorderedAccessView(System.Int32,SharpDX.Direct3D11.UnorderedAccessView)">
            <summary>	
            Sets an array of views for an unordered resource.	
            </summary>	
            <remarks>	
            </remarks>	
            <param name="startSlot">Index of the first element in the zero-based array to begin setting. </param>
            <param name="unorderedAccessView">A reference to an <see cref="T:SharpDX.Direct3D11.UnorderedAccessView"/> references to be set by the method. </param>
            <unmanaged>void CSSetUnorderedAccessViews([In] int StartSlot,[In] int NumUAVs,[In, Buffer] const ID3D11UnorderedAccessView** ppUnorderedAccessViews,[In, Buffer] const int* pUAVInitialCounts)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShaderStage.SetUnorderedAccessView(System.Int32,SharpDX.Direct3D11.UnorderedAccessView,System.Int32)">
            <summary>	
            Sets an array of views for an unordered resource.	
            </summary>	
            <remarks>	
            </remarks>	
            <param name="startSlot">Index of the first element in the zero-based array to begin setting. </param>
            <param name="unorderedAccessView">A reference to an <see cref="T:SharpDX.Direct3D11.UnorderedAccessView"/> references to be set by the method. </param>
            <param name="uavInitialCount">An Append/Consume buffer offsets. A value of -1 indicates the current offset should be kept.   Any other values set the hidden counter for that Appendable/Consumeable UAV. uAVInitialCount is only relevant for UAVs which have the <see cref="T:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags"/> flag,  otherwise the argument is ignored. </param>
            <unmanaged>void CSSetUnorderedAccessViews([In] int StartSlot,[In] int NumUAVs,[In, Buffer] const ID3D11UnorderedAccessView** ppUnorderedAccessViews,[In, Buffer] const int* pUAVInitialCounts)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShaderStage.SetUnorderedAccessViews(System.Int32,SharpDX.Direct3D11.UnorderedAccessView[])">
            <summary>	
            Sets an array of views for an unordered resource.	
            </summary>	
            <remarks>	
            </remarks>	
            <param name="startSlot">Index of the first element in the zero-based array to begin setting. </param>
            <param name="unorderedAccessViews">A reference to an array of <see cref="T:SharpDX.Direct3D11.UnorderedAccessView"/> references to be set by the method. </param>
            <unmanaged>void CSSetUnorderedAccessViews([In] int StartSlot,[In] int NumUAVs,[In, Buffer] const ID3D11UnorderedAccessView** ppUnorderedAccessViews,[In, Buffer] const int* pUAVInitialCounts)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShaderStage.SetUnorderedAccessViews(System.Int32,SharpDX.Direct3D11.UnorderedAccessView[],System.Int32[])">
            <summary>	
            Sets an array of views for an unordered resource.	
            </summary>	
            <remarks>	
            </remarks>	
            <param name="startSlot">Index of the first element in the zero-based array to begin setting. </param>
            <param name="unorderedAccessViews">A reference to an array of <see cref="T:SharpDX.Direct3D11.UnorderedAccessView"/> references to be set by the method. </param>
            <param name="uavInitialCounts">An array of Append/Consume buffer offsets. A value of -1 indicates the current offset should be kept.   Any other values set the hidden counter for that Appendable/Consumeable UAV.  pUAVInitialCounts is only relevant for UAVs which have the <see cref="T:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags"/> flag,  otherwise the argument is ignored. </param>
            <unmanaged>void CSSetUnorderedAccessViews([In] int StartSlot,[In] int NumUAVs,[In, Buffer] const ID3D11UnorderedAccessView** ppUnorderedAccessViews,[In, Buffer] const int* pUAVInitialCounts)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShaderStage.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.ComputeShaderStage"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShaderStage.SetShaderResources(System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            Bind an array of shader resources to the compute-shader stage.	
            </summary>	
            <param name="startSlot"><para>Index into the device's zero-based array to begin setting shader resources to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - 1).</para></param>	
            <param name="numViews"><para>Number of shader resources to set. Up to a maximum of 128 slots are available for shader resources(ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - StartSlot).</para></param>	
            <param name="shaderResourceViewsOut"><para>Array of shader resource view interfaces to set to the device.</para></param>	
            <remarks>	
            If an overlapping resource view is already bound to an output slot, such as a render target, then the method will fill the destination shader resource slot with <c>null</c>.For information about creating shader-resource views, see <see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/>.The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::CSSetShaderResources']/*"/>	
            <unmanaged>void ID3D11DeviceContext::CSSetShaderResources([In] unsigned int StartSlot,[In] unsigned int NumViews,[In, Buffer, Optional] const void** ppShaderResourceViews)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShaderStage.SetUnorderedAccessViews(System.Int32,System.Int32,SharpDX.Direct3D11.UnorderedAccessView[],System.Int32[])">
            <summary>	
            Sets an array of views for an unordered resource.	
            </summary>	
            <param name="startSlot"><para>Index of the first element in the zero-based array to begin setting  (ranges from 0 to D3D11_1_UAV_SLOT_COUNT - 1). D3D11_1_UAV_SLOT_COUNT is defined as 64.</para></param>	
            <param name="numUAVs"><para>Number of views to set (ranges from 0 to D3D11_1_UAV_SLOT_COUNT - StartSlot).</para></param>	
            <param name="unorderedAccessViewsOut"><para>A reference to an array of <see cref="T:SharpDX.Direct3D11.UnorderedAccessView"/> references to be set by the method.</para></param>	
            <param name="uAVInitialCountsRef"><para>An array of append and consume buffer offsets. A value of -1 indicates to keep the current offset. Any other values set the hidden counter  for that appendable and consumable UAV. pUAVInitialCounts is only relevant for UAVs that were created with either  <see cref="F:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.Append"/> or <see cref="F:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.Counter"/> specified  when the UAV was created; otherwise, the argument is ignored.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::CSSetUnorderedAccessViews']/*"/>	
            <unmanaged>void ID3D11DeviceContext::CSSetUnorderedAccessViews([In] unsigned int StartSlot,[In] unsigned int NumUAVs,[In, Buffer, Optional] const ID3D11UnorderedAccessView** ppUnorderedAccessViews,[In, Buffer, Optional] const unsigned int* pUAVInitialCounts)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShaderStage.SetUnorderedAccessViews(System.Int32,System.Int32,SharpDX.ComArray{SharpDX.Direct3D11.UnorderedAccessView},System.Int32[])">
            <summary>	
            Sets an array of views for an unordered resource.	
            </summary>	
            <param name="startSlot"><para>Index of the first element in the zero-based array to begin setting  (ranges from 0 to D3D11_1_UAV_SLOT_COUNT - 1). D3D11_1_UAV_SLOT_COUNT is defined as 64.</para></param>	
            <param name="numUAVs"><para>Number of views to set (ranges from 0 to D3D11_1_UAV_SLOT_COUNT - StartSlot).</para></param>	
            <param name="unorderedAccessViewsOut"><para>A reference to an array of <see cref="T:SharpDX.Direct3D11.UnorderedAccessView"/> references to be set by the method.</para></param>	
            <param name="uAVInitialCountsRef"><para>An array of append and consume buffer offsets. A value of -1 indicates to keep the current offset. Any other values set the hidden counter  for that appendable and consumable UAV. pUAVInitialCounts is only relevant for UAVs that were created with either  <see cref="F:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.Append"/> or <see cref="F:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.Counter"/> specified  when the UAV was created; otherwise, the argument is ignored.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::CSSetUnorderedAccessViews']/*"/>	
            <unmanaged>void ID3D11DeviceContext::CSSetUnorderedAccessViews([In] unsigned int StartSlot,[In] unsigned int NumUAVs,[In, Buffer, Optional] const ID3D11UnorderedAccessView** ppUnorderedAccessViews,[In, Buffer, Optional] const unsigned int* pUAVInitialCounts)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShaderStage.SetShader(SharpDX.Direct3D11.ComputeShader,SharpDX.Direct3D11.ClassInstance[],System.Int32)">
            <summary>	
            Set a compute shader to the device.	
            </summary>	
            <param name="computeShaderRef"><para>Pointer to a compute shader (see <see cref="T:SharpDX.Direct3D11.ComputeShader"/>). Passing in <c>null</c> disables the shader for this pipeline stage.</para></param>	
            <param name="classInstancesOut"><para>A reference to an array of class-instance interfaces (see <see cref="T:SharpDX.Direct3D11.ClassInstance"/>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <c>null</c> if the shader does not use any interfaces.</para></param>	
            <param name="numClassInstances"><para>The number of class-instance interfaces in the array.</para></param>	
            <remarks>	
            The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.The maximum number of instances a shader can have is 256.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::CSSetShader']/*"/>	
            <unmanaged>void ID3D11DeviceContext::CSSetShader([In, Optional] ID3D11ComputeShader* pComputeShader,[In, Buffer, Optional] const ID3D11ClassInstance** ppClassInstances,[In] unsigned int NumClassInstances)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShaderStage.SetShader(SharpDX.Direct3D11.ComputeShader,SharpDX.ComArray{SharpDX.Direct3D11.ClassInstance},System.Int32)">
            <summary>	
            Set a compute shader to the device.	
            </summary>	
            <param name="computeShaderRef"><para>Pointer to a compute shader (see <see cref="T:SharpDX.Direct3D11.ComputeShader"/>). Passing in <c>null</c> disables the shader for this pipeline stage.</para></param>	
            <param name="classInstancesOut"><para>A reference to an array of class-instance interfaces (see <see cref="T:SharpDX.Direct3D11.ClassInstance"/>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <c>null</c> if the shader does not use any interfaces.</para></param>	
            <param name="numClassInstances"><para>The number of class-instance interfaces in the array.</para></param>	
            <remarks>	
            The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.The maximum number of instances a shader can have is 256.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::CSSetShader']/*"/>	
            <unmanaged>void ID3D11DeviceContext::CSSetShader([In, Optional] ID3D11ComputeShader* pComputeShader,[In, Buffer, Optional] const ID3D11ClassInstance** ppClassInstances,[In] unsigned int NumClassInstances)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShaderStage.SetSamplers(System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            Set an array of sampler states to the compute-shader stage.	
            </summary>	
            <param name="startSlot"><para>Index into the device's zero-based array to begin setting samplers to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - 1).</para></param>	
            <param name="numSamplers"><para>Number of samplers in the array. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - StartSlot).</para></param>	
            <param name="samplersOut"><para>Pointer to an array of sampler-state interfaces (see <see cref="T:SharpDX.Direct3D11.SamplerState"/>). See Remarks.</para></param>	
            <remarks>	
            Any sampler may be set to <c>null</c>; this invokes the default state, which is defined to be the following.<code>	
             //Default sampler state:	
            <see cref="T:SharpDX.Direct3D11.SamplerStateDescription"/> SamplerDesc;	
            SamplerDesc.Filter = <see cref="F:SharpDX.Direct3D11.Filter.MinMagMipLinear"/>;	
            SamplerDesc.AddressU = <see cref="F:SharpDX.Direct3D11.TextureAddressMode.Clamp"/>;	
            SamplerDesc.AddressV = <see cref="F:SharpDX.Direct3D11.TextureAddressMode.Clamp"/>;	
            SamplerDesc.AddressW = <see cref="F:SharpDX.Direct3D11.TextureAddressMode.Clamp"/>;	
            SamplerDesc.MipLODBias = 0;	
            SamplerDesc.MaxAnisotropy = 1;	
            SamplerDesc.ComparisonFunc = <see cref="F:SharpDX.Direct3D11.Comparison.Never"/>;	
            SamplerDesc.BorderColor[0] = 1.0f;	
            SamplerDesc.BorderColor[1] = 1.0f;	
            SamplerDesc.BorderColor[2] = 1.0f;	
            SamplerDesc.BorderColor[3] = 1.0f;	
            SamplerDesc.MinLOD = -FLT_MAX;	
            SamplerDesc.MaxLOD = FLT_MAX; 	
            </code>The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::CSSetSamplers']/*"/>	
            <unmanaged>void ID3D11DeviceContext::CSSetSamplers([In] unsigned int StartSlot,[In] unsigned int NumSamplers,[In, Buffer, Optional] const void** ppSamplers)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShaderStage.SetConstantBuffers(System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            Sets the constant buffers used by the compute-shader stage.	
            </summary>	
            <param name="startSlot"><para>Index into the zero-based array to begin setting constant buffers to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</para></param>	
            <param name="numBuffers"><para>Number of buffers to set (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - StartSlot).</para></param>	
            <param name="constantBuffersOut"><para>Array of constant buffers (see <see cref="T:SharpDX.Direct3D11.Buffer"/>) being given to the device.</para></param>	
            <remarks>	
            The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.The Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, can bind a larger number of <see cref="T:SharpDX.Direct3D11.Buffer"/> resources to the shader than the maximum constant buffer size that is supported by shaders (4096 constants ? 4*32-bit components each).  When you bind such a large buffer, the shader can access only the first 4096 4*32-bit component constants in the buffer, as if 4096 constants is the full size of the buffer.If the application wants the shader to access other parts of the buffer, it must call the CSSetConstantBuffers1 method instead.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::CSSetConstantBuffers']/*"/>	
            <unmanaged>void ID3D11DeviceContext::CSSetConstantBuffers([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const void** ppConstantBuffers)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShaderStage.GetShaderResources(System.Int32,System.Int32,SharpDX.Direct3D11.ShaderResourceView[])">
            <summary>	
            Get the compute-shader resources.	
            </summary>	
            <param name="startSlot"><para>Index into the device's zero-based array to begin getting shader resources from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - 1).</para></param>	
            <param name="numViews"><para>The number of resources to get from the device. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - StartSlot).</para></param>	
            <param name="shaderResourceViewsOut"><para>Array of shader resource view interfaces to be returned by the device.</para></param>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::CSGetShaderResources']/*"/>	
            <unmanaged>void ID3D11DeviceContext::CSGetShaderResources([In] unsigned int StartSlot,[In] unsigned int NumViews,[Out, Buffer, Optional] ID3D11ShaderResourceView** ppShaderResourceViews)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShaderStage.GetUnorderedAccessViews(System.Int32,System.Int32,SharpDX.Direct3D11.UnorderedAccessView[])">
            <summary>	
            Gets an array of views for an unordered resource.	
            </summary>	
            <param name="startSlot"><para>Index of the first element in the zero-based array to return (ranges from 0 to D3D11_PS_CS_UAV_REGISTER_COUNT - 1).</para></param>	
            <param name="numUAVs"><para>Number of views to get (ranges from 0 to D3D11_PS_CS_UAV_REGISTER_COUNT - StartSlot).</para></param>	
            <param name="unorderedAccessViewsOut"><para>A reference to an array of interface references (see <see cref="T:SharpDX.Direct3D11.UnorderedAccessView"/>) to get.</para></param>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::CSGetUnorderedAccessViews']/*"/>	
            <unmanaged>void ID3D11DeviceContext::CSGetUnorderedAccessViews([In] unsigned int StartSlot,[In] unsigned int NumUAVs,[Out, Buffer, Optional] ID3D11UnorderedAccessView** ppUnorderedAccessViews)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShaderStage.GetShader(SharpDX.Direct3D11.ComputeShader@,SharpDX.Direct3D11.ClassInstance[],System.Int32@)">
            <summary>	
            Get the compute shader currently set on the device.	
            </summary>	
            <param name="computeShaderOut"><para>Address of a reference to a Compute shader (see <see cref="T:SharpDX.Direct3D11.ComputeShader"/>) to be returned by the method.</para></param>	
            <param name="classInstancesOut"><para>Pointer to an array of class instance interfaces (see <see cref="T:SharpDX.Direct3D11.ClassInstance"/>).</para></param>	
            <param name="numClassInstancesRef"><para>The number of class-instance elements in the array.</para></param>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::CSGetShader']/*"/>	
            <unmanaged>void ID3D11DeviceContext::CSGetShader([Out] ID3D11ComputeShader** ppComputeShader,[Out, Buffer, Optional] ID3D11ClassInstance** ppClassInstances,[InOut] unsigned int* pNumClassInstances)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShaderStage.GetSamplers(System.Int32,System.Int32,SharpDX.Direct3D11.SamplerState[])">
            <summary>	
            Get an array of sampler state interfaces from the compute-shader stage.	
            </summary>	
            <param name="startSlot"><para>Index into a zero-based array to begin getting samplers from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - 1).</para></param>	
            <param name="numSamplers"><para>Number of samplers to get from a device context. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - StartSlot).</para></param>	
            <param name="samplersOut"><para>Pointer to an array of sampler-state interfaces (see <see cref="T:SharpDX.Direct3D11.SamplerState"/>).</para></param>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::CSGetSamplers']/*"/>	
            <unmanaged>void ID3D11DeviceContext::CSGetSamplers([In] unsigned int StartSlot,[In] unsigned int NumSamplers,[Out, Buffer, Optional] ID3D11SamplerState** ppSamplers)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.ComputeShaderStage.GetConstantBuffers(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[])">
            <summary>	
            Get the constant buffers used by the compute-shader stage.	
            </summary>	
            <param name="startSlot"><para>Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</para></param>	
            <param name="numBuffers"><para>Number of buffers to retrieve (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - StartSlot).</para></param>	
            <param name="constantBuffersOut"><para>Array of constant buffer interface references (see <see cref="T:SharpDX.Direct3D11.Buffer"/>) to be returned by the method.</para></param>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::CSGetConstantBuffers']/*"/>	
            <unmanaged>void ID3D11DeviceContext::CSGetConstantBuffers([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[Out, Buffer, Optional] ID3D11Buffer** ppConstantBuffers)</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.DeviceContext">
            <summary>	
            The <see cref="T:SharpDX.Direct3D11.DeviceContext"/> interface represents a device context which generates rendering commands.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext']/*"/>	
            <unmanaged>ID3D11DeviceContext</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.#ctor(SharpDX.Direct3D11.Device)">
            <summary>
              Constructs a new deferred context <see cref = "T:SharpDX.Direct3D11.DeviceContext" />.
            </summary>
            <param name = "device">The device with which to associate the state object.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.FinishCommandList(System.Boolean)">
            <summary>
              Create a command list and record graphics commands into it.
            </summary>
            <param name = "restoreState">A flag indicating whether the immediate context state is saved (prior) and restored (after) the execution of a command list.</param>
            <returns>The created command list containing the queued rendering commands.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.IsDataAvailable(SharpDX.Direct3D11.Asynchronous)">
            <summary>
            Determines whether asynhronous query data is available.
            </summary>
            <param name="data">The data.</param>
            <returns>
              <c>true</c> if asynhronous query data is available; otherwise, <c>false</c>.
            </returns>
            <unmanaged>HRESULT ID3D11DeviceContext::GetData([In] ID3D11Asynchronous* pAsync,[Out, Buffer, Optional] void* pData,[In] unsigned int DataSize,[In] D3D11_ASYNC_GETDATA_FLAG GetDataFlags)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.IsDataAvailable(SharpDX.Direct3D11.Asynchronous,SharpDX.Direct3D11.AsynchronousFlags)">
            <summary>
            Determines whether asynhronous query data is available.
            </summary>
            <param name="data">The data.</param>
            <returns>
              <c>true</c> if asynhronous query data is available; otherwise, <c>false</c>.
            </returns>
            <unmanaged>HRESULT ID3D11DeviceContext::GetData([In] ID3D11Asynchronous* pAsync,[Out, Buffer, Optional] void* pData,[In] unsigned int DataSize,[In] D3D11_ASYNC_GETDATA_FLAG GetDataFlags)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.GetData(SharpDX.Direct3D11.Asynchronous)">
            <summary>
              Gets data from the GPU asynchronously.
            </summary>
            <param name = "data">The asynchronous data provider.</param>
            <returns>The data retrieved from the GPU.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.GetData``1(SharpDX.Direct3D11.Asynchronous)">
            <summary>
              Gets data from the GPU asynchronously.
            </summary>
            <param name = "data">The asynchronous data provider.</param>
            <returns>The data retrieved from the GPU.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.GetData``1(SharpDX.Direct3D11.Asynchronous,``0@)">
            <summary>
            Gets data from the GPU asynchronously.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data">The asynchronous data provider.</param>
            <param name="result">The data retrieved from the GPU.</param>
            <returns>
            True if result contains valid data, false otherwise.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.GetData(SharpDX.Direct3D11.Asynchronous,SharpDX.Direct3D11.AsynchronousFlags)">
            <summary>
              Gets data from the GPU asynchronously.
            </summary>
            <param name = "data">The asynchronous data provider.</param>
            <param name = "flags">Flags specifying how the command should operate.</param>
            <returns>The data retrieved from the GPU.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.GetData``1(SharpDX.Direct3D11.Asynchronous,SharpDX.Direct3D11.AsynchronousFlags)">
            <summary>
              Gets data from the GPU asynchronously.
            </summary>
            <param name = "data">The asynchronous data provider.</param>
            <param name = "flags">Flags specifying how the command should operate.</param>
            <returns>The data retrieved from the GPU.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.GetData``1(SharpDX.Direct3D11.Asynchronous,SharpDX.Direct3D11.AsynchronousFlags,``0@)">
            <summary>
            Gets data from the GPU asynchronously.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data">The asynchronous data provider.</param>
            <param name="flags">Flags specifying how the command should operate.</param>
            <param name="result">The data retrieved from the GPU.</param>
            <returns>
            True if result contains valid data, false otherwise.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.CopyResource(SharpDX.Direct3D11.Resource,SharpDX.Direct3D11.Resource)">
            <summary>	
            Copy the entire contents of the source resource to the destination resource using the GPU. 	
            </summary>	
            <remarks>	
            This method is unusual in that it causes the GPU to perform the copy operation (similar to a memcpy by the CPU). As a result, it has a few restrictions designed for improving performance. For instance, the source and destination resources:  Must be different resources. Must be the same type. Must have identical dimensions (including width, height, depth, and size as appropriate). Will only be copied. CopyResource does not support any stretch, color key, blend, or format conversions. Must have compatible DXGI formats, which means the formats must be identical or at least from the same type group. For example, a DXGI_FORMAT_R32G32B32_FLOAT texture can be copied to an DXGI_FORMAT_R32G32B32_UINT texture since both of these formats are in the DXGI_FORMAT_R32G32B32_TYPELESS group. Might not be currently mapped.  You cannot use an {{Immutable}} resource as a destination. You can use a   {{depth-stencil}} resource as either a source or a destination.  Resources created with multisampling capability (see <see cref="T:SharpDX.DXGI.SampleDescription"/>) can be used as source and destination only if both source and destination have identical multisampled count and quality. If source and destination differ in multisampled count and quality or if one is multisampled and the other is not multisampled the call to ID3D11DeviceContext::CopyResource fails. The method is an asynchronous call which may be added to the command-buffer queue. This attempts to remove pipeline stalls that may occur when copying data.  An application that only needs to copy a portion of the data in a resource should use <see cref="M:SharpDX.Direct3D11.DeviceContext.CopySubresourceRegion_(SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32,System.Int32,SharpDX.Direct3D11.Resource,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion})"/> instead. 	
            </remarks>	
            <param name="source">A reference to the source resource (see <see cref="T:SharpDX.Direct3D11.Resource"/>). </param>
            <param name="destination">A reference to the destination resource (see <see cref="T:SharpDX.Direct3D11.Resource"/>). </param>
            <unmanaged>void ID3D11DeviceContext::CopyResource([In] ID3D11Resource* pDstResource,[In] ID3D11Resource* pSrcResource)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.CopySubresourceRegion(SharpDX.Direct3D11.Resource,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion},SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>	
            Copy a region from a source resource to a destination resource.	
            </summary>	
            <remarks>	
            The source box must be within the size of the source resource. The destination offsets, (x, y, and z) allow the source box to be offset when writing into the destination resource; however, the dimensions of the source box and the offsets must be within the size of the resource. If the resources are buffers, all coordinates are in bytes; if the resources are textures, all coordinates are in texels. {{D3D11CalcSubresource}} is a helper function for calculating subresource indexes. CopySubresourceRegion performs the copy on the GPU (similar to a memcpy by the CPU). As a consequence, the source and destination resources:  Must be different subresources (although they can be from the same resource). Must be the same type. Must have compatible DXGI formats (identical or from the same type group). For example, a DXGI_FORMAT_R32G32B32_FLOAT texture can be copied to an DXGI_FORMAT_R32G32B32_UINT texture since both of these formats are in the DXGI_FORMAT_R32G32B32_TYPELESS group. May not be currently mapped.  CopySubresourceRegion only supports copy; it does not support any stretch, color key, blend, or format conversions. An application that needs to copy an entire resource should use <see cref="M:SharpDX.Direct3D11.DeviceContext.CopyResource_(SharpDX.Direct3D11.Resource,SharpDX.Direct3D11.Resource)"/> instead. CopySubresourceRegion is an asynchronous call which may be added to the command-buffer queue, this attempts to remove pipeline stalls that may occur when copying data. See performance considerations for more details. Note??If you use CopySubresourceRegion with a depth-stencil buffer or a multisampled resource, you must copy the whole subresource. In this situation, you must pass 0 to the DstX, DstY, and DstZ parameters and NULL to the pSrcBox parameter. In addition, source and destination resources, which are represented by the pSrcResource and pDstResource parameters, should have identical sample count values. Example The following code snippet copies a box (located at (120,100),(200,220)) from a source texture into a reqion (10,20),(90,140) in a destination texture. 	
            <code> D3D11_BOX sourceRegion;	
            sourceRegion.left = 120;	
            sourceRegion.right = 200;	
            sourceRegion.top = 100;	
            sourceRegion.bottom = 220;	
            sourceRegion.front = 0;	
            sourceRegion.back = 1; pd3dDeviceContext-&gt;CopySubresourceRegion( pDestTexture, 0, 10, 20, 0, pSourceTexture, 0, &amp;sourceRegion ); </code>	
            	
             Notice, that for a 2D texture, front and back are set to 0 and 1 respectively. 	
            </remarks>	
            <param name="source">A reference to the source resource (see <see cref="T:SharpDX.Direct3D11.Resource"/>). </param>
            <param name="sourceSubresource">Source subresource index. </param>
            <param name="sourceRegion">A reference to a 3D box (see <see cref="T:SharpDX.Direct3D11.ResourceRegion"/>) that defines the source subresources that can be copied. If NULL, the entire source subresource is copied. The box must fit within the source resource. </param>
            <param name="destination">A reference to the destination resource (see <see cref="T:SharpDX.Direct3D11.Resource"/>). </param>
            <param name="destinationSubResource">Destination subresource index. </param>
            <param name="dstX">The x-coordinate of the upper left corner of the destination region. </param>
            <param name="dstY">The y-coordinate of the upper left corner of the destination region. For a 1D subresource, this must be zero. </param>
            <param name="dstZ">The z-coordinate of the upper left corner of the destination region. For a 1D or 2D subresource, this must be zero. </param>
            <unmanaged>void ID3D11DeviceContext::CopySubresourceRegion([In] ID3D11Resource* pDstResource,[In] int DstSubresource,[In] int DstX,[In] int DstY,[In] int DstZ,[In] ID3D11Resource* pSrcResource,[In] int SrcSubresource,[In, Optional] const D3D11_BOX* pSrcBox)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.ResolveSubresource(SharpDX.Direct3D11.Resource,System.Int32,SharpDX.Direct3D11.Resource,System.Int32,SharpDX.DXGI.Format)">
            <summary>	
            Copy a multisampled resource into a non-multisampled resource.	
            </summary>	
            <remarks>	
            This API is most useful when re-using the resulting rendertarget of one render pass as an input to a second render pass. The source and destination resources must be the same resource type and have the same dimensions. In addition, they must have compatible formats. There are three scenarios for this:  ScenarioRequirements Source and destination are prestructured and typedBoth the source and destination must have identical formats and that format must be specified in the Format parameter. One resource is prestructured and typed and the other is prestructured and typelessThe typed resource must have a format that is compatible with the typeless resource (i.e. the typed resource is DXGI_FORMAT_R32_FLOAT and the typeless resource is DXGI_FORMAT_R32_TYPELESS). The format of the typed resource must be specified in the Format parameter. Source and destination are prestructured and typelessBoth the source and desintation must have the same typeless format (i.e. both must have DXGI_FORMAT_R32_TYPELESS), and the Format parameter must specify a format that is compatible with the source and destination (i.e. if both are DXGI_FORMAT_R32_TYPELESS then DXGI_FORMAT_R32_FLOAT could be specified in the Format parameter). For example, given the DXGI_FORMAT_R16G16B16A16_TYPELESS format:  The source (or dest) format could be DXGI_FORMAT_R16G16B16A16_UNORM The dest (or source) format could be DXGI_FORMAT_R16G16B16A16_FLOAT    ? 	
            </remarks>	
            <param name="source">Source resource. Must be multisampled. </param>
            <param name="sourceSubresource">&gt;The source subresource of the source resource. </param>
            <param name="destination">Destination resource. Must be a created with the <see cref="F:SharpDX.Direct3D11.ResourceUsage.Default"/> flag and be single-sampled. See <see cref="T:SharpDX.Direct3D11.Resource"/>. </param>
            <param name="destinationSubresource">A zero-based index, that identifies the destination subresource. Use {{D3D11CalcSubresource}} to calculate the index. </param>
            <param name="format">A <see cref="T:SharpDX.DXGI.Format"/> that indicates how the multisampled resource will be resolved to a single-sampled resource.  See remarks. </param>
            <unmanaged>void ID3D11DeviceContext::ResolveSubresource([In] ID3D11Resource* pDstResource,[In] int DstSubresource,[In] ID3D11Resource* pSrcResource,[In] int SrcSubresource,[In] DXGI_FORMAT Format)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.MapSubresource(SharpDX.Direct3D11.Texture1D,System.Int32,System.Int32,SharpDX.Direct3D11.MapMode,SharpDX.Direct3D11.MapFlags,SharpDX.DataStream@)">
            <summary>
            Maps the data contained in a subresource to a memory pointer, and denies the GPU access to that subresource.
            </summary>
            <param name="resource">The resource.</param>
            <param name="mipSlice">The mip slice.</param>
            <param name="arraySlice">The array slice.</param>
            <param name="mode">The mode.</param>
            <param name="flags">The flags.</param>
            <param name="stream">The output stream containing the pointer.</param>
            <returns>
            The locked <see cref="T:SharpDX.DataBox"/>
            </returns>
            <unmanaged>HRESULT ID3D11DeviceContext::Map([In] ID3D11Resource* pResource,[In] unsigned int Subresource,[In] D3D11_MAP MapType,[In] D3D11_MAP_FLAG MapFlags,[Out] D3D11_MAPPED_SUBRESOURCE* pMappedResource)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.MapSubresource(SharpDX.Direct3D11.Texture2D,System.Int32,System.Int32,SharpDX.Direct3D11.MapMode,SharpDX.Direct3D11.MapFlags,SharpDX.DataStream@)">
            <summary>
            Maps the data contained in a subresource to a memory pointer, and denies the GPU access to that subresource.
            </summary>
            <param name="resource">The resource.</param>
            <param name="mipSlice">The mip slice.</param>
            <param name="arraySlice">The array slice.</param>
            <param name="mode">The mode.</param>
            <param name="flags">The flags.</param>
            <param name="stream">The output stream containing the pointer.</param>
            <returns>
            The locked <see cref="T:SharpDX.DataBox"/>
            </returns>
            <unmanaged>HRESULT ID3D11DeviceContext::Map([In] ID3D11Resource* pResource,[In] unsigned int Subresource,[In] D3D11_MAP MapType,[In] D3D11_MAP_FLAG MapFlags,[Out] D3D11_MAPPED_SUBRESOURCE* pMappedResource)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.MapSubresource(SharpDX.Direct3D11.Texture3D,System.Int32,System.Int32,SharpDX.Direct3D11.MapMode,SharpDX.Direct3D11.MapFlags,SharpDX.DataStream@)">
            <summary>
            Maps the data contained in a subresource to a memory pointer, and denies the GPU access to that subresource.
            </summary>
            <param name="resource">The resource.</param>
            <param name="mipSlice">The mip slice.</param>
            <param name="arraySlice">The array slice.</param>
            <param name="mode">The mode.</param>
            <param name="flags">The flags.</param>
            <param name="stream">The output stream containing the pointer.</param>
            <returns>
            The locked <see cref="T:SharpDX.DataBox"/>
            </returns>
            <unmanaged>HRESULT ID3D11DeviceContext::Map([In] ID3D11Resource* pResource,[In] unsigned int Subresource,[In] D3D11_MAP MapType,[In] D3D11_MAP_FLAG MapFlags,[Out] D3D11_MAPPED_SUBRESOURCE* pMappedResource)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.MapSubresource(SharpDX.Direct3D11.Buffer,SharpDX.Direct3D11.MapMode,SharpDX.Direct3D11.MapFlags,SharpDX.DataStream@)">
            <summary>
            Maps the data contained in a subresource to a memory pointer, and denies the GPU access to that subresource.
            </summary>
            <param name="resource">The resource.</param>
            <param name="mode">The mode.</param>
            <param name="flags">The flags.</param>
            <param name="stream">The output stream containing the pointer.</param>
            <returns>
            The locked <see cref="T:SharpDX.DataBox"/>
            </returns>
            <unmanaged>HRESULT ID3D11DeviceContext::Map([In] ID3D11Resource* pResource,[In] unsigned int Subresource,[In] D3D11_MAP MapType,[In] D3D11_MAP_FLAG MapFlags,[Out] D3D11_MAPPED_SUBRESOURCE* pMappedResource)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.MapSubresource(SharpDX.Direct3D11.Resource,System.Int32,System.Int32,SharpDX.Direct3D11.MapMode,SharpDX.Direct3D11.MapFlags,System.Int32@)">
            <summary>
            Maps the data contained in a subresource to a memory pointer, and denies the GPU access to that subresource.
            </summary>
            <param name="resource">The resource.</param>
            <param name="mipSlice">The mip slice.</param>
            <param name="arraySlice">The array slice.</param>
            <param name="mode">The mode.</param>
            <param name="flags">The flags.</param>
            <param name="mipSize">Size of the selected miplevel.</param>
            <returns>
            The locked <see cref="T:SharpDX.DataBox"/>
            </returns>
            <unmanaged>HRESULT ID3D11DeviceContext::Map([In] ID3D11Resource* pResource,[In] unsigned int Subresource,[In] D3D11_MAP MapType,[In] D3D11_MAP_FLAG MapFlags,[Out] D3D11_MAPPED_SUBRESOURCE* pMappedResource)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.MapSubresource(SharpDX.Direct3D11.Resource,System.Int32,SharpDX.Direct3D11.MapMode,SharpDX.Direct3D11.MapFlags,SharpDX.DataStream@)">
            <summary>
            Maps the data contained in a subresource to a memory pointer, and denies the GPU access to that subresource.
            </summary>
            <param name="resource">The resource.</param>
            <param name="subresource">The subresource.</param>
            <param name="mode">The mode.</param>
            <param name="flags">The flags.</param>
            <param name="stream">The output stream containing the pointer.</param>
            <returns>The locked <see cref="T:SharpDX.DataBox"/></returns>
            <unmanaged>HRESULT ID3D11DeviceContext::Map([In] ID3D11Resource* pResource,[In] unsigned int Subresource,[In] D3D11_MAP MapType,[In] D3D11_MAP_FLAG MapFlags,[Out] D3D11_MAPPED_SUBRESOURCE* pMappedResource)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.UpdateSubresource``1(``0@,SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32)">
            <summary>
            Copies data from the CPU to to a non-mappable subresource region.
            </summary>
            <typeparam name="T">Type of the data to upload</typeparam>
            <param name="data">A reference to the data to upload.</param>
            <param name="resource">The destination resource.</param>
            <param name="subresource">The destination subresource.</param>
            <param name="rowPitch">The row pitch.</param>
            <param name="depthPitch">The depth pitch.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.UpdateSubresource``1(``0[],SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32)">
            <summary>
            Copies data from the CPU to to a non-mappable subresource region.
            </summary>
            <typeparam name="T">Type of the data to upload</typeparam>
            <param name="data">A reference to the data to upload.</param>
            <param name="resource">The destination resource.</param>
            <param name="subresource">The destination subresource.</param>
            <param name="rowPitch">The row pitch.</param>
            <param name="depthPitch">The depth pitch.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.UpdateSubresource(SharpDX.DataBox,SharpDX.Direct3D11.Resource,System.Int32)">
            <summary>
              Copies data from the CPU to to a non-mappable subresource region.
            </summary>
            <param name = "source">The source data.</param>
            <param name = "resource">The destination resource.</param>
            <param name = "subresource">The destination subresource.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.UpdateSubresource(SharpDX.DataBox,SharpDX.Direct3D11.Resource,System.Int32,SharpDX.Direct3D11.ResourceRegion)">
            <summary>
              Copies data from the CPU to to a non-mappable subresource region.
            </summary>
            <param name = "source">The source data.</param>
            <param name = "resource">The destination resource.</param>
            <param name = "subresource">The destination subresource.</param>
            <param name = "region">The destination region within the resource.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.DeviceContext"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.NativePointerUpdated(System.IntPtr)">
            <summary>Update nested inner interfaces pointer</summary>
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.DrawIndexed(System.Int32,System.Int32,System.Int32)">
            <summary>	
            Draw indexed, non-instanced primitives.	
            </summary>	
            <param name="indexCount"><para>Number of indices to draw.</para></param>	
            <param name="startIndexLocation"><para>The location of the first index read by the GPU from the index buffer.</para></param>	
            <param name="baseVertexLocation"><para>A value added to each index before reading a vertex from the vertex buffer.</para></param>	
            <remarks>	
            A draw API submits work to the rendering pipeline.If the sum of both indices is negative, the result of the function call is undefined.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::DrawIndexed']/*"/>	
            <unmanaged>void ID3D11DeviceContext::DrawIndexed([In] unsigned int IndexCount,[In] unsigned int StartIndexLocation,[In] int BaseVertexLocation)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.Draw(System.Int32,System.Int32)">
            <summary>	
            Draw non-indexed, non-instanced primitives.	
            </summary>	
            <param name="vertexCount"><para>Number of vertices to draw.</para></param>	
            <param name="startVertexLocation"><para>Index of the first vertex, which is usually an offset in a vertex buffer; it could also be used as the first vertex id generated for a shader parameter marked with the SV_TargetId system-value semantic.</para></param>	
            <remarks>	
            A draw API submits work to the rendering pipeline.The vertex data for a draw call normally comes from a vertex buffer that is bound to the pipeline. However, you could also provide the vertex data from a shader that has vertex data marked with the SV_VertexId system-value semantic.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::Draw']/*"/>	
            <unmanaged>void ID3D11DeviceContext::Draw([In] unsigned int VertexCount,[In] unsigned int StartVertexLocation)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.MapSubresource(SharpDX.Direct3D11.Resource,System.Int32,SharpDX.Direct3D11.MapMode,SharpDX.Direct3D11.MapFlags)">
            <summary>	
            Gets a reference to the data contained in a subresource, and denies the GPU access to that subresource.	
            </summary>	
            <param name="resourceRef"><para>A reference to a <see cref="T:SharpDX.Direct3D11.Resource"/> interface.</para></param>	
            <param name="subresource"><para>Index number of the subresource.</para></param>	
            <param name="mapType"><para>Specifies the CPU's read and write permissions for a resource. For possible values, see <see cref="T:SharpDX.Direct3D11.MapMode"/>.</para></param>	
            <param name="mapFlags"><para> Flag that specifies what the CPU should do when the GPU is busy. This flag is optional.</para></param>	
            <returns><para>A reference to the mapped subresource (see <see cref="T:SharpDX.DataBox"/>).</para></returns>	
            <remarks>	
            If you call Map on a deferred context, you can only pass <see cref="F:SharpDX.Direct3D11.MapMode.WriteDiscard"/>, <see cref="F:SharpDX.Direct3D11.MapMode.WriteNoOverwrite"/>, or both to the MapType parameter. Other <see cref="T:SharpDX.Direct3D11.MapMode"/>-typed values are not supported for a deferred context.The Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, can  map shader resource views (SRVs) of dynamic buffers with <see cref="F:SharpDX.Direct3D11.MapMode.WriteNoOverwrite"/>.  The Direct3D 11 and earlier runtimes limited mapping to vertex or index buffers.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::Map']/*"/>	
            <unmanaged>HRESULT ID3D11DeviceContext::Map([In] ID3D11Resource* pResource,[In] unsigned int Subresource,[In] D3D11_MAP MapType,[In] D3D11_MAP_FLAG MapFlags,[Out] D3D11_MAPPED_SUBRESOURCE* pMappedResource)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.UnmapSubresource(SharpDX.Direct3D11.Resource,System.Int32)">
            <summary>	
            Invalidate the reference to a resource and re-enable the GPU's access to that resource.	
            </summary>	
            <param name="resourceRef"><para>A reference to a <see cref="T:SharpDX.Direct3D11.Resource"/> interface.</para></param>	
            <param name="subresource"><para>A subresource to be unmapped.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::Unmap']/*"/>	
            <unmanaged>void ID3D11DeviceContext::Unmap([In] ID3D11Resource* pResource,[In] unsigned int Subresource)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.DrawIndexedInstanced(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>	
            Draw indexed, instanced primitives.	
            </summary>	
            <param name="indexCountPerInstance"><para>Number of indices read from the index buffer for each instance.</para></param>	
            <param name="instanceCount"><para>Number of instances to draw.</para></param>	
            <param name="startIndexLocation"><para>The location of the first index read by the GPU from the index buffer.</para></param>	
            <param name="baseVertexLocation"><para>A value added to each index before reading a vertex from the vertex buffer.</para></param>	
            <param name="startInstanceLocation"><para>A value added to each index before reading per-instance data from a vertex buffer.</para></param>	
            <remarks>	
            A draw API submits work to the rendering pipeline.Instancing may extend performance by reusing the same geometry to draw multiple objects in a scene. One example of instancing could be  to draw the same object with different positions and colors. Indexing requires multiple vertex buffers: at least one for per-vertex data  and a second buffer for per-instance data.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::DrawIndexedInstanced']/*"/>	
            <unmanaged>void ID3D11DeviceContext::DrawIndexedInstanced([In] unsigned int IndexCountPerInstance,[In] unsigned int InstanceCount,[In] unsigned int StartIndexLocation,[In] int BaseVertexLocation,[In] unsigned int StartInstanceLocation)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.DrawInstanced(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>	
            Draw non-indexed, instanced primitives.	
            </summary>	
            <param name="vertexCountPerInstance"><para>Number of vertices to draw.</para></param>	
            <param name="instanceCount"><para>Number of instances to draw.</para></param>	
            <param name="startVertexLocation"><para>Index of the first vertex.</para></param>	
            <param name="startInstanceLocation"><para>A value added to each index before reading per-instance data from a vertex buffer.</para></param>	
            <remarks>	
            A draw API submits work to the rendering pipeline.Instancing may extend performance by reusing the same geometry to draw multiple objects in a scene. One example of instancing could be  to draw the same object with different positions and colors.The vertex data for an instanced draw call normally comes from a vertex buffer that is bound to the pipeline.  However, you could also provide the vertex data from a shader that has instanced data identified with a system-value semantic (SV_InstanceID).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::DrawInstanced']/*"/>	
            <unmanaged>void ID3D11DeviceContext::DrawInstanced([In] unsigned int VertexCountPerInstance,[In] unsigned int InstanceCount,[In] unsigned int StartVertexLocation,[In] unsigned int StartInstanceLocation)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)">
            <summary>	
            Mark the beginning of a series of commands.	
            </summary>	
            <param name="asyncRef"><para>A reference to an <see cref="T:SharpDX.Direct3D11.Asynchronous"/> interface.</para></param>	
            <remarks>	
            Use <see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/> to mark the ending of the series of commands.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::Begin']/*"/>	
            <unmanaged>void ID3D11DeviceContext::Begin([In] ID3D11Asynchronous* pAsync)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)">
            <summary>	
            Mark the end of a series of commands.	
            </summary>	
            <param name="asyncRef"><para>A reference to an <see cref="T:SharpDX.Direct3D11.Asynchronous"/> interface.</para></param>	
            <remarks>	
            Use <see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/> to mark the beginning of the series of commands.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::End']/*"/>	
            <unmanaged>void ID3D11DeviceContext::End([In] ID3D11Asynchronous* pAsync)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)">
            <summary>	
            Get data from the graphics processing unit (GPU) asynchronously.	
            </summary>	
            <param name="asyncRef"><para>A reference to an <see cref="T:SharpDX.Direct3D11.Asynchronous"/> interface for the object about which GetData retrieves data.</para></param>	
            <param name="dataRef"><para>Address of memory that will receive the data. If <c>null</c>, GetData will be used only to check status. The type of data output depends on the type of asynchronous interface.</para></param>	
            <param name="dataSize"><para>Size of the data to retrieve or 0. Must be 0 when pData is <c>null</c>.</para></param>	
            <param name="getDataFlags"><para>Optional flags. Can be 0 or any combination of the flags enumerated by <see cref="T:SharpDX.Direct3D11.AsynchronousFlags"/>.</para></param>	
            <returns>This method returns one of the Direct3D 11 Return Codes. A return value of <see cref="F:SharpDX.Result.Ok"/> indicates that the data at pData is available for the calling application to access. A return value of S_FALSE indicates that the data is not yet available. If the data is not yet available, the application must call GetData until the data is available.</returns>	
            <remarks>	
            Queries in a deferred context are limited to predicated drawing. That is, you cannot call <see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/> on a deferred context to get data about a query; you can only call GetData on the immediate context to get data about a query. For predicated drawing, the results of a predication-type query are used by the GPU and not returned to an application. For more information about predication and predicated drawing, see D3D11DeviceContext::SetPredication.GetData retrieves the data that the runtime collected between calls to <see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/> and <see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/>.  Certain queries only require a call to <see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/> in which case the data returned by GetData is accurate up to the last call to <see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/>. For information about the queries that only require a call to <see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/> and about the type of data that GetData retrieves for each query, see <see cref="T:SharpDX.Direct3D11.QueryType"/>.If DataSize is 0, GetData is only used to check status.An application gathers counter data by calling <see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/>, issuing some graphics commands, calling <see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/>, and then calling <see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/> to get data about what happened in between the Begin and End calls. For information about performance counter types, see <see cref="T:SharpDX.Direct3D11.CounterKind"/>. The counter data is of type FLOAT32.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::GetData']/*"/>	
            <unmanaged>HRESULT ID3D11DeviceContext::GetData([In] ID3D11Asynchronous* pAsync,[Out, Buffer, Optional] void* pData,[In] unsigned int DataSize,[In] D3D11_ASYNC_GETDATA_FLAG GetDataFlags)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.SetPredication(SharpDX.Direct3D11.Predicate,System.Boolean)">
            <summary>	
            Set a rendering predicate.	
            </summary>	
            <param name="predicateRef"><para>Pointer to a predicate (see <see cref="T:SharpDX.Direct3D11.Predicate"/>). A <c>null</c> value indicates "no" predication; in this case, the value of PredicateValue is irrelevent but will be preserved for <see cref="M:SharpDX.Direct3D11.DeviceContext.GetPredication(System.Boolean@)"/>.</para></param>	
            <param name="predicateValue"><para>If TRUE, rendering will be affected by when the predicate's conditions are met. If <see cref="F:SharpDX.Result.False"/>, rendering will be affected when the conditions are not met.</para></param>	
            <remarks>	
            The predicate must be in the "issued" or "signaled" state to be used for predication. While the predicate is set for predication, calls to <see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/> and <see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/> are invalid.This method is used to denote that subsequent rendering and resource manipulation commands are not actually performed if the resulting Predicate data of the Predicate is equal to the PredicateValue. However, some Predicates are only hints, so they may not actually prevent operations from being performed.The primary usefulness of Predication is to allow an application to issue graphics commands without taking the performance hit of spinning, waiting for <see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/> to return. So, Predication can occur while <see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/> returns S_FALSE. Another way to think of it: an application can also use Predication as a fallback, if it is possible that <see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/> returns S_FALSE. If <see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/> returns <see cref="F:SharpDX.Result.Ok"/>, the application can skip calling the graphics commands manually with it's own application logic.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::SetPredication']/*"/>	
            <unmanaged>void ID3D11DeviceContext::SetPredication([In, Optional] ID3D11Predicate* pPredicate,[In] BOOL PredicateValue)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.DrawAuto">
            <summary>	
            Draw geometry of an unknown size.	
            </summary>	
            <remarks>	
            A draw API submits work to the rendering pipeline. This API submits work of an unknown size that was processed by the input assembler, vertex shader, and stream-output stages;  the work may or may not have gone through the geometry-shader stage.After data has been streamed out to stream-output stage buffers, those buffers can be again bound to the Input Assembler stage at input slot 0 and DrawAuto will draw them without the application needing to know the amount of data that was written to the buffers. A measurement of the amount of data written to the SO stage buffers is maintained internally when the data is streamed out. This means that the CPU does not need to fetch the measurement before re-binding the data that was streamed as input data. Although this amount is tracked internally, it is still the responsibility of applications to use input layouts to describe the format of the data in the SO stage buffers so that the layouts are available when the buffers are again bound to the input assembler.The following diagram shows the DrawAuto process.Calling DrawAuto does not change the state of the streaming-output buffers that were bound again as inputs.DrawAuto only works when drawing with one input buffer bound as an input to the IA stage at slot 0. Applications must create the SO buffer resource with both binding flags, <see cref="F:SharpDX.Direct3D11.BindFlags.VertexBuffer"/> and <see cref="F:SharpDX.Direct3D11.BindFlags.StreamOutput"/>.This API does not support indexing or instancing.If an application needs to retrieve the size of the streaming-output buffer, it can query for statistics on streaming output by using <see cref="F:SharpDX.Direct3D11.QueryType.StreamOutputStatistics"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::DrawAuto']/*"/>	
            <unmanaged>void ID3D11DeviceContext::DrawAuto()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.DrawIndexedInstancedIndirect(SharpDX.Direct3D11.Buffer,System.Int32)">
            <summary>	
            Draw indexed, instanced, GPU-generated primitives.	
            </summary>	
            <param name="bufferForArgsRef"><para>A reference to an <see cref="T:SharpDX.Direct3D11.Buffer"/>, which is a buffer containing the GPU generated primitives.</para></param>	
            <param name="alignedByteOffsetForArgs"><para>Offset in pBufferForArgs to the start of the GPU generated primitives.</para></param>	
            <remarks>	
            When an application creates a buffer that is associated with the <see cref="T:SharpDX.Direct3D11.Buffer"/> interface that  pBufferForArgs points to, the application must set the <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.DrawindirectArgs"/> flag in the MiscFlags member of the <see cref="T:SharpDX.Direct3D11.BufferDescription"/> structure that describes the buffer. To create the buffer, the application calls the <see cref="M:SharpDX.Direct3D11.Device.CreateBuffer(SharpDX.Direct3D11.BufferDescription@,System.Nullable{SharpDX.DataBox},SharpDX.Direct3D11.Buffer)"/> method and in this call passes a reference to <see cref="T:SharpDX.Direct3D11.BufferDescription"/> in the pDesc parameter.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::DrawIndexedInstancedIndirect']/*"/>	
            <unmanaged>void ID3D11DeviceContext::DrawIndexedInstancedIndirect([In] ID3D11Buffer* pBufferForArgs,[In] unsigned int AlignedByteOffsetForArgs)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.DrawInstancedIndirect(SharpDX.Direct3D11.Buffer,System.Int32)">
            <summary>	
            Draw instanced, GPU-generated primitives.	
            </summary>	
            <param name="bufferForArgsRef"><para>A reference to an <see cref="T:SharpDX.Direct3D11.Buffer"/>, which is a buffer containing the GPU generated primitives.</para></param>	
            <param name="alignedByteOffsetForArgs"><para>Offset in pBufferForArgs to the start of the GPU generated primitives.</para></param>	
            <remarks>	
            When an application creates a buffer that is associated with the <see cref="T:SharpDX.Direct3D11.Buffer"/> interface that  pBufferForArgs points to, the application must set the <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.DrawindirectArgs"/> flag in the MiscFlags member of the <see cref="T:SharpDX.Direct3D11.BufferDescription"/> structure that describes the buffer. To create the buffer, the application calls the <see cref="M:SharpDX.Direct3D11.Device.CreateBuffer(SharpDX.Direct3D11.BufferDescription@,System.Nullable{SharpDX.DataBox},SharpDX.Direct3D11.Buffer)"/> method and in this call passes a reference to <see cref="T:SharpDX.Direct3D11.BufferDescription"/> in the pDesc parameter.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::DrawInstancedIndirect']/*"/>	
            <unmanaged>void ID3D11DeviceContext::DrawInstancedIndirect([In] ID3D11Buffer* pBufferForArgs,[In] unsigned int AlignedByteOffsetForArgs)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.Dispatch(System.Int32,System.Int32,System.Int32)">
            <summary>	
            Execute a command list from a thread group.	
            </summary>	
            <param name="threadGroupCountX"><para>The number of groups dispatched in the x direction. ThreadGroupCountX must be less than D3D11_CS_DISPATCH_MAX_THREAD_GROUPS_PER_DIMENSION (65535).</para></param>	
            <param name="threadGroupCountY"><para>The number of groups dispatched in the y direction. ThreadGroupCountY must be less than D3D11_CS_DISPATCH_MAX_THREAD_GROUPS_PER_DIMENSION (65535).</para></param>	
            <param name="threadGroupCountZ"><para>The number of groups dispatched in the z direction.  ThreadGroupCountZ must be less than D3D11_CS_DISPATCH_MAX_THREAD_GROUPS_PER_DIMENSION (65535).  In feature level 10 the value for ThreadGroupCountZ must be 1.</para></param>	
            <remarks>	
            You call the Dispatch method to execute commands in a compute shader. A compute shader can be run on many threads in parallel, within a thread group. Index a particular thread, within a thread group using a 3D vector  given by (x,y,z).In the following illustration, assume a thread group with 50 threads where the size of the group is given by (5,5,2). A single thread is identified from a  thread group with 50 threads in it, using the vector (4,1,1).The following illustration shows the relationship between the parameters passed to <see cref="M:SharpDX.Direct3D11.DeviceContext.Dispatch(System.Int32,System.Int32,System.Int32)"/>, Dispatch(5,3,2), the values specified in the numthreads attribute, numthreads(10,8,3), and values that will passed to the compute shader for the thread-related system values 	
            (SV_GroupIndex,SV_DispatchThreadID,SV_GroupThreadID,SV_GroupID).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::Dispatch']/*"/>	
            <unmanaged>void ID3D11DeviceContext::Dispatch([In] unsigned int ThreadGroupCountX,[In] unsigned int ThreadGroupCountY,[In] unsigned int ThreadGroupCountZ)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.DispatchIndirect(SharpDX.Direct3D11.Buffer,System.Int32)">
            <summary>	
            Execute a command list over one or more thread groups.	
            </summary>	
            <param name="bufferForArgsRef"><para>A reference to an <see cref="T:SharpDX.Direct3D11.Buffer"/>, which must be loaded with data that matches the argument list for <see cref="M:SharpDX.Direct3D11.DeviceContext.Dispatch(System.Int32,System.Int32,System.Int32)"/>.</para></param>	
            <param name="alignedByteOffsetForArgs"><para>A byte-aligned offset between the start of the buffer and the arguments.</para></param>	
            <remarks>	
            You call the DispatchIndirect method to execute commands in a compute shader.When an application creates a buffer that is associated with the <see cref="T:SharpDX.Direct3D11.Buffer"/> interface that  pBufferForArgs points to, the application must set the <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.DrawindirectArgs"/> flag in the MiscFlags member of the <see cref="T:SharpDX.Direct3D11.BufferDescription"/> structure that describes the buffer. To create the buffer, the application calls the <see cref="M:SharpDX.Direct3D11.Device.CreateBuffer(SharpDX.Direct3D11.BufferDescription@,System.Nullable{SharpDX.DataBox},SharpDX.Direct3D11.Buffer)"/> method and in this call passes a reference to <see cref="T:SharpDX.Direct3D11.BufferDescription"/> in the pDesc parameter.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::DispatchIndirect']/*"/>	
            <unmanaged>void ID3D11DeviceContext::DispatchIndirect([In] ID3D11Buffer* pBufferForArgs,[In] unsigned int AlignedByteOffsetForArgs)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.CopySubresourceRegion_(SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32,System.Int32,SharpDX.Direct3D11.Resource,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion})">
            <summary>	
            Copy a region from a source resource to a destination resource.	
            </summary>	
            <param name="dstResourceRef"><para>A reference to the destination resource (see <see cref="T:SharpDX.Direct3D11.Resource"/>).</para></param>	
            <param name="dstSubresource"><para>Destination subresource index.</para></param>	
            <param name="dstX"><para>The x-coordinate of the upper left corner of the destination region.</para></param>	
            <param name="dstY"><para>The y-coordinate of the upper left corner of the destination region. For a 1D subresource, this must be zero.</para></param>	
            <param name="dstZ"><para>The z-coordinate of the upper left corner of the destination region. For a 1D or 2D subresource, this must be zero.</para></param>	
            <param name="srcResourceRef"><para>A reference to the source resource (see <see cref="T:SharpDX.Direct3D11.Resource"/>).</para></param>	
            <param name="srcSubresource"><para>Source subresource index.</para></param>	
            <param name="srcBoxRef"><para>A reference to a 3D box (see <see cref="T:SharpDX.Direct3D11.ResourceRegion"/>) that defines the source subresources that can be copied. If <c>null</c>, the entire source subresource is copied. The box must fit within the source resource.</para></param>	
            <remarks>	
            The source box must be within the size of the source resource. The destination offsets, (x, y, and z) allow the source box to be offset when writing into the destination resource; however, the dimensions of the source box and the offsets must be within the size of the resource.If the resources are buffers, all coordinates are in bytes; if the resources are textures, all coordinates are in texels. D3D11CalcSubresource is a helper function for calculating subresource indexes.CopySubresourceRegion performs the copy on the GPU (similar to a memcpy by the CPU). As a consequence, the source and destination resources:Must be different subresources (although they can be from the same resource). Must be the same type. Must have compatible DXGI formats (identical or from the same type group). For example, a <see cref="F:SharpDX.DXGI.Format.R32G32B32_Float"/> texture can be copied to an <see cref="F:SharpDX.DXGI.Format.R32G32B32_UInt"/> texture since both of these formats are in the <see cref="F:SharpDX.DXGI.Format.R32G32B32_Typeless"/> group. May not be currently mapped.CopySubresourceRegion only supports copy; it does not support any stretch, color key, blend, or format conversions. An application that needs to copy an entire resource should use <see cref="M:SharpDX.Direct3D11.DeviceContext.CopyResource_(SharpDX.Direct3D11.Resource,SharpDX.Direct3D11.Resource)"/> instead.CopySubresourceRegion is an asynchronous call, which may be added to the command-buffer queue, this attempts to remove pipeline stalls that may occur when copying data. For more information about pipeline stalls, see performance considerations.Note??If you use CopySubresourceRegion with a depth-stencil buffer or a multisampled resource, you must copy the whole subresource. In this situation, you must pass 0 to the DstX, DstY, and DstZ parameters and <c>null</c> to the pSrcBox parameter. In addition, source and destination resources, which are represented by the pSrcResource and pDstResource parameters, should have identical sample count values.ExampleThe following code snippet copies a box (located at (120,100),(200,220)) from a source texture into a reqion (10,20),(90,140) in a destination texture.<code>	
             <see cref="T:SharpDX.Direct3D11.ResourceRegion"/> sourceRegion;	
            sourceRegion.left = 120;	
            sourceRegion.right = 200;	
            sourceRegion.top = 100;	
            sourceRegion.bottom = 220;	
            sourceRegion.front = 0;	
            sourceRegion.back = 1; pd3dDeviceContext-&gt;CopySubresourceRegion( pDestTexture, 0, 10, 20, 0, pSourceTexture, 0, &amp;sourceRegion );	
            	
            </code>Notice, that for a 2D texture, front and back are set to 0 and 1 respectively.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::CopySubresourceRegion']/*"/>	
            <unmanaged>void ID3D11DeviceContext::CopySubresourceRegion([In] ID3D11Resource* pDstResource,[In] unsigned int DstSubresource,[In] unsigned int DstX,[In] unsigned int DstY,[In] unsigned int DstZ,[In] ID3D11Resource* pSrcResource,[In] unsigned int SrcSubresource,[In, Optional] const D3D11_BOX* pSrcBox)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.CopyResource_(SharpDX.Direct3D11.Resource,SharpDX.Direct3D11.Resource)">
            <summary>	
            Copy the entire contents of the source resource to the destination resource using the GPU.	
            </summary>	
            <param name="dstResourceRef"><para>A reference to the destination resource (see <see cref="T:SharpDX.Direct3D11.Resource"/>).</para></param>	
            <param name="srcResourceRef"><para>A reference to the source resource (see <see cref="T:SharpDX.Direct3D11.Resource"/>).</para></param>	
            <remarks>	
            This method is unusual in that it causes the GPU to perform the copy operation (similar to a memcpy by the CPU). As a result, it has a few restrictions designed for improving performance. For instance, the source and destination resources:Must be different resources. Must be the same type. Must have identical dimensions (including width, height, depth, and size as appropriate). Will only be copied. CopyResource does not support any stretch, color key, blend, or format conversions. Must have compatible DXGI formats, which means the formats must be identical or at least from the same type group. For example, a <see cref="F:SharpDX.DXGI.Format.R32G32B32_Float"/> texture can be copied to an <see cref="F:SharpDX.DXGI.Format.R32G32B32_UInt"/> texture since both of these formats are in the <see cref="F:SharpDX.DXGI.Format.R32G32B32_Typeless"/> group. Might not be currently mapped.You cannot use an Immutable resource as a destination. You can use a   depth-stencil resource as either a source or a destination.  Resources created with multisampling capability (see <see cref="T:SharpDX.DXGI.SampleDescription"/>) can be used as source and destination only if both source and destination have identical multisampled count and quality. If source and destination differ in multisampled count and quality or if one is multisampled and the other is not multisampled the call to <see cref="M:SharpDX.Direct3D11.DeviceContext.CopyResource_(SharpDX.Direct3D11.Resource,SharpDX.Direct3D11.Resource)"/> fails.The method is an asynchronous call which may be added to the command-buffer queue. This attempts to remove pipeline stalls that may occur when copying data.An application that only needs to copy a portion of the data in a resource should use <see cref="M:SharpDX.Direct3D11.DeviceContext.CopySubresourceRegion_(SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32,System.Int32,SharpDX.Direct3D11.Resource,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion})"/> instead.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::CopyResource']/*"/>	
            <unmanaged>void ID3D11DeviceContext::CopyResource([In] ID3D11Resource* pDstResource,[In] ID3D11Resource* pSrcResource)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.UpdateSubresource(SharpDX.Direct3D11.Resource,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion},System.IntPtr,System.Int32,System.Int32)">
            <summary>	
            The CPU copies data from memory to a subresource created in non-mappable memory.	
            </summary>	
            <param name="dstResourceRef"><para>A reference to the destination resource (see <see cref="T:SharpDX.Direct3D11.Resource"/>).</para></param>	
            <param name="dstSubresource"><para>A zero-based index, that identifies the destination subresource. See D3D11CalcSubresource for more details.</para></param>	
            <param name="dstBoxRef"><para>A reference to a box that defines the portion of the destination subresource to copy the resource data into. Coordinates are in bytes for buffers and in texels for textures. If <c>null</c>, the data is written to the destination subresource with no offset. The dimensions of the source must fit the destination (see <see cref="T:SharpDX.Direct3D11.ResourceRegion"/>).</para></param>	
            <param name="srcDataRef"><para>A reference to the source data in memory.</para></param>	
            <param name="srcRowPitch"><para>The size of one row of the source data.</para></param>	
            <param name="srcDepthPitch"><para>The size of one depth slice of source data.</para></param>	
            <remarks>	
            For a shader-constant buffer; set pDstBox to <c>null</c>. It is not possible to use this method to partially update a shader-constant buffer.A resource cannot be used as a destination if:the resource is created with immutable or dynamic usage. the resource is created as a depth-stencil resource. the resource is created with multisampling capability (see <see cref="T:SharpDX.DXGI.SampleDescription"/>).When UpdateSubresource returns, the application is free to change or even free the data pointed to by pSrcData because the method has already copied/snapped away the original contents.The performance of UpdateSubresource depends on whether or not there is contention for the destination resource. For example, contention for a vertex buffer resource occurs when the application executes a Draw call and later calls UpdateSubresource on the same vertex buffer before the Draw call is actually executed by the GPU.When there is contention for the resource, UpdateSubresource will perform 2 copies of the source data. First, the data is copied by the CPU to a temporary storage space accessible by the command buffer. This copy happens before the method returns.  A second copy is then performed by the GPU to copy the source data into non-mappable memory. This second copy happens asynchronously because it is executed by GPU when the command buffer is flushed. When there is no resource contention, the behavior of UpdateSubresource is dependent on which is faster (from the CPU's perspective): copying the data to the command buffer and then having a second copy execute when the command buffer is flushed, or having the CPU copy the data to the final resource location. This is dependent on the architecture of the underlying system.To better understand the source row pitch and source depth pitch parameters, the following illustration shows a 3D volume texture.Each block in this visual represents an element of data, and the size of each element is dependent on the resource's format. For example, if the resource format is <see cref="F:SharpDX.DXGI.Format.R32G32B32A32_Float"/>, the size of each element would be 128 bits, or 16 bytes. This 3D volume texture has a width of two, a height of three, and a depth of four.To calculate the source row pitch and source depth pitch for a given resource, use the following formulas:Source Row Pitch = [size of one element in bytes] * [number of elements in one row] Source Depth Pitch = [Source Row Pitch] * [number of rows (height)]In the case of this example 3D volume texture where the size of each element is 16 bytes, the formulas are as follows:Source Row Pitch = 16 * 2 = 32 Source Depth Pitch = 16 * 2 * 3 = 96The following illustration shows the resource as it is laid out in memory.For example, the following code snippet shows how to specify a destination region in a 2D texture. Assume the destination texture is 512x512 and the operation will copy the data pointed to by pData to  [(120,100)..(200,220)] in the destination texture. Also assume that rowPitch has been initialized with the proper value (as explained above). front and back are set to 0 and 1 respectively, because by having front equal to back, the box is technically empty.<code>	
             <see cref="T:SharpDX.Direct3D11.ResourceRegion"/> destRegion;	
            destRegion.left = 120;	
            destRegion.right = 200;	
            destRegion.top = 100;	
            destRegion.bottom = 220;	
            destRegion.front = 0;	
            destRegion.back = 1; pd3dDeviceContext-&gt;UpdateSubresource( pDestTexture, 0, &amp;destRegion, pData, rowPitch, 0 );	
            	
            </code>The 1D case is similar. The following snippet shows how to specify a destination region in a 1D texture. Use the same assumptions as above, except that the texture is 512 in length.<code>	
             <see cref="T:SharpDX.Direct3D11.ResourceRegion"/> destRegion;	
            destRegion.left = 120	
            destRegion.right = 200;	
            destRegion.top = 0;	
            destRegion.bottom = 1;	
            destRegion.front = 0;	
            destRegion.back = 1; pd3dDeviceContext-&gt;UpdateSubresource( pDestTexture, 0, &amp;destRegion, pData, rowPitch, 0 );	
            	
            </code>Calling UpdateSubresource on a Deferred ContextIf your application calls UpdateSubresource on a deferred context with a destination box?to which pDstBox points?that has a non-(0,0,0) offset, and if the driver does not support command lists, UpdateSubresource inappropriately applies that destination-box offset to the pSrcData parameter. To work around this behavior, use the following code:<code>	
             <see cref="T:SharpDX.Result"/> UpdateSubresource_Workaround( <see cref="T:SharpDX.Direct3D11.Device"/> *pDevice, <see cref="T:SharpDX.Direct3D11.DeviceContext"/> *pDeviceContext, <see cref="T:SharpDX.Direct3D11.Resource"/> *pDstResource, UINT dstSubresource, const <see cref="T:SharpDX.Direct3D11.ResourceRegion"/> *pDstBox, const void *pSrcData, UINT srcBytesPerElement, UINT srcRowPitch, UINT srcDepthPitch, bool* pDidWorkAround )	
            { <see cref="T:SharpDX.Result"/> hr = <see cref="F:SharpDX.Result.Ok"/>; bool needWorkaround = false; <see cref="T:SharpDX.Direct3D11.DeviceContextType"/> contextType = pDeviceContext-&gt;GetType(); if( pDstBox &amp;&amp; (<see cref="F:SharpDX.Direct3D11.DeviceContextType.Deferred"/> == contextType) ) { <see cref="T:SharpDX.Direct3D11.FeatureDataThreading"/> threadingCaps = { <see cref="F:SharpDX.Result.False"/>, <see cref="F:SharpDX.Result.False"/> }; hr = pDevice-&gt;CheckFeatureSupport( <see cref="F:SharpDX.Direct3D11.Feature.Threading"/>, &amp;threadingCaps, sizeof(threadingCaps) ); if( SUCCEEDED(hr) ) { if( !threadingCaps.DriverCommandLists ) { needWorkaround = true; } } } const void* pAdjustedSrcData = pSrcData; if( needWorkaround ) { <see cref="T:SharpDX.Direct3D11.ResourceRegion"/> alignedBox = *pDstBox; // convert from pixels to blocks if( m_bBC ) { alignedBox.left     /= 4; alignedBox.right    /= 4; alignedBox.top      /= 4; alignedBox.bottom   /= 4; } pAdjustedSrcData = ((const BYTE*)pSrcData) - (alignedBox.front * srcDepthPitch) - (alignedBox.top * srcRowPitch) - (alignedBox.left * srcBytesPerElement); } pDeviceContext-&gt;UpdateSubresource( pDstResource, dstSubresource, pDstBox, pAdjustedSrcData, srcRowPitch, srcDepthPitch ); if( pDidWorkAround ) { *pDidWorkAround = needWorkaround; } return hr;	
            }	
            	
            </code>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::UpdateSubresource']/*"/>	
            <unmanaged>void ID3D11DeviceContext::UpdateSubresource([In] ID3D11Resource* pDstResource,[In] unsigned int DstSubresource,[In, Optional] const D3D11_BOX* pDstBox,[In] const void* pSrcData,[In] unsigned int SrcRowPitch,[In] unsigned int SrcDepthPitch)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.CopyStructureCount(SharpDX.Direct3D11.Buffer,System.Int32,SharpDX.Direct3D11.UnorderedAccessView)">
            <summary>	
            Copies data from a buffer holding variable length data.	
            </summary>	
            <param name="dstBufferRef"><para>Pointer to <see cref="T:SharpDX.Direct3D11.Buffer"/>.  This can be any buffer resource that other copy commands,  such as <see cref="M:SharpDX.Direct3D11.DeviceContext.CopyResource_(SharpDX.Direct3D11.Resource,SharpDX.Direct3D11.Resource)"/> or <see cref="M:SharpDX.Direct3D11.DeviceContext.CopySubresourceRegion_(SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32,System.Int32,SharpDX.Direct3D11.Resource,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion})"/>, are able to write to.</para></param>	
            <param name="dstAlignedByteOffset"><para>Offset from the start of pDstBuffer to write 32-bit UINT structure (vertex) count from pSrcView.</para></param>	
            <param name="srcViewRef"><para>Pointer to an <see cref="T:SharpDX.Direct3D11.UnorderedAccessView"/> of a Structured Buffer resource created with either  <see cref="F:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.Append"/> or <see cref="F:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.Counter"/> specified  when the UAV was created.   These types of resources have hidden counters tracking "how many" records have  been written.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::CopyStructureCount']/*"/>	
            <unmanaged>void ID3D11DeviceContext::CopyStructureCount([In] ID3D11Buffer* pDstBuffer,[In] unsigned int DstAlignedByteOffset,[In] ID3D11UnorderedAccessView* pSrcView)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.ClearRenderTargetView(SharpDX.Direct3D11.RenderTargetView,SharpDX.Color4)">
            <summary>	
            Set all the elements in a render target to one value.	
            </summary>	
            <param name="renderTargetViewRef"><para>Pointer to the rendertarget.</para></param>	
            <param name="colorRGBA"><para>A 4-component array that represents the color to fill the render target with.</para></param>	
            <remarks>	
            Applications that wish to clear a render target to a specific integer value bit pattern should render a screen-aligned quad instead of using this method.  The reason for this is because this method accepts as input a floating point value, which may not have the same bit pattern as the original integer.<para>Differences between Direct3D 9 and Direct3D 11/10:</para>	
             <para>Unlike Direct3D 9, the full extent of the resource view is always cleared. Viewport and scissor settings are not applied.</para>?	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::ClearRenderTargetView']/*"/>	
            <unmanaged>void ID3D11DeviceContext::ClearRenderTargetView([In] ID3D11RenderTargetView* pRenderTargetView,[In] const SHARPDX_COLOR4* ColorRGBA)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.ClearUnorderedAccessView(SharpDX.Direct3D11.UnorderedAccessView,System.Int32)">
            <summary>	
            Clears an unordered access resource with bit-precise values.	
            </summary>	
            <param name="unorderedAccessViewRef">No documentation.</param>	
            <param name="values">No documentation.</param>	
            <remarks>	
            This API copies the lower ni bits from each array element i to the corresponding channel, where ni is the number of bits in  the ith channel of the resource format (for example, R8G8B8_FLOAT has 8 bits for the first 3 channels). This works on any UAV with no format conversion.  For a raw or structured buffer view, only the first array element value is used.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::ClearUnorderedAccessViewUint']/*"/>	
            <unmanaged>void ID3D11DeviceContext::ClearUnorderedAccessViewUint([In] ID3D11UnorderedAccessView* pUnorderedAccessView,[In] const unsigned int* Values)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.ClearUnorderedAccessView(SharpDX.Direct3D11.UnorderedAccessView,System.Single)">
            <summary>	
            Clears an unordered access resource with a float value.	
            </summary>	
            <param name="unorderedAccessViewRef">No documentation.</param>	
            <param name="values">No documentation.</param>	
            <remarks>	
            This API works on FLOAT, UNORM, and SNORM unordered access views (UAVs), with format conversion from FLOAT to *NORM where appropriate. On other UAVs, the operation is invalid and the call will not reach the driver.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::ClearUnorderedAccessViewFloat']/*"/>	
            <unmanaged>void ID3D11DeviceContext::ClearUnorderedAccessViewFloat([In] ID3D11UnorderedAccessView* pUnorderedAccessView,[In] const float* Values)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.ClearDepthStencilView(SharpDX.Direct3D11.DepthStencilView,SharpDX.Direct3D11.DepthStencilClearFlags,System.Single,System.Byte)">
            <summary>	
            Clears the depth-stencil resource.	
            </summary>	
            <param name="depthStencilViewRef"><para>Pointer to the depth stencil to be cleared.</para></param>	
            <param name="clearFlags"><para>Identify the type of data to clear (see <see cref="T:SharpDX.Direct3D11.DepthStencilClearFlags"/>).</para></param>	
            <param name="depth"><para>Clear the depth buffer with this value. This value will be clamped between 0 and 1.</para></param>	
            <param name="stencil"><para>Clear the stencil buffer with this value.</para></param>	
            <remarks>	
            <para>Differences between Direct3D 9 and Direct3D 11/10:</para>	
             <para>Unlike Direct3D 9, the full extent of the resource view is always cleared. Viewport and scissor settings are not applied.</para>?	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::ClearDepthStencilView']/*"/>	
            <unmanaged>void ID3D11DeviceContext::ClearDepthStencilView([In] ID3D11DepthStencilView* pDepthStencilView,[In] D3D11_CLEAR_FLAG ClearFlags,[In] float Depth,[In] unsigned char Stencil)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.GenerateMips(SharpDX.Direct3D11.ShaderResourceView)">
            <summary>	
            Generate mipmaps for the given shader resource.	
            </summary>	
            <param name="shaderResourceViewRef"><para>Pointer to an <see cref="T:SharpDX.Direct3D11.ShaderResourceView"/> interface that represents the shader resource.</para></param>	
            <remarks>	
            GenerateMips may be called on any shader-resource view in order to generate the lower mipmap levels. GenerateMips uses the largest mipmap level of the view to recursively generate the lower levels of the mip, stopping with the smallest level specified by the view. If the base resource was not created with <see cref="F:SharpDX.Direct3D11.BindFlags.RenderTarget"/> and <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.GenerateMipMaps"/>, this call has no effect.All video adapters support generating mipmaps if you are using any of the following formats:<code>	
             <see cref="F:SharpDX.DXGI.Format.A8_UNorm"/>	
            <see cref="F:SharpDX.DXGI.Format.R10G10B10A2_UNorm"/>	
            <see cref="F:SharpDX.DXGI.Format.R11G11B10_Float"/>	
            <see cref="F:SharpDX.DXGI.Format.R16_Float"/>	
            <see cref="F:SharpDX.DXGI.Format.R16_SNorm"/>	
            <see cref="F:SharpDX.DXGI.Format.R16_UNorm"/>	
            <see cref="F:SharpDX.DXGI.Format.R16G16_Float"/>	
            <see cref="F:SharpDX.DXGI.Format.R16G16_SNorm"/>	
            <see cref="F:SharpDX.DXGI.Format.R16G16_UNorm"/>	
            <see cref="F:SharpDX.DXGI.Format.R16G16B16A16_Float"/>	
            <see cref="F:SharpDX.DXGI.Format.R16G16B16A16_SNorm"/>	
            <see cref="F:SharpDX.DXGI.Format.R16G16B16A16_UNorm"/>	
            <see cref="F:SharpDX.DXGI.Format.R32_Float"/>	
            <see cref="F:SharpDX.DXGI.Format.R32G32_Float"/>	
            <see cref="F:SharpDX.DXGI.Format.R32G32B32A32_Float"/>	
            <see cref="F:SharpDX.DXGI.Format.R8_SNorm"/>	
            <see cref="F:SharpDX.DXGI.Format.R8_UNorm"/>	
            <see cref="F:SharpDX.DXGI.Format.R8G8_SNorm"/>	
            <see cref="F:SharpDX.DXGI.Format.R8G8_UNorm"/>	
            <see cref="F:SharpDX.DXGI.Format.R8G8B8A8_SNorm"/>	
            <see cref="F:SharpDX.DXGI.Format.R8G8B8A8_UNorm"/>	
            <see cref="F:SharpDX.DXGI.Format.R8G8B8A8_UNorm_SRgb"/>	
            	
            </code>Some video adapters support generating mipmaps if you are using this format:<code>	
             <see cref="F:SharpDX.DXGI.Format.R32G32B32_Float"/>	
            	
            </code>For all other unsupported formats, this method will silently fail.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::GenerateMips']/*"/>	
            <unmanaged>void ID3D11DeviceContext::GenerateMips([In] ID3D11ShaderResourceView* pShaderResourceView)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.SetMinimumLod(SharpDX.Direct3D11.Resource,System.Single)">
            <summary>	
            Sets the minimum level-of-detail (LOD) for a resource.	
            </summary>	
            <param name="resourceRef"><para>A reference to an <see cref="T:SharpDX.Direct3D11.Resource"/> that represents the resource.</para></param>	
            <param name="minLOD"><para>The level-of-detail, which ranges between 0 and the maximum number of mipmap levels of the resource. For example, the maximum number of mipmap levels of a 1D texture is specified in the  MipLevels member of the  <see cref="T:SharpDX.Direct3D11.Texture1DDescription"/> structure.</para></param>	
            <remarks>	
            To use a resource with SetResourceMinLOD, you must set the <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.ResourceClamp"/> flag when you create that resource.For Direct3D 10 and Direct3D 10.1, when sampling from a texture resource in a shader, the sampler can define a minimum LOD clamp to force sampling from less detailed mip levels.  For Direct3D 11, this functionality is extended from the sampler to the entire resource. Therefore, the application can specify the highest-resolution mip level of a resource that is available for access. This restricts the set of mip levels that are required to be resident in GPU memory, thereby saving memory.The set of mip levels resident per-resource in GPU memory can be specified by the user.Minimum LOD affects all of the resident mip levels. Therefore, only the resident mip levels can be updated and read from.All methods that access texture resources must adhere to minimum LOD clamps.Empty-set accesses are handled as out-of-bounds cases.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::SetResourceMinLOD']/*"/>	
            <unmanaged>void ID3D11DeviceContext::SetResourceMinLOD([In] ID3D11Resource* pResource,[In] float MinLOD)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.GetMinimumLod(SharpDX.Direct3D11.Resource)">
            <summary>	
            Gets the minimum level-of-detail (LOD).	
            </summary>	
            <param name="resourceRef"><para>A reference to an <see cref="T:SharpDX.Direct3D11.Resource"/> which represents the resource.</para></param>	
            <returns>Returns the minimum LOD.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::GetResourceMinLOD']/*"/>	
            <unmanaged>float ID3D11DeviceContext::GetResourceMinLOD([In] ID3D11Resource* pResource)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.ResolveSubresource_(SharpDX.Direct3D11.Resource,System.Int32,SharpDX.Direct3D11.Resource,System.Int32,SharpDX.DXGI.Format)">
            <summary>	
            Copy a multisampled resource into a non-multisampled resource.	
            </summary>	
            <param name="dstResourceRef"><para>Destination resource. Must be a created with the <see cref="F:SharpDX.Direct3D11.ResourceUsage.Default"/> flag and be single-sampled. See <see cref="T:SharpDX.Direct3D11.Resource"/>.</para></param>	
            <param name="dstSubresource"><para>A zero-based index, that identifies the destination subresource. Use D3D11CalcSubresource to calculate the index.</para></param>	
            <param name="srcResourceRef"><para>Source resource. Must be multisampled.</para></param>	
            <param name="srcSubresource"><para>&gt;The source subresource of the source resource.</para></param>	
            <param name="format"><para>A <see cref="T:SharpDX.DXGI.Format"/> that indicates how the multisampled resource will be resolved to a single-sampled resource.  See remarks.</para></param>	
            <remarks>	
            This API is most useful when re-using the resulting rendertarget of one render pass as an input to a second render pass.The source and destination resources must be the same resource type and have the same dimensions. In addition, they must have compatible formats. There are three scenarios for this:ScenarioRequirements Source and destination are prestructured and typedBoth the source and destination must have identical formats and that format must be specified in the Format parameter. One resource is prestructured and typed and the other is prestructured and typelessThe typed resource must have a format that is compatible with the typeless resource (i.e. the typed resource is <see cref="F:SharpDX.DXGI.Format.R32_Float"/> and the typeless resource is <see cref="F:SharpDX.DXGI.Format.R32_Typeless"/>). The format of the typed resource must be specified in the Format parameter. Source and destination are prestructured and typelessBoth the source and desintation must have the same typeless format (i.e. both must have <see cref="F:SharpDX.DXGI.Format.R32_Typeless"/>), and the Format parameter must specify a format that is compatible with the source and destination (i.e. if both are <see cref="F:SharpDX.DXGI.Format.R32_Typeless"/> then <see cref="F:SharpDX.DXGI.Format.R32_Float"/> could be specified in the Format parameter). <para>For example, given the <see cref="F:SharpDX.DXGI.Format.R16G16B16A16_Typeless"/> format:</para>	
              The source (or dest) format could be <see cref="F:SharpDX.DXGI.Format.R16G16B16A16_UNorm"/> The dest (or source) format could be <see cref="F:SharpDX.DXGI.Format.R16G16B16A16_Float"/>?	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::ResolveSubresource']/*"/>	
            <unmanaged>void ID3D11DeviceContext::ResolveSubresource([In] ID3D11Resource* pDstResource,[In] unsigned int DstSubresource,[In] ID3D11Resource* pSrcResource,[In] unsigned int SrcSubresource,[In] DXGI_FORMAT Format)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.ExecuteCommandList(SharpDX.Direct3D11.CommandList,System.Boolean)">
            <summary>	
            Queues commands from a command list onto a device.	
            </summary>	
            <param name="commandListRef"><para>A reference to an <see cref="T:SharpDX.Direct3D11.CommandList"/> interface that encapsulates a command list.</para></param>	
            <param name="restoreContextState"><para>A Boolean flag that determines whether the immediate context state is saved prior to and restored after the execution of a command list. Use TRUE to indicate that the runtime needs to save and restore the state. Use <see cref="F:SharpDX.Result.False"/> to indicate that no state shall be saved or restored, which causes the immediate context to  return to its default state after the command list executes. Applications should typically use <see cref="F:SharpDX.Result.False"/> unless they will restore the state to be nearly equivalent to the state that the runtime would restore if TRUE were passed. When applications use <see cref="F:SharpDX.Result.False"/>, they can avoid unnecessary and inefficient state transitions.</para></param>	
            <remarks>	
            Use this method to play back a command list that was recorded by a deferred context on any thread.This method performs some runtime validation related to queries. Queries that are begun in a device context cannot be manipulated indirectly by executing a command list (that is, Begin or End was invoked against the same query by the deferred context which generated the command list). If such a condition occurs, the ExecuteCommandList method does not execute the command list. However, the state of the device context is still maintained, as would be expected (<see cref="M:SharpDX.Direct3D11.DeviceContext.ClearState"/> is performed, unless the application indicates to preserve the device context state).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::ExecuteCommandList']/*"/>	
            <unmanaged>void ID3D11DeviceContext::ExecuteCommandList([In] ID3D11CommandList* pCommandList,[In] BOOL RestoreContextState)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.GetPredication(System.Boolean@)">
            <summary>	
            Get the rendering predicate state.	
            </summary>	
            <param name="predicateValueRef"><para>Address of a boolean to fill with the predicate comparison value. <see cref="F:SharpDX.Result.False"/> upon device creation.</para></param>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::GetPredication']/*"/>	
            <unmanaged>void ID3D11DeviceContext::GetPredication([Out, Optional] ID3D11Predicate** ppPredicate,[Out, Optional] BOOL* pPredicateValue)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.ClearState">
            <summary>	
            Restore all default settings.	
            </summary>	
            <remarks>	
            This method resets any device context to the default settings. This sets all input/output resource slots, shaders, input layouts, predications, scissor rectangles, depth-stencil state, rasterizer state, blend state, sampler state, and viewports to <c>null</c>. The primitive topology is set to UNDEFINED.For a scenario where you would like to clear a list of commands recorded so far, call <see cref="M:SharpDX.Direct3D11.DeviceContext.FinishCommandListInternal(System.Boolean,SharpDX.Direct3D11.CommandList@)"/> and throw away the resulting <see cref="T:SharpDX.Direct3D11.CommandList"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::ClearState']/*"/>	
            <unmanaged>void ID3D11DeviceContext::ClearState()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.Flush">
            <summary>	
            Sends queued-up commands in the command buffer to the graphics processing unit (GPU).	
            </summary>	
            <remarks>	
            Most applications don't need to call this method. If an application calls this method when not necessary, it incurs a performance penalty.  Each call to Flush incurs a significant amount of overhead.When Microsoft Direct3D state-setting, present, or draw commands are called by an application, those commands are queued into an internal command buffer.  Flush sends those commands to the GPU for processing. Typically, the Direct3D runtime sends these commands to the GPU automatically whenever the runtime determines that  they need to be sent, such as when the command buffer is full or when an application maps a resource. Flush sends the commands manually.We recommend that you use Flush when the CPU waits for an arbitrary amount of time (such as when  you call the Sleep function).Because Flush operates asynchronously,  it can return either before or after the GPU finishes executing the queued graphics commands. However, the graphics commands eventually always complete. You can call the <see cref="M:SharpDX.Direct3D11.Device.CreateQuery(SharpDX.Direct3D11.QueryDescription,SharpDX.Direct3D11.Query)"/> method with the <see cref="F:SharpDX.Direct3D11.QueryType.Event"/> value to create an event query; you can then use that event query in a call to the <see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/> method to determine when the GPU is finished processing the graphics commands.Microsoft Direct3D?11 defers the destruction of objects. Therefore, an application can't rely upon objects immediately being destroyed. By calling Flush, you destroy any  objects whose destruction was deferred.  If an application requires synchronous destruction of an object, we recommend that the application release all its references, call <see cref="M:SharpDX.Direct3D11.DeviceContext.ClearState"/>, and then call Flush.Deferred Destruction Issues with Flip Presentation Swap ChainsDirect3D?11 defers the destruction of objects like views and resources until it can efficiently destroy them. This deferred destruction can cause problems with flip presentation model swap chains. Flip presentation model swap chains have the <see cref="F:SharpDX.DXGI.SwapEffect.FlipSequential"/> flag set. When you create a flip presentation model swap chain, you can associate only one swap chain at a time with an <see cref="T:System.IntPtr"/>, IWindow, or composition surface. If an application attempts to destroy a flip presentation model swap chain and replace it with another swap chain, the original swap chain is not destroyed when the application immediately frees all of the original swap chain's references.Most applications typically use the <see cref="M:SharpDX.DXGI.SwapChain.ResizeBuffers(System.Int32,System.Int32,System.Int32,SharpDX.DXGI.Format,System.Int32)"/> method for the majority of scenarios where they replace new swap chain buffers for old swap chain buffers. However, if an application must actually destroy an old swap chain and create a new swap chain, the application must force the destruction of all objects that the application freed. To force the destruction, call <see cref="M:SharpDX.Direct3D11.DeviceContext.ClearState"/> (or otherwise ensure no views are bound to pipeline state), and then call Flush on the immediate context. You must force destruction before you call <see cref="M:SharpDX.DXGI.Factory2.CreateSwapChainForHwnd(SharpDX.ComObject,System.IntPtr,SharpDX.DXGI.SwapChainDescription1@,System.Nullable{SharpDX.DXGI.SwapChainFullscreenDescription},SharpDX.DXGI.Output)"/>, <see cref="M:SharpDX.DXGI.Factory2.CreateSwapChainForImmersiveWindow(SharpDX.ComObject,SharpDX.ComObject,SharpDX.DXGI.SwapChainDescription1@,SharpDX.DXGI.Output)"/>, or <see cref="M:SharpDX.DXGI.Factory2.CreateSwapChainForCompositionSurface(SharpDX.ComObject,System.IntPtr,SharpDX.DXGI.SwapChainDescription1@,SharpDX.DXGI.Output)"/> again to create a new swap chain.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::Flush']/*"/>	
            <unmanaged>void ID3D11DeviceContext::Flush()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.GetTypeInfo">
            <summary>	
            Gets the type of device context.	
            </summary>	
            <returns>A member of <see cref="T:SharpDX.Direct3D11.DeviceContextType"/> that indicates the type of device context.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::GetType']/*"/>	
            <unmanaged>D3D11_DEVICE_CONTEXT_TYPE ID3D11DeviceContext::GetType()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.GetContextFlags">
            <summary>	
            Gets the initialization flags associated with the current deferred context.	
            </summary>	
            <returns>No documentation.</returns>	
            <remarks>	
            The GetContextFlags method gets the flags that were supplied to the ContextFlags parameter of <see cref="M:SharpDX.Direct3D11.Device.CreateDeferredContext(System.Int32,SharpDX.Direct3D11.DeviceContext)"/>; however, the context flag is reserved for future use.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::GetContextFlags']/*"/>	
            <unmanaged>unsigned int ID3D11DeviceContext::GetContextFlags()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext.FinishCommandListInternal(System.Boolean,SharpDX.Direct3D11.CommandList@)">
            <summary>	
            Create a command list and record graphics commands into it.	
            </summary>	
            <param name="restoreDeferredContextState"><para>A Boolean flag that determines whether the runtime saves deferred context state before it executes  FinishCommandList and restores it afterwards. Use TRUE to indicate that the runtime needs to save and restore the state. Use <see cref="F:SharpDX.Result.False"/> to indicate that the runtime will not save or restore any state. In this case, the deferred context will  return to its default state after the call to  FinishCommandList completes. For information about default state, see <see cref="M:SharpDX.Direct3D11.DeviceContext.ClearState"/>. Typically, use <see cref="F:SharpDX.Result.False"/> unless you restore the state to be nearly equivalent to the state that the runtime would restore if you passed TRUE. When you use <see cref="F:SharpDX.Result.False"/>, you can avoid unnecessary and inefficient state transitions.</para> <para>Note??This parameter does not affect the command list that the current call to FinishCommandList returns. However, this parameter affects the command list of the next call to FinishCommandList on the same deferred context.</para></param>	
            <param name="commandListOut"><para>Upon completion of the method, the passed reference to an <see cref="T:SharpDX.Direct3D11.CommandList"/> interface reference is initialized with the recorded command list information.</para></param>	
            <returns>Returns <see cref="F:SharpDX.Result.Ok"/> if successful; otherwise, returns one of the following:Returns <see cref="F:SharpDX.DXGI.DXGIError.DeviceRemoved"/> if the video card has been physically removed from the system, or a driver upgrade for the video card has occurred. If this error occurs, you should destroy and recreate the device. Returns <see cref="F:SharpDX.DXGI.DXGIError.InvalidCall"/> if FinishCommandList cannot be called from the current context. See remarks. Returns E_OUTOFMEMORY if the application has exhausted available memory.</returns>	
            <remarks>	
            Create a command list from a deferred context and record commands into it by calling FinishCommandList. Play back a command list with an immediate context by calling <see cref="M:SharpDX.Direct3D11.DeviceContext.ExecuteCommandList(SharpDX.Direct3D11.CommandList,System.Boolean)"/>.Immediate context state is cleared before and after a command list is executed. A command list has no concept of inheritance. Each call to FinishCommandList will record only the state set since any previous call to  FinishCommandList.For example, the state of a device context is its render state or pipeline state. To retrieve device context state, an application can call  <see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/> or  <see cref="M:SharpDX.Direct3D11.DeviceContext.GetPredication(System.Boolean@)"/>.For more information about how to use FinishCommandList, see How to: Record a Command List.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::FinishCommandList']/*"/>	
            <unmanaged>HRESULT ID3D11DeviceContext::FinishCommandList([In] BOOL RestoreDeferredContextState,[Out, Optional] ID3D11CommandList** ppCommandList)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.DeviceContext.VertexShader">
            <summary>Inner interface giving access to VertexShaderStage methods. </summary>
        </member>
        <member name="P:SharpDX.Direct3D11.DeviceContext.PixelShader">
            <summary>Inner interface giving access to PixelShaderStage methods. </summary>
        </member>
        <member name="P:SharpDX.Direct3D11.DeviceContext.InputAssembler">
            <summary>Inner interface giving access to InputAssemblerStage methods. </summary>
        </member>
        <member name="P:SharpDX.Direct3D11.DeviceContext.GeometryShader">
            <summary>Inner interface giving access to GeometryShaderStage methods. </summary>
        </member>
        <member name="P:SharpDX.Direct3D11.DeviceContext.OutputMerger">
            <summary>Inner interface giving access to OutputMergerStage methods. </summary>
        </member>
        <member name="P:SharpDX.Direct3D11.DeviceContext.StreamOutput">
            <summary>Inner interface giving access to StreamOutputStage methods. </summary>
        </member>
        <member name="P:SharpDX.Direct3D11.DeviceContext.Rasterizer">
            <summary>Inner interface giving access to RasterizerStage methods. </summary>
        </member>
        <member name="P:SharpDX.Direct3D11.DeviceContext.HullShader">
            <summary>Inner interface giving access to HullShaderStage methods. </summary>
        </member>
        <member name="P:SharpDX.Direct3D11.DeviceContext.DomainShader">
            <summary>Inner interface giving access to DomainShaderStage methods. </summary>
        </member>
        <member name="P:SharpDX.Direct3D11.DeviceContext.ComputeShader">
            <summary>Inner interface giving access to ComputeShaderStage methods. </summary>
        </member>
        <member name="P:SharpDX.Direct3D11.DeviceContext.TypeInfo">
            <summary>	
            Gets the type of device context.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::GetType']/*"/>	
            <unmanaged>GetType</unmanaged>	
            <unmanaged>D3D11_DEVICE_CONTEXT_TYPE ID3D11DeviceContext::GetType()</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.DeviceContext.ContextFlags">
            <summary>	
            Gets the initialization flags associated with the current deferred context.	
            </summary>	
            <remarks>	
            The GetContextFlags method gets the flags that were supplied to the ContextFlags parameter of <see cref="M:SharpDX.Direct3D11.Device.CreateDeferredContext(System.Int32,SharpDX.Direct3D11.DeviceContext)"/>; however, the context flag is reserved for future use.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::GetContextFlags']/*"/>	
            <unmanaged>GetContextFlags</unmanaged>	
            <unmanaged>unsigned int ID3D11DeviceContext::GetContextFlags()</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.InputAssemblerStage">
            <summary>	
            The <see cref="T:SharpDX.Direct3D11.DeviceContext"/> interface represents a device context which generates rendering commands.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext']/*"/>	
            <unmanaged>ID3D11DeviceContext</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.InputAssemblerStage.IndexInputResourceSlotCount">
            <summary>Constant IndexInputResourceSlotCount.</summary>
            <unmanaged>D3D11_IA_INDEX_INPUT_RESOURCE_SLOT_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.InputAssemblerStage.VertexIdBitCount">
            <summary>Constant VertexIdBitCount.</summary>
            <unmanaged>D3D11_IA_VERTEX_ID_BIT_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.InputAssemblerStage.IntegerArithmeticBitCount">
            <summary>Constant IntegerArithmeticBitCount.</summary>
            <unmanaged>D3D11_IA_INTEGER_ARITHMETIC_BIT_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.InputAssemblerStage.VertexInputResourceSlotCount">
            <summary>Constant VertexInputResourceSlotCount.</summary>
            <unmanaged>D3D11_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.InputAssemblerStage.DefaultIndexBufferOffsetInBytes">
            <summary>Constant DefaultIndexBufferOffsetInBytes.</summary>
            <unmanaged>D3D11_IA_DEFAULT_INDEX_BUFFER_OFFSET_IN_BYTES</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.InputAssemblerStage.DefaultPrimitiveTopology">
            <summary>Constant DefaultPrimitiveTopology.</summary>
            <unmanaged>D3D11_IA_DEFAULT_PRIMITIVE_TOPOLOGY</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.InputAssemblerStage.DefaultVertexBufferOffsetInBytes">
            <summary>Constant DefaultVertexBufferOffsetInBytes.</summary>
            <unmanaged>D3D11_IA_DEFAULT_VERTEX_BUFFER_OFFSET_IN_BYTES</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.InputAssemblerStage.InstanceIdBitCount">
            <summary>Constant InstanceIdBitCount.</summary>
            <unmanaged>D3D11_IA_INSTANCE_ID_BIT_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.InputAssemblerStage.VertexInputStructureElementsComponents">
            <summary>Constant VertexInputStructureElementsComponents.</summary>
            <unmanaged>D3D11_IA_VERTEX_INPUT_STRUCTURE_ELEMENTS_COMPONENTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.InputAssemblerStage.VertexInputStructureElementCount">
            <summary>Constant VertexInputStructureElementCount.</summary>
            <unmanaged>D3D11_IA_VERTEX_INPUT_STRUCTURE_ELEMENT_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.InputAssemblerStage.PrimitiveIdBitCount">
            <summary>Constant PrimitiveIdBitCount.</summary>
            <unmanaged>D3D11_IA_PRIMITIVE_ID_BIT_COUNT</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.InputAssemblerStage.PatchMaximumControlPointCount">
            <summary>Constant PatchMaximumControlPointCount.</summary>
            <unmanaged>D3D11_IA_PATCH_MAX_CONTROL_POINT_COUNT</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.InputAssemblerStage.SetVertexBuffers(System.Int32,SharpDX.Direct3D11.VertexBufferBinding)">
            <summary>
              Binds a single vertex buffer to the input assembler.
            </summary>
            <param name = "slot">Index of the slot to which to bind the vertex buffer.</param>
            <param name = "vertexBufferBinding">A binding for the input vertex buffer.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.InputAssemblerStage.SetVertexBuffers(System.Int32,SharpDX.Direct3D11.VertexBufferBinding[])">
            <summary>
              Binds an array of vertex buffers to the input assembler.
            </summary>
            <param name = "firstSlot">Index of the first input slot to use for binding. The first vertex buffer is explicitly bound to the start slot; this causes each additional vertex buffer in the array to be implicitly bound to each subsequent input slot. There are 16 input slots.</param>
            <param name = "vertexBufferBindings">An array of bindings for input vertex buffers.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.InputAssemblerStage.SetVertexBuffers(System.Int32,SharpDX.Direct3D11.Buffer[],System.Int32[],System.Int32[])">
            <summary>
            Binds an array of vertex buffers to the input assembler.
            </summary>
            <param name="slot">Index of the first input slot to use for binding. The first vertex buffer is explicitly bound to the start slot; this causes each additional vertex buffer in the array to be implicitly bound to each subsequent input slot. There are 16 input slots.</param>
            <param name="vertexBuffers">The vertex buffers.</param>
            <param name="stridesRef">The strides.</param>
            <param name="offsetsRef">The offsets.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.InputAssemblerStage.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.InputAssemblerStage"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.InputAssemblerStage.SetInputLayout(SharpDX.Direct3D11.InputLayout)">
            <summary>	
            Bind an input-layout object to the input-assembler stage.	
            </summary>	
            <param name="inputLayoutRef"><para>A reference to the input-layout object (see <see cref="T:SharpDX.Direct3D11.InputLayout"/>), which describes the input buffers that will be read by the IA stage.</para></param>	
            <remarks>	
            Input-layout objects describe how vertex buffer data is streamed into the IA pipeline stage. To create an input-layout object, call <see cref="M:SharpDX.Direct3D11.Device.CreateInputLayout(SharpDX.Direct3D11.InputElement[],System.Int32,System.IntPtr,SharpDX.PointerSize,SharpDX.Direct3D11.InputLayout)"/>.The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::IASetInputLayout']/*"/>	
            <unmanaged>void ID3D11DeviceContext::IASetInputLayout([In, Optional] ID3D11InputLayout* pInputLayout)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.InputAssemblerStage.SetVertexBuffers(System.Int32,System.Int32,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>	
            Bind an array of vertex buffers to the input-assembler stage.	
            </summary>	
            <param name="startSlot"><para>The first input slot for binding. The first vertex buffer is explicitly bound to the start slot; this causes each additional vertex buffer in the array to be implicitly bound to each subsequent input slot. The maximum of 16 or 32 input slots (ranges from 0 to <see cref="F:SharpDX.Direct3D11.InputAssemblerStage.VertexInputResourceSlotCount"/> - 1) are available; the maximum number of input slots depends on the feature level.</para></param>	
            <param name="numBuffers"><para>The number of vertex buffers in the array. The number of buffers (plus the starting slot) cannot exceed the total number of IA-stage input slots (ranges from 0 to <see cref="F:SharpDX.Direct3D11.InputAssemblerStage.VertexInputResourceSlotCount"/> - StartSlot).</para></param>	
            <param name="vertexBuffersOut"><para>A reference to an array of vertex buffers (see <see cref="T:SharpDX.Direct3D11.Buffer"/>). The vertex buffers must have been created with the <see cref="F:SharpDX.Direct3D11.BindFlags.VertexBuffer"/> flag.</para></param>	
            <param name="stridesRef"><para>Pointer to an array of stride values; one stride value for each buffer in the vertex-buffer array. Each stride is the size (in bytes) of the elements that are to be used from that vertex buffer.</para></param>	
            <param name="offsetsRef"><para>Pointer to an array of offset values; one offset value for each buffer in the vertex-buffer array. Each offset is the number of bytes between the first element of a vertex buffer and the first element that will be used.</para></param>	
            <remarks>	
            For information about creating vertex buffers, see Create a Vertex Buffer.Calling this method using a buffer that is currently bound for writing (i.e. bound to the stream output pipeline stage) will effectively bind <c>null</c> instead because a buffer cannot be bound as both an input and an output at the same time.The debug layer will generate a warning whenever a resource is prevented from being bound simultaneously as an input and an output, but this will not prevent invalid data from being used by the runtime.The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::IASetVertexBuffers']/*"/>	
            <unmanaged>void ID3D11DeviceContext::IASetVertexBuffers([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const void* ppVertexBuffers,[In, Buffer, Optional] const void* pStrides,[In, Buffer, Optional] const void* pOffsets)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.InputAssemblerStage.SetIndexBuffer(SharpDX.Direct3D11.Buffer,SharpDX.DXGI.Format,System.Int32)">
            <summary>	
            Bind an index buffer to the input-assembler stage.	
            </summary>	
            <param name="indexBufferRef"><para>A reference to an <see cref="T:SharpDX.Direct3D11.Buffer"/> object, that contains indices. The index buffer must have been created with  the <see cref="F:SharpDX.Direct3D11.BindFlags.IndexBuffer"/> flag.</para></param>	
            <param name="format"><para>A <see cref="T:SharpDX.DXGI.Format"/> that specifies the format of the data in the index buffer. The only formats allowed for index  buffer data are 16-bit (<see cref="F:SharpDX.DXGI.Format.R16_UInt"/>) and 32-bit (<see cref="F:SharpDX.DXGI.Format.R32_UInt"/>) integers.</para></param>	
            <param name="offset"><para>Offset (in bytes) from the start of the index buffer to the first index to use.</para></param>	
            <remarks>	
            For information about creating index buffers, see How to: Create an Index Buffer.Calling this method using a buffer that is currently bound for writing (i.e. bound to the stream output pipeline stage) will effectively bind  <c>null</c> instead because a buffer cannot be bound as both an input and an output at the same time.The debug layer will generate a warning whenever a resource is prevented from being bound simultaneously as an input and an output, but this will  not prevent invalid data from being used by the runtime.The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::IASetIndexBuffer']/*"/>	
            <unmanaged>void ID3D11DeviceContext::IASetIndexBuffer([In, Optional] ID3D11Buffer* pIndexBuffer,[In] DXGI_FORMAT Format,[In] unsigned int Offset)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.InputAssemblerStage.SetPrimitiveTopology(SharpDX.Direct3D.PrimitiveTopology)">
            <summary>	
            Bind information about the primitive type, and data order that describes input data for the input assembler stage.	
            </summary>	
            <param name="topology"><para>The type of primitive and ordering of the primitive data (see D3D11_PRIMITIVE_TOPOLOGY).</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::IASetPrimitiveTopology']/*"/>	
            <unmanaged>void ID3D11DeviceContext::IASetPrimitiveTopology([In] D3D_PRIMITIVE_TOPOLOGY Topology)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.InputAssemblerStage.GetInputLayout(SharpDX.Direct3D11.InputLayout@)">
            <summary>	
            Get a reference to the input-layout object that is bound to the input-assembler stage.	
            </summary>	
            <param name="inputLayoutOut"><para>A reference to the input-layout object (see <see cref="T:SharpDX.Direct3D11.InputLayout"/>), which describes the input buffers that will be read by the IA stage.</para></param>	
            <remarks>	
            For information about creating an input-layout object, see Creating the Input-Layout Object.Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::IAGetInputLayout']/*"/>	
            <unmanaged>void ID3D11DeviceContext::IAGetInputLayout([Out] ID3D11InputLayout** ppInputLayout)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.InputAssemblerStage.GetVertexBuffers(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[],System.Int32[],System.Int32[])">
            <summary>	
            Get the vertex buffers bound to the input-assembler stage.	
            </summary>	
            <param name="startSlot"><para>The input slot of the first vertex buffer to get. The first vertex buffer is explicitly bound to the start slot; this causes each additional vertex buffer in the array to be implicitly bound to each subsequent input slot. The maximum of 16 or 32 input slots (ranges from 0 to <see cref="F:SharpDX.Direct3D11.InputAssemblerStage.VertexInputResourceSlotCount"/> - 1) are available; the maximum number of input slots depends on the feature level.</para></param>	
            <param name="numBuffers"><para>The number of vertex buffers to get starting at the offset. The number of buffers (plus the starting slot) cannot exceed the total number of IA-stage input slots.</para></param>	
            <param name="vertexBuffersOut"><para>A reference to an array of vertex buffers returned by the method (see <see cref="T:SharpDX.Direct3D11.Buffer"/>).</para></param>	
            <param name="stridesRef"><para>Pointer to an array of stride values returned by the method; one stride value for each buffer in the vertex-buffer array. Each stride value is the size (in bytes) of the elements that are to be used from that vertex buffer.</para></param>	
            <param name="offsetsRef"><para>Pointer to an array of offset values returned by the method; one offset value for each buffer in the vertex-buffer array. Each offset is the number of bytes between the first element of a vertex buffer and the first element that will be used.</para></param>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::IAGetVertexBuffers']/*"/>	
            <unmanaged>void ID3D11DeviceContext::IAGetVertexBuffers([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[Out, Buffer, Optional] ID3D11Buffer** ppVertexBuffers,[Out, Buffer, Optional] unsigned int* pStrides,[Out, Buffer, Optional] unsigned int* pOffsets)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.InputAssemblerStage.GetIndexBuffer(SharpDX.Direct3D11.Buffer@,SharpDX.DXGI.Format@,System.Int32@)">
            <summary>	
            Get a reference to the index buffer that is bound to the input-assembler stage.	
            </summary>	
            <param name="indexBufferRef"><para>A reference to an index buffer returned by the method (see <see cref="T:SharpDX.Direct3D11.Buffer"/>).</para></param>	
            <param name="format"><para>Specifies format of the data in the index buffer (see <see cref="T:SharpDX.DXGI.Format"/>). These formats provide the size and type of  the data in the buffer. The only formats allowed for index buffer data are 16-bit (<see cref="F:SharpDX.DXGI.Format.R16_UInt"/>) and 32-bit (<see cref="F:SharpDX.DXGI.Format.R32_UInt"/>)  integers.</para></param>	
            <param name="offset"><para>Offset (in bytes) from the start of the index buffer, to the first index to use.</para></param>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces  when they are no longer needed to avoid memory leaks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::IAGetIndexBuffer']/*"/>	
            <unmanaged>void ID3D11DeviceContext::IAGetIndexBuffer([Out, Optional] ID3D11Buffer** pIndexBuffer,[Out, Optional] DXGI_FORMAT* Format,[Out, Optional] unsigned int* Offset)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.InputAssemblerStage.GetPrimitiveTopology(SharpDX.Direct3D.PrimitiveTopology@)">
            <summary>	
            Get information about the primitive type, and data order that describes input data for the input assembler stage.	
            </summary>	
            <param name="topologyRef"><para>A reference to the type of primitive, and ordering of the primitive data (see D3D11_PRIMITIVE_TOPOLOGY).</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::IAGetPrimitiveTopology']/*"/>	
            <unmanaged>void ID3D11DeviceContext::IAGetPrimitiveTopology([Out] D3D_PRIMITIVE_TOPOLOGY* pTopology)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.InputAssemblerStage.InputLayout">
            <summary>	
            Get a reference to the input-layout object that is bound to the input-assembler stage.	
            </summary>	
            <remarks>	
            For information about creating an input-layout object, see Creating the Input-Layout Object.Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::IAGetInputLayout']/*"/>	
            <unmanaged>IAGetInputLayout</unmanaged>	
            <unmanaged>void ID3D11DeviceContext::IAGetInputLayout([Out] ID3D11InputLayout** ppInputLayout)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.InputAssemblerStage.PrimitiveTopology">
            <summary>	
            Get information about the primitive type, and data order that describes input data for the input assembler stage.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::IAGetPrimitiveTopology']/*"/>	
            <unmanaged>IAGetPrimitiveTopology</unmanaged>	
            <unmanaged>void ID3D11DeviceContext::IAGetPrimitiveTopology([Out] D3D_PRIMITIVE_TOPOLOGY* pTopology)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.OutputMergerStage">
            <summary>	
            The <see cref="T:SharpDX.Direct3D11.DeviceContext"/> interface represents a device context which generates rendering commands.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext']/*"/>	
            <unmanaged>ID3D11DeviceContext</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.GetRenderTargets(SharpDX.Direct3D11.DepthStencilView@)">
            <summary>	
            Get references to the render targets that are available to the {{output-merger stage}}.	
            </summary>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call {{IUnknown::Release}} on the returned interfaces when they are no longer needed to avoid memory leaks. 	
            </remarks>	
            <returns>a depth-stencil view (see <see cref="T:SharpDX.Direct3D11.DepthStencilView"/>) to be filled with the depth-stencil information from the device.</returns>
            <unmanaged>void OMGetRenderTargets([In] int NumViews,[Out, Buffer, Optional] ID3D10RenderTargetView** ppRenderTargetViews,[Out, Optional] ID3D10DepthStencilView** ppDepthStencilView)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.GetRenderTargets(System.Int32)">
            <summary>	
            Get references to the render targets that are available to the {{output-merger stage}}.	
            </summary>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call {{IUnknown::Release}} on the returned interfaces when they are no longer needed to avoid memory leaks. 	
            </remarks>	
            <param name="numViews">Number of render targets to retrieve. </param>
            <returns>an array of render targets views (see <see cref="T:SharpDX.Direct3D11.RenderTargetView"/>) to be filled with the render targets from the device.</returns>
            <unmanaged>void OMGetRenderTargets([In] int NumViews,[Out, Buffer, Optional] ID3D10RenderTargetView** ppRenderTargetViews,[Out, Optional] ID3D10DepthStencilView** ppDepthStencilView)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.GetRenderTargets(System.Int32,SharpDX.Direct3D11.DepthStencilView@)">
            <summary>	
            Get references to the render targets and the depth-stencil buffer that are available to the {{output-merger stage}}.	
            </summary>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call {{IUnknown::Release}} on the returned interfaces when they are no longer needed to avoid memory leaks. 	
            </remarks>	
            <param name="numViews">Number of render targets to retrieve. </param>
            <param name="depthStencilViewRef">Pointer to a depth-stencil view (see <see cref="T:SharpDX.Direct3D11.DepthStencilView"/>) to be filled with the depth-stencil information from the device.</param>
            <returns>an array of render targets views (see <see cref="T:SharpDX.Direct3D11.RenderTargetView"/>) to be filled with the render targets from the device.</returns>
            <unmanaged>void OMGetRenderTargets([In] int NumViews,[Out, Buffer, Optional] ID3D10RenderTargetView** ppRenderTargetViews,[Out, Optional] ID3D10DepthStencilView** ppDepthStencilView)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.GetBlendState(SharpDX.Color4@,System.Int32@)">
            <summary>	
            Get the {{blend state}} of the output-merger stage.	
            </summary>	
            <remarks>	
            The reference count of the returned interface will be incremented by one when the blend state is retrieved. Applications must release returned reference(s) when they are no longer needed, or else there will be a memory leak. 	
            </remarks>	
            <param name="blendFactor">Array of blend factors, one for each RGBA component. </param>
            <param name="sampleMaskRef">Pointer to a {{sample mask}}. </param>
            <returns>a reference to a blend-state interface (see <see cref="T:SharpDX.Direct3D11.BlendState"/>).</returns>
            <unmanaged>void OMGetBlendState([Out, Optional] ID3D10BlendState** ppBlendState,[Out, Optional] float BlendFactor[4],[Out, Optional] int* pSampleMask)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.GetDepthStencilState(System.Int32@)">
            <summary>	
            Gets the {{depth-stencil}} state of the output-merger stage.	
            </summary>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call {{IUnknown::Release}} on the returned interfaces when they are no longer needed to avoid memory leaks. 	
            </remarks>	
            <param name="stencilRefRef">Pointer to the stencil reference value used in the {{depth-stencil}} test. </param>
            <returns>a reference to a depth-stencil state interface (see <see cref="T:SharpDX.Direct3D11.DepthStencilState"/>) to be filled with information from the device.</returns>
            <unmanaged>void OMGetDepthStencilState([Out, Optional] ID3D10DepthStencilState** ppDepthStencilState,[Out, Optional] int* pStencilRef)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.GetUnorderedAccessViews(System.Int32,System.Int32)">
            <summary>	
            Gets an array of views for an unordered resource.	
            </summary>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks. 	
            </remarks>	
            <param name="startSlot">Index of the first element in the zero-based array to return (ranges from 0 to D3D11_PS_CS_UAV_REGISTER_COUNT - 1). </param>
            <param name="count">Number of views to get (ranges from 0 to D3D11_PS_CS_UAV_REGISTER_COUNT - StartSlot). </param>
            <unmanaged>void OMGetRenderTargetsAndUnorderedAccessViews([In] int NumRTVs,[Out, Buffer, Optional] ID3D11RenderTargetView** ppRenderTargetViews,[Out, Optional] ID3D11DepthStencilView** ppDepthStencilView,[In] int UAVStartSlot,[In] int NumUAVs,[Out, Buffer, Optional] ID3D11UnorderedAccessView** ppUnorderedAccessViews)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.ResetTargets">
            <summary>
              Unbinds all depth-stencil buffer and render targets from the output-merger stage.
            </summary>
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetTargets(SharpDX.Direct3D11.RenderTargetView[])">
            <summary>
              Binds a set of render targets to the output-merger stage.
            </summary>
            <param name = "renderTargetViews">A set of render target views to bind.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetTargets(SharpDX.Direct3D11.RenderTargetView)">
            <summary>
              Binds a single render target to the output-merger stage.
            </summary>
            <param name = "renderTargetView">A view of the render target to bind.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetTargets(SharpDX.Direct3D11.DepthStencilView,SharpDX.Direct3D11.RenderTargetView[])">
            <summary>
              Binds a depth-stencil buffer and a set of render targets to the output-merger stage.
            </summary>
            <param name = "depthStencilView">A view of the depth-stencil buffer to bind.</param>
            <param name = "renderTargetViews">A set of render target views to bind.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetTargets(SharpDX.Direct3D11.DepthStencilView,SharpDX.Direct3D11.RenderTargetView)">
            <summary>
              Binds a depth-stencil buffer and a single render target to the output-merger stage.
            </summary>
            <param name = "depthStencilView">A view of the depth-stencil buffer to bind.</param>
            <param name = "renderTargetView">A view of the render target to bind.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetTargets(SharpDX.Direct3D11.DepthStencilView,SharpDX.ComArray{SharpDX.Direct3D11.RenderTargetView})">
            <summary>
              Binds a depth-stencil buffer and a set of render targets to the output-merger stage.
            </summary>
            <param name = "depthStencilView">A view of the depth-stencil buffer to bind.</param>
            <param name = "renderTargetViews">A set of render target views to bind.</param>
            <unmanaged>void ID3D11DeviceContext::OMSetRenderTargets([In] unsigned int NumViews,[In, Buffer, Optional] const ID3D11RenderTargetView** ppRenderTargetViews,[In, Optional] ID3D11DepthStencilView* pDepthStencilView)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetTargets(SharpDX.ComArray{SharpDX.Direct3D11.RenderTargetView})">
            <summary>
              Binds a set of render targets to the output-merger stage and clear the depth stencil view.
            </summary>
            <param name = "renderTargetViews">A set of render target views to bind.</param>
            <unmanaged>void ID3D11DeviceContext::OMSetRenderTargets([In] unsigned int NumViews,[In, Buffer, Optional] const ID3D11RenderTargetView** ppRenderTargetViews,[In, Optional] ID3D11DepthStencilView* pDepthStencilView)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetTargets(SharpDX.Direct3D11.RenderTargetView,System.Int32,SharpDX.Direct3D11.UnorderedAccessView[])">
            <summary>
              Binds a set of unordered access views and a single render target to the output-merger stage.
            </summary>
            <param name = "startSlot">Index into a zero-based array to begin setting unordered access views.</param>
            <param name = "unorderedAccessViews">A set of unordered access views to bind.</param>
            <param name = "renderTargetView">A view of the render target to bind.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetTargets(System.Int32,SharpDX.Direct3D11.UnorderedAccessView[],SharpDX.Direct3D11.RenderTargetView[])">
            <summary>
              Binds a set of unordered access views and a set of render targets to the output-merger stage.
            </summary>
            <param name = "startSlot">Index into a zero-based array to begin setting unordered access views.</param>
            <param name = "unorderedAccessViews">A set of unordered access views to bind.</param>
            <param name = "renderTargetViews">A set of render target views to bind.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetTargets(SharpDX.Direct3D11.DepthStencilView,SharpDX.Direct3D11.RenderTargetView,System.Int32,SharpDX.Direct3D11.UnorderedAccessView[])">
            <summary>
              Binds a depth-stencil buffer, a set of unordered access views, and a single render target to the output-merger stage.
            </summary>
            <param name = "depthStencilView">A view of the depth-stencil buffer to bind.</param>
            <param name = "startSlot">Index into a zero-based array to begin setting unordered access views.</param>
            <param name = "unorderedAccessViews">A set of unordered access views to bind.</param>
            <param name = "renderTargetView">A view of the render target to bind.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetTargets(SharpDX.Direct3D11.DepthStencilView,System.Int32,SharpDX.Direct3D11.UnorderedAccessView[],SharpDX.Direct3D11.RenderTargetView[])">
            <summary>
              Binds a depth-stencil buffer, a set of unordered access views, and a set of render targets to the output-merger stage.
            </summary>
            <param name = "depthStencilView">A view of the depth-stencil buffer to bind.</param>
            <param name = "startSlot">Index into a zero-based array to begin setting unordered access views.</param>
            <param name = "unorderedAccessViews">A set of unordered access views to bind.</param>
            <param name = "renderTargetViews">A set of render target views to bind.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetTargets(SharpDX.Direct3D11.RenderTargetView,System.Int32,SharpDX.Direct3D11.UnorderedAccessView[],System.Int32[])">
            <summary>
              Binds a set of unordered access views and a single render target to the output-merger stage.
            </summary>
            <param name = "startSlot">Index into a zero-based array to begin setting unordered access views.</param>
            <param name = "unorderedAccessViews">A set of unordered access views to bind.</param>
            <param name = "renderTargetView">A view of the render target to bind.</param>
            <param name = "initialLengths">An array of Append/Consume buffer offsets. A value of -1 indicates the current offset should be kept. Any other values set the hidden counter for that Appendable/Consumeable UAV.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetTargets(System.Int32,SharpDX.Direct3D11.UnorderedAccessView[],System.Int32[],SharpDX.Direct3D11.RenderTargetView[])">
            <summary>
              Binds a set of unordered access views and a set of render targets to the output-merger stage.
            </summary>
            <param name = "startSlot">Index into a zero-based array to begin setting unordered access views.</param>
            <param name = "unorderedAccessViews">A set of unordered access views to bind.</param>
            <param name = "renderTargetViews">A set of render target views to bind.</param>
            <param name = "initialLengths">An array of Append/Consume buffer offsets. A value of -1 indicates the current offset should be kept. Any other values set the hidden counter for that Appendable/Consumeable UAV.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetTargets(SharpDX.Direct3D11.DepthStencilView,SharpDX.Direct3D11.RenderTargetView,System.Int32,SharpDX.Direct3D11.UnorderedAccessView[],System.Int32[])">
            <summary>
              Binds a depth-stencil buffer, a set of unordered access views, and a single render target to the output-merger stage.
            </summary>
            <param name = "depthStencilView">A view of the depth-stencil buffer to bind.</param>
            <param name = "startSlot">Index into a zero-based array to begin setting unordered access views.</param>
            <param name = "unorderedAccessViews">A set of unordered access views to bind.</param>
            <param name = "renderTargetView">A view of the render target to bind.</param>
            <param name = "initialLengths">An array of Append/Consume buffer offsets. A value of -1 indicates the current offset should be kept. Any other values set the hidden counter for that Appendable/Consumeable UAV.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetTargets(SharpDX.Direct3D11.DepthStencilView,System.Int32,SharpDX.Direct3D11.UnorderedAccessView[],System.Int32[],SharpDX.Direct3D11.RenderTargetView[])">
            <summary>
              Binds a depth-stencil buffer, a set of unordered access views, and a set of render targets to the output-merger stage.
            </summary>
            <param name = "depthStencilView">A view of the depth-stencil buffer to bind.</param>
            <param name = "startSlot">Index into a zero-based array to begin setting unordered access views.</param>
            <param name = "unorderedAccessViews">A set of unordered access views to bind.</param>
            <param name = "renderTargetViews">A set of render target views to bind.</param>
            <param name = "initialLengths">An array of Append/Consume buffer offsets. A value of -1 indicates the current offset should be kept. Any other values set the hidden counter for that Appendable/Consumeable UAV.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetRenderTargets(System.Int32,SharpDX.Direct3D11.RenderTargetView[],SharpDX.Direct3D11.DepthStencilView)">
            <unmanaged>void ID3D11DeviceContext::OMSetRenderTargets([In] unsigned int NumViews,[In, Buffer, Optional] const ID3D11RenderTargetView** ppRenderTargetViews,[In, Optional] ID3D11DepthStencilView* pDepthStencilView)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.OutputMergerStage"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetRenderTargets(System.Int32,System.IntPtr,SharpDX.Direct3D11.DepthStencilView)">
            <summary>	
            Bind one or more render targets atomically and the depth-stencil buffer to the output-merger stage.	
            </summary>	
            <param name="numViews"><para>Number of render targets to bind (ranges between 0 and D3D11_SIMULTANEOUS_RENDER_TARGET_COUNT).</para></param>	
            <param name="renderTargetViewsOut"><para>Pointer to an array of render targets (see <see cref="T:SharpDX.Direct3D11.RenderTargetView"/>) to bind to the device.  If this parameter is <c>null</c>, no render targets are bound. See Remarks.</para></param>	
            <param name="depthStencilViewRef"><para>Pointer to a depth-stencil view (see <see cref="T:SharpDX.Direct3D11.DepthStencilView"/>) to bind to the device.  If this parameter is <c>null</c>, the depth-stencil state is not bound.</para></param>	
            <remarks>	
            The maximum number of active render targets a device can have active at any given time is set by a #define in D3D11.h called  D3D11_SIMULTANEOUS_RENDER_TARGET_COUNT. It is invalid to try to set the same subresource to multiple render target slots.  Any render targets not defined by this call are set to <c>null</c>.If any subresources are also currently bound for reading in a different stage or writing (perhaps in a different part of the pipeline),  those bind points will be set to <c>null</c>, in order to prevent the same subresource from being read and written simultaneously in a single rendering operation.The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.If the render-target views were created from an array resource type, then all of the render-target views must have the same array size.   This restriction also applies to the depth-stencil view, its array size must match that of the render-target views being bound.The pixel shader must be able to simultaneously render to at least eight separate render targets. All of these render targets must access the same type of resource: Buffer, Texture1D, Texture1DArray, Texture2D, Texture2DArray, Texture3D, or TextureCube. All render targets must have the same size in all dimensions (width and height, and depth for 3D or array size for *Array types). If render targets use multisample anti-aliasing, all bound render targets and depth buffer must be the same form of multisample resource (that is, the sample counts must be the same). Each render target can have a different data format. These render target formats are not required to have identical bit-per-element counts.Any combination of the eight slots for render targets can have a render target set or not set.The same resource view cannot be bound to multiple render target slots simultaneously. However, you can set multiple non-overlapping resource views of a single resource as simultaneous multiple render targets.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::OMSetRenderTargets']/*"/>	
            <unmanaged>void ID3D11DeviceContext::OMSetRenderTargets([In] unsigned int NumViews,[In] const void** ppRenderTargetViews,[In, Optional] ID3D11DepthStencilView* pDepthStencilView)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetRenderTargetsAndUnorderedAccessViews(System.Int32,SharpDX.Direct3D11.RenderTargetView[],SharpDX.Direct3D11.DepthStencilView,System.Int32,System.Int32,SharpDX.Direct3D11.UnorderedAccessView[],System.Int32[])">
            <summary>	
            Binds resources to the output-merger stage.	
            </summary>	
            <param name="numRTVs"><para>Number of render-target views (ppRenderTargetViews) and depth-stencil view (ppDepthStencilView)  to bind. If you set NumViews to D3D11_KEEP_RENDER_TARGETS_AND_DEPTH_STENCIL (0xffffffff), this method does not modify the currently bound render-target views (RTVs) and also does not modify depth-stencil view (DSV).</para></param>	
            <param name="renderTargetViewsOut"><para>Pointer to an array of ID3D11RenderTargetViews, which represent render-target views. Specify <c>null</c> to set none.</para></param>	
            <param name="depthStencilViewRef"><para>Pointer to a <see cref="T:SharpDX.Direct3D11.DepthStencilView"/>, which represents a depth-stencil view. Specify <c>null</c> to set none.</para></param>	
            <param name="uAVStartSlot"><para>Index into a zero-based array to begin setting unordered-access views (ranges from 0 to D3D11_PS_CS_UAV_REGISTER_COUNT - 1).</para> <para> For the Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, this value can range from 0 to D3D11_1_UAV_SLOT_COUNT - 1. D3D11_1_UAV_SLOT_COUNT is defined as 64.</para> <para>For pixel shaders, UAVStartSlot should be equal to the number of render-target views being bound. </para></param>	
            <param name="numUAVs"><para>Number of unordered-access views (UAVs) in ppUnorderedAccessView. If you set NumUAVs to D3D11_KEEP_UNORDERED_ACCESS_VIEWS (0xffffffff), this method does not modify the currently bound unordered-access views.</para> <para>For the Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, this value can range from 0 to D3D11_1_UAV_SLOT_COUNT - UAVStartSlot.</para></param>	
            <param name="unorderedAccessViewsOut"><para>Pointer to an array of ID3D11UnorderedAccessViews, which represent unordered-access views.</para></param>	
            <param name="uAVInitialCountsRef"><para>An array of append and consume buffer offsets. A value of -1 indicates to keep the current offset. Any other values set the hidden counter  for that appendable and consumable UAV. pUAVInitialCounts is  relevant only for UAVs that were created with either  <see cref="F:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.Append"/> or <see cref="F:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.Counter"/> specified  when the UAV was created; otherwise, the argument is ignored.</para></param>	
            <remarks>	
            For pixel shaders, the render targets and unordered-access views share the same resource slots when being written out. This means that UAVs must be  given an offset so that they are placed in the slots after the render target views that are being bound.Note??RTVs, DSV, and UAVs cannot be set independently; they all need to be set at the same time.Two RTVs conflict if they share a subresource (and therefore share the same resource).Two UAVs conflict if they share a subresource (and therefore share the same resource).An RTV conflicts with a UAV if they share a subresource or share a bind point.OMSetRenderTargetsAndUnorderedAccessViews operates properly in the following situations:<para>NumViews != D3D11_KEEP_RENDER_TARGETS_AND_DEPTH_STENCIL and NumUAVs != D3D11_KEEP_UNORDERED_ACCESS_VIEWS</para>	
             <para>The following conditions must be true for OMSetRenderTargetsAndUnorderedAccessViews to succeed and for the runtime to pass the bind information to the driver:</para>	
              NumViews &lt;= 8 UAVStartSlot &gt;= NumViews UAVStartSlot + NumUAVs &lt;= 8 There must be no conflicts in the set of all ppRenderTargetViews and ppUnorderedAccessView. ppDepthStencilView must match the render-target views. For more information about resource views, see Introduction to a Resource in Direct3D 11.  <para>OMSetRenderTargetsAndUnorderedAccessViews performs the following tasks:</para>	
              Unbinds all currently bound conflicting resources (stream-output target resources (SOTargets), compute shader (CS) UAVs, shader-resource views (SRVs)). Binds ppRenderTargetViews, ppDepthStencilView, and ppUnorderedAccessView.    <para>NumViews == D3D11_KEEP_RENDER_TARGETS_AND_DEPTH_STENCIL </para>	
             <para>In this situation, OMSetRenderTargetsAndUnorderedAccessViews binds only UAVs. </para>	
             <para>The following conditions must be true for OMSetRenderTargetsAndUnorderedAccessViews to succeed and for the runtime to pass the bind information to the driver:</para>	
              UAVStartSlot + NumUAVs &lt;= 8 There must be no conflicts in ppUnorderedAccessView.  <para>OMSetRenderTargetsAndUnorderedAccessViews unbinds the following items:</para>	
              All RTVs in slots &gt;= UAVStartSlot All RTVs that conflict with any UAVs in ppUnorderedAccessView All currently bound resources (SOTargets, CS UAVs, SRVs) that conflict with ppUnorderedAccessView  <para>OMSetRenderTargetsAndUnorderedAccessViews binds ppUnorderedAccessView.</para>	
             <para>OMSetRenderTargetsAndUnorderedAccessViews ignores ppDepthStencilView, and the current depth-stencil view remains bound.</para>	
               <para>NumUAVs == D3D11_KEEP_UNORDERED_ACCESS_VIEWS</para>	
             <para>In this situation, OMSetRenderTargetsAndUnorderedAccessViews binds only RTVs and DSV. </para>	
             <para>The following conditions must be true for OMSetRenderTargetsAndUnorderedAccessViews to succeed and for the runtime to pass the bind information to the driver:</para>	
              NumViews &lt;= 8 There must be no conflicts in ppRenderTargetViews. ppDepthStencilView must match the render-target views. For more information about resource views, see Introduction to a Resource in Direct3D 11.  <para>OMSetRenderTargetsAndUnorderedAccessViews unbinds the following items:</para>	
              All UAVs in slots &lt; NumViews All UAVs that conflict with any RTVs in ppRenderTargetViews All currently bound resources (SOTargets, CS UAVs, SRVs) that conflict with ppRenderTargetViews  <para>OMSetRenderTargetsAndUnorderedAccessViews binds ppRenderTargetViews and ppDepthStencilView.</para>	
             <para>OMSetRenderTargetsAndUnorderedAccessViews ignores UAVStartSlot.</para>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::OMSetRenderTargetsAndUnorderedAccessViews']/*"/>	
            <unmanaged>void ID3D11DeviceContext::OMSetRenderTargetsAndUnorderedAccessViews([In] unsigned int NumRTVs,[In, Buffer, Optional] const ID3D11RenderTargetView** ppRenderTargetViews,[In, Optional] ID3D11DepthStencilView* pDepthStencilView,[In] unsigned int UAVStartSlot,[In] unsigned int NumUAVs,[In, Buffer, Optional] const ID3D11UnorderedAccessView** ppUnorderedAccessViews,[In, Buffer, Optional] const unsigned int* pUAVInitialCounts)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetRenderTargetsAndUnorderedAccessViews(System.Int32,SharpDX.ComArray{SharpDX.Direct3D11.RenderTargetView},SharpDX.Direct3D11.DepthStencilView,System.Int32,System.Int32,SharpDX.ComArray{SharpDX.Direct3D11.UnorderedAccessView},System.Int32[])">
            <summary>	
            Binds resources to the output-merger stage.	
            </summary>	
            <param name="numRTVs"><para>Number of render-target views (ppRenderTargetViews) and depth-stencil view (ppDepthStencilView)  to bind. If you set NumViews to D3D11_KEEP_RENDER_TARGETS_AND_DEPTH_STENCIL (0xffffffff), this method does not modify the currently bound render-target views (RTVs) and also does not modify depth-stencil view (DSV).</para></param>	
            <param name="renderTargetViewsOut"><para>Pointer to an array of ID3D11RenderTargetViews, which represent render-target views. Specify <c>null</c> to set none.</para></param>	
            <param name="depthStencilViewRef"><para>Pointer to a <see cref="T:SharpDX.Direct3D11.DepthStencilView"/>, which represents a depth-stencil view. Specify <c>null</c> to set none.</para></param>	
            <param name="uAVStartSlot"><para>Index into a zero-based array to begin setting unordered-access views (ranges from 0 to D3D11_PS_CS_UAV_REGISTER_COUNT - 1).</para> <para> For the Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, this value can range from 0 to D3D11_1_UAV_SLOT_COUNT - 1. D3D11_1_UAV_SLOT_COUNT is defined as 64.</para> <para>For pixel shaders, UAVStartSlot should be equal to the number of render-target views being bound. </para></param>	
            <param name="numUAVs"><para>Number of unordered-access views (UAVs) in ppUnorderedAccessView. If you set NumUAVs to D3D11_KEEP_UNORDERED_ACCESS_VIEWS (0xffffffff), this method does not modify the currently bound unordered-access views.</para> <para>For the Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, this value can range from 0 to D3D11_1_UAV_SLOT_COUNT - UAVStartSlot.</para></param>	
            <param name="unorderedAccessViewsOut"><para>Pointer to an array of ID3D11UnorderedAccessViews, which represent unordered-access views.</para></param>	
            <param name="uAVInitialCountsRef"><para>An array of append and consume buffer offsets. A value of -1 indicates to keep the current offset. Any other values set the hidden counter  for that appendable and consumable UAV. pUAVInitialCounts is  relevant only for UAVs that were created with either  <see cref="F:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.Append"/> or <see cref="F:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.Counter"/> specified  when the UAV was created; otherwise, the argument is ignored.</para></param>	
            <remarks>	
            For pixel shaders, the render targets and unordered-access views share the same resource slots when being written out. This means that UAVs must be  given an offset so that they are placed in the slots after the render target views that are being bound.Note??RTVs, DSV, and UAVs cannot be set independently; they all need to be set at the same time.Two RTVs conflict if they share a subresource (and therefore share the same resource).Two UAVs conflict if they share a subresource (and therefore share the same resource).An RTV conflicts with a UAV if they share a subresource or share a bind point.OMSetRenderTargetsAndUnorderedAccessViews operates properly in the following situations:<para>NumViews != D3D11_KEEP_RENDER_TARGETS_AND_DEPTH_STENCIL and NumUAVs != D3D11_KEEP_UNORDERED_ACCESS_VIEWS</para>	
             <para>The following conditions must be true for OMSetRenderTargetsAndUnorderedAccessViews to succeed and for the runtime to pass the bind information to the driver:</para>	
              NumViews &lt;= 8 UAVStartSlot &gt;= NumViews UAVStartSlot + NumUAVs &lt;= 8 There must be no conflicts in the set of all ppRenderTargetViews and ppUnorderedAccessView. ppDepthStencilView must match the render-target views. For more information about resource views, see Introduction to a Resource in Direct3D 11.  <para>OMSetRenderTargetsAndUnorderedAccessViews performs the following tasks:</para>	
              Unbinds all currently bound conflicting resources (stream-output target resources (SOTargets), compute shader (CS) UAVs, shader-resource views (SRVs)). Binds ppRenderTargetViews, ppDepthStencilView, and ppUnorderedAccessView.    <para>NumViews == D3D11_KEEP_RENDER_TARGETS_AND_DEPTH_STENCIL </para>	
             <para>In this situation, OMSetRenderTargetsAndUnorderedAccessViews binds only UAVs. </para>	
             <para>The following conditions must be true for OMSetRenderTargetsAndUnorderedAccessViews to succeed and for the runtime to pass the bind information to the driver:</para>	
              UAVStartSlot + NumUAVs &lt;= 8 There must be no conflicts in ppUnorderedAccessView.  <para>OMSetRenderTargetsAndUnorderedAccessViews unbinds the following items:</para>	
              All RTVs in slots &gt;= UAVStartSlot All RTVs that conflict with any UAVs in ppUnorderedAccessView All currently bound resources (SOTargets, CS UAVs, SRVs) that conflict with ppUnorderedAccessView  <para>OMSetRenderTargetsAndUnorderedAccessViews binds ppUnorderedAccessView.</para>	
             <para>OMSetRenderTargetsAndUnorderedAccessViews ignores ppDepthStencilView, and the current depth-stencil view remains bound.</para>	
               <para>NumUAVs == D3D11_KEEP_UNORDERED_ACCESS_VIEWS</para>	
             <para>In this situation, OMSetRenderTargetsAndUnorderedAccessViews binds only RTVs and DSV. </para>	
             <para>The following conditions must be true for OMSetRenderTargetsAndUnorderedAccessViews to succeed and for the runtime to pass the bind information to the driver:</para>	
              NumViews &lt;= 8 There must be no conflicts in ppRenderTargetViews. ppDepthStencilView must match the render-target views. For more information about resource views, see Introduction to a Resource in Direct3D 11.  <para>OMSetRenderTargetsAndUnorderedAccessViews unbinds the following items:</para>	
              All UAVs in slots &lt; NumViews All UAVs that conflict with any RTVs in ppRenderTargetViews All currently bound resources (SOTargets, CS UAVs, SRVs) that conflict with ppRenderTargetViews  <para>OMSetRenderTargetsAndUnorderedAccessViews binds ppRenderTargetViews and ppDepthStencilView.</para>	
             <para>OMSetRenderTargetsAndUnorderedAccessViews ignores UAVStartSlot.</para>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::OMSetRenderTargetsAndUnorderedAccessViews']/*"/>	
            <unmanaged>void ID3D11DeviceContext::OMSetRenderTargetsAndUnorderedAccessViews([In] unsigned int NumRTVs,[In, Buffer, Optional] const ID3D11RenderTargetView** ppRenderTargetViews,[In, Optional] ID3D11DepthStencilView* pDepthStencilView,[In] unsigned int UAVStartSlot,[In] unsigned int NumUAVs,[In, Buffer, Optional] const ID3D11UnorderedAccessView** ppUnorderedAccessViews,[In, Buffer, Optional] const unsigned int* pUAVInitialCounts)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetBlendState(SharpDX.Direct3D11.BlendState,System.Nullable{SharpDX.Color4},System.Int32)">
            <summary>	
            Set the blend state of the output-merger stage.	
            </summary>	
            <param name="blendStateRef"><para>Pointer to a blend-state interface (see <see cref="T:SharpDX.Direct3D11.BlendState"/>). Passing in <c>null</c> implies a default blend state. See remarks for further details.</para></param>	
            <param name="blendFactor"><para>Array of blend factors, one for each RGBA component. This requires a blend state object that specifies the <see cref="F:SharpDX.Direct3D11.BlendOption.BlendFactor"/> option.</para></param>	
            <param name="sampleMask"><para>32-bit sample coverage. The default value is 0xffffffff. See remarks.</para></param>	
            <remarks>	
            Blend state is used by the output-merger stage to determine how to blend together two pixel values. The two values are commonly the current pixel value and the pixel value already in the output render target. Use the blend operation to control where the two pixel values come from and how they are mathematically combined.To create a blend-state interface, call <see cref="M:SharpDX.Direct3D11.Device.CreateBlendState(SharpDX.Direct3D11.BlendStateDescription@,SharpDX.Direct3D11.BlendState)"/>.Passing in <c>null</c> for the blend-state interface indicates to the runtime to set a default blending state.  The following table indicates the default blending parameters.StateDefault Value AlphaToCoverageEnableFALSE BlendEnableFALSE[8] SrcBlendD3D11_BLEND_ONE DstBlendD3D11_BLEND_ZERO BlendOpD3D11_BLEND_OP_ADD SrcBlendAlphaD3D11_BLEND_ONE DstBlendAlphaD3D11_BLEND_ZERO BlendOpAlphaD3D11_BLEND_OP_ADD RenderTargetWriteMask[8]<see cref="F:SharpDX.Direct3D11.ColorWriteMaskFlags.All"/>[8]?A sample mask determines which samples get updated in all the active render targets. The mapping of bits in a sample mask to samples in a multisample render target is the responsibility of an individual application. A sample mask is always applied; it is independent of whether multisampling is enabled, and does not depend on whether an application uses multisample render targets.The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::OMSetBlendState']/*"/>	
            <unmanaged>void ID3D11DeviceContext::OMSetBlendState([In, Optional] ID3D11BlendState* pBlendState,[In, Optional] const SHARPDX_COLOR4* BlendFactor,[In] unsigned int SampleMask)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.SetDepthStencilState(SharpDX.Direct3D11.DepthStencilState,System.Int32)">
            <summary>	
            Sets the depth-stencil state of the output-merger stage.	
            </summary>	
            <param name="depthStencilStateRef"><para>Pointer to a depth-stencil state interface (see <see cref="T:SharpDX.Direct3D11.DepthStencilState"/>) to bind to the device. Set this to <c>null</c> to use the default state listed in <see cref="T:SharpDX.Direct3D11.DepthStencilStateDescription"/>.</para></param>	
            <param name="stencilRef"><para>Reference value to perform against when doing a depth-stencil test. See remarks.</para></param>	
            <remarks>	
            To create a depth-stencil state interface, call <see cref="M:SharpDX.Direct3D11.Device.CreateDepthStencilState(SharpDX.Direct3D11.DepthStencilStateDescription@,SharpDX.Direct3D11.DepthStencilState)"/>.The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::OMSetDepthStencilState']/*"/>	
            <unmanaged>void ID3D11DeviceContext::OMSetDepthStencilState([In, Optional] ID3D11DepthStencilState* pDepthStencilState,[In] unsigned int StencilRef)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.GetRenderTargets(System.Int32,SharpDX.Direct3D11.RenderTargetView[],SharpDX.Direct3D11.DepthStencilView@)">
            <summary>	
            Get references to the resources bound to the output-merger stage.	
            </summary>	
            <param name="numViews"><para>Number of render targets to retrieve.</para></param>	
            <param name="renderTargetViewsOut"><para>Pointer to an array of ID3D11RenderTargetViews which represent render target views. Specify <c>null</c> for this parameter when retrieval of a render target is not needed. </para></param>	
            <param name="depthStencilViewOut"><para>Pointer to a <see cref="T:SharpDX.Direct3D11.DepthStencilView"/>, which represents a depth-stencil view. Specify <c>null</c> for this parameter when retrieval of the depth-stencil view is not needed.</para></param>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::OMGetRenderTargets']/*"/>	
            <unmanaged>void ID3D11DeviceContext::OMGetRenderTargets([In] unsigned int NumViews,[Out, Buffer, Optional] ID3D11RenderTargetView** ppRenderTargetViews,[Out, Optional] ID3D11DepthStencilView** ppDepthStencilView)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.GetRenderTargetsAndUnorderedAccessViews(System.Int32,SharpDX.Direct3D11.RenderTargetView[],SharpDX.Direct3D11.DepthStencilView@,System.Int32,System.Int32,SharpDX.Direct3D11.UnorderedAccessView[])">
            <summary>	
            Get references to the resources bound to the output-merger stage.	
            </summary>	
            <param name="numRTVs"><para>The number of render-target views to retrieve.</para></param>	
            <param name="renderTargetViewsOut"><para>Pointer to an array of ID3D11RenderTargetViews, which represent render-target views. Specify <c>null</c> for this parameter when retrieval of render-target views is not required. </para></param>	
            <param name="depthStencilViewOut"><para>Pointer to a <see cref="T:SharpDX.Direct3D11.DepthStencilView"/>, which represents a depth-stencil view. Specify <c>null</c> for this parameter when retrieval of the depth-stencil view is not required.</para></param>	
            <param name="uAVStartSlot"><para>Index into a zero-based array to begin retrieving unordered-access views (ranges from 0 to D3D11_PS_CS_UAV_REGISTER_COUNT - 1). For pixel shaders UAVStartSlot should be equal to the number of render-target views that are bound. </para></param>	
            <param name="numUAVs"><para>Number of unordered-access views to return in ppUnorderedAccessViews. This number ranges from 0 to D3D11_PS_CS_UAV_REGISTER_COUNT - UAVStartSlot.</para></param>	
            <param name="unorderedAccessViewsOut"><para>Pointer to an array of ID3D11UnorderedAccessViews, which represent unordered-access views that are retrieved. Specify <c>null</c> for this parameter when retrieval of unordered-access views is not required. </para></param>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::OMGetRenderTargetsAndUnorderedAccessViews']/*"/>	
            <unmanaged>void ID3D11DeviceContext::OMGetRenderTargetsAndUnorderedAccessViews([In] unsigned int NumRTVs,[Out, Buffer, Optional] ID3D11RenderTargetView** ppRenderTargetViews,[Out, Optional] ID3D11DepthStencilView** ppDepthStencilView,[In] unsigned int UAVStartSlot,[In] unsigned int NumUAVs,[Out, Buffer, Optional] ID3D11UnorderedAccessView** ppUnorderedAccessViews)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.GetBlendState(SharpDX.Direct3D11.BlendState@,SharpDX.Color4@,System.Int32@)">
            <summary>	
            Get the blend state of the output-merger stage.	
            </summary>	
            <param name="blendStateOut"><para>Address of a reference to a blend-state interface (see <see cref="T:SharpDX.Direct3D11.BlendState"/>).</para></param>	
            <param name="blendFactor"><para>Array of blend factors, one for each RGBA component.</para></param>	
            <param name="sampleMaskRef"><para>Pointer to a sample mask.</para></param>	
            <remarks>	
            The reference count of the returned interface will be incremented by one when the blend state is retrieved. Applications must release returned reference(s) when they are no longer needed, or else there will be a memory leak.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::OMGetBlendState']/*"/>	
            <unmanaged>void ID3D11DeviceContext::OMGetBlendState([Out, Optional] ID3D11BlendState** ppBlendState,[Out, Optional] SHARPDX_COLOR4* BlendFactor,[Out, Optional] unsigned int* pSampleMask)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.OutputMergerStage.GetDepthStencilState(SharpDX.Direct3D11.DepthStencilState@,System.Int32@)">
            <summary>	
            Gets the depth-stencil state of the output-merger stage.	
            </summary>	
            <param name="depthStencilStateOut"><para>Address of a reference to a depth-stencil state interface (see <see cref="T:SharpDX.Direct3D11.DepthStencilState"/>) to be filled with information from the device.</para></param>	
            <param name="stencilRefRef"><para>Pointer to the stencil reference value used in the depth-stencil test.</para></param>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::OMGetDepthStencilState']/*"/>	
            <unmanaged>void ID3D11DeviceContext::OMGetDepthStencilState([Out, Optional] ID3D11DepthStencilState** ppDepthStencilState,[Out, Optional] unsigned int* pStencilRef)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.OutputMergerStage.BlendFactor">
            <summary>
            Gets or sets the blend factor.
            </summary>
            <value>The blend factor.</value>
        </member>
        <member name="P:SharpDX.Direct3D11.OutputMergerStage.BlendSampleMask">
            <summary>
            Gets or sets the blend sample mask.
            </summary>
            <value>The blend sample mask.</value>
        </member>
        <member name="P:SharpDX.Direct3D11.OutputMergerStage.BlendState">
            <summary>
            Gets or sets the state of the blend.
            </summary>
            <value>The state of the blend.</value>
        </member>
        <member name="P:SharpDX.Direct3D11.OutputMergerStage.DepthStencilReference">
            <summary>
            Gets or sets the depth stencil reference.
            </summary>
            <value>The depth stencil reference.</value>
        </member>
        <member name="P:SharpDX.Direct3D11.OutputMergerStage.DepthStencilState">
            <summary>
            Gets or sets the state of the depth stencil.
            </summary>
            <value>The state of the depth stencil.</value>
        </member>
        <member name="T:SharpDX.Direct3D11.RasterizerStage">
            <summary>	
            The <see cref="T:SharpDX.Direct3D11.DeviceContext"/> interface represents a device context which generates rendering commands.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext']/*"/>	
            <unmanaged>ID3D11DeviceContext</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerStage.GetViewports">
            <summary>	
            Get the array of {{viewports}} bound  to the {{rasterizer stage}} 	
            </summary>	
            <returns>An array of viewports (see <see cref="T:SharpDX.Direct3D11.Viewport"/>).</returns>
            <unmanaged>void RSGetViewports([InOut] int* NumViewports,[Out, Buffer, Optional] D3D10_VIEWPORT* pViewports)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerStage.GetViewports(SharpDX.Direct3D11.Viewport[])">
            <summary>	
            Get the array of {{viewports}} bound  to the {{rasterizer stage}} 	
            </summary>	
            <returns>An array of viewports (see <see cref="T:SharpDX.Direct3D11.Viewport"/>).</returns>
            <unmanaged>void RSGetViewports([InOut] int* NumViewports,[Out, Buffer, Optional] D3D10_VIEWPORT* pViewports)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerStage.GetScissorRectangles">
            <summary>	
            Get the array of {{scissor rectangles}} bound to the {{rasterizer stage}}.	
            </summary>	
            <returns>An array of scissor rectangles (see <see cref="T:SharpDX.Rectangle"/>).</returns>
            <unmanaged>void RSGetScissorRects([InOut] int* NumRects,[Out, Buffer, Optional] D3D10_RECT* pRects)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerStage.GetScissorRectangles(SharpDX.Rectangle[])">
            <summary>	
            Get the array of {{scissor rectangles}} bound to the {{rasterizer stage}}.	
            </summary>	
            <returns>An array of scissor rectangles (see <see cref="T:SharpDX.Rectangle"/>).</returns>
            <unmanaged>void RSGetScissorRects([InOut] int* NumRects,[Out, Buffer, Optional] D3D10_RECT* pRects)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerStage.SetScissorRectangle(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Binds a single scissor rectangle to the rasterizer stage.
            </summary>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="right">The right.</param>
            <param name="bottom">The bottom.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerStage.SetScissorRectangles(SharpDX.Rectangle[])">
            <summary>
              Binds a set of scissor rectangles to the rasterizer stage.
            </summary>
            <param name = "scissorRectangles">The set of scissor rectangles to bind.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerStage.SetViewport(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Binds a single viewport to the rasterizer stage.
            </summary>
            <param name="x">The x coord of the viewport.</param>
            <param name="y">The x coord of the viewport.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="minZ">The min Z.</param>
            <param name="maxZ">The max Z.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerStage.SetViewports(SharpDX.Direct3D11.Viewport)">
            <summary>
            Binds a single viewport to the rasterizer stage.
            </summary>
            <param name="viewport">The viewport.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerStage.SetViewports(SharpDX.Direct3D11.Viewport[])">
            <summary>
              Binds a set of viewports to the rasterizer stage.
            </summary>
            <param name = "viewports">The set of viewports to bind.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerStage.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.RasterizerStage"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerStage.SetState(SharpDX.Direct3D11.RasterizerState)">
            <summary>	
            Set the rasterizer state for the rasterizer stage of the pipeline.	
            </summary>	
            <param name="rasterizerStateRef">No documentation.</param>	
            <remarks>	
            To create a rasterizer state interface, call <see cref="M:SharpDX.Direct3D11.Device.CreateRasterizerState(SharpDX.Direct3D11.RasterizerStateDescription@,SharpDX.Direct3D11.RasterizerState)"/>.The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::RSSetState']/*"/>	
            <unmanaged>void ID3D11DeviceContext::RSSetState([In, Optional] ID3D11RasterizerState* pRasterizerState)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerStage.SetViewports(System.Int32,System.IntPtr)">
            <summary>	
            Bind an array of viewports to the rasterizer stage of the pipeline.	
            </summary>	
            <param name="numViewports"><para>Number of viewports to bind.</para></param>	
            <param name="viewportsRef"><para>An array of <see cref="T:SharpDX.Direct3D11.Viewport"/> structures to bind to the device. See the structure page for details about how the viewport size is dependent on the device feature level which has changed between Direct3D 11 and Direct3D 10.</para></param>	
            <remarks>	
            All viewports must be set atomically as one operation. Any viewports not defined by the call are disabled.Which viewport to use is determined by the SV_ViewportArrayIndex semantic output by a geometry shader; if a geometry shader does not specify the semantic, Direct3D will use the first viewport in the array.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::RSSetViewports']/*"/>	
            <unmanaged>void ID3D11DeviceContext::RSSetViewports([In] unsigned int NumViewports,[In, Buffer, Optional] const void* pViewports)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerStage.SetScissorRects(System.Int32,System.IntPtr)">
            <summary>	
            Bind an array of scissor rectangles to the rasterizer stage.	
            </summary>	
            <param name="numRects"><para>Number of scissor rectangles to bind.</para></param>	
            <param name="rectsRef"><para>An array of scissor rectangles (see D3D11_RECT).</para></param>	
            <remarks>	
            All scissor rects must be set atomically as one operation. Any scissor rects not defined by the call are disabled.The scissor rectangles will only be used if ScissorEnable is set to true in the rasterizer state (see <see cref="T:SharpDX.Direct3D11.RasterizerStateDescription"/>).Which scissor rectangle to use is determined by the SV_ViewportArrayIndex semantic output by a geometry shader (see shader semantic syntax). If a geometry shader does not make use of the SV_ViewportArrayIndex semantic then Direct3D will use the first scissor rectangle in the array.Each scissor rectangle in the array corresponds to a viewport in an array of viewports (see <see cref="M:SharpDX.Direct3D11.RasterizerStage.SetViewports(SharpDX.Direct3D11.Viewport)"/>).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::RSSetScissorRects']/*"/>	
            <unmanaged>void ID3D11DeviceContext::RSSetScissorRects([In] unsigned int NumRects,[In, Buffer, Optional] const void* pRects)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerStage.GetState(SharpDX.Direct3D11.RasterizerState@)">
            <summary>	
            Get the rasterizer state from the rasterizer stage of the pipeline.	
            </summary>	
            <param name="rasterizerStateOut">No documentation.</param>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::RSGetState']/*"/>	
            <unmanaged>void ID3D11DeviceContext::RSGetState([Out] ID3D11RasterizerState** ppRasterizerState)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerStage.GetViewports(System.Int32@,SharpDX.Direct3D11.Viewport[])">
            <summary>	
            Get the array of viewports bound to the rasterizer stage	
            </summary>	
            <param name="numViewportsRef"><para>The input specifies the number of viewports (ranges from 0 to D3D11_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE)  in pViewports, the output contains the actual number of viewports returned.   If pViewports is <c>null</c>, this will be filled with the number of viewports currently bound.</para></param>	
            <param name="viewportsRef"><para>An array of <see cref="T:SharpDX.Direct3D11.Viewport"/> structures that are bound to the device. If the number of viewports (in pNumViewports) is  greater than the actual number of viewports currently bound, then unused members of the array will contain 0.  See the structure page for details about how the viewport size is dependent on the device feature level which has changed between Direct3D 11  and Direct3D 10.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::RSGetViewports']/*"/>	
            <unmanaged>void ID3D11DeviceContext::RSGetViewports([InOut] unsigned int* pNumViewports,[Out, Buffer, Optional] D3D11_VIEWPORT* pViewports)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerStage.GetScissorRects(System.Int32@,SharpDX.Rectangle[])">
            <summary>	
            Get the array of scissor rectangles bound to the rasterizer stage.	
            </summary>	
            <param name="numRectsRef"><para>The number of scissor rectangles (ranges between 0 and D3D11_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE) bound; set pRects to <c>null</c> to use pNumRects to see how many rectangles would be returned.</para></param>	
            <param name="rectsRef"><para>An array of scissor rectangles (see D3D11_RECT). If NumRects is greater than the number of scissor rects currently bound, then unused members of the array will contain 0.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::RSGetScissorRects']/*"/>	
            <unmanaged>void ID3D11DeviceContext::RSGetScissorRects([InOut] unsigned int* pNumRects,[Out, Buffer, Optional] RECT* pRects)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.RasterizerStage.State">
            <summary>	
            Get the rasterizer state from the rasterizer stage of the pipeline.	
            </summary>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::RSGetState']/*"/>	
            <unmanaged>RSGetState</unmanaged>	
            <unmanaged>void ID3D11DeviceContext::RSGetState([Out] ID3D11RasterizerState** ppRasterizerState)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.DomainShader">
            <summary>	
            A domain-shader interface manages an executable program (a domain shader) that controls the domain-shader stage.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DomainShader']/*"/>	
            <unmanaged>ID3D11DomainShader</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DomainShader.#ctor(SharpDX.Direct3D11.Device,SharpDX.D3DCompiler.ShaderBytecode)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.DomainShader" /> class.
            </summary>
            <param name = "device">The device used to create the shader.</param>
            <param name = "shaderBytecode">The compiled shader bytecode.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.DomainShader.#ctor(SharpDX.Direct3D11.Device,SharpDX.D3DCompiler.ShaderBytecode,SharpDX.Direct3D11.ClassLinkage)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.DomainShader" /> class.
            </summary>
            <param name = "device">The device used to create the shader.</param>
            <param name = "shaderBytecode">The compiled shader bytecode.</param>
            <param name = "linkage">A dynamic class linkage interface.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.DomainShader.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.DomainShader"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="T:SharpDX.Direct3D11.AsynchronousFlags">
            <summary>	
            Optional flags that control the behavior of <see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/>.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_ASYNC_GETDATA_FLAG']/*"/>	
            <unmanaged>D3D11_ASYNC_GETDATA_FLAG</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AsynchronousFlags.DoNotFlush">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_ASYNC_GETDATA_DONOTFLUSH']/*"/>	
            <unmanaged>D3D11_ASYNC_GETDATA_DONOTFLUSH</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AsynchronousFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedChannelType">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CHANNEL_TYPE']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_CHANNEL_TYPE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedChannelType.D3D11">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CHANNEL_D3D11']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_CHANNEL_D3D11</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedChannelType.DriverSoftware">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CHANNEL_DRIVER_SOFTWARE']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_CHANNEL_DRIVER_SOFTWARE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedChannelType.DriverHardware">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CHANNEL_DRIVER_HARDWARE']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_CHANNEL_DRIVER_HARDWARE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedProcessIdentifierType">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_PROCESS_IDENTIFIER_TYPE']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_PROCESS_IDENTIFIER_TYPE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedProcessIdentifierType.ProcessidtypeUnknown">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_PROCESSIDTYPE_UNKNOWN']/*"/>	
            <unmanaged>D3D11_PROCESSIDTYPE_UNKNOWN</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedProcessIdentifierType.ProcessidtypeDwm">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_PROCESSIDTYPE_DWM']/*"/>	
            <unmanaged>D3D11_PROCESSIDTYPE_DWM</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedProcessIdentifierType.ProcessidtypeHandle">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_PROCESSIDTYPE_HANDLE']/*"/>	
            <unmanaged>D3D11_PROCESSIDTYPE_HANDLE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.BindFlags">
            <summary>	
            Identifies how to bind a resource to the pipeline.	
            </summary>	
            <remarks>	
            In general, binding flags can be combined using a logical OR (except the constant-buffer flag); however, you should use a single flag to allow the device to optimize the resource usage.This enumeration is used by a:Buffer description when creating a buffer. Texture description when creating a texture (see <see cref="T:SharpDX.Direct3D11.Texture1DDescription"/> or <see cref="T:SharpDX.Direct3D11.Texture2DDescription"/> or <see cref="T:SharpDX.Direct3D11.Texture3DDescription"/>).A shader-resource buffer is NOT a constant buffer; rather, it is a texture or buffer resource that is bound to a shader, that contains texture or buffer data (it is not limited to a single element type in the buffer). A shader-resource buffer is created with the <see cref="F:SharpDX.Direct3D11.BindFlags.ShaderResource"/> flag and is bound to the pipeline using one of these APIs: <see cref="M:SharpDX.Direct3D11.GeometryShaderStage.SetShaderResources(System.Int32,System.Int32,System.IntPtr)"/>, <see cref="M:SharpDX.Direct3D11.PixelShaderStage.SetShaderResources(System.Int32,System.Int32,System.IntPtr)"/>, or <see cref="M:SharpDX.Direct3D11.VertexShaderStage.SetShaderResources(System.Int32,System.Int32,System.IntPtr)"/>. Furthermore, a shader-resource buffer cannot use the <see cref="F:SharpDX.Direct3D11.MapMode.WriteNoOverwrite"/> flag.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BIND_FLAG']/*"/>	
            <unmanaged>D3D11_BIND_FLAG</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BindFlags.VertexBuffer">
            <summary>	
            <para>Bind a buffer as a vertex buffer to the input-assembler stage.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BIND_VERTEX_BUFFER']/*"/>	
            <unmanaged>D3D11_BIND_VERTEX_BUFFER</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BindFlags.IndexBuffer">
            <summary>	
            <para>Bind a buffer as an index buffer to the input-assembler stage.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BIND_INDEX_BUFFER']/*"/>	
            <unmanaged>D3D11_BIND_INDEX_BUFFER</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BindFlags.ConstantBuffer">
            <summary>	
            <para>Bind a buffer as a constant buffer to a shader stage; this flag may NOT be combined with any other bind flag.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BIND_CONSTANT_BUFFER']/*"/>	
            <unmanaged>D3D11_BIND_CONSTANT_BUFFER</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BindFlags.ShaderResource">
            <summary>	
            <para>Bind a buffer or texture to a shader stage; this flag cannot be used with the <see cref="F:SharpDX.Direct3D11.MapMode.WriteNoOverwrite"/> flag.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BIND_SHADER_RESOURCE']/*"/>	
            <unmanaged>D3D11_BIND_SHADER_RESOURCE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BindFlags.StreamOutput">
            <summary>	
            <para>Bind an output buffer for the stream-output stage.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BIND_STREAM_OUTPUT']/*"/>	
            <unmanaged>D3D11_BIND_STREAM_OUTPUT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BindFlags.RenderTarget">
            <summary>	
            <para>Bind a texture as a render target for the output-merger stage.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BIND_RENDER_TARGET']/*"/>	
            <unmanaged>D3D11_BIND_RENDER_TARGET</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BindFlags.DepthStencil">
            <summary>	
            <para>Bind a texture as a depth-stencil target for the output-merger stage.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BIND_DEPTH_STENCIL']/*"/>	
            <unmanaged>D3D11_BIND_DEPTH_STENCIL</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BindFlags.UnorderedAccess">
            <summary>	
            <para>Bind an unordered access resource.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BIND_UNORDERED_ACCESS']/*"/>	
            <unmanaged>D3D11_BIND_UNORDERED_ACCESS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BindFlags.Decoder">
            <summary>	
            <para>Set this flag to indicate that a  2D texture is used to receive output from the decoder API. The common way to create resources for a decoder output is by calling the  <see cref="M:SharpDX.Direct3D11.Device.CreateTexture2D(SharpDX.Direct3D11.Texture2DDescription@,SharpDX.DataBox[],SharpDX.Direct3D11.Texture2D)"/> method to create an array of 2D  textures. However, you cannot use texture arrays that are created with this flag in calls to <see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/>.</para>	
             Direct 3D 11:??This value is not supported until Direct3D 11.1.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BIND_DECODER']/*"/>	
            <unmanaged>D3D11_BIND_DECODER</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BindFlags.VideoEncoder">
            <summary>	
            <para>Set this flag to indicate that a  2D texture is used to receive input from the video encoder API. The common way to create resources for a video encoder is by calling the  <see cref="M:SharpDX.Direct3D11.Device.CreateTexture2D(SharpDX.Direct3D11.Texture2DDescription@,SharpDX.DataBox[],SharpDX.Direct3D11.Texture2D)"/> method to create an array of 2D  textures. However, you cannot use texture arrays that are created with this flag in calls to <see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/>.</para>	
             Direct 3D 11:??This value is not supported until Direct3D 11.1.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BIND_VIDEO_ENCODER']/*"/>	
            <unmanaged>D3D11_BIND_VIDEO_ENCODER</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BindFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.BlendOperation">
            <summary>	
            RGB or alpha blending operation.	
            </summary>	
            <remarks>	
            The runtime implements RGB blending and alpha blending separately. Therefore, blend state requires separate blend operations for RGB data and alpha data. These blend operations are specified in a blend description. The two sources?Source 1, called SrcBlend and SrcBlendAlpha, and Source 2, called DestBlend and DestBlendAlpha?are shown in the blending block diagram.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_OP']/*"/>	
            <unmanaged>D3D11_BLEND_OP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOperation.Add">
            <summary>	
            <para>Add source 1 and source 2.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_OP_ADD']/*"/>	
            <unmanaged>D3D11_BLEND_OP_ADD</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOperation.Subtract">
            <summary>	
            <para>Subtract source 1 from source 2.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_OP_SUBTRACT']/*"/>	
            <unmanaged>D3D11_BLEND_OP_SUBTRACT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOperation.ReverseSubtract">
            <summary>	
            <para>Subtract source 2 from source 1.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_OP_REV_SUBTRACT']/*"/>	
            <unmanaged>D3D11_BLEND_OP_REV_SUBTRACT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOperation.Minimum">
            <summary>	
            <para>Find the minimum of source 1 and source 2.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_OP_MIN']/*"/>	
            <unmanaged>D3D11_BLEND_OP_MIN</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOperation.Maximum">
            <summary>	
            <para>Find the maximum of source 1 and source 2.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_OP_MAX']/*"/>	
            <unmanaged>D3D11_BLEND_OP_MAX</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.BlendOption">
            <summary>	
            Describes the blend state that you use in a call to <see cref="M:SharpDX.Direct3D11.Device.CreateBlendState(SharpDX.Direct3D11.BlendStateDescription@,SharpDX.Direct3D11.BlendState)"/> to create a blend-state object.	
            </summary>	
            <remarks>	
            Here are the default values for blend state.StateDefault Value AlphaToCoverageEnableFALSE IndependentBlendEnableFALSE RenderTarget[0].BlendEnableFALSE RenderTarget[0].SrcBlendD3D11_BLEND_ONE RenderTarget[0].DestBlendD3D11_BLEND_ZERO RenderTarget[0].BlendOpD3D11_BLEND_OP_ADD RenderTarget[0].SrcBlendAlphaD3D11_BLEND_ONE RenderTarget[0].DestBlendAlphaD3D11_BLEND_ZERO RenderTarget[0].BlendOpAlphaD3D11_BLEND_OP_ADD RenderTarget[0].RenderTargetWriteMaskD3D11_COLOR_WRITE_ENABLE_ALL?Note??<see cref="T:SharpDX.Direct3D11.BlendStateDescription"/> is identical to <see cref="!:SharpDX.Direct3D10.BlendStateDescription1"/>.If the driver type is set to <see cref="F:SharpDX.Direct3D.DriverType.Hardware"/>, the feature level is set to less than or equal to <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_9_3"/>, and the pixel format of the render target is set to <see cref="F:SharpDX.DXGI.Format.R8G8B8A8_UNorm_SRgb"/>, <see cref="F:SharpDX.DXGI.Format.B8G8R8A8_UNorm_SRgb"/>, or <see cref="F:SharpDX.DXGI.Format.B8G8R8X8_UNorm_SRgb"/>, the display device performs the blend in standard RGB (sRGB) space and not in linear space. However, if the feature level is set to greater than <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_9_3"/>, the display device performs the blend in linear space, which is ideal.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND']/*"/>	
            <unmanaged>D3D11_BLEND</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOption.Zero">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_ZERO']/*"/>	
            <unmanaged>D3D11_BLEND_ZERO</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOption.One">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_ONE']/*"/>	
            <unmanaged>D3D11_BLEND_ONE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOption.SourceColor">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_SRC_COLOR']/*"/>	
            <unmanaged>D3D11_BLEND_SRC_COLOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOption.InverseSourceColor">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_INV_SRC_COLOR']/*"/>	
            <unmanaged>D3D11_BLEND_INV_SRC_COLOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOption.SourceAlpha">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_SRC_ALPHA']/*"/>	
            <unmanaged>D3D11_BLEND_SRC_ALPHA</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOption.InverseSourceAlpha">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_INV_SRC_ALPHA']/*"/>	
            <unmanaged>D3D11_BLEND_INV_SRC_ALPHA</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOption.DestinationAlpha">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_DEST_ALPHA']/*"/>	
            <unmanaged>D3D11_BLEND_DEST_ALPHA</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOption.InverseDestinationAlpha">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_INV_DEST_ALPHA']/*"/>	
            <unmanaged>D3D11_BLEND_INV_DEST_ALPHA</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOption.DestinationColor">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_DEST_COLOR']/*"/>	
            <unmanaged>D3D11_BLEND_DEST_COLOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOption.InverseDestinationColor">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_INV_DEST_COLOR']/*"/>	
            <unmanaged>D3D11_BLEND_INV_DEST_COLOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOption.SourceAlphaSaturate">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_SRC_ALPHA_SAT']/*"/>	
            <unmanaged>D3D11_BLEND_SRC_ALPHA_SAT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOption.BlendFactor">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_BLEND_FACTOR']/*"/>	
            <unmanaged>D3D11_BLEND_BLEND_FACTOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOption.InverseBlendFactor">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_INV_BLEND_FACTOR']/*"/>	
            <unmanaged>D3D11_BLEND_INV_BLEND_FACTOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOption.SecondarySourceColor">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_SRC1_COLOR']/*"/>	
            <unmanaged>D3D11_BLEND_SRC1_COLOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOption.InverseSecondarySourceColor">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_INV_SRC1_COLOR']/*"/>	
            <unmanaged>D3D11_BLEND_INV_SRC1_COLOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOption.SecondarySourceAlpha">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_SRC1_ALPHA']/*"/>	
            <unmanaged>D3D11_BLEND_SRC1_ALPHA</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BlendOption.InverseSecondarySourceAlpha">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_INV_SRC1_ALPHA']/*"/>	
            <unmanaged>D3D11_BLEND_INV_SRC1_ALPHA</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.BusType">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUS_TYPE']/*"/>	
            <unmanaged>D3D11_BUS_TYPE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BusType.TypeOther">
            <summary>	
            <para>Indicates a type of bus other than the types listed here.	
            </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUS_TYPE_OTHER']/*"/>	
            <unmanaged>D3D11_BUS_TYPE_OTHER</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BusType.TypePci">
            <summary>	
            <para>PCI bus.	
            </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUS_TYPE_PCI']/*"/>	
            <unmanaged>D3D11_BUS_TYPE_PCI</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BusType.TypePcix">
            <summary>	
            <para>PCI-X bus.	
            </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUS_TYPE_PCIX']/*"/>	
            <unmanaged>D3D11_BUS_TYPE_PCIX</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BusType.TypePciexpress">
            <summary>	
            <para>PCI Express bus.	
            </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUS_TYPE_PCIEXPRESS']/*"/>	
            <unmanaged>D3D11_BUS_TYPE_PCIEXPRESS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BusType.TypeAgp">
            <summary>	
            <para>Accelerated Graphics Port (AGP) bus.	
            </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUS_TYPE_AGP']/*"/>	
            <unmanaged>D3D11_BUS_TYPE_AGP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BusType.ImplModifierInsideOfChipset">
            <summary>	
            <para>The implementation for the graphics adapter is in a motherboard chipset's north bridge. This flag implies that data never goes over an expansion bus (such as PCI or AGP) when it is transferred from main memory to the graphics adapter.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUS_IMPL_MODIFIER_INSIDE_OF_CHIPSET']/*"/>	
            <unmanaged>D3D11_BUS_IMPL_MODIFIER_INSIDE_OF_CHIPSET</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BusType.ImplModifierTracksOnMotherBoardToChip">
            <summary>	
            <para>Indicates that the graphics adapter is connected to a motherboard chipset's north bridge by tracks on the motherboard, and all of the graphics adapter's chips are soldered to the motherboard. This flag implies that data never goes over an expansion bus (such as PCI or AGP) when it is transferred from main memory to the graphics adapter.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUS_IMPL_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_CHIP']/*"/>	
            <unmanaged>D3D11_BUS_IMPL_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_CHIP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BusType.ImplModifierTracksOnMotherBoardToSocket">
            <summary>	
            <para>The graphics adapter is connected to a motherboard chipset's north bridge by tracks on the motherboard, and all of the graphics adapter's chips are connected through sockets to the motherboard.	
            </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUS_IMPL_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_SOCKET']/*"/>	
            <unmanaged>D3D11_BUS_IMPL_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_SOCKET</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BusType.ImplModifierDaughterBoardConnector">
            <summary>	
            <para>The graphics adapter is connected to the motherboard through a daughterboard connector.	
            </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUS_IMPL_MODIFIER_DAUGHTER_BOARD_CONNECTOR']/*"/>	
            <unmanaged>D3D11_BUS_IMPL_MODIFIER_DAUGHTER_BOARD_CONNECTOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BusType.ImplModifierDaughterBoardConnectorInsideOfNuae">
            <summary>	
            <para>The graphics adapter is connected to the motherboard through a daughterboard connector, and the graphics adapter is inside an enclosure that is not user accessible.	
            </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUS_IMPL_MODIFIER_DAUGHTER_BOARD_CONNECTOR_INSIDE_OF_NUAE']/*"/>	
            <unmanaged>D3D11_BUS_IMPL_MODIFIER_DAUGHTER_BOARD_CONNECTOR_INSIDE_OF_NUAE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.BusType.ImplModifierNonStandard">
            <summary>	
            <para>One of the D3D11_BUS_IMPL_MODIFIER_Xxx flags is set.	
            </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUS_IMPL_MODIFIER_NON_STANDARD']/*"/>	
            <unmanaged>D3D11_BUS_IMPL_MODIFIER_NON_STANDARD</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.ColorWriteMaskFlags">
            <summary>	
            Identify which components of each pixel of a render target are writable during blending.	
            </summary>	
            <remarks>	
            These flags can be combined with a bitwise OR.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COLOR_WRITE_ENABLE']/*"/>	
            <unmanaged>D3D11_COLOR_WRITE_ENABLE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ColorWriteMaskFlags.Red">
            <summary>	
            <para>Allow data to be stored in the red component.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COLOR_WRITE_ENABLE_RED']/*"/>	
            <unmanaged>D3D11_COLOR_WRITE_ENABLE_RED</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ColorWriteMaskFlags.Green">
            <summary>	
            <para>Allow data to be stored in the green component.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COLOR_WRITE_ENABLE_GREEN']/*"/>	
            <unmanaged>D3D11_COLOR_WRITE_ENABLE_GREEN</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ColorWriteMaskFlags.Blue">
            <summary>	
            <para>Allow data to be stored in the blue component.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COLOR_WRITE_ENABLE_BLUE']/*"/>	
            <unmanaged>D3D11_COLOR_WRITE_ENABLE_BLUE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ColorWriteMaskFlags.Alpha">
            <summary>	
            <para>Allow data to be stored in the alpha component.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COLOR_WRITE_ENABLE_ALPHA']/*"/>	
            <unmanaged>D3D11_COLOR_WRITE_ENABLE_ALPHA</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ColorWriteMaskFlags.All">
            <summary>	
            <para>Allow data to be stored in all components.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COLOR_WRITE_ENABLE_ALL']/*"/>	
            <unmanaged>D3D11_COLOR_WRITE_ENABLE_ALL</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.Comparison">
            <summary>	
            Comparison options.	
            </summary>	
            <remarks>	
            A comparison option determines whether how the runtime compares source (new) data against destination (existing) data before storing the new data. The comparison option is declared in a description before an object is created. The API allows you to set a comparison option for a depth-stencil buffer (see <see cref="T:SharpDX.Direct3D11.DepthStencilStateDescription"/>), depth-stencil operations (see <see cref="T:SharpDX.Direct3D11.DepthStencilOperationDescription"/>), or sampler state (see <see cref="T:SharpDX.Direct3D11.SamplerStateDescription"/>).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COMPARISON_FUNC']/*"/>	
            <unmanaged>D3D11_COMPARISON_FUNC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Comparison.Never">
            <summary>	
            <para>Never pass the comparison.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COMPARISON_NEVER']/*"/>	
            <unmanaged>D3D11_COMPARISON_NEVER</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Comparison.Less">
            <summary>	
            <para>If the source data is less than the destination data, the comparison passes.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COMPARISON_LESS']/*"/>	
            <unmanaged>D3D11_COMPARISON_LESS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Comparison.Equal">
            <summary>	
            <para>If the source data is equal to the destination data, the comparison passes.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COMPARISON_EQUAL']/*"/>	
            <unmanaged>D3D11_COMPARISON_EQUAL</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Comparison.LessEqual">
            <summary>	
            <para>If the source data is less than or equal to the destination data, the comparison passes.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COMPARISON_LESS_EQUAL']/*"/>	
            <unmanaged>D3D11_COMPARISON_LESS_EQUAL</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Comparison.Greater">
            <summary>	
            <para>If the source data is greater than the destination data, the comparison passes.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COMPARISON_GREATER']/*"/>	
            <unmanaged>D3D11_COMPARISON_GREATER</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Comparison.NotEqual">
            <summary>	
            <para>If the source data is not equal to the destination data, the comparison passes.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COMPARISON_NOT_EQUAL']/*"/>	
            <unmanaged>D3D11_COMPARISON_NOT_EQUAL</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Comparison.GreaterEqual">
            <summary>	
            <para>If the source data is greater than or equal to the destination data, the comparison passes.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COMPARISON_GREATER_EQUAL']/*"/>	
            <unmanaged>D3D11_COMPARISON_GREATER_EQUAL</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Comparison.Always">
            <summary>	
            <para>Always pass the comparison.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COMPARISON_ALWAYS']/*"/>	
            <unmanaged>D3D11_COMPARISON_ALWAYS</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.ComputeShaderFormatSupport">
            <summary>	
            Unordered resource support options for a compute shader resource (see <see cref="M:SharpDX.Direct3D11.Device.CheckFeatureSupport(SharpDX.Direct3D11.Feature)"/>).	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT2']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT2</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderFormatSupport.AtomicAdd">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_ADD']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_ADD</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderFormatSupport.AtomicBitwiseOps">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_BITWISE_OPS']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_BITWISE_OPS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderFormatSupport.AtomicCompareStoreOrCompareExchange">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_COMPARE_STORE_OR_COMPARE_EXCHANGE']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_COMPARE_STORE_OR_COMPARE_EXCHANGE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderFormatSupport.AtomicExchange">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_EXCHANGE']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_EXCHANGE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderFormatSupport.AtomicSignedMinimumOrMaximum">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_SIGNED_MIN_OR_MAX']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_SIGNED_MIN_OR_MAX</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderFormatSupport.AtomicUnsignedMinimumOrMaximum">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_UNSIGNED_MIN_OR_MAX']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT2_UAV_ATOMIC_UNSIGNED_MIN_OR_MAX</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderFormatSupport.TypedLoad">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT2_UAV_TYPED_LOAD']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT2_UAV_TYPED_LOAD</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderFormatSupport.TypedStore">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT2_UAV_TYPED_STORE']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT2_UAV_TYPED_STORE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderFormatSupport.OutputMergerLogicOperation">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT2_OUTPUT_MERGER_LOGIC_OP']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT2_OUTPUT_MERGER_LOGIC_OP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ComputeShaderFormatSupport.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.ContentProtectionCaps">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CONTENT_PROTECTION_CAPS']/*"/>	
            <unmanaged>D3D11_CONTENT_PROTECTION_CAPS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ContentProtectionCaps.Software">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CONTENT_PROTECTION_CAPS_SOFTWARE']/*"/>	
            <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_SOFTWARE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ContentProtectionCaps.Hardware">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CONTENT_PROTECTION_CAPS_HARDWARE']/*"/>	
            <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_HARDWARE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ContentProtectionCaps.ProtectionAlwaysOn">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CONTENT_PROTECTION_CAPS_PROTECTION_ALWAYS_ON']/*"/>	
            <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_PROTECTION_ALWAYS_ON</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ContentProtectionCaps.PartialDecryption">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CONTENT_PROTECTION_CAPS_PARTIAL_DECRYPTION']/*"/>	
            <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_PARTIAL_DECRYPTION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ContentProtectionCaps.ContentKey">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CONTENT_PROTECTION_CAPS_CONTENT_KEY']/*"/>	
            <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_CONTENT_KEY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ContentProtectionCaps.FreshenSessionKey">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CONTENT_PROTECTION_CAPS_FRESHEN_SESSION_KEY']/*"/>	
            <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_FRESHEN_SESSION_KEY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ContentProtectionCaps.EncryptedReadBack">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CONTENT_PROTECTION_CAPS_ENCRYPTED_READ_BACK']/*"/>	
            <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_ENCRYPTED_READ_BACK</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ContentProtectionCaps.EncryptedReadBackKey">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CONTENT_PROTECTION_CAPS_ENCRYPTED_READ_BACK_KEY']/*"/>	
            <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_ENCRYPTED_READ_BACK_KEY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ContentProtectionCaps.SequentialCtrIv">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CONTENT_PROTECTION_CAPS_SEQUENTIAL_CTR_IV']/*"/>	
            <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_SEQUENTIAL_CTR_IV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ContentProtectionCaps.EncryptSlicedataOnly">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CONTENT_PROTECTION_CAPS_ENCRYPT_SLICEDATA_ONLY']/*"/>	
            <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_ENCRYPT_SLICEDATA_ONLY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ContentProtectionCaps.DecryptionBlt">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CONTENT_PROTECTION_CAPS_DECRYPTION_BLT']/*"/>	
            <unmanaged>D3D11_CONTENT_PROTECTION_CAPS_DECRYPTION_BLT</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.CopyFlags">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COPY_FLAGS']/*"/>	
            <unmanaged>D3D11_COPY_FLAGS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.CopyFlags.NoOverwrite">
            <summary>	
            <para>The existing contents of the resource cannot be overwritten.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COPY_NO_OVERWRITE']/*"/>	
            <unmanaged>D3D11_COPY_NO_OVERWRITE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.CopyFlags.Discard">
            <summary>	
            <para>The existing contents of the resource are undefined and can be discarded.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COPY_DISCARD']/*"/>	
            <unmanaged>D3D11_COPY_DISCARD</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.CopyFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.CounterKind">
            <summary>	
            Describes a counter.	
            </summary>	
            <remarks>	
            This structure is used by <see cref="M:SharpDX.Direct3D11.Counter.GetDescription(SharpDX.Direct3D11.CounterDescription@)"/>, <see cref="M:SharpDX.Direct3D11.Device.CheckCounter(SharpDX.Direct3D11.CounterDescription,SharpDX.Direct3D11.CounterType@,System.Int32@,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)"/> and <see cref="M:SharpDX.Direct3D11.Device.CreateCounter(SharpDX.Direct3D11.CounterDescription,SharpDX.Direct3D11.Counter)"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COUNTER']/*"/>	
            <unmanaged>D3D11_COUNTER</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.CounterKind.DeviceDependent0">
            <summary>	
            <para>Type of counter (see <see cref="T:SharpDX.Direct3D11.CounterKind"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COUNTER_DEVICE_DEPENDENT_0']/*"/>	
            <unmanaged>D3D11_COUNTER_DEVICE_DEPENDENT_0</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.CounterType">
            <summary>	
            Data type of a performance counter.	
            </summary>	
            <remarks>	
            These flags are an output parameter in <see cref="M:SharpDX.Direct3D11.Device.CheckCounter(SharpDX.Direct3D11.CounterDescription,SharpDX.Direct3D11.CounterType@,System.Int32@,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COUNTER_TYPE']/*"/>	
            <unmanaged>D3D11_COUNTER_TYPE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.CounterType.Float32">
            <summary>	
            <para>32-bit floating point.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COUNTER_TYPE_FLOAT32']/*"/>	
            <unmanaged>D3D11_COUNTER_TYPE_FLOAT32</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.CounterType.Uint16">
            <summary>	
            <para>16-bit unsigned integer.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COUNTER_TYPE_UINT16']/*"/>	
            <unmanaged>D3D11_COUNTER_TYPE_UINT16</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.CounterType.Uint32">
            <summary>	
            <para>32-bit unsigned integer.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COUNTER_TYPE_UINT32']/*"/>	
            <unmanaged>D3D11_COUNTER_TYPE_UINT32</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.CounterType.Uint64">
            <summary>	
            <para>64-bit unsigned integer.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COUNTER_TYPE_UINT64']/*"/>	
            <unmanaged>D3D11_COUNTER_TYPE_UINT64</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.CpuAccessFlags">
            <summary>	
            Specifies the types of CPU access allowed for a resource.	
            </summary>	
            <remarks>	
            This enumeration is used in <see cref="T:SharpDX.Direct3D11.BufferDescription"/>, <see cref="T:SharpDX.Direct3D11.Texture1DDescription"/>, <see cref="T:SharpDX.Direct3D11.Texture2DDescription"/>, <see cref="T:SharpDX.Direct3D11.Texture3DDescription"/>.Applications may combine one or more of these flags with a logical OR. When possible, create resources with no CPU access flags, as this enables better resource optimiztion.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CPU_ACCESS_FLAG']/*"/>	
            <unmanaged>D3D11_CPU_ACCESS_FLAG</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.CpuAccessFlags.Write">
            <summary>	
            <para>The resource is to be mappable so that the CPU can change its contents. Resources created with this flag cannot be set as outputs of the pipeline and must be created with either dynamic or staging usage (see <see cref="T:SharpDX.Direct3D11.ResourceUsage"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CPU_ACCESS_WRITE']/*"/>	
            <unmanaged>D3D11_CPU_ACCESS_WRITE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.CpuAccessFlags.Read">
            <summary>	
            <para>The resource is to be mappable so that the CPU can read its contents. Resources created with this flag cannot be set as either inputs or outputs to the pipeline and must be created with staging usage (see <see cref="T:SharpDX.Direct3D11.ResourceUsage"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CPU_ACCESS_READ']/*"/>	
            <unmanaged>D3D11_CPU_ACCESS_READ</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.CpuAccessFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.CreateDeviceContextStateFlags">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_1_CREATE_DEVICE_CONTEXT_STATE_FLAG']/*"/>	
            <unmanaged>D3D11_1_CREATE_DEVICE_CONTEXT_STATE_FLAG</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.CreateDeviceContextStateFlags.Singlethreaded">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_1_CREATE_DEVICE_CONTEXT_STATE_SINGLETHREADED']/*"/>	
            <unmanaged>D3D11_1_CREATE_DEVICE_CONTEXT_STATE_SINGLETHREADED</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.CreateDeviceContextStateFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.CullMode">
            <summary>	
            Indicates triangles facing a particular direction are not drawn.	
            </summary>	
            <remarks>	
            This enumeration is part of a rasterizer-state object description (see <see cref="T:SharpDX.Direct3D11.RasterizerStateDescription"/>).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CULL_MODE']/*"/>	
            <unmanaged>D3D11_CULL_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.CullMode.None">
            <summary>	
            <para>Always draw all triangles.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CULL_NONE']/*"/>	
            <unmanaged>D3D11_CULL_NONE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.CullMode.Front">
            <summary>	
            <para>Do not draw triangles that are front-facing.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CULL_FRONT']/*"/>	
            <unmanaged>D3D11_CULL_FRONT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.CullMode.Back">
            <summary>	
            <para>Do not draw triangles that are back-facing.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CULL_BACK']/*"/>	
            <unmanaged>D3D11_CULL_BACK</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.DebugFeatureFlags">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEBUG_FEATURE_FLAGS']/*"/>	
            <unmanaged>D3D11_DEBUG_FEATURE_FLAGS</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.DepthStencilClearFlags">
            <summary>	
            Specifies the parts of the depth stencil to clear.	
            </summary>	
            <remarks>	
            These flags are used when calling <see cref="M:SharpDX.Direct3D11.DeviceContext.ClearDepthStencilView(SharpDX.Direct3D11.DepthStencilView,SharpDX.Direct3D11.DepthStencilClearFlags,System.Single,System.Byte)"/>; the flags can be combined with a bitwise OR.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CLEAR_FLAG']/*"/>	
            <unmanaged>D3D11_CLEAR_FLAG</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilClearFlags.Depth">
            <summary>	
            <para>Clear the depth buffer.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CLEAR_DEPTH']/*"/>	
            <unmanaged>D3D11_CLEAR_DEPTH</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilClearFlags.Stencil">
            <summary>	
            <para>Clear the stencil buffer.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CLEAR_STENCIL']/*"/>	
            <unmanaged>D3D11_CLEAR_STENCIL</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.DepthStencilViewDimension">
            <summary>	
            Specifies how to access a resource used in a depth-stencil view.	
            </summary>	
            <remarks>	
            This enumeration is used in <see cref="T:SharpDX.Direct3D11.DepthStencilViewDescription"/> to create a depth-stencil view.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DSV_DIMENSION']/*"/>	
            <unmanaged>D3D11_DSV_DIMENSION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDimension.Unknown">
            <summary>	
            <para><see cref="F:SharpDX.Direct3D11.DepthStencilViewDimension.Unknown"/> is not a valid value for <see cref="T:SharpDX.Direct3D11.DepthStencilViewDescription"/> and is not used.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DSV_DIMENSION_UNKNOWN']/*"/>	
            <unmanaged>D3D11_DSV_DIMENSION_UNKNOWN</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDimension.Texture1D">
            <summary>	
            <para>The resource will be accessed as a 1D texture.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DSV_DIMENSION_TEXTURE1D']/*"/>	
            <unmanaged>D3D11_DSV_DIMENSION_TEXTURE1D</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDimension.Texture1DArray">
            <summary>	
            <para>The resource will be accessed as an array of 1D textures.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DSV_DIMENSION_TEXTURE1DARRAY']/*"/>	
            <unmanaged>D3D11_DSV_DIMENSION_TEXTURE1DARRAY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDimension.Texture2D">
            <summary>	
            <para>The resource will be accessed as a 2D texture.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DSV_DIMENSION_TEXTURE2D']/*"/>	
            <unmanaged>D3D11_DSV_DIMENSION_TEXTURE2D</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDimension.Texture2DArray">
            <summary>	
            <para>The resource will be accessed as an array of 2D textures.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DSV_DIMENSION_TEXTURE2DARRAY']/*"/>	
            <unmanaged>D3D11_DSV_DIMENSION_TEXTURE2DARRAY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDimension.Texture2DMultisampled">
            <summary>	
            <para>The resource will be accessed as a 2D texture with multisampling.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DSV_DIMENSION_TEXTURE2DMS']/*"/>	
            <unmanaged>D3D11_DSV_DIMENSION_TEXTURE2DMS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDimension.Texture2DMultisampledArray">
            <summary>	
            <para>The resource will be accessed as an array of 2D textures with multisampling.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DSV_DIMENSION_TEXTURE2DMSARRAY']/*"/>	
            <unmanaged>D3D11_DSV_DIMENSION_TEXTURE2DMSARRAY</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.DepthStencilViewFlags">
            <summary>	
            Depth-stencil view options.	
            </summary>	
            <remarks>	
            This enumeration is used by <see cref="T:SharpDX.Direct3D11.DepthStencilViewDescription"/>.Limiting a depth-stencil buffer to read-only access allows more than one depth-stencil view to be bound to the pipeline simultaneously, since it is not possible to have a read/write conflicts between separate views.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DSV_FLAG']/*"/>	
            <unmanaged>D3D11_DSV_FLAG</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewFlags.ReadOnlyDepth">
            <summary>	
            <para>Indicates that depth values are read only.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DSV_READ_ONLY_DEPTH']/*"/>	
            <unmanaged>D3D11_DSV_READ_ONLY_DEPTH</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewFlags.ReadOnlyStencil">
            <summary>	
            <para>Indicates that stencil values are read only.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DSV_READ_ONLY_STENCIL']/*"/>	
            <unmanaged>D3D11_DSV_READ_ONLY_STENCIL</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.DepthWriteMask">
            <summary>	
            Identify the portion of a depth-stencil buffer for writing depth data.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_WRITE_MASK']/*"/>	
            <unmanaged>D3D11_DEPTH_WRITE_MASK</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthWriteMask.Zero">
            <summary>	
            <para>Turn off writes to the depth-stencil buffer.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_WRITE_MASK_ZERO']/*"/>	
            <unmanaged>D3D11_DEPTH_WRITE_MASK_ZERO</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthWriteMask.All">
            <summary>	
            <para>Turn on writes to the depth-stencil buffer.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_WRITE_MASK_ALL']/*"/>	
            <unmanaged>D3D11_DEPTH_WRITE_MASK_ALL</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.DeviceContextType">
            <summary>	
            Device context options.	
            </summary>	
            <remarks>	
            This enumeration is used by <see cref="M:SharpDX.Direct3D11.DeviceContext.GetTypeInfo"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEVICE_CONTEXT_TYPE']/*"/>	
            <unmanaged>D3D11_DEVICE_CONTEXT_TYPE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DeviceContextType.Immediate">
            <summary>	
            <para>The device context is an immediate context.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEVICE_CONTEXT_IMMEDIATE']/*"/>	
            <unmanaged>D3D11_DEVICE_CONTEXT_IMMEDIATE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DeviceContextType.Deferred">
            <summary>	
            <para>The device context is a deferred context.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEVICE_CONTEXT_DEFERRED']/*"/>	
            <unmanaged>D3D11_DEVICE_CONTEXT_DEFERRED</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.DeviceCreationFlags">
            <summary>	
            Describes parameters that are used to create a device.	
            </summary>	
            <remarks>	
            Device creation flags are used by <see cref="M:SharpDX.Direct3D11.D3D11.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.Direct3D11.Device,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/> and <see cref="M:SharpDX.Direct3D11.D3D11.CreateDeviceAndSwapChain(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.DXGI.SwapChainDescription@,SharpDX.DXGI.SwapChain@,SharpDX.Direct3D11.Device@,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/>.An application might dynamically create (and destroy) threads to improve performance especially on a machine with multiple CPU cores. There may be cases, however, when an application needs to prevent extra threads from being created. This can happen when you want to simplify debugging, profile code or develop a tool for instance. For these cases, use <see cref="F:SharpDX.Direct3D11.DeviceCreationFlags.PreventThreadingOptimizations"/> to request that the runtime and video driver not create any additional threads that might interfere with the application.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CREATE_DEVICE_FLAG']/*"/>	
            <unmanaged>D3D11_CREATE_DEVICE_FLAG</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DeviceCreationFlags.SingleThreaded">
            <summary>	
            <para>You should use this flag if your application will only call methods of Direct3D?11 interfaces from a single thread. By default, the <see cref="T:SharpDX.Direct3D11.Device"/> object is  thread-safe.  By using this flag, you can increase performance. However, if you use this flag and your application calls methods of Direct3D?11 interfaces from multiple threads, undefined behavior might result.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CREATE_DEVICE_SINGLETHREADED']/*"/>	
            <unmanaged>D3D11_CREATE_DEVICE_SINGLETHREADED</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DeviceCreationFlags.Debug">
            <summary>	
            <para>Creates a device that supports the debug layer.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CREATE_DEVICE_DEBUG']/*"/>	
            <unmanaged>D3D11_CREATE_DEVICE_DEBUG</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DeviceCreationFlags.SwitchToRef">
            <summary>	
            <para>Note??This flag is not supported in Direct3D?11.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CREATE_DEVICE_SWITCH_TO_REF']/*"/>	
            <unmanaged>D3D11_CREATE_DEVICE_SWITCH_TO_REF</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DeviceCreationFlags.PreventThreadingOptimizations">
            <summary>	
            <para>Prevents multiple threads from being created. When this flag is used with a Windows Advanced Rasterization Platform (WARP) device, no additional threads will be created by WARP  and all rasterization will occur on the calling thread. This flag is not recommended for general use. See remarks.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CREATE_DEVICE_PREVENT_INTERNAL_THREADING_OPTIMIZATIONS']/*"/>	
            <unmanaged>D3D11_CREATE_DEVICE_PREVENT_INTERNAL_THREADING_OPTIMIZATIONS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DeviceCreationFlags.BgraSupport">
            <summary>	
            <para>Required for Direct2D interoperability with Direct3D resources.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CREATE_DEVICE_BGRA_SUPPORT']/*"/>	
            <unmanaged>D3D11_CREATE_DEVICE_BGRA_SUPPORT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DeviceCreationFlags.Debuggable">
            <summary>	
            <para>TBD</para>	
             Direct 3D 11:??This value is not supported until Direct3D 11.1.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CREATE_DEVICE_DEBUGGABLE']/*"/>	
            <unmanaged>D3D11_CREATE_DEVICE_DEBUGGABLE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DeviceCreationFlags.PreventAlteringLayerSettingsFromRegistry">
            <summary>	
            <para>TBD</para>	
             Direct 3D 11:??This value is not supported until Direct3D 11.1.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CREATE_DEVICE_PREVENT_ALTERING_LAYER_SETTINGS_FROM_REGISTRY']/*"/>	
            <unmanaged>D3D11_CREATE_DEVICE_PREVENT_ALTERING_LAYER_SETTINGS_FROM_REGISTRY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DeviceCreationFlags.DisableGpuTimeout">
            <summary>	
            <para>TBD</para>	
             Direct 3D 11:??This value is not supported until Direct3D 11.1.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CREATE_DEVICE_DISABLE_GPU_TIMEOUT']/*"/>	
            <unmanaged>D3D11_CREATE_DEVICE_DISABLE_GPU_TIMEOUT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DeviceCreationFlags.VideoSupport">
            <summary>	
            <para>Forces the creation of the Direct3D device to fail if the display driver is not implemented to the WDDM for Windows Developer Preview (WDDM 1.2). When the display driver is not implemented to WDDM 1.2, only a Direct3D device that is created with feature level 9.1, 9.2, or 9.3 supports video; therefore, if this flag is set, the runtime creates the Direct3D device only for feature level 9.1, 9.2, or 9.3. We recommend not to specify this flag for applications that want to favor Direct3D capability over video. If feature level 10 and higher is available, the runtime will use that feature level regardless of video support.</para>	
             <para>If this flag is set, device creation on the Basic Render Device (BRD) will succeed regardless of the BRD's missing support for video decode. This is because the Media Foundation video stack operates in software mode on BRD. In this situation, if you force the video stack to create the Direct3D device twice (create the device once with this flag, next discover BRD, then again create the device without the flag), you actually degrade performance.</para>	
             <para>If you attempt to create a Direct3D device with driver type <see cref="F:SharpDX.Direct3D.DriverType.Null"/>, <see cref="F:SharpDX.Direct3D.DriverType.Reference"/>, or <see cref="F:SharpDX.Direct3D.DriverType.Software"/>, device creation fails at any feature level because none of the associated drivers provide video capability. If you attempt to create a Direct3D device with driver type <see cref="F:SharpDX.Direct3D.DriverType.Warp"/>, device creation succeeds to allow software fallback for video.</para>	
             Direct 3D 11:??This value is not supported until Direct3D 11.1.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CREATE_DEVICE_VIDEO_SUPPORT']/*"/>	
            <unmanaged>D3D11_CREATE_DEVICE_VIDEO_SUPPORT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DeviceCreationFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.EffectVariableFlags">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3DX11_EFFECT_VARIABLE_FLAGS']/*"/>	
            <unmanaged>D3DX11_EFFECT_VARIABLE_FLAGS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.EffectVariableFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.Feature">
            <summary>	
            Direct3D 11 feature options.	
            </summary>	
            <remarks>	
            This enumeration is used when querying a driver about support for these features by calling <see cref="M:SharpDX.Direct3D11.Device.CheckFeatureSupport(SharpDX.Direct3D11.Feature)"/>.   Each value in this enumeration has a corresponding data structure that is required to be passed to the pFeatureSupportData parameter  of <see cref="M:SharpDX.Direct3D11.Device.CheckFeatureSupport(SharpDX.Direct3D11.Feature)"/>.The following table shows the structures associated with each enumerant.EnumerantAssociated Structure <see cref="F:SharpDX.Direct3D11.Feature.Threading"/> <see cref="T:SharpDX.Direct3D11.FeatureDataThreading"/>  <see cref="F:SharpDX.Direct3D11.Feature.ShaderDoubles"/> <see cref="T:SharpDX.Direct3D11.FeatureDataDoubles"/>  <see cref="F:SharpDX.Direct3D11.Feature.FormatSupport"/> <see cref="T:SharpDX.Direct3D11.FeatureDataFormatSupport"/>  <see cref="F:SharpDX.Direct3D11.Feature.ComputeShaders"/> <see cref="T:SharpDX.Direct3D11.FeatureDataFormatSupport2"/>  <see cref="F:SharpDX.Direct3D11.Feature.D3D10XHardwareOptions"/> <see cref="T:SharpDX.Direct3D11.FeatureDataD3D10XHardwareOptions"/>  <see cref="F:SharpDX.Direct3D11.Feature.D3D11Options"/> <see cref="T:SharpDX.Direct3D11.FeatureDataD3D11Options"/>  <see cref="F:SharpDX.Direct3D11.Feature.ArchitectureInformation"/> <see cref="T:SharpDX.Direct3D11.FeatureDataArchitectureInformation"/>  <see cref="F:SharpDX.Direct3D11.Feature.D3D9Options"/> <see cref="T:SharpDX.Direct3D11.FeatureDataD3D9Options"/>  <see cref="F:SharpDX.Direct3D11.Feature.ShaderMinimumPrecisionSupport"/> <see cref="T:SharpDX.Direct3D11.FeatureDataShaderMinimumPrecisionSupport"/>?	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE']/*"/>	
            <unmanaged>D3D11_FEATURE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Feature.Threading">
            <summary>	
            <para>The driver supports multithreading.  To see an example of testing a driver for multithread support, see How To: Check for Driver Support.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_THREADING']/*"/>	
            <unmanaged>D3D11_FEATURE_THREADING</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Feature.ShaderDoubles">
            <summary>	
            <para>Supports the use of the double-precision shaders in HLSL.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DOUBLES']/*"/>	
            <unmanaged>D3D11_FEATURE_DOUBLES</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Feature.FormatSupport">
            <summary>	
            <para>Supports the formats in <see cref="T:SharpDX.Direct3D11.FormatSupport"/>.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_FORMAT_SUPPORT']/*"/>	
            <unmanaged>D3D11_FEATURE_FORMAT_SUPPORT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Feature.ComputeShaders">
            <summary>	
            <para>Supports the formats in <see cref="T:SharpDX.Direct3D11.ComputeShaderFormatSupport"/>.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_FORMAT_SUPPORT2']/*"/>	
            <unmanaged>D3D11_FEATURE_FORMAT_SUPPORT2</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Feature.D3D10XHardwareOptions">
            <summary>	
            <para>Supports compute shaders and raw and structured buffers.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_D3D10_X_HARDWARE_OPTIONS']/*"/>	
            <unmanaged>D3D11_FEATURE_D3D10_X_HARDWARE_OPTIONS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Feature.D3D11Options">
            <summary>	
            <para>Supports Direct3D 11.1 feature options.</para>	
             Direct3D 11:??This value is not supported until Direct3D 11.1.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_D3D11_OPTIONS']/*"/>	
            <unmanaged>D3D11_FEATURE_D3D11_OPTIONS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Feature.ArchitectureInformation">
            <summary>	
            <para>Supports specific adapter architecture.</para>	
             Direct3D 11:??This value is not supported until Direct3D 11.1.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_ARCHITECTURE_INFO']/*"/>	
            <unmanaged>D3D11_FEATURE_ARCHITECTURE_INFO</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Feature.D3D9Options">
            <summary>	
            <para>Supports Direct3D?9 feature options.</para>	
             Direct3D 11:??This value is not supported until Direct3D 11.1.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_D3D9_OPTIONS']/*"/>	
            <unmanaged>D3D11_FEATURE_D3D9_OPTIONS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Feature.ShaderMinimumPrecisionSupport">
            <summary>	
            <para>Supports minimum precision of shaders.</para>	
             Direct3D 11:??This value is not supported until Direct3D 11.1.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_SHADER_MIN_PRECISION_SUPPORT']/*"/>	
            <unmanaged>D3D11_FEATURE_SHADER_MIN_PRECISION_SUPPORT</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.FillMode">
            <summary>	
            Determines the fill mode to use when rendering triangles.	
            </summary>	
            <remarks>	
            This enumeration is part of a rasterizer-state object description (see <see cref="T:SharpDX.Direct3D11.RasterizerStateDescription"/>).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILL_MODE']/*"/>	
            <unmanaged>D3D11_FILL_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FillMode.Wireframe">
            <summary>	
            <para>Draw lines connecting the vertices. Adjacent vertices are not drawn.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILL_WIREFRAME']/*"/>	
            <unmanaged>D3D11_FILL_WIREFRAME</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FillMode.Solid">
            <summary>	
            <para>Fill the triangles formed by the vertices. Adjacent vertices are not drawn.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILL_SOLID']/*"/>	
            <unmanaged>D3D11_FILL_SOLID</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.Filter">
            <summary>	
            Types of magnification or minification sampler filters.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER']/*"/>	
            <unmanaged>D3D11_FILTER</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Filter.MinMagMipPoint">
            <summary>	
            <para>Point filtering used as a texture magnification or minification filter. The texel with coordinates nearest to the desired pixel value is used. The texture filter to be used between mipmap levels is nearest-point mipmap filtering. The rasterizer uses the color from the texel of the nearest mipmap texture. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_MIN_MAG_MIP_POINT']/*"/>	
            <unmanaged>D3D11_FILTER_MIN_MAG_MIP_POINT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Filter.MinMagPointMipLinear">
            <summary>	
            <para>Bilinear interpolation filtering used as a texture magnification or minification filter. A weighted average of a 2 x 2 area of texels surrounding the desired pixel is used. The texture filter to use between mipmap levels is trilinear mipmap interpolation. The rasterizer linearly interpolates pixel color, using the texels of the two nearest mipmap textures. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_MIN_MAG_POINT_MIP_LINEAR']/*"/>	
            <unmanaged>D3D11_FILTER_MIN_MAG_POINT_MIP_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Filter.MinPointMagLinearMipPoint">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT']/*"/>	
            <unmanaged>D3D11_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Filter.MinPointMagMipLinear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_MIN_POINT_MAG_MIP_LINEAR']/*"/>	
            <unmanaged>D3D11_FILTER_MIN_POINT_MAG_MIP_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Filter.MinLinearMagMipPoint">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_MIN_LINEAR_MAG_MIP_POINT']/*"/>	
            <unmanaged>D3D11_FILTER_MIN_LINEAR_MAG_MIP_POINT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Filter.MinLinearMagPointMipLinear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR']/*"/>	
            <unmanaged>D3D11_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Filter.MinMagLinearMipPoint">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_MIN_MAG_LINEAR_MIP_POINT']/*"/>	
            <unmanaged>D3D11_FILTER_MIN_MAG_LINEAR_MIP_POINT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Filter.MinMagMipLinear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_MIN_MAG_MIP_LINEAR']/*"/>	
            <unmanaged>D3D11_FILTER_MIN_MAG_MIP_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Filter.Anisotropic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_ANISOTROPIC']/*"/>	
            <unmanaged>D3D11_FILTER_ANISOTROPIC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Filter.ComparisonMinMagMipPoint">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_COMPARISON_MIN_MAG_MIP_POINT']/*"/>	
            <unmanaged>D3D11_FILTER_COMPARISON_MIN_MAG_MIP_POINT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Filter.ComparisonMinMagPointMipLinear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR']/*"/>	
            <unmanaged>D3D11_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Filter.ComparisonMinPointMagLinearMipPoint">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT']/*"/>	
            <unmanaged>D3D11_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Filter.ComparisonMinPointMagMipLinear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR']/*"/>	
            <unmanaged>D3D11_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Filter.ComparisonMinLinearMagMipPoint">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT']/*"/>	
            <unmanaged>D3D11_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Filter.ComparisonMinLinearMagPointMipLinear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR']/*"/>	
            <unmanaged>D3D11_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Filter.ComparisonMinMagLinearMipPoint">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT']/*"/>	
            <unmanaged>D3D11_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Filter.ComparisonMinMagMipLinear">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR']/*"/>	
            <unmanaged>D3D11_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Filter.ComparisonAnisotropic">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_COMPARISON_ANISOTROPIC']/*"/>	
            <unmanaged>D3D11_FILTER_COMPARISON_ANISOTROPIC</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.FilterType">
            <summary>	
            Types of magnification or minification sampler filters.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_TYPE']/*"/>	
            <unmanaged>D3D11_FILTER_TYPE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FilterType.Point">
            <summary>	
            <para>Point filtering used as a texture magnification or minification filter. The texel with coordinates nearest to the desired pixel value is used. The texture filter to be used between mipmap levels is nearest-point mipmap filtering. The rasterizer uses the color from the texel of the nearest mipmap texture. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_TYPE_POINT']/*"/>	
            <unmanaged>D3D11_FILTER_TYPE_POINT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FilterType.Linear">
            <summary>	
            <para>Bilinear interpolation filtering used as a texture magnification or minification filter. A weighted average of a 2 x 2 area of texels surrounding the desired pixel is used. The texture filter to use between mipmap levels is trilinear mipmap interpolation. The rasterizer linearly interpolates pixel color, using the texels of the two nearest mipmap textures. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FILTER_TYPE_LINEAR']/*"/>	
            <unmanaged>D3D11_FILTER_TYPE_LINEAR</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.FormatSupport">
            <summary>	
            Which resources are supported for a given format and given device (see <see cref="M:SharpDX.Direct3D11.Device.CheckFormatSupport(SharpDX.DXGI.Format)"/> and <see cref="M:SharpDX.Direct3D11.Device.CheckFeatureSupport(SharpDX.Direct3D11.Feature)"/>).	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.Buffer">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_BUFFER']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_BUFFER</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.InputAssemblyVertexBuffer">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_IA_VERTEX_BUFFER']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_IA_VERTEX_BUFFER</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.InputAssemblyIndexBuffer">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_IA_INDEX_BUFFER']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_IA_INDEX_BUFFER</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.StreamOutputBuffer">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_SO_BUFFER']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_SO_BUFFER</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.Texture1D">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_TEXTURE1D']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_TEXTURE1D</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.Texture2D">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_TEXTURE2D']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_TEXTURE2D</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.Texture3D">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_TEXTURE3D']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_TEXTURE3D</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.TextureCube">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_TEXTURECUBE']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_TEXTURECUBE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.ShaderLoad">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_SHADER_LOAD']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_SHADER_LOAD</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.ShaderSample">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_SHADER_SAMPLE']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_SHADER_SAMPLE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.ShaderSampleComparison">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_SHADER_SAMPLE_COMPARISON']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_SHADER_SAMPLE_COMPARISON</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.ShaderSampleMonoText">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_SHADER_SAMPLE_MONO_TEXT']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_SHADER_SAMPLE_MONO_TEXT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.Mip">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_MIP']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_MIP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.MipAutogen">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_MIP_AUTOGEN']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_MIP_AUTOGEN</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.RenderTarget">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_RENDER_TARGET']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_RENDER_TARGET</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.Blendable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_BLENDABLE']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_BLENDABLE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.DepthStencil">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_DEPTH_STENCIL']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_DEPTH_STENCIL</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.CpuLockable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_CPU_LOCKABLE']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_CPU_LOCKABLE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.MultisampleResolve">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_MULTISAMPLE_RESOLVE']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_MULTISAMPLE_RESOLVE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.Display">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_DISPLAY']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_DISPLAY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.CastWithinBitLayout">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_CAST_WITHIN_BIT_LAYOUT']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_CAST_WITHIN_BIT_LAYOUT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.MultisampleRendertarget">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_MULTISAMPLE_RENDERTARGET']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_MULTISAMPLE_RENDERTARGET</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.MultisampleLoad">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_MULTISAMPLE_LOAD']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_MULTISAMPLE_LOAD</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.ShaderGather">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_SHADER_GATHER']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_SHADER_GATHER</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.BackBufferCast">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_BACK_BUFFER_CAST']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_BACK_BUFFER_CAST</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.TypedUnorderedAccessView">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_TYPED_UNORDERED_ACCESS_VIEW']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_TYPED_UNORDERED_ACCESS_VIEW</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.ShaderGatherComparison">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_SHADER_GATHER_COMPARISON']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_SHADER_GATHER_COMPARISON</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.DecoderOutput">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_DECODER_OUTPUT']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_DECODER_OUTPUT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.VideoProcessorOutput">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_VIDEO_PROCESSOR_OUTPUT']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_VIDEO_PROCESSOR_OUTPUT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.VideoProcessorInput">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_VIDEO_PROCESSOR_INPUT']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_VIDEO_PROCESSOR_INPUT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.VideoEncoder">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FORMAT_SUPPORT_VIDEO_ENCODER']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT_VIDEO_ENCODER</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FormatSupport.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.InputClassification">
            <summary>	
            Type of data contained in an input slot.	
            </summary>	
            <remarks>	
            Use these values to specify the type of data for a particular input element (see <see cref="T:SharpDX.Direct3D11.InputElement"/>) of an input-layout object.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_INPUT_CLASSIFICATION']/*"/>	
            <unmanaged>D3D11_INPUT_CLASSIFICATION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.InputClassification.PerVertexData">
            <summary>	
            <para>Input data is per-vertex data.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_INPUT_PER_VERTEX_DATA']/*"/>	
            <unmanaged>D3D11_INPUT_PER_VERTEX_DATA</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.InputClassification.PerInstanceData">
            <summary>	
            <para>Input data is per-instance data.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_INPUT_PER_INSTANCE_DATA']/*"/>	
            <unmanaged>D3D11_INPUT_PER_INSTANCE_DATA</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.LogicOperation">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_LOGIC_OP']/*"/>	
            <unmanaged>D3D11_LOGIC_OP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.LogicOperation.Clear">
            <summary>	
            <para>Clears the render target.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_LOGIC_OP_CLEAR']/*"/>	
            <unmanaged>D3D11_LOGIC_OP_CLEAR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.LogicOperation.Set">
            <summary>	
            <para>Sets the render target.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_LOGIC_OP_SET']/*"/>	
            <unmanaged>D3D11_LOGIC_OP_SET</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.LogicOperation.Copy">
            <summary>	
            <para>Copys the render target.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_LOGIC_OP_COPY']/*"/>	
            <unmanaged>D3D11_LOGIC_OP_COPY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.LogicOperation.CopyInverted">
            <summary>	
            <para>Performs an inverted-copy of the render target.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_LOGIC_OP_COPY_INVERTED']/*"/>	
            <unmanaged>D3D11_LOGIC_OP_COPY_INVERTED</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.LogicOperation.Noop">
            <summary>	
            <para>No operation is performed on the render target.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_LOGIC_OP_NOOP']/*"/>	
            <unmanaged>D3D11_LOGIC_OP_NOOP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.LogicOperation.Invert">
            <summary>	
            <para>Inverts the render target.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_LOGIC_OP_INVERT']/*"/>	
            <unmanaged>D3D11_LOGIC_OP_INVERT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.LogicOperation.And">
            <summary>	
            <para>Performs a logical AND operation on the render target.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_LOGIC_OP_AND']/*"/>	
            <unmanaged>D3D11_LOGIC_OP_AND</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.LogicOperation.Nand">
            <summary>	
            <para>Performs a logical NAND operation on the render target.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_LOGIC_OP_NAND']/*"/>	
            <unmanaged>D3D11_LOGIC_OP_NAND</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.LogicOperation.Or">
            <summary>	
            <para>Performs a logical OR operation on the render target.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_LOGIC_OP_OR']/*"/>	
            <unmanaged>D3D11_LOGIC_OP_OR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.LogicOperation.Nor">
            <summary>	
            <para>Performs a logical NOR operation on the render target.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_LOGIC_OP_NOR']/*"/>	
            <unmanaged>D3D11_LOGIC_OP_NOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.LogicOperation.Xor">
            <summary>	
            <para>Performs a logical XOR operation on the render target.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_LOGIC_OP_XOR']/*"/>	
            <unmanaged>D3D11_LOGIC_OP_XOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.LogicOperation.Equiv">
            <summary>	
            <para>Performs a logical equal operation on the render target.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_LOGIC_OP_EQUIV']/*"/>	
            <unmanaged>D3D11_LOGIC_OP_EQUIV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.LogicOperation.AndReverse">
            <summary>	
            <para>Performs a logical AND and reverse operation on the render target.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_LOGIC_OP_AND_REVERSE']/*"/>	
            <unmanaged>D3D11_LOGIC_OP_AND_REVERSE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.LogicOperation.AndInverted">
            <summary>	
            <para>Performs a logical AND and invert operation on the render target.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_LOGIC_OP_AND_INVERTED']/*"/>	
            <unmanaged>D3D11_LOGIC_OP_AND_INVERTED</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.LogicOperation.OrReverse">
            <summary>	
            <para>Performs a logical OR and reverse operation on the render target.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_LOGIC_OP_OR_REVERSE']/*"/>	
            <unmanaged>D3D11_LOGIC_OP_OR_REVERSE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.LogicOperation.OrInverted">
            <summary>	
            <para>Performs a logical OR and invert operation on the render target.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_LOGIC_OP_OR_INVERTED']/*"/>	
            <unmanaged>D3D11_LOGIC_OP_OR_INVERTED</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.MapFlags">
            <summary>	
            Specifies how the CPU should respond when an application calls the <see cref="M:SharpDX.Direct3D11.DeviceContext.MapSubresource(SharpDX.Direct3D11.Texture1D,System.Int32,System.Int32,SharpDX.Direct3D11.MapMode,SharpDX.Direct3D11.MapFlags,SharpDX.DataStream@)"/> method on a resource that is being used by the GPU.	
            </summary>	
            <remarks>	
            This enumeration is used by <see cref="M:SharpDX.Direct3D11.DeviceContext.MapSubresource(SharpDX.Direct3D11.Texture1D,System.Int32,System.Int32,SharpDX.Direct3D11.MapMode,SharpDX.Direct3D11.MapFlags,SharpDX.DataStream@)"/>.D3D11_MAP_FLAG_DO_NOT_WAIT cannot be used with <see cref="F:SharpDX.Direct3D11.MapMode.WriteDiscard"/> or D3D11_MAP_WRITE_NOOVERWRITE.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_MAP_FLAG']/*"/>	
            <unmanaged>D3D11_MAP_FLAG</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.MapFlags.DoNotWait">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_MAP_FLAG_DO_NOT_WAIT']/*"/>	
            <unmanaged>D3D11_MAP_FLAG_DO_NOT_WAIT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.MapFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.MapMode">
            <summary>	
            Identifies a resource to be accessed for reading and writing by the CPU. Applications may combine one or more of these flags.	
            </summary>	
            <remarks>	
            This enumeration is used in <see cref="M:SharpDX.Direct3D11.DeviceContext.MapSubresource(SharpDX.Direct3D11.Texture1D,System.Int32,System.Int32,SharpDX.Direct3D11.MapMode,SharpDX.Direct3D11.MapFlags,SharpDX.DataStream@)"/>.These remarks are divided into the following topics:Meaning CommonMeaning of <see cref="F:SharpDX.Direct3D11.MapMode.WriteNoOverwrite"/>D3D11_MAP_WRITE_NO_OVERWRITE signifies that the application promises not to write to data that the input assembler (IA) stage is using. In exchange, the GPU allows the application to write to other parts of the same buffer.  The application must ensure that it does not write over any data in use by the IA stage.For example, consider the buffer illustrated in the following diagram. If a Draw call has been issued that uses vertices 4-6, then an application that calls Map on this buffer must ensure that it does not write to the vertices that the Draw call will access during rendering.However, ensuring this can be difficult, because the GPU is often many frames behind the CPU in terms of which frame it is currently processing. Keeping track of which sections of a resource are being used because of calls made 2 to 5 frames ago is difficult and error-prone. Because of this, it is recommended that applications only write to the uninitialized portions of a resource when using <see cref="F:SharpDX.Direct3D11.MapMode.WriteNoOverwrite"/>.Common Usage of <see cref="F:SharpDX.Direct3D11.MapMode.WriteDiscard"/> with <see cref="F:SharpDX.Direct3D11.MapMode.WriteNoOverwrite"/>D3D11_MAP_WRITE_DISCARD and <see cref="F:SharpDX.Direct3D11.MapMode.WriteNoOverwrite"/> are normally used in conjunction with dynamic index/vertex buffers. <see cref="F:SharpDX.Direct3D11.MapMode.WriteDiscard"/> can also be used with dynamic textures. However, <see cref="F:SharpDX.Direct3D11.MapMode.WriteNoOverwrite"/> cannot be used with dynamic textures.A common use of these two flags involves filling dynamic index/vertex buffers with geometry that can be seen from the camera's current position. The first time that data is entered into the buffer on a given frame, Map is called with <see cref="F:SharpDX.Direct3D11.MapMode.WriteDiscard"/>; doing so invalidates the previous contents of the buffer. The buffer is then filled with all available data.Subsequent writes to the buffer within the same frame should use <see cref="F:SharpDX.Direct3D11.MapMode.WriteNoOverwrite"/>. This will enable the CPU to access a resource that is potentially being used by the GPU as long as the restrictions described previously are respected.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_MAP']/*"/>	
            <unmanaged>D3D11_MAP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.MapMode.Read">
            <summary>	
            <para>Resource is mapped for reading. The resource must have been created with read access  (see <see cref="F:SharpDX.Direct3D11.CpuAccessFlags.Read"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_MAP_READ']/*"/>	
            <unmanaged>D3D11_MAP_READ</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.MapMode.Write">
            <summary>	
            <para>Resource is mapped for writing. The resource must have been created with write  access (see <see cref="F:SharpDX.Direct3D11.CpuAccessFlags.Write"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_MAP_WRITE']/*"/>	
            <unmanaged>D3D11_MAP_WRITE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.MapMode.ReadWrite">
            <summary>	
            <para>Resource is mapped for reading and writing. The resource must have been created with read and write  access (see <see cref="F:SharpDX.Direct3D11.CpuAccessFlags.Read"/> and <see cref="F:SharpDX.Direct3D11.CpuAccessFlags.Write"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_MAP_READ_WRITE']/*"/>	
            <unmanaged>D3D11_MAP_READ_WRITE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.MapMode.WriteDiscard">
            <summary>	
            <para>Resource is mapped for writing; the previous contents of the resource will be undefined. The resource must have been created with write access  and dynamic usage (See <see cref="F:SharpDX.Direct3D11.CpuAccessFlags.Write"/> and <see cref="F:SharpDX.Direct3D11.ResourceUsage.Dynamic"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_MAP_WRITE_DISCARD']/*"/>	
            <unmanaged>D3D11_MAP_WRITE_DISCARD</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.MapMode.WriteNoOverwrite">
            <summary>	
            <para>Resource is mapped for writing; the existing contents of the resource cannot be overwritten (see Remarks). This flag is only valid on vertex and  index buffers. The resource must have been created with write access (see <see cref="F:SharpDX.Direct3D11.CpuAccessFlags.Write"/>).  Cannot be used on a resource created with the <see cref="F:SharpDX.Direct3D11.BindFlags.ConstantBuffer"/> flag.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_MAP_WRITE_NO_OVERWRITE']/*"/>	
            <unmanaged>D3D11_MAP_WRITE_NO_OVERWRITE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.QueryFlags">
            <summary>	
            Flags that describe miscellaneous query behavior.	
            </summary>	
            <remarks>	
            This flag is part of a query description (see <see cref="T:SharpDX.Direct3D11.QueryDescription"/>).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_MISC_FLAG']/*"/>	
            <unmanaged>D3D11_QUERY_MISC_FLAG</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryFlags.Predicatehint">
            <summary>	
            <para>Tell the hardware that if it is not yet sure if something is hidden or not to draw it anyway. This is only used with an occlusion predicate. Predication data cannot be returned to your application via <see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/> when using this flag.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_MISC_PREDICATEHINT']/*"/>	
            <unmanaged>D3D11_QUERY_MISC_PREDICATEHINT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.QueryType">
            <summary>	
            Query types.	
            </summary>	
            <remarks>	
            Create a query with <see cref="M:SharpDX.Direct3D11.Device.CreateQuery(SharpDX.Direct3D11.QueryDescription,SharpDX.Direct3D11.Query)"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY']/*"/>	
            <unmanaged>D3D11_QUERY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryType.Event">
            <summary>	
            <para>Determines whether or not the GPU is finished processing commands. When the GPU is finished processing commands <see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/> will return <see cref="F:SharpDX.Result.Ok"/>, and pData will point to a <see cref="T:System.Boolean"/> with a value of TRUE. When using this type of query, <see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/> is disabled.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_EVENT']/*"/>	
            <unmanaged>D3D11_QUERY_EVENT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryType.Occlusion">
            <summary>	
            <para>Get the number of samples that passed the depth and stencil tests in between <see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/> and <see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/>. <see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/> returns a UINT64. If a depth or stencil test is disabled, then each of those tests will be counted as a pass.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_OCCLUSION']/*"/>	
            <unmanaged>D3D11_QUERY_OCCLUSION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryType.Timestamp">
            <summary>	
            <para>Get a timestamp value where <see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/> returns a UINT64. This kind of query is only useful if two timestamp queries are done in the middle of a <see cref="F:SharpDX.Direct3D11.QueryType.TimestampDisjoint"/> query. The difference of two timestamps can be used to determine how many ticks have elapsed, and the <see cref="F:SharpDX.Direct3D11.QueryType.TimestampDisjoint"/> query will determine if that difference is a reliable value and also has a value that shows how to convert the number of ticks into seconds. See <see cref="T:SharpDX.Direct3D11.QueryDataTimestampDisjoint"/>. When using this type of query, <see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/> is disabled.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_TIMESTAMP']/*"/>	
            <unmanaged>D3D11_QUERY_TIMESTAMP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryType.TimestampDisjoint">
            <summary>	
            <para>Determines whether or not a <see cref="F:SharpDX.Direct3D11.QueryType.Timestamp"/> is returning reliable values, and also gives the frequency of the processor enabling you to convert the number of elapsed ticks into seconds. <see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/> will return a <see cref="T:SharpDX.Direct3D11.QueryDataTimestampDisjoint"/>. This type of query should only be invoked once per frame or less.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_TIMESTAMP_DISJOINT']/*"/>	
            <unmanaged>D3D11_QUERY_TIMESTAMP_DISJOINT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryType.PipelineStatistics">
            <summary>	
            <para>Get pipeline statistics, such as the number of pixel shader invocations in between <see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/> and <see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/>. <see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/> will return a <see cref="T:SharpDX.Direct3D11.QueryDataPipelineStatistics"/>.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_PIPELINE_STATISTICS']/*"/>	
            <unmanaged>D3D11_QUERY_PIPELINE_STATISTICS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryType.OcclusionPredicate">
            <summary>	
            <para>Similar to <see cref="F:SharpDX.Direct3D11.QueryType.Occlusion"/>, except <see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/> returns a <see cref="T:System.Boolean"/> indicating whether or not any samples passed the depth and stencil tests - TRUE meaning at least one passed, <see cref="F:SharpDX.Result.False"/> meaning none passed.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_OCCLUSION_PREDICATE']/*"/>	
            <unmanaged>D3D11_QUERY_OCCLUSION_PREDICATE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryType.StreamOutputStatistics">
            <summary>	
            <para>Get streaming output statistics, such as the number of primitives streamed out in between <see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/> and <see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/>. <see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/> will return a <see cref="T:SharpDX.Direct3D11.StreamOutputStatistics"/> structure.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_SO_STATISTICS']/*"/>	
            <unmanaged>D3D11_QUERY_SO_STATISTICS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryType.StreamOutputOverflowPredicate">
            <summary>	
            <para>Determines whether or not any of the streaming output buffers overflowed in between <see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/> and <see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/>. <see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/> returns a <see cref="T:System.Boolean"/> - TRUE meaning there was an overflow, <see cref="F:SharpDX.Result.False"/> meaning there was not an overflow. If streaming output writes to multiple buffers, and one of the buffers overflows, then it will stop writing to all the output buffers. When an overflow is detected by Direct3D it is prevented from happening - no memory is corrupted. This predication may be used in conjunction with an SO_STATISTICS query so that when an overflow occurs the SO_STATISTIC query will let the application know how much memory was needed to prevent an overflow.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_SO_OVERFLOW_PREDICATE']/*"/>	
            <unmanaged>D3D11_QUERY_SO_OVERFLOW_PREDICATE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryType.StreamOutputStatisticsStream0">
            <summary>	
            <para>Get streaming output statistics for stream 0, such as the number of primitives streamed out in between <see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/> and <see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/>. <see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/> will return a <see cref="T:SharpDX.Direct3D11.StreamOutputStatistics"/> structure.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_SO_STATISTICS_STREAM0']/*"/>	
            <unmanaged>D3D11_QUERY_SO_STATISTICS_STREAM0</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryType.StreamOutputOverflowPredicateStream0">
            <summary>	
            <para>Determines whether or not the stream 0 output buffers overflowed in between <see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/> and <see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/>. <see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/> returns a <see cref="T:System.Boolean"/> - TRUE meaning there was an overflow, <see cref="F:SharpDX.Result.False"/> meaning there was not an overflow. If streaming output writes to multiple buffers, and one of the buffers overflows, then it will stop writing to all the output buffers. When an overflow is detected by Direct3D it is prevented from happening - no memory is corrupted. This predication may be used in conjunction with an SO_STATISTICS query so that when an overflow occurs the SO_STATISTIC query will let the application know how much memory was needed to prevent an overflow.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM0']/*"/>	
            <unmanaged>D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM0</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryType.StreamOutputStatisticsStream1">
            <summary>	
            <para>Get streaming output statistics for stream 1, such as the number of primitives streamed out in between <see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/> and <see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/>. <see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/> will return a <see cref="T:SharpDX.Direct3D11.StreamOutputStatistics"/> structure.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_SO_STATISTICS_STREAM1']/*"/>	
            <unmanaged>D3D11_QUERY_SO_STATISTICS_STREAM1</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryType.StreamOutputOverflowPredicateStream1">
            <summary>	
            <para>Determines whether or not the stream 1 output buffers overflowed in between <see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/> and <see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/>. <see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/> returns a <see cref="T:System.Boolean"/> - TRUE meaning there was an overflow, <see cref="F:SharpDX.Result.False"/> meaning there was not an overflow. If streaming output writes to multiple buffers, and one of the buffers overflows, then it will stop writing to all the output buffers. When an overflow is detected by Direct3D it is prevented from happening - no memory is corrupted. This predication may be used in conjunction with an SO_STATISTICS query so that when an overflow occurs the SO_STATISTIC query will let the application know how much memory was needed to prevent an overflow.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM1']/*"/>	
            <unmanaged>D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM1</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryType.StreamOutputStatisticsStream2">
            <summary>	
            <para>Get streaming output statistics for stream 2, such as the number of primitives streamed out in between <see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/> and <see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/>. <see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/> will return a <see cref="T:SharpDX.Direct3D11.StreamOutputStatistics"/> structure.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_SO_STATISTICS_STREAM2']/*"/>	
            <unmanaged>D3D11_QUERY_SO_STATISTICS_STREAM2</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryType.StreamOutputOverflowPredicateStream2">
            <summary>	
            <para>Determines whether or not the stream 2 output buffers overflowed in between <see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/> and <see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/>. <see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/> returns a <see cref="T:System.Boolean"/> - TRUE meaning there was an overflow, <see cref="F:SharpDX.Result.False"/> meaning there was not an overflow. If streaming output writes to multiple buffers, and one of the buffers overflows, then it will stop writing to all the output buffers. When an overflow is detected by Direct3D it is prevented from happening - no memory is corrupted. This predication may be used in conjunction with an SO_STATISTICS query so that when an overflow occurs the SO_STATISTIC query will let the application know how much memory was needed to prevent an overflow.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM2']/*"/>	
            <unmanaged>D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM2</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryType.StreamOutputStatisticsStream3">
            <summary>	
            <para>Get streaming output statistics for stream 3, such as the number of primitives streamed out in between <see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/> and <see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/>. <see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/> will return a <see cref="T:SharpDX.Direct3D11.StreamOutputStatistics"/> structure.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_SO_STATISTICS_STREAM3']/*"/>	
            <unmanaged>D3D11_QUERY_SO_STATISTICS_STREAM3</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryType.StreamOutputOverflowPredicateStream3">
            <summary>	
            <para>Determines whether or not the stream 3 output buffers overflowed in between <see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/> and <see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/>. <see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/> returns a <see cref="T:System.Boolean"/> - TRUE meaning there was an overflow, <see cref="F:SharpDX.Result.False"/> meaning there was not an overflow. If streaming output writes to multiple buffers, and one of the buffers overflows, then it will stop writing to all the output buffers. When an overflow is detected by Direct3D it is prevented from happening - no memory is corrupted. This predication may be used in conjunction with an SO_STATISTICS query so that when an overflow occurs the SO_STATISTIC query will let the application know how much memory was needed to prevent an overflow.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM3']/*"/>	
            <unmanaged>D3D11_QUERY_SO_OVERFLOW_PREDICATE_STREAM3</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.RenderTargetViewDimension">
            <summary>	
            These flags identify the type of resource that will be viewed as a render target.	
            </summary>	
            <remarks>	
            This enumeration is used in <see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription"/> to create a render-target view.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RTV_DIMENSION']/*"/>	
            <unmanaged>D3D11_RTV_DIMENSION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDimension.Unknown">
            <summary>	
            <para>Do not use this value, as it will cause <see cref="M:SharpDX.Direct3D11.Device.CreateRenderTargetView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.RenderTargetViewDescription},SharpDX.Direct3D11.RenderTargetView)"/> to fail.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RTV_DIMENSION_UNKNOWN']/*"/>	
            <unmanaged>D3D11_RTV_DIMENSION_UNKNOWN</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDimension.Buffer">
            <summary>	
            <para>The resource will be accessed as a buffer.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RTV_DIMENSION_BUFFER']/*"/>	
            <unmanaged>D3D11_RTV_DIMENSION_BUFFER</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDimension.Texture1D">
            <summary>	
            <para>The resource will be accessed as a 1D texture.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RTV_DIMENSION_TEXTURE1D']/*"/>	
            <unmanaged>D3D11_RTV_DIMENSION_TEXTURE1D</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDimension.Texture1DArray">
            <summary>	
            <para>The resource will be accessed as an array of 1D textures.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RTV_DIMENSION_TEXTURE1DARRAY']/*"/>	
            <unmanaged>D3D11_RTV_DIMENSION_TEXTURE1DARRAY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDimension.Texture2D">
            <summary>	
            <para>The resource will be accessed as a 2D texture.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RTV_DIMENSION_TEXTURE2D']/*"/>	
            <unmanaged>D3D11_RTV_DIMENSION_TEXTURE2D</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDimension.Texture2DArray">
            <summary>	
            <para>The resource will be accessed as an array of 2D textures.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RTV_DIMENSION_TEXTURE2DARRAY']/*"/>	
            <unmanaged>D3D11_RTV_DIMENSION_TEXTURE2DARRAY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDimension.Texture2DMultisampled">
            <summary>	
            <para>The resource will be accessed as a 2D texture with multisampling.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RTV_DIMENSION_TEXTURE2DMS']/*"/>	
            <unmanaged>D3D11_RTV_DIMENSION_TEXTURE2DMS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDimension.Texture2DMultisampledArray">
            <summary>	
            <para>The resource will be accessed as an array of 2D textures with multisampling.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RTV_DIMENSION_TEXTURE2DMSARRAY']/*"/>	
            <unmanaged>D3D11_RTV_DIMENSION_TEXTURE2DMSARRAY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDimension.Texture3D">
            <summary>	
            <para>The resource will be accessed as a 3D texture.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RTV_DIMENSION_TEXTURE3D']/*"/>	
            <unmanaged>D3D11_RTV_DIMENSION_TEXTURE3D</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.ResourceDimension">
            <summary>	
            Identifies the type of resource being used.	
            </summary>	
            <remarks>	
            This enumeration is used in <see cref="M:SharpDX.Direct3D11.Resource.GetDimension(SharpDX.Direct3D11.ResourceDimension@)"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_DIMENSION']/*"/>	
            <unmanaged>D3D11_RESOURCE_DIMENSION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceDimension.Unknown">
            <summary>	
            <para>Resource is of unknown type.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_DIMENSION_UNKNOWN']/*"/>	
            <unmanaged>D3D11_RESOURCE_DIMENSION_UNKNOWN</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceDimension.Buffer">
            <summary>	
            <para>Resource is a buffer.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_DIMENSION_BUFFER']/*"/>	
            <unmanaged>D3D11_RESOURCE_DIMENSION_BUFFER</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceDimension.Texture1D">
            <summary>	
            <para>Resource is a 1D texture.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_DIMENSION_TEXTURE1D']/*"/>	
            <unmanaged>D3D11_RESOURCE_DIMENSION_TEXTURE1D</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceDimension.Texture2D">
            <summary>	
            <para>Resource is a 2D texture.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_DIMENSION_TEXTURE2D']/*"/>	
            <unmanaged>D3D11_RESOURCE_DIMENSION_TEXTURE2D</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceDimension.Texture3D">
            <summary>	
            <para>Resource is a 3D texture.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_DIMENSION_TEXTURE3D']/*"/>	
            <unmanaged>D3D11_RESOURCE_DIMENSION_TEXTURE3D</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.ResourceOptionFlags">
            <summary>	
            Identifies options for resources.	
            </summary>	
            <remarks>	
            This enumeration is used in <see cref="T:SharpDX.Direct3D11.BufferDescription"/>, <see cref="T:SharpDX.Direct3D11.Texture1DDescription"/>, <see cref="T:SharpDX.Direct3D11.Texture2DDescription"/>, <see cref="T:SharpDX.Direct3D11.Texture3DDescription"/>.These flags can be combined by bitwise OR.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_MISC_FLAG']/*"/>	
            <unmanaged>D3D11_RESOURCE_MISC_FLAG</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceOptionFlags.GenerateMipMaps">
            <summary>	
            <para>Enables MIP map generation by using <see cref="M:SharpDX.Direct3D11.DeviceContext.GenerateMips(SharpDX.Direct3D11.ShaderResourceView)"/> on a texture resource. The resource must be created with the bind flags that specify that the resource is a render target and a shader resource.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_MISC_GENERATE_MIPS']/*"/>	
            <unmanaged>D3D11_RESOURCE_MISC_GENERATE_MIPS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceOptionFlags.Shared">
            <summary>	
            <para>Enables resource data sharing between two or more Direct3D devices. The only resources that can be shared are 2D non-mipmapped textures.</para>	
             <para><see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.Shared"/> and <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.SharedKeyedmutex"/> are mutually exclusive.</para>	
             <para>WARP and REF devices do not support shared resources. If you try to create a resource with this flag on either a WARP or REF device,  the create method will return an E_OUTOFMEMORY error code.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_MISC_SHARED']/*"/>	
            <unmanaged>D3D11_RESOURCE_MISC_SHARED</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceOptionFlags.TextureCube">
            <summary>	
            <para>Sets a resource to be a cube texture created from a Texture2DArray that contains 6 textures.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_MISC_TEXTURECUBE']/*"/>	
            <unmanaged>D3D11_RESOURCE_MISC_TEXTURECUBE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceOptionFlags.DrawindirectArgs">
            <summary>	
            <para>Enables instancing of GPU-generated content.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_MISC_DRAWINDIRECT_ARGS']/*"/>	
            <unmanaged>D3D11_RESOURCE_MISC_DRAWINDIRECT_ARGS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceOptionFlags.BufferAllowRawViews">
            <summary>	
            <para>Enables a resource as a byte address buffer.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_MISC_BUFFER_ALLOW_RAW_VIEWS']/*"/>	
            <unmanaged>D3D11_RESOURCE_MISC_BUFFER_ALLOW_RAW_VIEWS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceOptionFlags.BufferStructured">
            <summary>	
            <para>Enables a resource as a structured buffer.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_MISC_BUFFER_STRUCTURED']/*"/>	
            <unmanaged>D3D11_RESOURCE_MISC_BUFFER_STRUCTURED</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceOptionFlags.ResourceClamp">
            <summary>	
            <para>Enables a resource with MIP map clamping for use with <see cref="M:SharpDX.Direct3D11.DeviceContext.SetMinimumLod(SharpDX.Direct3D11.Resource,System.Single)"/>.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_MISC_RESOURCE_CLAMP']/*"/>	
            <unmanaged>D3D11_RESOURCE_MISC_RESOURCE_CLAMP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceOptionFlags.SharedKeyedmutex">
            <summary>	
            <para>Enables the resource  to be synchronized by using the <see cref="M:SharpDX.DXGI.KeyedMutex.Acquire(System.Int64,System.Int32)"/> and  <see cref="M:SharpDX.DXGI.KeyedMutex.Release(System.Int64)"/> APIs.  The following Direct3D?11 resource creation  APIs, that take <see cref="T:SharpDX.Direct3D11.ResourceOptionFlags"/> parameters, have been extended to support the new flag.</para>	
               <see cref="M:SharpDX.Direct3D11.Device.CreateTexture1D(SharpDX.Direct3D11.Texture1DDescription@,SharpDX.DataBox[],SharpDX.Direct3D11.Texture1D)"/>   <see cref="M:SharpDX.Direct3D11.Device.CreateTexture2D(SharpDX.Direct3D11.Texture2DDescription@,SharpDX.DataBox[],SharpDX.Direct3D11.Texture2D)"/>   <see cref="M:SharpDX.Direct3D11.Device.CreateTexture3D(SharpDX.Direct3D11.Texture3DDescription@,SharpDX.DataBox[],SharpDX.Direct3D11.Texture3D)"/>   <see cref="M:SharpDX.Direct3D11.Device.CreateBuffer(SharpDX.Direct3D11.BufferDescription@,System.Nullable{SharpDX.DataBox},SharpDX.Direct3D11.Buffer)"/>   <para>If you call any of these  methods with the <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.SharedKeyedmutex"/> flag set, the interface returned will support the <see cref="T:SharpDX.DXGI.KeyedMutex"/> interface.  You can retrieve a reference to the <see cref="T:SharpDX.DXGI.KeyedMutex"/> interface from the resource by using IUnknown::QueryInterface.  The <see cref="T:SharpDX.DXGI.KeyedMutex"/> interface implements the <see cref="M:SharpDX.DXGI.KeyedMutex.Acquire(System.Int64,System.Int32)"/> and <see cref="M:SharpDX.DXGI.KeyedMutex.Release(System.Int64)"/> APIs to synchronize access to the surface. The device that creates the surface, and any other device that opens the surface  by using OpenSharedResource, must call <see cref="M:SharpDX.DXGI.KeyedMutex.Acquire(System.Int64,System.Int32)"/> before they issue any rendering commands to the surface. When those devices finish rendering, they must call <see cref="M:SharpDX.DXGI.KeyedMutex.Release(System.Int64)"/>.</para>	
             <para> <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.Shared"/> and <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.SharedKeyedmutex"/> are mutually exclusive.</para>	
             <para>WARP and REF devices do not support shared resources. If you try to create a resource with this flag on either a WARP or REF device,  the create method will return an E_OUTOFMEMORY error code.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_MISC_SHARED_KEYEDMUTEX']/*"/>	
            <unmanaged>D3D11_RESOURCE_MISC_SHARED_KEYEDMUTEX</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceOptionFlags.GdiCompatible">
            <summary>	
            <para>Enables a resource compatible with GDI. You must set the <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.GdiCompatible"/> flag  on surfaces that you use with GDI. Setting the <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.GdiCompatible"/> flag allows GDI rendering on the surface via <see cref="M:SharpDX.DXGI.Surface1.GetDC(System.Boolean)"/>.	
            </para>	
             <para>Consider the following programming tips for using <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.GdiCompatible"/> when you create a texture or use that texture in a swap chain:</para>	
              <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.SharedKeyedmutex"/> and <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.GdiCompatible"/> are mutually exclusive. Therefore, do not use them together. <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.ResourceClamp"/> and <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.GdiCompatible"/> are mutually exclusive. Therefore, do not use them together. You must bind the texture as a render target for the output-merger stage. For example, set the <see cref="F:SharpDX.Direct3D11.BindFlags.RenderTarget"/> flag in the BindFlags member of the <see cref="T:SharpDX.Direct3D11.Texture2DDescription"/> structure. You must set the maximum number of MIP map levels to 1. For example, set the MipLevels member of the <see cref="T:SharpDX.Direct3D11.Texture2DDescription"/> structure to 1. You must specify that the texture requires read and write access by the GPU. For example, set the Usage member of the <see cref="T:SharpDX.Direct3D11.Texture2DDescription"/> structure to <see cref="F:SharpDX.Direct3D11.ResourceUsage.Default"/>.  <para>You must set the texture format to one of the following types. </para>	
              <see cref="F:SharpDX.DXGI.Format.B8G8R8A8_UNorm"/>	
             <see cref="F:SharpDX.DXGI.Format.B8G8R8A8_Typeless"/> <see cref="F:SharpDX.DXGI.Format.B8G8R8A8_UNorm_SRgb"/>	
             For example, set the Format member of the <see cref="T:SharpDX.Direct3D11.Texture2DDescription"/> structure to one of these  types. You cannot use <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.GdiCompatible"/> with multisampling. Therefore, set the Count member of the <see cref="T:SharpDX.DXGI.SampleDescription"/> structure to 1. Then, set the SampleDesc member of the <see cref="T:SharpDX.Direct3D11.Texture2DDescription"/> structure to this <see cref="T:SharpDX.DXGI.SampleDescription"/> structure.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_MISC_GDI_COMPATIBLE']/*"/>	
            <unmanaged>D3D11_RESOURCE_MISC_GDI_COMPATIBLE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceOptionFlags.SharedNthandle">
            <summary>	
            <para>Set this flag to enable the use NT HANDLE values when you create a shared resource.  By enabling this flag, you deprecate the use of existing HANDLE values.</para>	
             <para>You must combine this flag only with the <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.SharedKeyedmutex"/> flag by using a bitwise OR operation. The resulting value specifies a new shared resource type that directs the runtime to use NT HANDLE values for the shared resource. The runtime then must confirm that the shared resource  works on all hardware at the specified feature level.</para>	
             <para>Without this flag set, the runtime does not strictly validate shared resource parameters (that is, formats, flags, usage, and so on). When the runtime does not validate shared resource parameters, behavior of much of the Direct3D   API might be undefined and might vary from driver to driver.  </para>	
             Direct 3D 11 and earlier:??This value is not supported until Direct3D 11.1.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_MISC_SHARED_NTHANDLE']/*"/>	
            <unmanaged>D3D11_RESOURCE_MISC_SHARED_NTHANDLE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceOptionFlags.RestrictedContent">
            <summary>	
            <para>Set this flag to indicate that the resource might contain protected content; therefore, the operating system should  use the resource only when the driver and hardware support content protection.  If the driver and hardware do not support content protection and you try to create a resource with this flag, the resource creation fails.</para>	
             Direct 3D 11:??This value is not supported until Direct3D 11.1.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_MISC_RESTRICTED_CONTENT']/*"/>	
            <unmanaged>D3D11_RESOURCE_MISC_RESTRICTED_CONTENT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceOptionFlags.RestrictSharedResource">
            <summary>	
            <para>Set this flag to indicate that the operating system  restricts access to the shared surface. You can use this flag together with the <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.RestrictSharedResourceDriver"/> flag and only when you create a shared surface. The process that creates the shared resource can always open the shared resource.</para>	
             Direct 3D 11:??This value is not supported until Direct3D 11.1.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE']/*"/>	
            <unmanaged>D3D11_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceOptionFlags.RestrictSharedResourceDriver">
            <summary>	
            <para>Set this flag to indicate that the driver  restricts access to the shared surface. You can use this flag in conjunction with the <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.RestrictSharedResource"/> flag and only when you create a shared surface. The process that creates the shared resource can always open the shared resource.</para>	
             Direct 3D 11:??This value is not supported until Direct3D 11.1.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE_DRIVER']/*"/>	
            <unmanaged>D3D11_RESOURCE_MISC_RESTRICT_SHARED_RESOURCE_DRIVER</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceOptionFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.ResourceUsage">
            <summary>	
            Identifies expected resource use during rendering. The usage directly reflects whether a resource is accessible by the CPU and/or the graphics processing unit (GPU).	
            </summary>	
            <remarks>	
            An application identifies the way a resource is intended to be used (its usage) in a resource description. There are several structures for creating resources including: <see cref="T:SharpDX.Direct3D11.Texture1DDescription"/>, <see cref="T:SharpDX.Direct3D11.Texture2DDescription"/>, <see cref="T:SharpDX.Direct3D11.Texture3DDescription"/>, <see cref="T:SharpDX.Direct3D11.BufferDescription"/>.<para>Differences between Direct3D 9 and Direct3D 10/11:</para>	
             <para>In Direct3D 9, you specify the type of memory a resource should be created in at resource creation time (using D3DPOOL). It was an application's job to decide what memory pool would provide the best combination of functionality and performance.</para>	
             <para>In Direct3D 10/11, an application no longer specifies what type of memory (the pool) to create a resource in. Instead, you specify the intended usage of the resource, and let the runtime (in concert with the driver and a memory manager) choose the type of memory that will achieve the best performance.</para>?Resource Usage RestrictionsEach usage dictates a tradeoff between accessibility for the CPU and accessibility for the GPU. In general, higher-performance access for one of these two processors means lower-performance access for the other. At either extreme are the <see cref="F:SharpDX.Direct3D11.ResourceUsage.Default"/> and <see cref="F:SharpDX.Direct3D11.ResourceUsage.Staging"/> usages. <see cref="F:SharpDX.Direct3D11.ResourceUsage.Default"/> restricts access almost entirely to the GPU. <see cref="F:SharpDX.Direct3D11.ResourceUsage.Staging"/> restricts access almost entirely to the CPU and allows only a data transfer (copy) of a resource between the GPU and the CPU. You can perform these copy operations via the <see cref="M:SharpDX.Direct3D11.DeviceContext.CopySubresourceRegion_(SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32,System.Int32,SharpDX.Direct3D11.Resource,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion})"/> and <see cref="M:SharpDX.Direct3D11.DeviceContext.CopyResource_(SharpDX.Direct3D11.Resource,SharpDX.Direct3D11.Resource)"/> methods. You can also use these copy methods to copy data between two resources of the same usage. You can also use the <see cref="M:SharpDX.Direct3D11.DeviceContext.UpdateSubresource(SharpDX.DataBox,SharpDX.Direct3D11.Resource,System.Int32)"/> method to copy memory directly from a CPU-supplied reference to any resource, most usefully a resource with <see cref="F:SharpDX.Direct3D11.ResourceUsage.Default"/>.D3D11_USAGE_DYNAMIC usage is a special case that optimizes the flow of data from CPU to GPU when the CPU generates that data on-the-fly and sends that data with high frequency. <see cref="F:SharpDX.Direct3D11.ResourceUsage.Dynamic"/> is typically used on resources with vertex data and on constant buffers. Use the <see cref="M:SharpDX.Direct3D11.DeviceContext.MapSubresource(SharpDX.Direct3D11.Texture1D,System.Int32,System.Int32,SharpDX.Direct3D11.MapMode,SharpDX.Direct3D11.MapFlags,SharpDX.DataStream@)"/> and <see cref="M:SharpDX.Direct3D11.DeviceContext.UnmapSubresource(SharpDX.Direct3D11.Resource,System.Int32)"/> methods to write data to these resources. To achieve the highest performance for data consumed serially, like vertex data, use the <see cref="F:SharpDX.Direct3D11.MapMode.WriteNoOverwrite"/> and <see cref="F:SharpDX.Direct3D11.MapMode.WriteDiscard"/> sequence. For more info about this sequence, see Common Usage of <see cref="F:SharpDX.Direct3D11.MapMode.WriteDiscard"/> with <see cref="F:SharpDX.Direct3D11.MapMode.WriteNoOverwrite"/>.D3D11_USAGE_IMMUTABLE usage is another special case that causes the GPU to generate data just once when you create a resource. <see cref="F:SharpDX.Direct3D11.ResourceUsage.Immutable"/> is well-suited to data such as textures because such data is typically read into memory from some file format. Therefore, when you create a texture with <see cref="F:SharpDX.Direct3D11.ResourceUsage.Immutable"/>, the GPU directly reads that texture into memory.Use the following table to choose the usage that best describes how the resource will need to be accessed by the CPU and/or the GPU. Of course, there will be performance tradeoffs.Resource UsageDefaultDynamicImmutableStaging GPU-Readyesyesyesyes1 GPU-Writeyesyes1 CPU-Readyes1 CPU-Writeyesyes1?1 - GPU read or write of a resource with the <see cref="F:SharpDX.Direct3D11.ResourceUsage.Staging"/> usage is restricted to copy operations. You use <see cref="M:SharpDX.Direct3D11.DeviceContext.CopySubresourceRegion_(SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32,System.Int32,SharpDX.Direct3D11.Resource,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion})"/> and <see cref="M:SharpDX.Direct3D11.DeviceContext.CopyResource_(SharpDX.Direct3D11.Resource,SharpDX.Direct3D11.Resource)"/> for these copy operations. Also, because depth-stencil formats and multisample layouts are implementation details of a particular GPU design, the operating system can?t expose these formats and layouts to the CPU in general. Therefore, staging resources can't be a depth-stencil buffer or a multisampled render target.Note??You can technically use <see cref="M:SharpDX.Direct3D11.DeviceContext.UpdateSubresource(SharpDX.DataBox,SharpDX.Direct3D11.Resource,System.Int32)"/> to copy to a resource with any usage except <see cref="F:SharpDX.Direct3D11.ResourceUsage.Immutable"/>. However, we recommend to use <see cref="M:SharpDX.Direct3D11.DeviceContext.UpdateSubresource(SharpDX.DataBox,SharpDX.Direct3D11.Resource,System.Int32)"/> to update only a resource with <see cref="F:SharpDX.Direct3D11.ResourceUsage.Default"/>. We recommend to use <see cref="M:SharpDX.Direct3D11.DeviceContext.MapSubresource(SharpDX.Direct3D11.Texture1D,System.Int32,System.Int32,SharpDX.Direct3D11.MapMode,SharpDX.Direct3D11.MapFlags,SharpDX.DataStream@)"/> and <see cref="M:SharpDX.Direct3D11.DeviceContext.UnmapSubresource(SharpDX.Direct3D11.Resource,System.Int32)"/> to update resources with <see cref="F:SharpDX.Direct3D11.ResourceUsage.Dynamic"/> because that is the specific purpose of <see cref="F:SharpDX.Direct3D11.ResourceUsage.Dynamic"/> resources, and is therefore the most optimized path.Note??<see cref="F:SharpDX.Direct3D11.ResourceUsage.Dynamic"/> resources consume specific hardware capabilities. Therefore, use them sparingly. The display driver typically allocates memory for <see cref="F:SharpDX.Direct3D11.ResourceUsage.Dynamic"/> resources with a caching algorithm that favors CPU writes and hinders CPU reads. Furthermore, the memory behind <see cref="F:SharpDX.Direct3D11.ResourceUsage.Dynamic"/> resources might not even be the same for successive calls to <see cref="M:SharpDX.Direct3D11.DeviceContext.MapSubresource(SharpDX.Direct3D11.Texture1D,System.Int32,System.Int32,SharpDX.Direct3D11.MapMode,SharpDX.Direct3D11.MapFlags,SharpDX.DataStream@)"/>. Therefore, do not expect high performance or even consistent CPU reads from <see cref="F:SharpDX.Direct3D11.ResourceUsage.Dynamic"/> resources.Note??<see cref="M:SharpDX.Direct3D11.DeviceContext.CopyStructureCount(SharpDX.Direct3D11.Buffer,System.Int32,SharpDX.Direct3D11.UnorderedAccessView)"/> is a special case of GPU-to-CPU copy. Use <see cref="M:SharpDX.Direct3D11.DeviceContext.CopyStructureCount(SharpDX.Direct3D11.Buffer,System.Int32,SharpDX.Direct3D11.UnorderedAccessView)"/> only with unordered access views (UAVs) of buffers.Resource Bind OptionsTo maximize performance, not all resource usage options can be used as input or output resources to the pipeline. This table identifies these limitations.Resource Can Be Bound AsDefaultDynamicImmutableStaging Input to a Stageyes2yes3yes Output from a Stageyes2?2 - If bound as an input and an output using different views, each view must use different subresources. 3 - The resource can only be created with a single subresource. The resource cannot be a texture array. The resource cannot be a mipmap chain.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_USAGE']/*"/>	
            <unmanaged>D3D11_USAGE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceUsage.Default">
            <summary>	
            <para>A resource that requires read and write access by the GPU. This is likely to be the most common usage choice.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_USAGE_DEFAULT']/*"/>	
            <unmanaged>D3D11_USAGE_DEFAULT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceUsage.Immutable">
            <summary>	
            <para>A resource that can only be read by the GPU. It cannot be written by the GPU, and cannot be accessed at all by the CPU. This type of resource must be initialized when it is created, since it cannot be changed after creation.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_USAGE_IMMUTABLE']/*"/>	
            <unmanaged>D3D11_USAGE_IMMUTABLE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceUsage.Dynamic">
            <summary>	
            <para>A resource that is accessible by both the GPU (read only) and the CPU (write only). A dynamic resource is a good choice for a resource that will be updated by the CPU at least once per frame. To update a dynamic resource, use a Map method.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_USAGE_DYNAMIC']/*"/>	
            <unmanaged>D3D11_USAGE_DYNAMIC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceUsage.Staging">
            <summary>	
            <para>A resource that supports data transfer (copy) from the GPU to the CPU.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_USAGE_STAGING']/*"/>	
            <unmanaged>D3D11_USAGE_STAGING</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.ShaderMinimumPrecisionSupport">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SHADER_MIN_PRECISION_SUPPORT']/*"/>	
            <unmanaged>D3D11_SHADER_MIN_PRECISION_SUPPORT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderMinimumPrecisionSupport.Bit8And10">
            <summary>	
            <para>Minimum precision levels are 8-bit and 10-bit.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SHADER_MIN_PRECISION_8_AND_10_BIT']/*"/>	
            <unmanaged>D3D11_SHADER_MIN_PRECISION_8_AND_10_BIT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderMinimumPrecisionSupport.Bit16">
            <summary>	
            <para>Minimum precision level is 16-bit.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SHADER_MIN_PRECISION_16_BIT']/*"/>	
            <unmanaged>D3D11_SHADER_MIN_PRECISION_16_BIT</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.ShaderResourceViewExtendedBufferFlags">
            <summary>	
            Identifies how to bind a raw-buffer resource to the pipeline.	
            </summary>	
            <remarks>	
            This enumeration is used by <see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.ExtendedBufferResource"/>	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFEREX_SRV_FLAG']/*"/>	
            <unmanaged>D3D11_BUFFEREX_SRV_FLAG</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewExtendedBufferFlags.Raw">
            <summary>	
            <para>Bind a raw buffer to the input-assembler stage.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFEREX_SRV_FLAG_RAW']/*"/>	
            <unmanaged>D3D11_BUFFEREX_SRV_FLAG_RAW</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewExtendedBufferFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.StandardMultisampleQualityLevels">
            <summary>	
            Specifies a multi-sample pattern type.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_STANDARD_MULTISAMPLE_QUALITY_LEVELS']/*"/>	
            <unmanaged>D3D11_STANDARD_MULTISAMPLE_QUALITY_LEVELS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.StandardMultisampleQualityLevels.StandardMultisamplePattern">
            <summary>	
            <para>Pre-defined multi-sample patterns required for DX11 and DX10.1 hardware.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_STANDARD_MULTISAMPLE_PATTERN']/*"/>	
            <unmanaged>D3D11_STANDARD_MULTISAMPLE_PATTERN</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.StandardMultisampleQualityLevels.CenterMultisamplePattern">
            <summary>	
            <para>Pattern where all of the samples are located at the pixel center.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CENTER_MULTISAMPLE_PATTERN']/*"/>	
            <unmanaged>D3D11_CENTER_MULTISAMPLE_PATTERN</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.StencilOperation">
            <summary>	
            The stencil operations that can be performed during depth-stencil testing.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_STENCIL_OP']/*"/>	
            <unmanaged>D3D11_STENCIL_OP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.StencilOperation.Keep">
            <summary>	
            <para>Keep the existing stencil data.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_STENCIL_OP_KEEP']/*"/>	
            <unmanaged>D3D11_STENCIL_OP_KEEP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.StencilOperation.Zero">
            <summary>	
            <para>Set the stencil data to 0.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_STENCIL_OP_ZERO']/*"/>	
            <unmanaged>D3D11_STENCIL_OP_ZERO</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.StencilOperation.Replace">
            <summary>	
            <para>Set the stencil data to the reference value set by calling <see cref="M:SharpDX.Direct3D11.OutputMergerStage.SetDepthStencilState(SharpDX.Direct3D11.DepthStencilState,System.Int32)"/>.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_STENCIL_OP_REPLACE']/*"/>	
            <unmanaged>D3D11_STENCIL_OP_REPLACE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.StencilOperation.IncrementAndClamp">
            <summary>	
            <para>Increment the stencil value by 1, and clamp the result.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_STENCIL_OP_INCR_SAT']/*"/>	
            <unmanaged>D3D11_STENCIL_OP_INCR_SAT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.StencilOperation.DecrementAndClamp">
            <summary>	
            <para>Decrement the stencil value by 1, and clamp the result.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_STENCIL_OP_DECR_SAT']/*"/>	
            <unmanaged>D3D11_STENCIL_OP_DECR_SAT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.StencilOperation.Invert">
            <summary>	
            <para>Invert the stencil data.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_STENCIL_OP_INVERT']/*"/>	
            <unmanaged>D3D11_STENCIL_OP_INVERT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.StencilOperation.Increment">
            <summary>	
            <para>Increment the stencil value by 1, and wrap the result if necessary.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_STENCIL_OP_INCR']/*"/>	
            <unmanaged>D3D11_STENCIL_OP_INCR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.StencilOperation.Decrement">
            <summary>	
            <para>Increment the stencil value by 1, and wrap the result if necessary.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_STENCIL_OP_DECR']/*"/>	
            <unmanaged>D3D11_STENCIL_OP_DECR</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.TextureAddressMode">
            <summary>	
            Identify a technique for resolving texture coordinates that are outside of the boundaries of a texture.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE_ADDRESS_MODE']/*"/>	
            <unmanaged>D3D11_TEXTURE_ADDRESS_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.TextureAddressMode.Wrap">
            <summary>	
            <para>Tile the texture at every (u,v) integer junction. For example, for u values between 0 and 3, the texture is repeated three times.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE_ADDRESS_WRAP']/*"/>	
            <unmanaged>D3D11_TEXTURE_ADDRESS_WRAP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.TextureAddressMode.Mirror">
            <summary>	
            <para>Flip the texture at every (u,v) integer junction. For u values between 0 and 1, for example, the texture is addressed normally; between 1 and 2, the texture is flipped (mirrored); between 2 and 3, the texture is normal again; and so on. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE_ADDRESS_MIRROR']/*"/>	
            <unmanaged>D3D11_TEXTURE_ADDRESS_MIRROR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.TextureAddressMode.Clamp">
            <summary>	
            <para>Texture coordinates outside the range [0.0, 1.0] are set to the texture color at 0.0 or 1.0, respectively.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE_ADDRESS_CLAMP']/*"/>	
            <unmanaged>D3D11_TEXTURE_ADDRESS_CLAMP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.TextureAddressMode.Border">
            <summary>	
            <para>Texture coordinates outside the range [0.0, 1.0] are set to the border color specified in <see cref="T:SharpDX.Direct3D11.SamplerStateDescription"/> or HLSL code.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE_ADDRESS_BORDER']/*"/>	
            <unmanaged>D3D11_TEXTURE_ADDRESS_BORDER</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.TextureAddressMode.MirrorOnce">
            <summary>	
            <para>Similar to <see cref="F:SharpDX.Direct3D11.TextureAddressMode.Mirror"/> and <see cref="F:SharpDX.Direct3D11.TextureAddressMode.Clamp"/>. Takes the absolute value of the texture coordinate (thus, mirroring around 0), and then clamps to the maximum value.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE_ADDRESS_MIRROR_ONCE']/*"/>	
            <unmanaged>D3D11_TEXTURE_ADDRESS_MIRROR_ONCE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.TextureCubeFace">
            <summary>	
            The different faces of a cube texture.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURECUBE_FACE']/*"/>	
            <unmanaged>D3D11_TEXTURECUBE_FACE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.TextureCubeFace.PositiveX">
            <summary>	
            <para>Positive X face.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURECUBE_FACE_POSITIVE_X']/*"/>	
            <unmanaged>D3D11_TEXTURECUBE_FACE_POSITIVE_X</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.TextureCubeFace.NegativeX">
            <summary>	
            <para>Negative X face.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURECUBE_FACE_NEGATIVE_X']/*"/>	
            <unmanaged>D3D11_TEXTURECUBE_FACE_NEGATIVE_X</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.TextureCubeFace.PositiveY">
            <summary>	
            <para>Positive Y face.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURECUBE_FACE_POSITIVE_Y']/*"/>	
            <unmanaged>D3D11_TEXTURECUBE_FACE_POSITIVE_Y</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.TextureCubeFace.NegativeY">
            <summary>	
            <para>Negative Y face.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURECUBE_FACE_NEGATIVE_Y']/*"/>	
            <unmanaged>D3D11_TEXTURECUBE_FACE_NEGATIVE_Y</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.TextureCubeFace.PositiveZ">
            <summary>	
            <para>Positive Z face.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURECUBE_FACE_POSITIVE_Z']/*"/>	
            <unmanaged>D3D11_TEXTURECUBE_FACE_POSITIVE_Z</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.TextureCubeFace.NegativeZ">
            <summary>	
            <para>Negative Z face.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURECUBE_FACE_NEGATIVE_Z']/*"/>	
            <unmanaged>D3D11_TEXTURECUBE_FACE_NEGATIVE_Z</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags">
            <summary>	
            Unordered-access-view buffer options.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_UAV_FLAG']/*"/>	
            <unmanaged>D3D11_BUFFER_UAV_FLAG</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.Raw">
            <summary>	
            <para>Resource contains raw, unstructured data.  Requires the UAV format to be <see cref="F:SharpDX.DXGI.Format.R32_Typeless"/>. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_UAV_FLAG_RAW']/*"/>	
            <unmanaged>D3D11_BUFFER_UAV_FLAG_RAW</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.Append">
            <summary>	
            <para>Allow data to be appended to the end of the buffer.  <see cref="F:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.Append"/> flag must also be used for  any view that will be used as a AppendStructuredBuffer or a ConsumeStructuredBuffer.  Requires the UAV format to be <see cref="F:SharpDX.DXGI.Format.Unknown"/>.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_UAV_FLAG_APPEND']/*"/>	
            <unmanaged>D3D11_BUFFER_UAV_FLAG_APPEND</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.Counter">
            <summary>	
            <para>Adds a counter to the unordered-access-view buffer.  <see cref="F:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.Counter"/> can only be used on a UAV that is a  RWStructuredBuffer and it enables the functionality needed for the IncrementCounter and DecrementCounter methods in HLSL.  Requires the UAV format to be <see cref="F:SharpDX.DXGI.Format.Unknown"/>.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_UAV_FLAG_COUNTER']/*"/>	
            <unmanaged>D3D11_BUFFER_UAV_FLAG_COUNTER</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.None">
            <summary>	
            None.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='']/*"/>	
            <unmanaged>None</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.UnorderedAccessViewDimension">
            <summary>	
            Unordered-access view options.	
            </summary>	
            <remarks>	
            This enumeration is used by a unordered access-view description (see <see cref="T:SharpDX.Direct3D11.UnorderedAccessViewDescription"/>).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_UAV_DIMENSION']/*"/>	
            <unmanaged>D3D11_UAV_DIMENSION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDimension.Unknown">
            <summary>	
            <para>The view type is unknown.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_UAV_DIMENSION_UNKNOWN']/*"/>	
            <unmanaged>D3D11_UAV_DIMENSION_UNKNOWN</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDimension.Buffer">
            <summary>	
            <para>View the resource as a buffer.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_UAV_DIMENSION_BUFFER']/*"/>	
            <unmanaged>D3D11_UAV_DIMENSION_BUFFER</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDimension.Texture1D">
            <summary>	
            <para>View the resource as a 1D texture.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_UAV_DIMENSION_TEXTURE1D']/*"/>	
            <unmanaged>D3D11_UAV_DIMENSION_TEXTURE1D</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDimension.Texture1DArray">
            <summary>	
            <para>View the resource as a 1D texture array.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_UAV_DIMENSION_TEXTURE1DARRAY']/*"/>	
            <unmanaged>D3D11_UAV_DIMENSION_TEXTURE1DARRAY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDimension.Texture2D">
            <summary>	
            <para>View the resource as a 2D texture.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_UAV_DIMENSION_TEXTURE2D']/*"/>	
            <unmanaged>D3D11_UAV_DIMENSION_TEXTURE2D</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDimension.Texture2DArray">
            <summary>	
            <para>View the resource as a 2D texture array.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_UAV_DIMENSION_TEXTURE2DARRAY']/*"/>	
            <unmanaged>D3D11_UAV_DIMENSION_TEXTURE2DARRAY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDimension.Texture3D">
            <summary>	
            <para>View the resource as a 3D texture array.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_UAV_DIMENSION_TEXTURE3D']/*"/>	
            <unmanaged>D3D11_UAV_DIMENSION_TEXTURE3D</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VdovDimension">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VDOV_DIMENSION']/*"/>	
            <unmanaged>D3D11_VDOV_DIMENSION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VdovDimension.Unknown">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VDOV_DIMENSION_UNKNOWN']/*"/>	
            <unmanaged>D3D11_VDOV_DIMENSION_UNKNOWN</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VdovDimension.Texture2D">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VDOV_DIMENSION_TEXTURE2D']/*"/>	
            <unmanaged>D3D11_VDOV_DIMENSION_TEXTURE2D</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoDecoderBufferType">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_TYPE']/*"/>	
            <unmanaged>D3D11_VIDEO_DECODER_BUFFER_TYPE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferType.PictureParameters">
            <summary>	
            <para>Picture decoding parameter buffer.	
            </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_PICTURE_PARAMETERS']/*"/>	
            <unmanaged>D3D11_VIDEO_DECODER_BUFFER_PICTURE_PARAMETERS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferType.MacroblockControl">
            <summary>	
            <para>Macroblock control command buffer.	
            </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_MACROBLOCK_CONTROL']/*"/>	
            <unmanaged>D3D11_VIDEO_DECODER_BUFFER_MACROBLOCK_CONTROL</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferType.ResidualDifference">
            <summary>	
            <para>Residual difference block data buffer.	
            </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_RESIDUAL_DIFFERENCE']/*"/>	
            <unmanaged>D3D11_VIDEO_DECODER_BUFFER_RESIDUAL_DIFFERENCE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferType.DeblockingControl">
            <summary>	
            <para>Deblocking filter control command buffer.	
            </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_DEBLOCKING_CONTROL']/*"/>	
            <unmanaged>D3D11_VIDEO_DECODER_BUFFER_DEBLOCKING_CONTROL</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferType.InverseQuantizationMatrix">
            <summary>	
            <para>Inverse quantization matrix buffer.	
            </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_INVERSE_QUANTIZATION_MATRIX']/*"/>	
            <unmanaged>D3D11_VIDEO_DECODER_BUFFER_INVERSE_QUANTIZATION_MATRIX</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferType.SliceControl">
            <summary>	
            <para>Slice-control buffer.	
            </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_SLICE_CONTROL']/*"/>	
            <unmanaged>D3D11_VIDEO_DECODER_BUFFER_SLICE_CONTROL</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferType.Bitstream">
            <summary>	
            <para>Bitstream data buffer.	
            </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_BITSTREAM']/*"/>	
            <unmanaged>D3D11_VIDEO_DECODER_BUFFER_BITSTREAM</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferType.MotionVector">
            <summary>	
            <para>Motion vector buffer.	
            </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_MOTION_VECTOR']/*"/>	
            <unmanaged>D3D11_VIDEO_DECODER_BUFFER_MOTION_VECTOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferType.FilmGrain">
            <summary>	
            <para>Film grain synthesis data buffer.	
            </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_FILM_GRAIN']/*"/>	
            <unmanaged>D3D11_VIDEO_DECODER_BUFFER_FILM_GRAIN</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoFrameFormat">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_FRAME_FORMAT']/*"/>	
            <unmanaged>D3D11_VIDEO_FRAME_FORMAT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoFrameFormat.Progressive">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_FRAME_FORMAT_PROGRESSIVE']/*"/>	
            <unmanaged>D3D11_VIDEO_FRAME_FORMAT_PROGRESSIVE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoFrameFormat.InterlacedTopFieldFirst">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_FRAME_FORMAT_INTERLACED_TOP_FIELD_FIRST']/*"/>	
            <unmanaged>D3D11_VIDEO_FRAME_FORMAT_INTERLACED_TOP_FIELD_FIRST</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoFrameFormat.InterlacedBottomFieldFirst">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_FRAME_FORMAT_INTERLACED_BOTTOM_FIELD_FIRST']/*"/>	
            <unmanaged>D3D11_VIDEO_FRAME_FORMAT_INTERLACED_BOTTOM_FIELD_FIRST</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorAlphaFillMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorAlphaFillMode.Opaque">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_OPAQUE']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_OPAQUE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorAlphaFillMode.Background">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_BACKGROUND']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_BACKGROUND</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorAlphaFillMode.Destination">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_DESTINATION']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_DESTINATION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorAlphaFillMode.SourceStream">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_SOURCE_STREAM']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE_SOURCE_STREAM</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorAutoStreamCaps">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorAutoStreamCaps.Denoise">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_DENOISE']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_DENOISE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorAutoStreamCaps.Deringing">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_DERINGING']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_DERINGING</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorAutoStreamCaps.EdgeEnhancement">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_EDGE_ENHANCEMENT']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_EDGE_ENHANCEMENT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorAutoStreamCaps.ColorCorrection">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_COLOR_CORRECTION']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_COLOR_CORRECTION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorAutoStreamCaps.FleshToneMapping">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_FLESH_TONE_MAPPING']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_FLESH_TONE_MAPPING</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorAutoStreamCaps.ImageStabilization">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_IMAGE_STABILIZATION']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_IMAGE_STABILIZATION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorAutoStreamCaps.SuperResolution">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_SUPER_RESOLUTION']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_SUPER_RESOLUTION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorAutoStreamCaps.AnamorphicScaling">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_ANAMORPHIC_SCALING']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_AUTO_STREAM_CAPS_ANAMORPHIC_SCALING</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorDeviceCaps">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_DEVICE_CAPS']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_DEVICE_CAPS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorDeviceCaps.LinearSpace">
            <summary>	
            <para>The video processor can blend video content in linear color space. Most video content is gamma corrected, resulting in nonlinear values. This capability flag means that the video processor converts colors to linear space before blending, which produces better results.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_LINEAR_SPACE']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_LINEAR_SPACE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorDeviceCaps.XvYCC">
            <summary>	
            <para>The video processor supports the xvYCC color space for YCbCr data. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_xvYCC']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_xvYCC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorDeviceCaps.RgbRangeConversion">
            <summary>	
            <para>The video processor can perform range conversion when the input and output are both RGB but use different color ranges (0-255 or 16-235, for 8-bit RGB). </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_RGB_RANGE_CONVERSION']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_RGB_RANGE_CONVERSION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorDeviceCaps.YCbCrMatrixConversion">
            <summary>	
            <para>The video processor can apply a matrix conversion to YCbCr values when the input and output are both YCbCr. For example, the driver can convert colors from BT.601 to BT.709. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_YCbCr_MATRIX_CONVERSION']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_DEVICE_CAPS_YCbCr_MATRIX_CONVERSION</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorFeatureCaps">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FEATURE_CAPS']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFeatureCaps.AlphaFill">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ALPHA_FILL']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ALPHA_FILL</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFeatureCaps.Constriction">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_CONSTRICTION']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_CONSTRICTION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFeatureCaps.LumaKey">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_LUMA_KEY']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_LUMA_KEY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFeatureCaps.AlphaPalette">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ALPHA_PALETTE']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ALPHA_PALETTE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFeatureCaps.Legacy">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_LEGACY']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_LEGACY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFeatureCaps.Stereo">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_STEREO']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_STEREO</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFeatureCaps.Rotation">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ROTATION']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ROTATION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFeatureCaps.AlphaStream">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ALPHA_STREAM']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_ALPHA_STREAM</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFeatureCaps.PixelAspectRatio">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_PIXEL_ASPECT_RATIO']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FEATURE_CAPS_PIXEL_ASPECT_RATIO</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorFilter">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            The multiplier enables the filter range to have a fractional step value.For example, a hue filter might have an actual range of [?180.0 ... +180.0] with a step size of 0.25. The device would report the following range and multiplier:Minimum: ?720 Maximum: +720 Multiplier: 0.25In this case,  a filter value of 2 would be interpreted by the device as 0.50 (or 2 ? 0.25).The device should use  a multiplier that can be represented exactly as a base-2 fraction.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilter.Brightness">
            <summary>	
            <para>The minimum value of the filter. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_BRIGHTNESS']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_BRIGHTNESS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilter.Contrast">
            <summary>	
            <para>The maximum value of the filter. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_CONTRAST']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_CONTRAST</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilter.Hue">
            <summary>	
            <para>The default value of the filter. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_HUE']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_HUE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilter.Saturation">
            <summary>	
            <para>A multiplier. Use the following formula to translate the filter setting into the actual filter value: Actual Value = Set Value???Multiplier.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_SATURATION']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_SATURATION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilter.NoiseReduction">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_NOISE_REDUCTION']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_NOISE_REDUCTION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilter.EdgeEnhancement">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_EDGE_ENHANCEMENT']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_EDGE_ENHANCEMENT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilter.AnamorphicScaling">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_ANAMORPHIC_SCALING']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_ANAMORPHIC_SCALING</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilter.StereoAdjustment">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_STEREO_ADJUSTMENT']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_STEREO_ADJUSTMENT</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorFilterCaps">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_CAPS']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_CAPS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilterCaps.Brightness">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_CAPS_BRIGHTNESS']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_BRIGHTNESS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilterCaps.Contrast">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_CAPS_CONTRAST']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_CONTRAST</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilterCaps.Hue">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_CAPS_HUE']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_HUE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilterCaps.Saturation">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_CAPS_SATURATION']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_SATURATION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilterCaps.NoiseReduction">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_CAPS_NOISE_REDUCTION']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_NOISE_REDUCTION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilterCaps.EdgeEnhancement">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_CAPS_EDGE_ENHANCEMENT']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_EDGE_ENHANCEMENT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilterCaps.AnamorphicScaling">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_CAPS_ANAMORPHIC_SCALING']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_ANAMORPHIC_SCALING</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilterCaps.StereoAdjustment">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_CAPS_STEREO_ADJUSTMENT']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_CAPS_STEREO_ADJUSTMENT</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorFormatCaps">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            These flags define video processing capabilities that usually are not needed, and that video devices are therefore not required to support.The first three flags relate to RGB support for functions that are normally applied to YCbCr video: deinterlacing, color adjustment, and luma keying. A device that supports these functions for YCbCr is not required  to support them for RGB input. Supporting RGB input for these functions  is  an additional capability, reflected by these constants. Note that the driver might convert the input to another color space, perform the indicated function, and then convert the result back to RGB.Similarly, a device that supports deinterlacing is not required to support deinterlacing of palettized formats. This capability is indicated by the <see cref="F:SharpDX.Direct3D11.VideoProcessorFormatCaps.PaletteInterlaced"/> flag.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FORMAT_CAPS']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FORMAT_CAPS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFormatCaps.RgbInterlaced">
            <summary>	
            <para>The video processor can deinterlace an input stream that contains interlaced RGB video. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_RGB_INTERLACED']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_RGB_INTERLACED</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFormatCaps.RgbProcamp">
            <summary>	
            <para>The video processor can perform color adjustment on RGB video.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_RGB_PROCAMP']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_RGB_PROCAMP</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFormatCaps.RgbLumaKey">
            <summary>	
            <para>The video processor can perform luma keying on RGB video.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_RGB_LUMA_KEY']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_RGB_LUMA_KEY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFormatCaps.PaletteInterlaced">
            <summary>	
            <para>The video processor can deinterlace input streams with palettized color formats.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_PALETTE_INTERLACED']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FORMAT_CAPS_PALETTE_INTERLACED</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorFormatSupport">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFormatSupport.Input">
            <summary>	
            <para>The format can be used as the input to the video processor.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT_INPUT']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT_INPUT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFormatSupport.Output">
            <summary>	
            <para>The format can be used as the output from the video processor.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT_OUTPUT']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FORMAT_SUPPORT_OUTPUT</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorItelecineCaps">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorItelecineCaps.Value32">
            <summary>	
            <para>The video processor can reverse 3:2 pulldown.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_32']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_32</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorItelecineCaps.Value22">
            <summary>	
            <para>The video processor can reverse 2:2 pulldown.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_22']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_22</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorItelecineCaps.Value2224">
            <summary>	
            <para>The video processor can reverse 2:2:2:4 pulldown.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_2224']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_2224</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorItelecineCaps.Value2332">
            <summary>	
            <para>The video processor can reverse 2:3:3:2 pulldown.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_2332']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_2332</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorItelecineCaps.Value32322">
            <summary>	
            <para>The video processor can reverse 3:2:3:2:2 pulldown.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_32322']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_32322</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorItelecineCaps.Value55">
            <summary>	
            <para>The video processor can reverse 5:5 pulldown.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_55']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_55</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorItelecineCaps.Value64">
            <summary>	
            <para>The video processor can reverse 6:4 pulldown.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_64']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_64</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorItelecineCaps.Value87">
            <summary>	
            <para>The video processor can reverse 8:7 pulldown.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_87']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_87</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorItelecineCaps.Value222222222223">
            <summary>	
            <para>The video processor can reverse 2:2:2:2:2:2:2:2:2:2:2:3 pulldown.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_222222222223']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_222222222223</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorItelecineCaps.Other">
            <summary>	
            <para>The video processor can reverse other telecine modes not listed here.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_OTHER']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ITELECINE_CAPS_OTHER</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorOutputRate">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_OUTPUT_RATE']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_OUTPUT_RATE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorOutputRate.Normal">
            <summary>	
            <para>The output is the normal frame rate. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_NORMAL']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_NORMAL</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorOutputRate.Half">
            <summary>	
            <para>The output is half the frame rate. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_HALF']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_HALF</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorOutputRate.Custom">
            <summary>	
            <para>The output is a custom frame rate.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_CUSTOM']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_OUTPUT_RATE_CUSTOM</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorProcessorCaps">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorProcessorCaps.DeinterlaceBlend">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_BLEND']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_BLEND</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorProcessorCaps.DeinterlaceBob">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_BOB']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_BOB</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorProcessorCaps.DeinterlaceAdaptive">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_ADAPTIVE']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_ADAPTIVE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorProcessorCaps.DeinterlaceMotionCompensation">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_MOTION_COMPENSATION']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_DEINTERLACE_MOTION_COMPENSATION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorProcessorCaps.InverseTelecine">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_INVERSE_TELECINE']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_INVERSE_TELECINE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorProcessorCaps.FrameRateConversion">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_FRAME_RATE_CONVERSION']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_PROCESSOR_CAPS_FRAME_RATE_CONVERSION</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorRotation">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ROTATION']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ROTATION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorRotation.Identity">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ROTATION_IDENTITY']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ROTATION_IDENTITY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorRotation.Rotation90">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ROTATION_90']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ROTATION_90</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorRotation.Rotation180">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ROTATION_180']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ROTATION_180</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorRotation.Rotation270">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_ROTATION_270']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_ROTATION_270</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorStereoCaps">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_CAPS']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_CAPS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStereoCaps.MonoOffset">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_CAPS_MONO_OFFSET']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_CAPS_MONO_OFFSET</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStereoCaps.RowInterleaved">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_CAPS_ROW_INTERLEAVED']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_CAPS_ROW_INTERLEAVED</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStereoCaps.ColumnInterleaved">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_CAPS_COLUMN_INTERLEAVED']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_CAPS_COLUMN_INTERLEAVED</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStereoCaps.Checkerboard">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_CAPS_CHECKERBOARD']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_CAPS_CHECKERBOARD</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStereoCaps.FlipMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_CAPS_FLIP_MODE']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_CAPS_FLIP_MODE</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorStereoFlipMode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStereoFlipMode.None">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_FLIP_NONE']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FLIP_NONE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStereoFlipMode.Frame0">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_FLIP_FRAME0']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FLIP_FRAME0</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStereoFlipMode.Frame1">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_FLIP_FRAME1']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FLIP_FRAME1</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorStereoFormat">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            This enumeration designates the two stereo views as "frame 0" and "frame 1". The LeftViewFrame0 parameter of the VideoProcessorSetStreamStereoFormat method specifies which view is the left view, and which is the right view.For packed formats, if the source rectangle clips part of the surface, the driver interprets the rectangle in logical coordinates relative to the stereo view,  rather than absolute pixel coordinates. The result is that frame 0 and frame 1 are clipped proportionately.To query whether the device supports stereo 3D video, call <see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/> and check for the <see cref="F:SharpDX.Direct3D11.VideoProcessorFeatureCaps.Stereo"/> flag in the FeatureCaps member of the <see cref="T:SharpDX.Direct3D11.VideoProcessorCaps"/> structure. If this capability flag is present, it means that the driver supports all of the stereo formats that are not  listed as optional. To find out which optional formats are supported, call GetVideoProcessorCaps and check the StereoCaps member of the structure.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_FORMAT']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStereoFormat.Mono">
            <summary>	
            <para>The sample does not contain stereo data.  If the stereo format is not specified, this value is the default.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_MONO']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_MONO</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStereoFormat.Horizontal">
            <summary>	
            <para>Frame 0 and frame 1 are packed side-by-side, as shown in the following diagram.</para>	
             <para></para>	
             <para>All drivers that support stereo video must support this format.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_HORIZONTAL']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_HORIZONTAL</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStereoFormat.Vertical">
            <summary>	
            <para>Frame 0 and frame 1 are packed top-to-bottom, as shown in the following diagram.</para>	
             <para></para>	
             <para>All drivers that support stereo video must support this format.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_VERTICAL']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_VERTICAL</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStereoFormat.Separate">
            <summary>	
            <para>Frame 0 and frame 1 are placed in separate resources or in separate texture array elements within the same resource.</para>	
             <para>All drivers that support stereo video must support this format.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_SEPARATE']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_SEPARATE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStereoFormat.MonoOffset">
            <summary>	
            <para>The sample contains non-stereo data. However, the driver should create a left/right output of this sample using a specified offset.  The offset is specified in the MonoOffset parameter of the <see cref="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetStreamStereoFormat(SharpDX.Direct3D11.VideoProcessor,System.Int32,System.Boolean,SharpDX.Direct3D11.VideoProcessorStereoFormat,System.Boolean,System.Boolean,SharpDX.Direct3D11.VideoProcessorStereoFlipMode,System.Int32)"/> method. </para>	
             <para>This format is primarily intended for subtitles and other subpicture data, where the entire sample is presented on the same plane.</para>	
             <para>Support for this stereo format is optional.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_MONO_OFFSET']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_MONO_OFFSET</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStereoFormat.RowInterleaved">
            <summary>	
            <para>Frame 0 and frame 1 are packed into interleaved rows, as shown in the following diagram.</para>	
             <para></para>	
             <para>Support for this stereo format is optional.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_ROW_INTERLEAVED']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_ROW_INTERLEAVED</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStereoFormat.ColumnInterleaved">
            <summary>	
            <para>Frame 0 and frame 1 are packed into interleaved columns, as shown in the following diagram.</para>	
             <para></para>	
             <para>Support for this stereo format is optional.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_COLUMN_INTERLEAVED']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_COLUMN_INTERLEAVED</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStereoFormat.Checkerboard">
            <summary>	
            <para>Frame 0 and frame 1 are packed in a checkerboard format, as shown in the following diagram.</para>	
             <para></para>	
             <para>Support for this stereo format is optional.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_CHECKERBOARD']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STEREO_FORMAT_CHECKERBOARD</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoUsage">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_USAGE']/*"/>	
            <unmanaged>D3D11_VIDEO_USAGE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoUsage.PlaybackNormal">
            <summary>	
            <para>Normal video playback. The graphics driver should expose a set of capabilities that are appropriate for real-time video playback. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_USAGE_PLAYBACK_NORMAL']/*"/>	
            <unmanaged>D3D11_VIDEO_USAGE_PLAYBACK_NORMAL</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoUsage.OptimalSpeed">
            <summary>	
            <para>Optimal speed. The graphics driver should expose a minimal set of capabilities that are optimized for performance. </para>	
             <para>Use this setting if you want better performance and can accept some reduction in video quality. For example, you might use this setting in power-saving mode or to play video thumbnails. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_USAGE_OPTIMAL_SPEED']/*"/>	
            <unmanaged>D3D11_VIDEO_USAGE_OPTIMAL_SPEED</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoUsage.OptimalQuality">
            <summary>	
            <para>Optimal quality. The grahics driver should expose its maximum set of capabilities.</para>	
             <para>Specify this setting to get the best video quality possible. It is appropriate for tasks such as video editing, when quality is more important than speed. It is not appropriate for real-time playback. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_USAGE_OPTIMAL_QUALITY']/*"/>	
            <unmanaged>D3D11_VIDEO_USAGE_OPTIMAL_QUALITY</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VpivDimension">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VPIV_DIMENSION']/*"/>	
            <unmanaged>D3D11_VPIV_DIMENSION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VpivDimension.Unknown">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VPIV_DIMENSION_UNKNOWN']/*"/>	
            <unmanaged>D3D11_VPIV_DIMENSION_UNKNOWN</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VpivDimension.Texture2D">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VPIV_DIMENSION_TEXTURE2D']/*"/>	
            <unmanaged>D3D11_VPIV_DIMENSION_TEXTURE2D</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VpovDimension">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            This enumeration is used with the <see cref="T:SharpDX.Direct3D11.VideoProcessorOutputViewDescription"/> structure.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VPOV_DIMENSION']/*"/>	
            <unmanaged>D3D11_VPOV_DIMENSION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VpovDimension.Unknown">
            <summary>	
            <para>Not a valid value.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VPOV_DIMENSION_UNKNOWN']/*"/>	
            <unmanaged>D3D11_VPOV_DIMENSION_UNKNOWN</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VpovDimension.Texture2D">
            <summary>	
            <para>The resource will be accessed as a 2D texture.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VPOV_DIMENSION_TEXTURE2D']/*"/>	
            <unmanaged>D3D11_VPOV_DIMENSION_TEXTURE2D</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VpovDimension.Texture2DArray">
            <summary>	
            <para>The resource will be accessed as an array of 2D textures.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VPOV_DIMENSION_TEXTURE2DARRAY']/*"/>	
            <unmanaged>D3D11_VPOV_DIMENSION_TEXTURE2DARRAY</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.D3D11">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.Direct3D11.D3D11']/*"/>	
        </member>
        <member name="F:SharpDX.Direct3D11.D3D11.SdkVersion">
            <summary>Constant SdkVersion.</summary>
            <unmanaged>D3D11_SDK_VERSION</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.D3D11.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.Direct3D11.Device,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)">
            <summary>	
            Creates a device that represents the display adapter.	
            </summary>	
            <param name="adapterRef"><para>A reference to the video adapter to use when creating a device. Pass <c>null</c> to use the default adapter, which is the first adapter that is enumerated by IDXGIFactory1::EnumAdapters. </para> <para>Note??Do not mix the use of DXGI 1.0 (<see cref="T:SharpDX.DXGI.Factory"/>) and DXGI 1.1 (<see cref="T:SharpDX.DXGI.Factory1"/>) in an application. Use <see cref="T:SharpDX.DXGI.Factory"/> or <see cref="T:SharpDX.DXGI.Factory1"/>, but not both in an application.</para></param>	
            <param name="driverType"><para>The <see cref="T:SharpDX.Direct3D.DriverType"/>, which represents the driver type to create.</para></param>	
            <param name="software"><para>A handle to a DLL that implements a software rasterizer.  If DriverType is <see cref="F:SharpDX.Direct3D.DriverType.Software"/>,  Software must not be <c>null</c>. Get the handle by  calling LoadLibrary,  LoadLibraryEx ,  or GetModuleHandle.</para></param>	
            <param name="flags"><para>The runtime layers to enable (see <see cref="T:SharpDX.Direct3D11.DeviceCreationFlags"/>);  values can be bitwise OR'd together.</para></param>	
            <param name="featureLevelsRef"><para>A reference to an array of D3D_FEATURE_LEVELs, which determine the order of feature levels to attempt to create.  Use default parameters to get the greatest feature level available. If pFeatureLevels is set to <c>null</c>,  the following array of feature levels will be used:</para>  <code> { <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_11_0"/>, <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_10_1"/>, <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_10_0"/>, <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_9_3"/>, <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_9_2"/>, <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_9_1"/>,}; </code></param>	
            <param name="featureLevels"><para>The number of elements in pFeatureLevels.</para></param>	
            <param name="sDKVersion"><para>The SDK version; use <see cref="F:SharpDX.Direct3D11.D3D11.SdkVersion"/>.</para></param>	
            <param name="deviceOut"><para>Returns the address of a reference to an <see cref="T:SharpDX.Direct3D11.Device"/> object that represents the device created.</para></param>	
            <param name="featureLevelRef"><para>If successful, returns the first <see cref="T:SharpDX.Direct3D.FeatureLevel"/> from the pFeatureLevels array which succeeded. Otherwise, returns 0.</para></param>	
            <param name="immediateContextOut"><para>Returns the address of a reference to an <see cref="T:SharpDX.Direct3D11.DeviceContext"/> object that represents the device context.</para></param>	
            <returns>This method returns one of the following Direct3D 11 Return Codes.</returns>	
            <remarks>	
            This entry-point is supported by the Direct3D 11 runtime, which is available on Windows 7, Windows Server 2008 R2, and as an update to  Windows Vista (KB971644).Set ppDevice and ppImmediateContext to <c>null</c> to determine which feature level is supported by looking  at pFeatureLevel without creating a device.For an example, see How To: Create a Device and Immediate Context; to create a device and a swap chain at the same time,  use <see cref="M:SharpDX.Direct3D11.D3D11.CreateDeviceAndSwapChain(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.DXGI.SwapChainDescription@,SharpDX.DXGI.SwapChain@,SharpDX.Direct3D11.Device@,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/>.If you set the pAdapter parameter to a non-<c>null</c> value, you must also set the DriverType parameter to the <see cref="F:SharpDX.Direct3D.DriverType.Unknown"/> value. If you set the pAdapter parameter to a non-<c>null</c> value and the DriverType parameter to the <see cref="F:SharpDX.Direct3D.DriverType.Hardware"/> value, <see cref="M:SharpDX.Direct3D11.D3D11.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.Direct3D11.Device,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/> returns an <see cref="T:SharpDX.Result"/> of E_INVALIDARG.<para>Differences between Direct3D 10 and Direct3D 11:</para>	
             <para>In Direct3D 10, the presence of pAdapter dictated which adapter to use and the DriverType could  mismatch what the adapter was.</para>	
             <para>In Direct3D 11, if you are trying to create a hardware or a software device, set pAdapter != <c>null</c> which constrains  the other inputs to be:</para>	
              DriverType must be <see cref="F:SharpDX.Direct3D.DriverType.Unknown"/> Software must be <c>null</c>.  <para>On the other hand, if pAdapter == <c>null</c>, the DriverType cannot be set to <see cref="F:SharpDX.Direct3D.DriverType.Unknown"/>; it can be set to either:</para>	
              If DriverType == <see cref="F:SharpDX.Direct3D.DriverType.Software"/>,  Software cannot be <c>null</c>. If DriverType == <see cref="F:SharpDX.Direct3D.DriverType.Hardware"/>, the adapter used will be the default adapter, which is the first adapter that is enumerated by IDXGIFactory1::EnumAdapters?	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11CreateDevice']/*"/>	
            <unmanaged>HRESULT D3D11CreateDevice([In, Optional] IDXGIAdapter* pAdapter,[In] D3D_DRIVER_TYPE DriverType,[In] HINSTANCE Software,[In] D3D11_CREATE_DEVICE_FLAG Flags,[In, Buffer, Optional] const D3D_FEATURE_LEVEL* pFeatureLevels,[In] unsigned int FeatureLevels,[In] unsigned int SDKVersion,[Out, Fast] ID3D11Device** ppDevice,[Out, Optional] D3D_FEATURE_LEVEL* pFeatureLevel,[Out, Optional] ID3D11DeviceContext** ppImmediateContext)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.D3D11.CreateDeviceAndSwapChain(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.DXGI.SwapChainDescription@,SharpDX.DXGI.SwapChain@,SharpDX.Direct3D11.Device@,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)">
            <summary>	
            Creates a device that represents the display adapter and a swap chain used for rendering.	
            </summary>	
            <param name="adapterRef"><para>A reference to the video adapter to use when creating a device. Pass <c>null</c> to use the default adapter, which is the first adapter enumerated  by IDXGIFactory1::EnumAdapters. </para> <para>Note??Do not mix the use of DXGI 1.0 (<see cref="T:SharpDX.DXGI.Factory"/>) and DXGI 1.1 (<see cref="T:SharpDX.DXGI.Factory1"/>) in an application. Use <see cref="T:SharpDX.DXGI.Factory"/> or <see cref="T:SharpDX.DXGI.Factory1"/>, but not both in an application.</para></param>	
            <param name="driverType"><para>The <see cref="T:SharpDX.Direct3D.DriverType"/>, which represents the driver type to create.</para></param>	
            <param name="software"><para>A handle to a DLL that implements a software rasterizer.  If DriverType is <see cref="F:SharpDX.Direct3D.DriverType.Software"/>, Software must not be <c>null</c>. Get the handle by  calling LoadLibrary,  LoadLibraryEx ,  or GetModuleHandle. The value should be non-<c>null</c> when <see cref="T:SharpDX.Direct3D.DriverType"/> is <see cref="F:SharpDX.Direct3D.DriverType.Software"/> and <c>null</c> otherwise.</para></param>	
            <param name="flags"><para>The runtime layers to enable (see <see cref="T:SharpDX.Direct3D11.DeviceCreationFlags"/>);  values can be bitwise OR'd together.</para></param>	
            <param name="featureLevelsRef"><para>A reference to an array of D3D_FEATURE_LEVELs, which determine the order of feature levels to attempt to create.  Use default parameters to get the greatest feature level available. If pFeatureLevels is set to <c>null</c>, the following array of feature  levels will be used:</para>  <code> { <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_11_0"/>, <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_10_1"/>, <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_10_0"/>, <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_9_3"/>, <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_9_2"/>, <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_9_1"/>,};</code></param>	
            <param name="featureLevels"><para>The number of elements in pFeatureLevels.</para></param>	
            <param name="sDKVersion"><para>The SDK version; use <see cref="F:SharpDX.Direct3D11.D3D11.SdkVersion"/>.</para></param>	
            <param name="swapChainDescRef"><para>A reference to a swap chain description (see <see cref="T:SharpDX.DXGI.SwapChainDescription"/>) that contains initialization parameters for the swap chain.</para></param>	
            <param name="swapChainOut"><para>Returns the address of a reference to the <see cref="T:SharpDX.DXGI.SwapChain"/> object that represents the swap chain used for rendering.</para></param>	
            <param name="deviceOut"><para>Returns the address of a reference to an <see cref="T:SharpDX.Direct3D11.Device"/> object that represents the device created. Supply <c>null</c> as an input to  return the highest supported feature level in pFeatureLevel.</para></param>	
            <param name="featureLevelRef"><para>Returns a reference to a <see cref="T:SharpDX.Direct3D.FeatureLevel"/>, which represents the first element in an array of feature levels supported  by the device.</para></param>	
            <param name="immediateContextOut"><para>Returns the address of a reference to an <see cref="T:SharpDX.Direct3D11.DeviceContext"/> object that represents the device context.</para></param>	
            <returns>This method returns one of the following Direct3D 11 Return Codes.</returns>	
            <remarks>	
            This entry-point is supported by the Direct3D 11 runtime, which is available on Windows 7, Windows Server 2008 R2, and as an update to  Windows Vista (KB971644).Also, see the remarks section in <see cref="M:SharpDX.Direct3D11.D3D11.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.Direct3D11.Device,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/> for details about input parameter dependencies. To create a device without  creating a swap chain, use the <see cref="M:SharpDX.Direct3D11.D3D11.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.Direct3D11.Device,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/> function.If you set the pAdapter parameter to a non-<c>null</c> value, you must also set the DriverType parameter to the <see cref="F:SharpDX.Direct3D.DriverType.Unknown"/> value. If you set the pAdapter parameter to a non-<c>null</c> value and the DriverType parameter to the <see cref="F:SharpDX.Direct3D.DriverType.Hardware"/> value, <see cref="M:SharpDX.Direct3D11.D3D11.CreateDeviceAndSwapChain(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.DXGI.SwapChainDescription@,SharpDX.DXGI.SwapChain@,SharpDX.Direct3D11.Device@,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/> returns an <see cref="T:SharpDX.Result"/> of E_INVALIDARG.Notes for Metro style appsThe <see cref="M:SharpDX.Direct3D11.D3D11.CreateDeviceAndSwapChain(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.DXGI.SwapChainDescription@,SharpDX.DXGI.SwapChain@,SharpDX.Direct3D11.Device@,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/> function does not exist for Metro style apps. Instead, Metro style apps use the  <see cref="M:SharpDX.Direct3D11.D3D11.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.Direct3D11.Device,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/> function and then use the <see cref="M:SharpDX.DXGI.Factory2.CreateSwapChainForImmersiveWindow(SharpDX.ComObject,SharpDX.ComObject,SharpDX.DXGI.SwapChainDescription1@,SharpDX.DXGI.Output)"/> method.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11CreateDeviceAndSwapChain']/*"/>	
            <unmanaged>HRESULT D3D11CreateDeviceAndSwapChain([In, Optional] IDXGIAdapter* pAdapter,[In] D3D_DRIVER_TYPE DriverType,[In] HINSTANCE Software,[In] D3D11_CREATE_DEVICE_FLAG Flags,[In, Buffer, Optional] const D3D_FEATURE_LEVEL* pFeatureLevels,[In] unsigned int FeatureLevels,[In] unsigned int SDKVersion,[In] const DXGI_SWAP_CHAIN_DESC* pSwapChainDesc,[Out, Optional] IDXGISwapChain** ppSwapChain,[Out, Optional] ID3D11Device** ppDevice,[Out, Optional] D3D_FEATURE_LEVEL* pFeatureLevel,[Out, Optional] ID3D11DeviceContext** ppImmediateContext)</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.D3DCSX">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.Direct3D11.D3DCSX']/*"/>	
        </member>
        <member name="T:SharpDX.Direct3D11.D3DX11">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.Direct3D11.D3DX11']/*"/>	
        </member>
        <member name="T:SharpDX.Direct3D11.D3DX11Effects">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.Direct3D11.D3DX11Effects']/*"/>	
        </member>
        <member name="T:SharpDX.Direct3D11.ResultCode">
            <summary>	
            Functions	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='SharpDX.Direct3D11.ResultCode']/*"/>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResultCode.TooManyUniqueViewObjects">
            <summary>Constant TooManyUniqueViewObjects.</summary>
            <unmanaged>D3D11_ERROR_TOO_MANY_UNIQUE_VIEW_OBJECTS</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.ResultCode.FileNotFound">
            <summary>Constant FileNotFound.</summary>
            <unmanaged>D3D11_ERROR_FILE_NOT_FOUND</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.ResultCode.DeferredContextMapWithoutInitialDiscard">
            <summary>Constant DeferredContextMapWithoutInitialDiscard.</summary>
            <unmanaged>D3D11_ERROR_DEFERRED_CONTEXT_MAP_WITHOUT_INITIAL_DISCARD</unmanaged>
        </member>
        <member name="F:SharpDX.Direct3D11.ResultCode.TooManyUniqueStateObjects">
            <summary>Constant TooManyUniqueStateObjects.</summary>
            <unmanaged>D3D11_ERROR_TOO_MANY_UNIQUE_STATE_OBJECTS</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedChannel">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11AuthenticatedChannel']/*"/>	
            <unmanaged>ID3D11AuthenticatedChannel</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.AuthenticatedChannel.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.AuthenticatedChannel"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.AuthenticatedChannel.GetCertificateSize(System.Int32@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="certificateSizeRef"><para>Receives the size of the certificate chain, in bytes.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11AuthenticatedChannel::GetCertificateSize']/*"/>	
            <unmanaged>HRESULT ID3D11AuthenticatedChannel::GetCertificateSize([Out] unsigned int* pCertificateSize)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.AuthenticatedChannel.GetCertificate(System.Int32,System.Byte[])">
            <summary>	
            No documentation.	
            </summary>	
            <param name="certificateSize">No documentation.</param>	
            <param name="certificateRef">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11AuthenticatedChannel::GetCertificate']/*"/>	
            <unmanaged>HRESULT ID3D11AuthenticatedChannel::GetCertificate([In] unsigned int CertificateSize,[Out, Buffer] unsigned char* pCertificate)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.AuthenticatedChannel.GetChannelHandle(System.IntPtr@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="channelHandleRef"><para>Receives a handle to the channel.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11AuthenticatedChannel::GetChannelHandle']/*"/>	
            <unmanaged>void ID3D11AuthenticatedChannel::GetChannelHandle([Out] void** pChannelHandle)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.AuthenticatedChannel.CertificateSize">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11AuthenticatedChannel::GetCertificateSize']/*"/>	
            <unmanaged>GetCertificateSize</unmanaged>	
            <unmanaged>HRESULT ID3D11AuthenticatedChannel::GetCertificateSize([Out] unsigned int* pCertificateSize)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.AuthenticatedChannel.ChannelHandle">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11AuthenticatedChannel::GetChannelHandle']/*"/>	
            <unmanaged>GetChannelHandle</unmanaged>	
            <unmanaged>void ID3D11AuthenticatedChannel::GetChannelHandle([Out] void** pChannelHandle)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.BlendState1">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11BlendState1']/*"/>	
            <unmanaged>ID3D11BlendState1</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.BlendState1.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.BlendState1"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.BlendState1.GetDescription1(SharpDX.Direct3D11.BlendDescription1@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="descRef"><para>A reference to a <see cref="T:SharpDX.Direct3D11.BlendDescription1"/> structure that receives a description of the blend state. This blend state can specify logical operations as well as blending operations.</para></param>	
            <remarks>	
            You use the description for blending state in a call to the <see cref="M:SharpDX.Direct3D11.Device1.CreateBlendState1(SharpDX.Direct3D11.BlendDescription1@,SharpDX.Direct3D11.BlendState1)"/> method to create the blend-state object.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11BlendState1::GetDesc1']/*"/>	
            <unmanaged>void ID3D11BlendState1::GetDesc1([Out] D3D11_BLEND_DESC1* pDesc)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.BlendState1.Description1">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            You use the description for blending state in a call to the <see cref="M:SharpDX.Direct3D11.Device1.CreateBlendState1(SharpDX.Direct3D11.BlendDescription1@,SharpDX.Direct3D11.BlendState1)"/> method to create the blend-state object.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11BlendState1::GetDesc1']/*"/>	
            <unmanaged>GetDesc1</unmanaged>	
            <unmanaged>void ID3D11BlendState1::GetDesc1([Out] D3D11_BLEND_DESC1* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.CommandList">
            <summary>	
            The <see cref="T:SharpDX.Direct3D11.CommandList"/> interface encapsulates a list of graphics commands for play back.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11CommandList']/*"/>	
            <unmanaged>ID3D11CommandList</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.CommandList.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.CommandList"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.CommandList.GetContextFlags">
            <summary>	
            Gets the initialization flags associated with the deferred context that created the command list.	
            </summary>	
            <returns>The context flag is reserved for future use and is always 0.</returns>	
            <remarks>	
            The GetContextFlags method gets the flags that were supplied to the ContextFlags parameter of <see cref="M:SharpDX.Direct3D11.Device.CreateDeferredContext(System.Int32,SharpDX.Direct3D11.DeviceContext)"/>; however, the context flag is reserved for future use.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11CommandList::GetContextFlags']/*"/>	
            <unmanaged>unsigned int ID3D11CommandList::GetContextFlags()</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.CommandList.ContextFlags">
            <summary>	
            Gets the initialization flags associated with the deferred context that created the command list.	
            </summary>	
            <remarks>	
            The GetContextFlags method gets the flags that were supplied to the ContextFlags parameter of <see cref="M:SharpDX.Direct3D11.Device.CreateDeferredContext(System.Int32,SharpDX.Direct3D11.DeviceContext)"/>; however, the context flag is reserved for future use.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11CommandList::GetContextFlags']/*"/>	
            <unmanaged>GetContextFlags</unmanaged>	
            <unmanaged>unsigned int ID3D11CommandList::GetContextFlags()</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.CryptoSession">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11CryptoSession']/*"/>	
            <unmanaged>ID3D11CryptoSession</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.CryptoSession.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.CryptoSession"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <!-- Badly formed XML comment ignored for member "M:SharpDX.Direct3D11.CryptoSession.GetCryptoType(System.Guid@)" -->
        <member name="M:SharpDX.Direct3D11.CryptoSession.GetDecoderProfile(System.Guid@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="decoderProfileRef">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11CryptoSession::GetDecoderProfile']/*"/>	
            <unmanaged>void ID3D11CryptoSession::GetDecoderProfile([Out] GUID* pDecoderProfile)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.CryptoSession.GetCertificateSize(System.Int32@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="certificateSizeRef"><para>Receives the size of the certificate chain, in bytes. </para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            To get the certificate, call <see cref="M:SharpDX.Direct3D11.CryptoSession.GetCertificate(System.Int32,System.Byte[])"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11CryptoSession::GetCertificateSize']/*"/>	
            <unmanaged>HRESULT ID3D11CryptoSession::GetCertificateSize([Out] unsigned int* pCertificateSize)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.CryptoSession.GetCertificate(System.Int32,System.Byte[])">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="certificateSize"><para>Receives the size of the certificate chain, in bytes. </para></param>	
            <param name="certificateRef">No documentation.</param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            To get the certificate, call <see cref="M:SharpDX.Direct3D11.CryptoSession.GetCertificate(System.Int32,System.Byte[])"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11CryptoSession::GetCertificate']/*"/>	
            <unmanaged>HRESULT ID3D11CryptoSession::GetCertificate([In] unsigned int CertificateSize,[Out, Buffer] unsigned char* pCertificate)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.CryptoSession.GetCryptoSessionHandle(System.IntPtr@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="cryptoSessionHandleRef"><para>Receives a handle to the session.</para></param>	
            <remarks>	
            You can use this handle to associate the session with a decoder. This enables the decoder to decrypt data that is encrypted using this session.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11CryptoSession::GetCryptoSessionHandle']/*"/>	
            <unmanaged>void ID3D11CryptoSession::GetCryptoSessionHandle([Out] void** pCryptoSessionHandle)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.CryptoSession.CryptoType">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            The application specifies the encryption type when it creates the session.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11CryptoSession::GetCryptoType']/*"/>	
            <unmanaged>GetCryptoType</unmanaged>	
            <unmanaged>void ID3D11CryptoSession::GetCryptoType([Out] GUID* pCryptoType)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.CryptoSession.DecoderProfile">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11CryptoSession::GetDecoderProfile']/*"/>	
            <unmanaged>GetDecoderProfile</unmanaged>	
            <unmanaged>void ID3D11CryptoSession::GetDecoderProfile([Out] GUID* pDecoderProfile)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.CryptoSession.CertificateSize">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            To get the certificate, call <see cref="M:SharpDX.Direct3D11.CryptoSession.GetCertificate(System.Int32,System.Byte[])"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11CryptoSession::GetCertificateSize']/*"/>	
            <unmanaged>GetCertificateSize</unmanaged>	
            <unmanaged>HRESULT ID3D11CryptoSession::GetCertificateSize([Out] unsigned int* pCertificateSize)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.CryptoSession.CryptoSessionHandle">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            You can use this handle to associate the session with a decoder. This enables the decoder to decrypt data that is encrypted using this session.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11CryptoSession::GetCryptoSessionHandle']/*"/>	
            <unmanaged>GetCryptoSessionHandle</unmanaged>	
            <unmanaged>void ID3D11CryptoSession::GetCryptoSessionHandle([Out] void** pCryptoSessionHandle)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.Device1">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device1']/*"/>	
            <unmanaged>ID3D11Device1</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device1.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.Device1"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device1.GetImmediateContext1(SharpDX.Direct3D11.DeviceContext1@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="immediateContextOut">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device1::GetImmediateContext1']/*"/>	
            <unmanaged>void ID3D11Device1::GetImmediateContext1([Out] ID3D11DeviceContext1** ppImmediateContext)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device1.CreateDeferredContext1(System.Int32,SharpDX.Direct3D11.DeviceContext1)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="contextFlags"><para>Reserved for future use.  Pass 0.</para></param>	
            <param name="deferredContextOut"><para>Upon completion of the method, the passed reference to an <see cref="T:SharpDX.Direct3D11.DeviceContext1"/> interface reference is initialized.</para></param>	
            <returns>Returns <see cref="F:SharpDX.Result.Ok"/> if successful; otherwise, returns one of the following:Returns <see cref="F:SharpDX.DXGI.DXGIError.DeviceRemoved"/> if the graphics adapter has been physically removed from the computer or a driver upgrade for the graphics adapter has occurred. If this error occurs, you should destroy and re-create the device. Returns <see cref="F:SharpDX.DXGI.DXGIError.InvalidCall"/> if the CreateDeferredContext1 method cannot be called from the current context. For example, if the device was created with the <see cref="F:SharpDX.Direct3D11.DeviceCreationFlags.SingleThreaded"/> value,  CreateDeferredContext1 returns <see cref="F:SharpDX.DXGI.DXGIError.InvalidCall"/>. Returns E_INVALIDARG if the ContextFlags parameter is invalid. Returns E_OUTOFMEMORY if the application has exhausted available memory.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device1::CreateDeferredContext1']/*"/>	
            <unmanaged>HRESULT ID3D11Device1::CreateDeferredContext1([In] unsigned int ContextFlags,[Out, Fast] ID3D11DeviceContext1** ppDeferredContext)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device1.CreateBlendState1(SharpDX.Direct3D11.BlendDescription1@,SharpDX.Direct3D11.BlendState1)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="blendStateDescRef"><para>A reference to a  <see cref="T:SharpDX.Direct3D11.BlendDescription1"/> structure that describes blend state.</para></param>	
            <param name="blendStateOut"><para>Address of a reference to the <see cref="T:SharpDX.Direct3D11.BlendState1"/> interface for the blend-state object created.</para></param>	
            <returns>This method returns E_OUTOFMEMORY if there is insufficient memory to create the blend-state object.   See Direct3D 11 Return Codes for other possible return values.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device1::CreateBlendState1']/*"/>	
            <unmanaged>HRESULT ID3D11Device1::CreateBlendState1([In] const D3D11_BLEND_DESC1* pBlendStateDesc,[Out, Fast] ID3D11BlendState1** ppBlendState)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device1.CreateRasterizerState1(SharpDX.Direct3D11.RasterizerDescription1@,SharpDX.Direct3D11.RasterizerState1)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="rasterizerDescRef"><para>A reference to a <see cref="T:SharpDX.Direct3D11.RasterizerDescription1"/> structure that describes the  rasterizer state.</para></param>	
            <param name="rasterizerStateOut"><para>Address of a reference to the <see cref="T:SharpDX.Direct3D11.RasterizerState1"/> interface for the rasterizer state object created.</para></param>	
            <returns>This method returns E_OUTOFMEMORY if there is insufficient memory to create the rasterizer state object.  See Direct3D 11 Return Codes for other possible return values.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device1::CreateRasterizerState1']/*"/>	
            <unmanaged>HRESULT ID3D11Device1::CreateRasterizerState1([In] const D3D11_RASTERIZER_DESC1* pRasterizerDesc,[Out, Fast] ID3D11RasterizerState1** ppRasterizerState)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device1.CreateDeviceContextState(System.Int32,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,System.Guid,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.ID3DDeviceContextState)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="flags"><para>A combination of <see cref="T:SharpDX.Direct3D11.CreateDeviceContextStateFlags"/> values that are combined by using a bitwise OR operation. The resulting value specifies how to create the context state object. The <see cref="F:SharpDX.Direct3D11.CreateDeviceContextStateFlags.Singlethreaded"/> flag is currently the only defined flag. If the original device was created with <see cref="F:SharpDX.Direct3D11.DeviceCreationFlags.SingleThreaded"/>, you must create all context state objects from that device with the <see cref="F:SharpDX.Direct3D11.CreateDeviceContextStateFlags.Singlethreaded"/> flag. </para> <para>The context state object that  CreateDeviceContextState creates  inherits the threading model of its associated device context. By default the context state object is rent-threaded, so that an application synchronizes access to the device context, typically by use of critical sections. In contrast, the context state object is free-threaded if you used the ID3D10Multithread interface to turn on thread protection for the device context.</para> <para>If you set the single-threaded flag for both the context state object and the device, you guarantee that you will   call the whole set of context methods and device methods only from one thread. You therefore do not need to use critical sections to synchronize access to the device context, and the runtime can avoid working with those processor-intensive critical sections.</para></param>	
            <param name="featureLevelsRef"><para>A reference to an array of <see cref="T:SharpDX.Direct3D.FeatureLevel"/> values. The array determines the order of feature levels for which creation is attempted.  To get the greatest feature level available, set pFeatureLevels to <c>null</c>,  so that CreateDeviceContextState uses the following array of feature level values:</para>  <code> { <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_11_1"/>, <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_11_0"/>, <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_10_1"/>, <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_10_0"/>, <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_9_3"/>, <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_9_2"/>, <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_9_1"/>,}; </code></param>	
            <param name="featureLevels"><para>The number of elements in pFeatureLevels.</para></param>	
            <param name="sDKVersion"><para>The SDK version. You must set this parameter to <see cref="F:SharpDX.Direct3D11.D3D11.SdkVersion"/>.</para></param>	
            <param name="emulatedInterface"><para>The globally unique identifier (<see cref="T:System.Guid"/>) for the emulated interface. This value specifies the behavior of the device when the context state object is active. Valid values are  <see cref="!:SharpDX.Direct3D10.Device"/>, <see cref="!:SharpDX.Direct3D10.Device1"/>, <see cref="T:SharpDX.Direct3D11.Device"/>, and <see cref="T:SharpDX.Direct3D11.Device1"/>. See Remarks.</para></param>	
            <param name="chosenFeatureLevelRef"><para>A reference to a variable that receives a <see cref="T:SharpDX.Direct3D.FeatureLevel"/> value from the pFeatureLevels array. This is the first array value with which CreateDeviceContextState succeeded in creating the context state object. If the call to CreateDeviceContextState fails, the variable pointed to by pChosenFeatureLevel is set to zero.</para></param>	
            <param name="contextStateOut"><para>The address of a reference to an <see cref="T:SharpDX.Direct3D11.ID3DDeviceContextState"/> object that represents the state of a Direct3D device.</para></param>	
            <returns>This method returns one of the Direct3D 11 Return Codes.</returns>	
            <remarks>	
            The  REFIID value of the emulated interface is a <see cref="T:System.Guid"/> obtained by use of the __uuidof operator. For example, __uuidof(<see cref="T:SharpDX.Direct3D11.Device"/>) gets the <see cref="T:System.Guid"/> of the interface to a Microsoft Direct3D?11 device.Call the <see cref="M:SharpDX.Direct3D11.DeviceContext1.SwapDeviceContextState(SharpDX.Direct3D11.ID3DDeviceContextState,SharpDX.Direct3D11.ID3DDeviceContextState@)"/> method to activate the context state object. When the context state object is active, the device behaviors that are associated with both the context state object's feature level and its compatible interface are activated on the Direct3D device until the next call to SwapDeviceContextState.When a context state object is active, the runtime disables certain methods on the device and context interfaces. For example, a context state object that is created with __uuidof(<see cref="T:SharpDX.Direct3D11.Device"/>) will cause the runtime to turn off most of the Microsoft Direct3D?10 device interfaces, and a context state object that is created with __uuidof(<see cref="!:SharpDX.Direct3D10.Device1"/>) or __uuidof(<see cref="!:SharpDX.Direct3D10.Device"/>) will cause the runtime to turn off most of the <see cref="T:SharpDX.Direct3D11.DeviceContext"/> methods.	
            This behavior ensures that a user of either emulated interface cannot set device state that the other emulated interface is unable to express. This restriction helps guarantee that the <see cref="!:SharpDX.Direct3D10.Device1"/> emulated interface accurately reflects the full state of the pipeline and that the emulated interface will not operate contrary to its original interface definition.For example, suppose the tessellation stage is made active through the <see cref="T:SharpDX.Direct3D11.DeviceContext"/> interface	
            when you create the device through <see cref="M:SharpDX.Direct3D11.D3D11.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.Direct3D11.Device,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/> or <see cref="M:SharpDX.Direct3D11.D3D11.CreateDeviceAndSwapChain(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.DXGI.SwapChainDescription@,SharpDX.DXGI.SwapChain@,SharpDX.Direct3D11.Device@,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/>,  instead of through the Direct3D?10 equivalents. Because  the Direct3D?11 context is active, a Direct3D?10 interface is inactive when you first retrieve it via QueryInterface. This means that you cannot  immediately pass a Direct3D?10 interface that you retrieved from a Direct3D?11 device to a function. You must first call SwapDeviceContextState to activate a Direct3D?10-compatible context state object.The following table shows the methods that are active and inactive for each emulated interface.Emulated interface Active device or immediate context  interfaces Inactive device or immediate context  interfaces  <para> <see cref="T:SharpDX.Direct3D11.Device"/> or</para>	
             <para> <see cref="T:SharpDX.Direct3D11.Device1"/> </para>	
              <para> <see cref="T:SharpDX.Direct3D11.Device"/> </para>	
             <para> <see cref="T:SharpDX.DXGI.Device"/> +</para>	
             <para> <see cref="T:SharpDX.DXGI.Device1"/> +</para>	
             <para> <see cref="T:SharpDX.DXGI.Device2"/> </para>	
             <para> ID3D10Multithread </para>	
              <see cref="!:SharpDX.Direct3D10.Device"/>   <para> <see cref="!:SharpDX.Direct3D10.Device1"/> or</para>	
             <para> <see cref="!:SharpDX.Direct3D10.Device"/> </para>	
              <para> <see cref="!:SharpDX.Direct3D10.Device"/> </para>	
             <para> <see cref="!:SharpDX.Direct3D10.Device1"/> </para>	
             <para> <see cref="T:SharpDX.DXGI.Device"/> +</para>	
             <para> <see cref="T:SharpDX.DXGI.Device1"/> </para>	
             <para> ID3D10Multithread </para>	
              <para> <see cref="T:SharpDX.Direct3D11.Device"/> </para>	
             <para> <see cref="T:SharpDX.Direct3D11.DeviceContext"/> (As published by the immediate context. The Direct3D?10 or Microsoft Direct3D?10.1 emulated interface has no effect on deferred contexts.)</para>?The following table shows the immediate context methods that the runtime disables when the indicated context state objects are active.Methods of <see cref="T:SharpDX.Direct3D11.DeviceContext"/> when __uuidof(<see cref="!:SharpDX.Direct3D10.Device1"/>) or __uuidof(<see cref="!:SharpDX.Direct3D10.Device"/>) is active Methods of <see cref="!:SharpDX.Direct3D10.Device"/> when __uuidof(<see cref="T:SharpDX.Direct3D11.Device"/>) is active    <para> Begin </para>	
               <para> ClearDepthStencilView </para>	
              <para> ClearDepthStencilView </para>	
               <para> ClearRenderTargetView </para>	
              <para> ClearRenderTargetView </para>	
               <para> ClearState </para>	
              <para> ClearState </para>	
               <para> ClearUnorderedAccessViewUint </para>	
               <para> ClearUnorderedAccessViewFloat </para>	
               <para> CopyResource </para>	
              <para> CopyResource </para>	
               <para> CopyStructureCount </para>	
               <para> CopySubresourceRegion </para>	
              <para> CopySubresourceRegion </para>	
               <para> CSGetConstantBuffers </para>	
               <para> CSGetSamplers </para>	
               <para> CSGetShader </para>	
               <para> CSGetShaderResources </para>	
               <para> CSGetUnorderedAccessViews </para>	
               <para> CSSetConstantBuffers </para>	
               <para> CSSetSamplers </para>	
               <para> CSSetShader </para>	
               <para> CSSetShaderResources </para>	
               <para> CSSetUnorderedAccessViews </para>	
               <para> Dispatch </para>	
               <para> DispatchIndirect </para>	
               <para> CreateBlendState </para>	
               <para> Draw </para>	
              <para> Draw </para>	
               <para> DrawAuto </para>	
              <para> DrawAuto </para>	
               <para> DrawIndexed </para>	
              <para> DrawIndexed </para>	
               <para> DrawIndexedInstanced </para>	
              <para> DrawIndexedInstanced </para>	
               <para> DrawIndexedInstancedIndirect </para>	
               <para> DrawInstanced </para>	
              <para> DrawInstanced </para>	
               <para> DrawInstancedIndirect </para>	
               <para> DSGetConstantBuffers </para>	
               <para> DSGetSamplers </para>	
               <para> DSGetShader </para>	
               <para> DSGetShaderResources </para>	
               <para> DSSetConstantBuffers </para>	
               <para> DSSetSamplers </para>	
               <para> DSSetShader </para>	
               <para> DSSetShaderResources </para>	
               <para> End </para>	
               <para> ExecuteCommandList </para>	
               <para> FinishCommandList </para>	
               <para> Flush </para>	
              <para> Flush </para>	
               <para> GenerateMips </para>	
              <para> GenerateMips </para>	
               <para> GetData </para>	
               <para> GetPredication </para>	
              <para> GetPredication </para>	
               <para> GetResourceMinLOD </para>	
               <para> GetType </para>	
               <para> GetTextFilterSize </para>	
               <para> GSGetConstantBuffers </para>	
              <para> GSGetConstantBuffers </para>	
               <para> GSGetSamplers </para>	
              <para> GSGetSamplers </para>	
               <para> GSGetShader </para>	
              <para> GSGetShader </para>	
               <para> GSGetShaderResources </para>	
              <para> GSGetShaderResources </para>	
               <para> GSSetConstantBuffers </para>	
              <para> GSSetConstantBuffers </para>	
               <para> GSSetSamplers </para>	
              <para> GSSetSamplers </para>	
               <para> GSSetShader </para>	
              <para> GSSetShader </para>	
               <para> GSSetShaderResources </para>	
              <para> GSSetShaderResources </para>	
               <para> HSGetConstantBuffers </para>	
               <para> HSGetSamplers </para>	
               <para> HSGetShader </para>	
               <para> HSGetShaderResources </para>	
               <para> HSSetConstantBuffers </para>	
               <para> HSSetSamplers </para>	
               <para> HSSetShader </para>	
               <para> HSSetShaderResources </para>	
               <para> IAGetIndexBuffer </para>	
              <para> IAGetIndexBuffer </para>	
               <para> IAGetInputLayout </para>	
              <para> IAGetInputLayout </para>	
               <para> IAGetPrimitiveTopology </para>	
              <para> IAGetPrimitiveTopology </para>	
               <para> IAGetVertexBuffers </para>	
               <para> IASetIndexBuffer </para>	
               <para> IASetInputLayout </para>	
               <para> IASetPrimitiveTopology </para>	
               <para> IASetVertexBuffers </para>	
               <para> OMGetBlendState </para>	
              <para> OMGetBlendState </para>	
               <para> OMGetDepthStencilState </para>	
              <para> OMGetDepthStencilState </para>	
               <para> OMGetRenderTargets </para>	
              <para> OMGetRenderTargets </para>	
               <para> OMGetRenderTargetsAndUnorderedAccessViews </para>	
               <para> OMSetBlendState </para>	
              <para> OMSetBlendState </para>	
               <para> OMSetDepthStencilState </para>	
              <para> OMSetDepthStencilState </para>	
               <para> OMSetRenderTargets </para>	
              <para> OMSetRenderTargets </para>	
               <para> OMSetRenderTargetsAndUnorderedAccessViews </para>	
               <para> PSGetConstantBuffers </para>	
              <para> PSGetConstantBuffers </para>	
               <para> PSGetSamplers </para>	
              <para> PSGetSamplers </para>	
               <para> PSGetShader </para>	
              <para> PSGetShader </para>	
               <para> PSGetShaderResources </para>	
              <para> PSGetShaderResources </para>	
               <para> PSSetConstantBuffers </para>	
              <para> PSSetConstantBuffers </para>	
               <para> PSSetSamplers </para>	
              <para> PSSetSamplers </para>	
               <para> PSSetShader </para>	
              <para> PSSetShader </para>	
               <para> PSSetShaderResources </para>	
              <para> PSSetShaderResources </para>	
               <para> ResolveSubresource </para>	
              <para> ResolveSubresource </para>	
               <para> RSGetScissorRects </para>	
              <para> RSGetScissorRects </para>	
               <para> RSGetState </para>	
              <para> RSGetState </para>	
               <para> RSGetViewports </para>	
              <para> RSGetViewports </para>	
               <para> RSSetScissorRects </para>	
              <para> RSSetScissorRects </para>	
               <para> RSSetState </para>	
              <para> RSSetState </para>	
               <para> RSSetViewports </para>	
              <para> RSSetViewports </para>	
               <para> SetPredication </para>	
              <para> SetPredication </para>	
               <para> SetResourceMinLOD </para>	
               <para> SetTextFilterSize </para>	
               <para> SOGetTargets </para>	
              <para> SOGetTargets </para>	
               <para> SOSetTargets </para>	
              <para> SOSetTargets </para>	
               <para> UpdateSubresource </para>	
              <para> UpdateSubresource </para>	
               <para> VSGetConstantBuffers </para>	
              <para> VSGetConstantBuffers </para>	
               <para> VSGetSamplers </para>	
              <para> VSGetSamplers </para>	
               <para> VSGetShader </para>	
              <para> VSGetShader </para>	
               <para> VSGetShaderResources </para>	
              <para> VSGetShaderResources </para>	
               <para> VSSetConstantBuffers </para>	
              <para> VSSetConstantBuffers </para>	
               <para> VSSetSamplers </para>	
              <para> VSSetSamplers </para>	
               <para> VSSetShader </para>	
              <para> VSSetShader </para>	
               <para> VSSetShaderResources </para>	
              <para> VSSetShaderResources </para>?The following table shows the immediate context methods that the runtime does not disable when the indicated context state objects are active.Methods of <see cref="T:SharpDX.Direct3D11.DeviceContext"/> when __uuidof(<see cref="!:SharpDX.Direct3D10.Device1"/>) or __uuidof(<see cref="!:SharpDX.Direct3D10.Device"/>) is active Methods of <see cref="!:SharpDX.Direct3D10.Device"/> when __uuidof(<see cref="T:SharpDX.Direct3D11.Device"/>) is active   <para> GetCreationFlags </para>	
               <para> GetPrivateData </para>	
               <para> GetContextFlags </para>	
               <para> Map </para>	
               <para> Unmap </para>?The following table shows the <see cref="!:SharpDX.Direct3D10.Device"/> interface methods that the runtime does not disable because they are not immediate context methods.Methods of <see cref="!:SharpDX.Direct3D10.Device"/>   <para> CheckCounter </para>	
               <para> CheckCounterInfo </para>	
               <para>Create*, like CreateQuery </para>	
               <para> GetDeviceRemovedReason </para>	
               <para> GetExceptionMode </para>	
               <para> OpenSharedResource </para>	
               <para> SetExceptionMode </para>	
               <para> SetPrivateData </para>	
               <para> SetPrivateDataInterface </para>?	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device1::CreateDeviceContextState']/*"/>	
            <unmanaged>HRESULT ID3D11Device1::CreateDeviceContextState([In] unsigned int Flags,[In, Buffer] const D3D_FEATURE_LEVEL* pFeatureLevels,[In] unsigned int FeatureLevels,[In] unsigned int SDKVersion,[In] const GUID&amp; EmulatedInterface,[Out, Optional] D3D_FEATURE_LEVEL* pChosenFeatureLevel,[Out, Fast] ID3DDeviceContextState** ppContextState)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device1.OpenSharedResource1(System.IntPtr,System.Guid,System.IntPtr@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="hResource">No documentation.</param>	
            <param name="returnedInterface">No documentation.</param>	
            <param name="resourceOut">No documentation.</param>	
            <returns>This method returns one of the Direct3D 11 return codes. This method also returns E_ACCESSDENIED if the permissions to access the resource aren't valid.</returns>	
            <remarks>	
            The behavior of OpenSharedResource1 is similar to the behavior of the <see cref="M:SharpDX.Direct3D11.Device.OpenSharedResource(System.IntPtr,System.Guid,System.IntPtr@)"/> method; each call to OpenSharedResource1 to access a resource creates a new resource object.  In other words, if you call OpenSharedResource1 twice and pass the same resource handle to hResource, you receive two resource  objects with different <see cref="T:SharpDX.ComObject"/> references.To share a resource between two devicesCreate the resource as shared and specify that it uses NT handles, by setting the <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.SharedNthandle"/> flag. Obtain the REFIID, or <see cref="T:System.Guid"/>, of the interface to the resource by using the __uuidof() macro. For example, __uuidof(<see cref="T:SharpDX.Direct3D11.Texture2D"/>) retrieves the <see cref="T:System.Guid"/> of the interface to a 2D texture. Query the resource for the <see cref="T:SharpDX.DXGI.Resource1"/> interface. Call the <see cref="M:SharpDX.DXGI.Resource1.CreateSharedHandle(System.Nullable{SharpDX.Win32.SecurityAttributes},System.Int32,System.String,System.IntPtr@)"/> method to obtain the unique handle to the resource.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device1::OpenSharedResource1']/*"/>	
            <unmanaged>HRESULT ID3D11Device1::OpenSharedResource1([In] void* hResource,[In] const GUID&amp; returnedInterface,[Out] void** ppResource)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Device1.OpenSharedResourceByName(System.String,System.Int32,System.Guid,System.IntPtr@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="lpName">No documentation.</param>	
            <param name="dwDesiredAccess">No documentation.</param>	
            <param name="returnedInterface">No documentation.</param>	
            <param name="resourceOut">No documentation.</param>	
            <returns>This method returns one of the Direct3D 11 return codes. This method also returns E_ACCESSDENIED if the permissions to access the resource aren't valid.</returns>	
            <remarks>	
            The behavior of OpenSharedResourceByName is similar to the behavior of the <see cref="M:SharpDX.Direct3D11.Device1.OpenSharedResource1(System.IntPtr,System.Guid,System.IntPtr@)"/> method; each call to OpenSharedResourceByName to access a resource creates a new resource object.  In other words, if you call OpenSharedResourceByName twice and pass the same resource name to lpName, you receive two resource  objects with different <see cref="T:SharpDX.ComObject"/> references.To share a resource between two devicesCreate the resource as shared and specify that it uses NT handles, by setting the <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.SharedNthandle"/> flag. Obtain the REFIID, or <see cref="T:System.Guid"/>, of the interface to the resource by using the __uuidof() macro. For example, __uuidof(<see cref="T:SharpDX.Direct3D11.Texture2D"/>) retrieves the <see cref="T:System.Guid"/> of the interface to a 2D texture. Query the resource for the <see cref="T:SharpDX.DXGI.Resource1"/> interface. Call the <see cref="M:SharpDX.DXGI.Resource1.CreateSharedHandle(System.Nullable{SharpDX.Win32.SecurityAttributes},System.Int32,System.String,System.IntPtr@)"/> method to obtain the unique handle to the resource. In this <see cref="M:SharpDX.DXGI.Resource1.CreateSharedHandle(System.Nullable{SharpDX.Win32.SecurityAttributes},System.Int32,System.String,System.IntPtr@)"/> call, you must pass a name for the resource if you want to subsequently call OpenSharedResourceByName to access the resource by name.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device1::OpenSharedResourceByName']/*"/>	
            <unmanaged>HRESULT ID3D11Device1::OpenSharedResourceByName([In] const wchar_t* lpName,[In] unsigned int dwDesiredAccess,[In] const GUID&amp; returnedInterface,[Out] void** ppResource)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.Device1.ImmediateContext1">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Device1::GetImmediateContext1']/*"/>	
            <unmanaged>GetImmediateContext1</unmanaged>	
            <unmanaged>void ID3D11Device1::GetImmediateContext1([Out] ID3D11DeviceContext1** ppImmediateContext)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.DeviceContext1">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1']/*"/>	
            <unmanaged>ID3D11DeviceContext1</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.DeviceContext1"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.CopySubresourceRegion1(SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32,System.Int32,SharpDX.Direct3D11.Resource,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion},System.Int32)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="dstResourceRef"><para>A reference to the destination resource.</para></param>	
            <param name="dstSubresource"><para>Destination subresource index.</para></param>	
            <param name="dstX"><para>The x-coordinate of the upper-left corner of the destination region.</para></param>	
            <param name="dstY"><para>The y-coordinate of the upper-left corner of the destination region. For a 1D subresource, this must be zero.</para></param>	
            <param name="dstZ"><para>The z-coordinate of the upper-left corner of the destination region. For a 1D or 2D subresource, this must be zero.</para></param>	
            <param name="srcResourceRef"><para>A reference to the source resource.</para></param>	
            <param name="srcSubresource"><para>Source subresource index.</para></param>	
            <param name="srcBoxRef"><para>A reference to a 3D box that defines the source subresources that can be copied. If <c>null</c>, the entire source subresource is copied. The box must fit within the source resource.</para></param>	
            <param name="copyFlags"><para>A <see cref="T:SharpDX.Direct3D11.CopyFlags"/>-typed value that specifies how to perform the copy operation. If you specify zero for no copy option, CopySubresourceRegion1 behaves like <see cref="M:SharpDX.Direct3D11.DeviceContext.CopySubresourceRegion_(SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32,System.Int32,SharpDX.Direct3D11.Resource,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion})"/>. For existing display drivers that can't process these flags, the runtime doesn't use them. </para></param>	
            <remarks>	
            The source and destination resources can be identical, and the source and destination regions can overlap each other.  For existing display drivers that don?t support overlapping, the runtime drops the call (that is, the runtime doesn't call the corresponding device driver interface (DDI)).	
            This overlapping support enables additional scroll functionality in a call to <see cref="M:SharpDX.DXGI.SwapChain.Present(System.Int32,SharpDX.DXGI.PresentFlags)"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::CopySubresourceRegion1']/*"/>	
            <unmanaged>void ID3D11DeviceContext1::CopySubresourceRegion1([In] ID3D11Resource* pDstResource,[In] unsigned int DstSubresource,[In] unsigned int DstX,[In] unsigned int DstY,[In] unsigned int DstZ,[In] ID3D11Resource* pSrcResource,[In] unsigned int SrcSubresource,[In, Optional] const D3D11_BOX* pSrcBox,[In] unsigned int CopyFlags)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.UpdateSubresource1(SharpDX.Direct3D11.Resource,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion},System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="dstResourceRef"><para>A reference to the destination resource.</para></param>	
            <param name="dstSubresource"><para>A zero-based index that identifies the destination subresource. See D3D11CalcSubresource for more details.</para></param>	
            <param name="dstBoxRef"><para>A reference to a box that defines the portion of the destination subresource to copy the resource data into. Coordinates are in bytes for buffers and in texels for textures. If <c>null</c>, the data is written to the destination subresource with no offset. The dimensions of the source must fit the destination.</para></param>	
            <param name="srcDataRef"><para>A reference to the source data in memory.</para></param>	
            <param name="srcRowPitch"><para>The size of one row of the source data.</para></param>	
            <param name="srcDepthPitch"><para>The size of one depth slice of source data.</para></param>	
            <param name="copyFlags"><para>A <see cref="T:SharpDX.Direct3D11.CopyFlags"/>-typed value that specifies how to perform the update operation. If you specify zero for no update option, UpdateSubresource1 behaves like <see cref="M:SharpDX.Direct3D11.DeviceContext.UpdateSubresource(SharpDX.DataBox,SharpDX.Direct3D11.Resource,System.Int32)"/>. For existing display drivers that can't process these flags, the runtime doesn't use them.</para></param>	
            <remarks>	
            If you call UpdateSubresource1 to update a constant buffer, pass any region, and the driver has not been implemented to Windows Developer Preview, the runtime drops the call (except feature level 9.1, 9.2, and 9.3 where the runtime emulates support).  The runtime also drops the call if you update a constant buffer with a partial region whose extent is not aligned to 16-byte granularity (16 bytes being a full constant). When the runtime drops the call, the runtime doesn't call the corresponding device driver interface (DDI).When you record a call to UpdateSubresource with an offset pDstBox in a software command list, the offset in pDstBox is incorrectly applied to pSrcData when you play back the command list.  The new-for-Windows Developer PreviewUpdateSubresource1 fixes this issue. In a call to UpdateSubresource1, pDstBox does not affect pSrcData.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::UpdateSubresource1']/*"/>	
            <unmanaged>void ID3D11DeviceContext1::UpdateSubresource1([In] ID3D11Resource* pDstResource,[In] unsigned int DstSubresource,[In, Optional] const D3D11_BOX* pDstBox,[In] const void* pSrcData,[In] unsigned int SrcRowPitch,[In] unsigned int SrcDepthPitch,[In] unsigned int CopyFlags)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.DiscardResource(SharpDX.Direct3D11.Resource)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="resourceRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.Resource"/> interface for the resource to discard. The resource must have been created with usage <see cref="F:SharpDX.Direct3D11.ResourceUsage.Default"/> or <see cref="F:SharpDX.Direct3D11.ResourceUsage.Dynamic"/>, otherwise the runtime drops the call to DiscardResource; if the debug layer is enabled, the runtime returns an error message.</para></param>	
            <remarks>	
            DiscardResource informs the graphics processing unit (GPU) that the existing content in the resource that pResource points to is no longer needed.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::DiscardResource']/*"/>	
            <unmanaged>void ID3D11DeviceContext1::DiscardResource([In] ID3D11Resource* pResource)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.DiscardView(SharpDX.Direct3D11.ResourceView)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="resourceViewRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.ResourceView"/> interface for the resource view to discard. The resource that underlies the view must have been created with usage <see cref="F:SharpDX.Direct3D11.ResourceUsage.Default"/> or <see cref="F:SharpDX.Direct3D11.ResourceUsage.Dynamic"/>, otherwise the runtime drops the call to DiscardView; if the debug layer is enabled, the runtime returns an error message.</para></param>	
            <remarks>	
            DiscardView informs the graphics processing unit (GPU) that the existing content in the resource view that pResourceView points to is no longer needed.  The view can be an SRV, RTV, UAV, or DSV.  DiscardView is a variation on the DiscardResource method.  DiscardView allows you to discard a subset of a resource that is in a view (such as a single miplevel).  More importantly, DiscardView provides a convenience because often views are what are being bound and unbound at the pipeline.  Some pipeline bindings do not have views, such as stream output.  In that situation, DiscardResource can do the job for any resource.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::DiscardView']/*"/>	
            <unmanaged>void ID3D11DeviceContext1::DiscardView([In] ID3D11View* pResourceView)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.VSSetConstantBuffers1(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[],System.Int32[],System.Int32[])">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="startSlot"><para>Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</para></param>	
            <param name="numBuffers"><para>Number of buffers to set (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - StartSlot).</para></param>	
            <param name="constantBuffersOut"><para>Array of constant buffers being given to the device.</para></param>	
            <param name="firstConstantRef"><para>A reference to an array that holds the offsets into the buffers that  ppConstantBuffers specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 2 indicates that the start of the associated constant buffer is 32 bytes into the constant buffer.</para></param>	
            <param name="numConstantsRef"><para>A reference to an array that holds the numbers of constants in the buffers that  ppConstantBuffers specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the pFirstConstant array.</para></param>	
            <remarks>	
            The runtime drops the call to VSSetConstantBuffers1 if the number of constants to which pNumConstants points is larger than the maximum constant buffer size that is supported by shaders (4096 constants ? 4*32-bit components each).  The values in the elements of the pFirstConstant and pFirstConstant + pNumConstants arrays can exceed the length of each buffer; from the shader's point of view, the constant buffer is the intersection of the actual memory allocation for the buffer and the window [value in an element of pFirstConstant, value in an element of pFirstConstant + value in an element of pNumConstants]. The runtime also drops the call to VSSetConstantBuffers1 on existing drivers that do not support this offsetting.The runtime will emulate this feature for feature level 9.1, 9.2, and 9.3; therefore, this feature is supported for feature level 9.1, 9.2, and 9.3.  This feature is always available on new drivers for feature level 10 and higher.From the shader?s point of view, element [0] in the constant buffers array is the constant at pFirstConstant.Out of bounds access to the constant buffers from the shader to the range that is defined by pFirstConstant and pNumConstants returns 0.If pFirstConstant and pNumConstants arrays are <c>null</c>, you get the same result as if you were binding the entire buffer into view.  You get this same result if you call the VSSetConstantBuffers method. If the buffer is larger than the maximum constant buffer size that is supported by shaders (4096 elements), the shader can access only the first 4096 constants.If either pFirstConstant or pNumConstants is <c>null</c>, the other parameter must also be <c>null</c>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::VSSetConstantBuffers1']/*"/>	
            <unmanaged>void ID3D11DeviceContext1::VSSetConstantBuffers1([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const ID3D11Buffer** ppConstantBuffers,[In, Buffer, Optional] const unsigned int* pFirstConstant,[In, Buffer, Optional] const unsigned int* pNumConstants)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.VSSetConstantBuffers1(System.Int32,System.Int32,SharpDX.ComArray{SharpDX.Direct3D11.Buffer},System.Int32[],System.Int32[])">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="startSlot"><para>Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</para></param>	
            <param name="numBuffers"><para>Number of buffers to set (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - StartSlot).</para></param>	
            <param name="constantBuffersOut"><para>Array of constant buffers being given to the device.</para></param>	
            <param name="firstConstantRef"><para>A reference to an array that holds the offsets into the buffers that  ppConstantBuffers specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 2 indicates that the start of the associated constant buffer is 32 bytes into the constant buffer.</para></param>	
            <param name="numConstantsRef"><para>A reference to an array that holds the numbers of constants in the buffers that  ppConstantBuffers specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the pFirstConstant array.</para></param>	
            <remarks>	
            The runtime drops the call to VSSetConstantBuffers1 if the number of constants to which pNumConstants points is larger than the maximum constant buffer size that is supported by shaders (4096 constants ? 4*32-bit components each).  The values in the elements of the pFirstConstant and pFirstConstant + pNumConstants arrays can exceed the length of each buffer; from the shader's point of view, the constant buffer is the intersection of the actual memory allocation for the buffer and the window [value in an element of pFirstConstant, value in an element of pFirstConstant + value in an element of pNumConstants]. The runtime also drops the call to VSSetConstantBuffers1 on existing drivers that do not support this offsetting.The runtime will emulate this feature for feature level 9.1, 9.2, and 9.3; therefore, this feature is supported for feature level 9.1, 9.2, and 9.3.  This feature is always available on new drivers for feature level 10 and higher.From the shader?s point of view, element [0] in the constant buffers array is the constant at pFirstConstant.Out of bounds access to the constant buffers from the shader to the range that is defined by pFirstConstant and pNumConstants returns 0.If pFirstConstant and pNumConstants arrays are <c>null</c>, you get the same result as if you were binding the entire buffer into view.  You get this same result if you call the VSSetConstantBuffers method. If the buffer is larger than the maximum constant buffer size that is supported by shaders (4096 elements), the shader can access only the first 4096 constants.If either pFirstConstant or pNumConstants is <c>null</c>, the other parameter must also be <c>null</c>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::VSSetConstantBuffers1']/*"/>	
            <unmanaged>void ID3D11DeviceContext1::VSSetConstantBuffers1([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const ID3D11Buffer** ppConstantBuffers,[In, Buffer, Optional] const unsigned int* pFirstConstant,[In, Buffer, Optional] const unsigned int* pNumConstants)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.HSSetConstantBuffers1(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[],System.Int32[],System.Int32[])">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="startSlot">No documentation.</param>	
            <param name="numBuffers">No documentation.</param>	
            <param name="constantBuffersOut">No documentation.</param>	
            <param name="firstConstantRef">No documentation.</param>	
            <param name="numConstantsRef">No documentation.</param>	
            <remarks>	
            The runtime drops the call to HSSetConstantBuffers1 if the numbers of constants to which pNumConstants points is larger than the maximum constant buffer size that is supported by shaders (4096 constants ? 4*32-bit components each).  The values in the elements of the pFirstConstant and pFirstConstant + pNumConstants arrays can exceed the length of each buffer; from the shader's point of view, the constant buffer is the intersection of the actual memory allocation for the buffer and the window [value in an element of pFirstConstant, value in an element of pFirstConstant + value in an element of pNumConstants]. The runtime also drops the call to HSSetConstantBuffers1 on existing drivers that do not support this offsetting.The runtime will emulate this feature for feature level 9.1, 9.2, and 9.3; therefore, this feature is supported for feature level 9.1, 9.2, and 9.3.  This feature is always available on new drivers for feature level 10 and higher.From the shader?s point of view, element [0] in the constant buffers array is the constant at pFirstConstant.Out of bounds access to the constant buffers from the shader to the range that is defined by pFirstConstant and pNumConstants returns 0.If the pFirstConstant and pNumConstants arrays are <c>null</c>, you get the same result as if you were binding the entire buffer into view.  You get this same result if you call the HSSetConstantBuffers method. If the buffer is larger than the maximum constant buffer size that is supported by shaders (4096 elements), the shader can access only the first 4096 constants.If either pFirstConstant or pNumConstants is <c>null</c>, the other parameter must also be <c>null</c>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::HSSetConstantBuffers1']/*"/>	
            <unmanaged>void ID3D11DeviceContext1::HSSetConstantBuffers1([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const ID3D11Buffer** ppConstantBuffers,[In, Buffer, Optional] const unsigned int* pFirstConstant,[In, Buffer, Optional] const unsigned int* pNumConstants)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.HSSetConstantBuffers1(System.Int32,System.Int32,SharpDX.ComArray{SharpDX.Direct3D11.Buffer},System.Int32[],System.Int32[])">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="startSlot">No documentation.</param>	
            <param name="numBuffers">No documentation.</param>	
            <param name="constantBuffersOut">No documentation.</param>	
            <param name="firstConstantRef">No documentation.</param>	
            <param name="numConstantsRef">No documentation.</param>	
            <remarks>	
            The runtime drops the call to HSSetConstantBuffers1 if the numbers of constants to which pNumConstants points is larger than the maximum constant buffer size that is supported by shaders (4096 constants ? 4*32-bit components each).  The values in the elements of the pFirstConstant and pFirstConstant + pNumConstants arrays can exceed the length of each buffer; from the shader's point of view, the constant buffer is the intersection of the actual memory allocation for the buffer and the window [value in an element of pFirstConstant, value in an element of pFirstConstant + value in an element of pNumConstants]. The runtime also drops the call to HSSetConstantBuffers1 on existing drivers that do not support this offsetting.The runtime will emulate this feature for feature level 9.1, 9.2, and 9.3; therefore, this feature is supported for feature level 9.1, 9.2, and 9.3.  This feature is always available on new drivers for feature level 10 and higher.From the shader?s point of view, element [0] in the constant buffers array is the constant at pFirstConstant.Out of bounds access to the constant buffers from the shader to the range that is defined by pFirstConstant and pNumConstants returns 0.If the pFirstConstant and pNumConstants arrays are <c>null</c>, you get the same result as if you were binding the entire buffer into view.  You get this same result if you call the HSSetConstantBuffers method. If the buffer is larger than the maximum constant buffer size that is supported by shaders (4096 elements), the shader can access only the first 4096 constants.If either pFirstConstant or pNumConstants is <c>null</c>, the other parameter must also be <c>null</c>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::HSSetConstantBuffers1']/*"/>	
            <unmanaged>void ID3D11DeviceContext1::HSSetConstantBuffers1([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const ID3D11Buffer** ppConstantBuffers,[In, Buffer, Optional] const unsigned int* pFirstConstant,[In, Buffer, Optional] const unsigned int* pNumConstants)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.DSSetConstantBuffers1(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[],System.Int32[],System.Int32[])">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="startSlot"><para>Index into the zero-based array to begin setting constant buffers to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</para></param>	
            <param name="numBuffers"><para>Number of buffers to set (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - StartSlot).</para></param>	
            <param name="constantBuffersOut"><para>Array of constant buffers being given to the device.</para></param>	
            <param name="firstConstantRef"><para>A reference to an array that holds the offsets into the buffers that  ppConstantBuffers specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 2 indicates that the start of the associated constant buffer is 32 bytes into the constant buffer.</para></param>	
            <param name="numConstantsRef"><para>A reference to an array that holds the numbers of constants in the buffers that  ppConstantBuffers specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the pFirstConstant array.</para></param>	
            <remarks>	
            The runtime drops the call to DSSetConstantBuffers1 if the number of constants to which pNumConstants points is larger than the maximum constant buffer size that is supported by shaders (4096 constants ? 4*32-bit components each).  The values in the elements of the pFirstConstant and pFirstConstant + pNumConstants arrays can exceed the length of each buffer; from the shader's point of view, the constant buffer is the intersection of the actual memory allocation for the buffer and the window [value in an element of pFirstConstant, value in an element of pFirstConstant + value in an element of pNumConstants]. The runtime also drops the call to DSSetConstantBuffers1 on existing drivers that do not support this offsetting.The runtime will emulate this feature for feature level 9.1, 9.2, and 9.3; therefore, this feature is supported for feature level 9.1, 9.2, and 9.3.  This feature is always available on new drivers for feature level 10 and higher.From the shader?s point of view, element [0] in the constant buffers array is the constant at pFirstConstant.Out of bounds access to the constant buffers from the shader to the range that is defined by pFirstConstant and pNumConstants returns 0.If pFirstConstant and pNumConstants arrays are <c>null</c>, you get the same result as if you were binding the entire buffer into view.  You get this same result if you call the DSSetConstantBuffers method. If the buffer is larger than the maximum constant buffer size that is supported by shaders (4096 elements), the shader can access only the first 4096 constants.If either pFirstConstant or pNumConstants is <c>null</c>, the other parameter must also be <c>null</c>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::DSSetConstantBuffers1']/*"/>	
            <unmanaged>void ID3D11DeviceContext1::DSSetConstantBuffers1([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const ID3D11Buffer** ppConstantBuffers,[In, Buffer, Optional] const unsigned int* pFirstConstant,[In, Buffer, Optional] const unsigned int* pNumConstants)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.DSSetConstantBuffers1(System.Int32,System.Int32,SharpDX.ComArray{SharpDX.Direct3D11.Buffer},System.Int32[],System.Int32[])">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="startSlot"><para>Index into the zero-based array to begin setting constant buffers to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</para></param>	
            <param name="numBuffers"><para>Number of buffers to set (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - StartSlot).</para></param>	
            <param name="constantBuffersOut"><para>Array of constant buffers being given to the device.</para></param>	
            <param name="firstConstantRef"><para>A reference to an array that holds the offsets into the buffers that  ppConstantBuffers specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 2 indicates that the start of the associated constant buffer is 32 bytes into the constant buffer.</para></param>	
            <param name="numConstantsRef"><para>A reference to an array that holds the numbers of constants in the buffers that  ppConstantBuffers specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the pFirstConstant array.</para></param>	
            <remarks>	
            The runtime drops the call to DSSetConstantBuffers1 if the number of constants to which pNumConstants points is larger than the maximum constant buffer size that is supported by shaders (4096 constants ? 4*32-bit components each).  The values in the elements of the pFirstConstant and pFirstConstant + pNumConstants arrays can exceed the length of each buffer; from the shader's point of view, the constant buffer is the intersection of the actual memory allocation for the buffer and the window [value in an element of pFirstConstant, value in an element of pFirstConstant + value in an element of pNumConstants]. The runtime also drops the call to DSSetConstantBuffers1 on existing drivers that do not support this offsetting.The runtime will emulate this feature for feature level 9.1, 9.2, and 9.3; therefore, this feature is supported for feature level 9.1, 9.2, and 9.3.  This feature is always available on new drivers for feature level 10 and higher.From the shader?s point of view, element [0] in the constant buffers array is the constant at pFirstConstant.Out of bounds access to the constant buffers from the shader to the range that is defined by pFirstConstant and pNumConstants returns 0.If pFirstConstant and pNumConstants arrays are <c>null</c>, you get the same result as if you were binding the entire buffer into view.  You get this same result if you call the DSSetConstantBuffers method. If the buffer is larger than the maximum constant buffer size that is supported by shaders (4096 elements), the shader can access only the first 4096 constants.If either pFirstConstant or pNumConstants is <c>null</c>, the other parameter must also be <c>null</c>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::DSSetConstantBuffers1']/*"/>	
            <unmanaged>void ID3D11DeviceContext1::DSSetConstantBuffers1([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const ID3D11Buffer** ppConstantBuffers,[In, Buffer, Optional] const unsigned int* pFirstConstant,[In, Buffer, Optional] const unsigned int* pNumConstants)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.GSSetConstantBuffers1(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[],System.Int32[],System.Int32[])">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="startSlot"><para>Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</para></param>	
            <param name="numBuffers"><para>Number of buffers to set (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - StartSlot).</para></param>	
            <param name="constantBuffersOut"><para>Array of constant buffers (see <see cref="T:SharpDX.Direct3D11.Buffer"/>) being given to the device.</para></param>	
            <param name="firstConstantRef"><para>A reference to an array that holds the offsets into the buffers that  ppConstantBuffers specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 2 indicates that the start of the associated constant buffer is 32 bytes into the constant buffer.</para></param>	
            <param name="numConstantsRef"><para>A reference to an array that holds the numbers of constants in the buffers that  ppConstantBuffers specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the pFirstConstant array.</para></param>	
            <remarks>	
            The runtime drops the call to GSSetConstantBuffers1 if the numbers of constants to which pNumConstants points is larger than the maximum constant buffer size that is supported by shaders (4096 constants ? 4*32-bit components each).  The values in the elements of the pFirstConstant and pFirstConstant + pNumConstants arrays can exceed the length of each buffer; from the shader's point of view, the constant buffer is the intersection of the actual memory allocation for the buffer and the window [value in an element of pFirstConstant, value in an element of pFirstConstant + value in an element of pNumConstants]. The runtime also drops the call to GSSetConstantBuffers1 on existing drivers that do not support this offsetting.The runtime will emulate this feature for feature level 9.1, 9.2, and 9.3; therefore, this feature is supported for feature level 9.1, 9.2, and 9.3.  This feature is always available on new drivers for feature level 10 and higher.From the shader?s point of view, element [0] in the constant buffers array is the constant at pFirstConstant.Out of bounds access to the constant buffers from the shader to the range that is defined by pFirstConstant and pNumConstants returns 0.If pFirstConstant and pNumConstants arrays are <c>null</c>, you get the same result as if you were binding the entire buffer into view.  You get this same result if you call the GSSetConstantBuffers method. If the buffer is larger than the maximum constant buffer size that is supported by shaders (4096 elements), the shader can access only the first 4096 constants.If either pFirstConstant or pNumConstants is <c>null</c>, the other parameter must also be <c>null</c>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::GSSetConstantBuffers1']/*"/>	
            <unmanaged>void ID3D11DeviceContext1::GSSetConstantBuffers1([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const ID3D11Buffer** ppConstantBuffers,[In, Buffer, Optional] const unsigned int* pFirstConstant,[In, Buffer, Optional] const unsigned int* pNumConstants)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.GSSetConstantBuffers1(System.Int32,System.Int32,SharpDX.ComArray{SharpDX.Direct3D11.Buffer},System.Int32[],System.Int32[])">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="startSlot"><para>Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</para></param>	
            <param name="numBuffers"><para>Number of buffers to set (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - StartSlot).</para></param>	
            <param name="constantBuffersOut"><para>Array of constant buffers (see <see cref="T:SharpDX.Direct3D11.Buffer"/>) being given to the device.</para></param>	
            <param name="firstConstantRef"><para>A reference to an array that holds the offsets into the buffers that  ppConstantBuffers specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 2 indicates that the start of the associated constant buffer is 32 bytes into the constant buffer.</para></param>	
            <param name="numConstantsRef"><para>A reference to an array that holds the numbers of constants in the buffers that  ppConstantBuffers specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the pFirstConstant array.</para></param>	
            <remarks>	
            The runtime drops the call to GSSetConstantBuffers1 if the numbers of constants to which pNumConstants points is larger than the maximum constant buffer size that is supported by shaders (4096 constants ? 4*32-bit components each).  The values in the elements of the pFirstConstant and pFirstConstant + pNumConstants arrays can exceed the length of each buffer; from the shader's point of view, the constant buffer is the intersection of the actual memory allocation for the buffer and the window [value in an element of pFirstConstant, value in an element of pFirstConstant + value in an element of pNumConstants]. The runtime also drops the call to GSSetConstantBuffers1 on existing drivers that do not support this offsetting.The runtime will emulate this feature for feature level 9.1, 9.2, and 9.3; therefore, this feature is supported for feature level 9.1, 9.2, and 9.3.  This feature is always available on new drivers for feature level 10 and higher.From the shader?s point of view, element [0] in the constant buffers array is the constant at pFirstConstant.Out of bounds access to the constant buffers from the shader to the range that is defined by pFirstConstant and pNumConstants returns 0.If pFirstConstant and pNumConstants arrays are <c>null</c>, you get the same result as if you were binding the entire buffer into view.  You get this same result if you call the GSSetConstantBuffers method. If the buffer is larger than the maximum constant buffer size that is supported by shaders (4096 elements), the shader can access only the first 4096 constants.If either pFirstConstant or pNumConstants is <c>null</c>, the other parameter must also be <c>null</c>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::GSSetConstantBuffers1']/*"/>	
            <unmanaged>void ID3D11DeviceContext1::GSSetConstantBuffers1([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const ID3D11Buffer** ppConstantBuffers,[In, Buffer, Optional] const unsigned int* pFirstConstant,[In, Buffer, Optional] const unsigned int* pNumConstants)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.PSSetConstantBuffers1(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[],System.Int32[],System.Int32[])">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="startSlot"><para>Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</para></param>	
            <param name="numBuffers"><para>Number of buffers to set (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - StartSlot).</para></param>	
            <param name="constantBuffersOut"><para>Array of constant buffers (see <see cref="T:SharpDX.Direct3D11.Buffer"/>) being given to the device.</para></param>	
            <param name="firstConstantRef"><para>A reference to an array that holds the offsets into the buffers that  ppConstantBuffers specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 2 indicates that the start of the associated constant buffer is 32 bytes into the constant buffer.</para></param>	
            <param name="numConstantsRef"><para>A reference to an array that holds the numbers of constants in the buffers that  ppConstantBuffers specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the pFirstConstant array.</para></param>	
            <remarks>	
            The runtime drops the call to PSSetConstantBuffers1 if the numbers of constants to which pNumConstants points is larger than the maximum constant buffer size that is supported by shaders (4096 constants ? 4*32-bit components each).  The values in the elements of the pFirstConstant and pFirstConstant + pNumConstants arrays can exceed the length of each buffer; from the shader's point of view, the constant buffer is the intersection of the actual memory allocation for the buffer and the window [value in an element of pFirstConstant, value in an element of pFirstConstant + value in an element of pNumConstants]. The runtime also drops the call to PSSetConstantBuffers1 on existing drivers that do not support this offsetting.The runtime will emulate this feature for feature level 9.1, 9.2, and 9.3; therefore, this feature is supported for feature level 9.1, 9.2, and 9.3.  This feature is always available on new drivers for feature level 10 and higher.From the shader?s point of view, element [0] in the constant buffers array is the constant at pFirstConstant.Out of bounds access to the constant buffers from the shader to the range that is defined by pFirstConstant and pNumConstants returns 0.If pFirstConstant and pNumConstants arrays are <c>null</c>, you get the same result as if you were binding the entire buffer into view.  You get this same result if you call the PSSetConstantBuffers method. If the buffer is larger than the maximum constant buffer size that is supported by shaders (4096 elements), the shader can access only the first 4096 constants.If either pFirstConstant or pNumConstants is <c>null</c>, the other parameter must also be <c>null</c>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::PSSetConstantBuffers1']/*"/>	
            <unmanaged>void ID3D11DeviceContext1::PSSetConstantBuffers1([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const ID3D11Buffer** ppConstantBuffers,[In, Buffer, Optional] const unsigned int* pFirstConstant,[In, Buffer, Optional] const unsigned int* pNumConstants)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.PSSetConstantBuffers1(System.Int32,System.Int32,SharpDX.ComArray{SharpDX.Direct3D11.Buffer},System.Int32[],System.Int32[])">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="startSlot"><para>Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</para></param>	
            <param name="numBuffers"><para>Number of buffers to set (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - StartSlot).</para></param>	
            <param name="constantBuffersOut"><para>Array of constant buffers (see <see cref="T:SharpDX.Direct3D11.Buffer"/>) being given to the device.</para></param>	
            <param name="firstConstantRef"><para>A reference to an array that holds the offsets into the buffers that  ppConstantBuffers specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 2 indicates that the start of the associated constant buffer is 32 bytes into the constant buffer.</para></param>	
            <param name="numConstantsRef"><para>A reference to an array that holds the numbers of constants in the buffers that  ppConstantBuffers specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the pFirstConstant array.</para></param>	
            <remarks>	
            The runtime drops the call to PSSetConstantBuffers1 if the numbers of constants to which pNumConstants points is larger than the maximum constant buffer size that is supported by shaders (4096 constants ? 4*32-bit components each).  The values in the elements of the pFirstConstant and pFirstConstant + pNumConstants arrays can exceed the length of each buffer; from the shader's point of view, the constant buffer is the intersection of the actual memory allocation for the buffer and the window [value in an element of pFirstConstant, value in an element of pFirstConstant + value in an element of pNumConstants]. The runtime also drops the call to PSSetConstantBuffers1 on existing drivers that do not support this offsetting.The runtime will emulate this feature for feature level 9.1, 9.2, and 9.3; therefore, this feature is supported for feature level 9.1, 9.2, and 9.3.  This feature is always available on new drivers for feature level 10 and higher.From the shader?s point of view, element [0] in the constant buffers array is the constant at pFirstConstant.Out of bounds access to the constant buffers from the shader to the range that is defined by pFirstConstant and pNumConstants returns 0.If pFirstConstant and pNumConstants arrays are <c>null</c>, you get the same result as if you were binding the entire buffer into view.  You get this same result if you call the PSSetConstantBuffers method. If the buffer is larger than the maximum constant buffer size that is supported by shaders (4096 elements), the shader can access only the first 4096 constants.If either pFirstConstant or pNumConstants is <c>null</c>, the other parameter must also be <c>null</c>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::PSSetConstantBuffers1']/*"/>	
            <unmanaged>void ID3D11DeviceContext1::PSSetConstantBuffers1([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const ID3D11Buffer** ppConstantBuffers,[In, Buffer, Optional] const unsigned int* pFirstConstant,[In, Buffer, Optional] const unsigned int* pNumConstants)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.CSSetConstantBuffers1(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[],System.Int32[],System.Int32[])">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="startSlot"><para>Index into the zero-based array to begin setting constant buffers to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</para></param>	
            <param name="numBuffers"><para>Number of buffers to set (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - StartSlot).</para></param>	
            <param name="constantBuffersOut"><para>Array of constant buffers (see <see cref="T:SharpDX.Direct3D11.Buffer"/>) being given to the device.</para></param>	
            <param name="firstConstantRef"><para>A reference to an array that holds the offsets into the buffers that  ppConstantBuffers specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 2 indicates that the start of the associated constant buffer is 32 bytes into the constant buffer.</para></param>	
            <param name="numConstantsRef"><para>A reference to an array that holds the numbers of constants in the buffers that  ppConstantBuffers specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the pFirstConstant array.</para></param>	
            <remarks>	
            The runtime drops the call to CSSetConstantBuffers1 if the number of constants to which pNumConstants points is larger than the maximum constant buffer size that is supported by shaders (4096 constants ? 4*32-bit components each).  The values in the elements of the pFirstConstant and pFirstConstant + pNumConstants arrays can exceed the length of each buffer; from the shader's point of view, the constant buffer is the intersection of the actual memory allocation for the buffer and the window [value in an element of pFirstConstant, value in an element of pFirstConstant + value in an element of pNumConstants]. The runtime also drops the call to CSSetConstantBuffers1 on existing drivers that do not support this offsetting.The runtime will emulate this feature for feature level 9.1, 9.2, and 9.3; therefore, this feature is supported for feature level 9.1, 9.2, and 9.3.  This feature is always available on new drivers for feature level 10 and higher.From the shader?s point of view, element [0] in the constant buffers array is the constant at pFirstConstant.Out of bounds access to the constant buffers from the shader to the range that is defined by pFirstConstant and pNumConstants returns 0.If pFirstConstant and pNumConstants arrays are <c>null</c>, you get the same result as if you were binding the entire buffer into view.  You get this same result if you call the CSSetConstantBuffers method. If the buffer is larger than the maximum constant buffer size that is supported by shaders (4096 elements), the shader can access only the first 4096 constants.If either pFirstConstant or pNumConstants is <c>null</c>, the other parameter must also be <c>null</c>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::CSSetConstantBuffers1']/*"/>	
            <unmanaged>void ID3D11DeviceContext1::CSSetConstantBuffers1([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const ID3D11Buffer** ppConstantBuffers,[In, Buffer, Optional] const unsigned int* pFirstConstant,[In, Buffer, Optional] const unsigned int* pNumConstants)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.CSSetConstantBuffers1(System.Int32,System.Int32,SharpDX.ComArray{SharpDX.Direct3D11.Buffer},System.Int32[],System.Int32[])">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="startSlot"><para>Index into the zero-based array to begin setting constant buffers to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</para></param>	
            <param name="numBuffers"><para>Number of buffers to set (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - StartSlot).</para></param>	
            <param name="constantBuffersOut"><para>Array of constant buffers (see <see cref="T:SharpDX.Direct3D11.Buffer"/>) being given to the device.</para></param>	
            <param name="firstConstantRef"><para>A reference to an array that holds the offsets into the buffers that  ppConstantBuffers specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 2 indicates that the start of the associated constant buffer is 32 bytes into the constant buffer.</para></param>	
            <param name="numConstantsRef"><para>A reference to an array that holds the numbers of constants in the buffers that  ppConstantBuffers specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the pFirstConstant array.</para></param>	
            <remarks>	
            The runtime drops the call to CSSetConstantBuffers1 if the number of constants to which pNumConstants points is larger than the maximum constant buffer size that is supported by shaders (4096 constants ? 4*32-bit components each).  The values in the elements of the pFirstConstant and pFirstConstant + pNumConstants arrays can exceed the length of each buffer; from the shader's point of view, the constant buffer is the intersection of the actual memory allocation for the buffer and the window [value in an element of pFirstConstant, value in an element of pFirstConstant + value in an element of pNumConstants]. The runtime also drops the call to CSSetConstantBuffers1 on existing drivers that do not support this offsetting.The runtime will emulate this feature for feature level 9.1, 9.2, and 9.3; therefore, this feature is supported for feature level 9.1, 9.2, and 9.3.  This feature is always available on new drivers for feature level 10 and higher.From the shader?s point of view, element [0] in the constant buffers array is the constant at pFirstConstant.Out of bounds access to the constant buffers from the shader to the range that is defined by pFirstConstant and pNumConstants returns 0.If pFirstConstant and pNumConstants arrays are <c>null</c>, you get the same result as if you were binding the entire buffer into view.  You get this same result if you call the CSSetConstantBuffers method. If the buffer is larger than the maximum constant buffer size that is supported by shaders (4096 elements), the shader can access only the first 4096 constants.If either pFirstConstant or pNumConstants is <c>null</c>, the other parameter must also be <c>null</c>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::CSSetConstantBuffers1']/*"/>	
            <unmanaged>void ID3D11DeviceContext1::CSSetConstantBuffers1([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const ID3D11Buffer** ppConstantBuffers,[In, Buffer, Optional] const unsigned int* pFirstConstant,[In, Buffer, Optional] const unsigned int* pNumConstants)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.VSGetConstantBuffers1(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[],System.Int32[],System.Int32[])">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="startSlot"><para>Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</para></param>	
            <param name="numBuffers"><para>Number of buffers to retrieve (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - StartSlot).</para></param>	
            <param name="constantBuffersOut"><para>Array of constant buffer interface references to be returned by the method.</para></param>	
            <param name="firstConstantRef"><para>A reference to an array that receives the offsets into the buffers that  ppConstantBuffers specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 2 indicates that the start of the associated constant buffer is 32 bytes into the constant buffer. The runtime sets pFirstConstant to <c>null</c> if the buffers do not have offsets.</para></param>	
            <param name="numConstantsRef"><para>A reference to an array that receives the numbers of constants in the buffers that  ppConstantBuffers specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the pFirstConstant array. The runtime sets pNumConstants to <c>null</c> if it doesn't specify the numbers of constants in each buffer.</para></param>	
            <remarks>	
            If no buffer is bound at a slot, pFirstConstant and pNumConstants are <c>null</c> for that slot.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::VSGetConstantBuffers1']/*"/>	
            <unmanaged>void ID3D11DeviceContext1::VSGetConstantBuffers1([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[Out, Buffer, Optional] ID3D11Buffer** ppConstantBuffers,[Out, Buffer, Optional] unsigned int* pFirstConstant,[Out, Buffer, Optional] unsigned int* pNumConstants)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.HSGetConstantBuffers1(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[],System.Int32[],System.Int32[])">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="startSlot">No documentation.</param>	
            <param name="numBuffers">No documentation.</param>	
            <param name="constantBuffersOut">No documentation.</param>	
            <param name="firstConstantRef">No documentation.</param>	
            <param name="numConstantsRef">No documentation.</param>	
            <remarks>	
            If no buffer is bound at a slot, pFirstConstant and pNumConstants are <c>null</c> for that slot.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::HSGetConstantBuffers1']/*"/>	
            <unmanaged>void ID3D11DeviceContext1::HSGetConstantBuffers1([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[Out, Buffer, Optional] ID3D11Buffer** ppConstantBuffers,[Out, Buffer, Optional] unsigned int* pFirstConstant,[Out, Buffer, Optional] unsigned int* pNumConstants)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.DSGetConstantBuffers1(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[],System.Int32[],System.Int32[])">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="startSlot"><para>Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</para></param>	
            <param name="numBuffers"><para>Number of buffers to retrieve (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - StartSlot).</para></param>	
            <param name="constantBuffersOut"><para>Array of constant buffer interface references to be returned by the method.</para></param>	
            <param name="firstConstantRef"><para>A reference to an array that receives the offsets into the buffers that  ppConstantBuffers specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 2 indicates that the start of the associated constant buffer is 32 bytes into the constant buffer. The runtime sets pFirstConstant to <c>null</c> if the buffers do not have offsets.</para></param>	
            <param name="numConstantsRef"><para>A reference to an array that receives the numbers of constants in the buffers that  ppConstantBuffers specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the pFirstConstant array. The runtime sets pNumConstants to <c>null</c> if it doesn't specify the numbers of constants in each buffer.</para></param>	
            <remarks>	
            If no buffer is bound at a slot, pFirstConstant and pNumConstants are <c>null</c> for that slot.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::DSGetConstantBuffers1']/*"/>	
            <unmanaged>void ID3D11DeviceContext1::DSGetConstantBuffers1([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[Out, Buffer, Optional] ID3D11Buffer** ppConstantBuffers,[Out, Buffer, Optional] unsigned int* pFirstConstant,[Out, Buffer, Optional] unsigned int* pNumConstants)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.GSGetConstantBuffers1(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[],System.Int32[],System.Int32[])">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="startSlot"><para>Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</para></param>	
            <param name="numBuffers"><para>Number of buffers to retrieve (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - StartSlot).</para></param>	
            <param name="constantBuffersOut"><para>Array of constant buffer interface references to be returned by the method.</para></param>	
            <param name="firstConstantRef"><para>A reference to an array that receives the offsets into the buffers that  ppConstantBuffers specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 2 indicates that the start of the associated constant buffer is 32 bytes into the constant buffer. The runtime sets pFirstConstant to <c>null</c> if the buffers do not have offsets.</para></param>	
            <param name="numConstantsRef"><para>A reference to an array that receives the numbers of constants in the buffers that  ppConstantBuffers specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the pFirstConstant array. The runtime sets pNumConstants to <c>null</c> if it doesn't specify the numbers of constants in each buffer.</para></param>	
            <remarks>	
            If no buffer is bound at a slot, pFirstConstant and pNumConstants are <c>null</c> for that slot.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::GSGetConstantBuffers1']/*"/>	
            <unmanaged>void ID3D11DeviceContext1::GSGetConstantBuffers1([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[Out, Buffer, Optional] ID3D11Buffer** ppConstantBuffers,[Out, Buffer, Optional] unsigned int* pFirstConstant,[Out, Buffer, Optional] unsigned int* pNumConstants)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.PSGetConstantBuffers1(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[],System.Int32[],System.Int32[])">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="startSlot"><para>Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</para></param>	
            <param name="numBuffers"><para>Number of buffers to retrieve (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - StartSlot).</para></param>	
            <param name="constantBuffersOut"><para>Array of constant buffer interface references to be returned by the method.</para></param>	
            <param name="firstConstantRef"><para>A reference to an array that receives the offsets into the buffers that  ppConstantBuffers specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 2 indicates that the start of the associated constant buffer is 32 bytes into the constant buffer. The runtime sets pFirstConstant to <c>null</c> if the buffers do not have offsets.</para></param>	
            <param name="numConstantsRef"><para>A reference to an array that receives the numbers of constants in the buffers that  ppConstantBuffers specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the pFirstConstant array. The runtime sets pNumConstants to <c>null</c> if it doesn't specify the numbers of constants in each buffer.</para></param>	
            <remarks>	
            If no buffer is bound at a slot, pFirstConstant and pNumConstants are <c>null</c> for that slot.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::PSGetConstantBuffers1']/*"/>	
            <unmanaged>void ID3D11DeviceContext1::PSGetConstantBuffers1([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[Out, Buffer, Optional] ID3D11Buffer** ppConstantBuffers,[Out, Buffer, Optional] unsigned int* pFirstConstant,[Out, Buffer, Optional] unsigned int* pNumConstants)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.CSGetConstantBuffers1(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[],System.Int32[],System.Int32[])">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="startSlot"><para>Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</para></param>	
            <param name="numBuffers"><para>Number of buffers to retrieve (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - StartSlot).</para></param>	
            <param name="constantBuffersOut"><para>Array of constant buffer interface references to be returned by the method.</para></param>	
            <param name="firstConstantRef"><para>A reference to an array that receives the offsets into the buffers that  ppConstantBuffers specifies. Each offset specifies where, from the shader's point of view, each constant buffer starts.  Each offset is measured in shader constants, which are 16 bytes (4*32-bit components).  Therefore, an offset of 2 indicates that the start of the associated constant buffer is 32 bytes into the constant buffer. The runtime sets pFirstConstant to <c>null</c> if the buffers do not have offsets.</para></param>	
            <param name="numConstantsRef"><para>A reference to an array that receives the numbers of constants in the buffers that  ppConstantBuffers specifies. Each number specifies the number of constants that are contained in the constant buffer that the shader uses. Each number of constants starts from its respective offset that is specified in the pFirstConstant array. The runtime sets pNumConstants to <c>null</c> if it doesn't specify the numbers of constants in each buffer.</para></param>	
            <remarks>	
            If no buffer is bound at a slot, pFirstConstant and pNumConstants are <c>null</c> for that slot.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::CSGetConstantBuffers1']/*"/>	
            <unmanaged>void ID3D11DeviceContext1::CSGetConstantBuffers1([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[Out, Buffer, Optional] ID3D11Buffer** ppConstantBuffers,[Out, Buffer, Optional] unsigned int* pFirstConstant,[Out, Buffer, Optional] unsigned int* pNumConstants)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.SwapDeviceContextState(SharpDX.Direct3D11.ID3DDeviceContextState,SharpDX.Direct3D11.ID3DDeviceContextState@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="stateRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.ID3DDeviceContextState"/> interface for the context state object that was previously created through the <see cref="M:SharpDX.Direct3D11.Device1.CreateDeviceContextState(System.Int32,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,System.Guid,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.ID3DDeviceContextState)"/> method. If SwapDeviceContextState is called with pState set to <c>null</c>, the call has no effect.</para></param>	
            <param name="previousStateOut"><para>A reference to a variable that receives a reference to the <see cref="T:SharpDX.Direct3D11.ID3DDeviceContextState"/> interface for the previously-activated context state object.</para></param>	
            <remarks>	
            SwapDeviceContextState changes device behavior. This device behavior depends on the emulated interface that you passed to the EmulatedInterface parameter of the  <see cref="M:SharpDX.Direct3D11.Device1.CreateDeviceContextState(System.Int32,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,System.Guid,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.ID3DDeviceContextState)"/> method when you created the context state object.SwapDeviceContextState disables the incompatible device interfaces <see cref="!:SharpDX.Direct3D10.Device"/>, <see cref="!:SharpDX.Direct3D10.Device1"/>, <see cref="T:SharpDX.Direct3D11.Device"/>, and <see cref="T:SharpDX.Direct3D11.Device1"/>. When a context state object is active, the runtime disables certain methods on the device and context interfaces. A context state object that is created with __uuidof(<see cref="T:SharpDX.Direct3D11.Device1"/>) or __uuidof(<see cref="T:SharpDX.Direct3D11.Device"/>) turns off most of the Direct3D?10 device interfaces. A context state object that is created with __uuidof(<see cref="!:SharpDX.Direct3D10.Device1"/>) or __uuidof(<see cref="!:SharpDX.Direct3D10.Device"/>) turns off most of the <see cref="T:SharpDX.Direct3D11.DeviceContext"/> methods.	
            For more information about this behavior, see <see cref="M:SharpDX.Direct3D11.Device1.CreateDeviceContextState(System.Int32,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,System.Guid,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.ID3DDeviceContextState)"/>.SwapDeviceContextState activates the context state object specified by pState. This means that the device behaviors that are associated with the context state object's feature level and compatible interface are activated on the Microsoft Direct3D device until the next call to SwapDeviceContextState. In addition, any state that was saved when this context state object was last active is now reactivated, so that the previous state is replaced.SwapDeviceContextState sets ppPreviousState to the most recently activated context state object. The object allows the caller to save and then later restore the previous device state. This behavior is useful in a plug-in architecture such as Direct2D that shares a Direct3D device with its plug-ins. A Direct2D interface can use context state objects to save and restore the application's state.If the caller did not previously call the <see cref="M:SharpDX.Direct3D11.Device1.CreateDeviceContextState(System.Int32,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,System.Guid,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.ID3DDeviceContextState)"/> method to create a previous context state object, SwapDeviceContextState sets ppPreviousState to the default context state object. In either case, usage of SwapDeviceContextState is the same.The feature level that is specified by the application, and that is chosen by the context state object from the acceptable list that the application supplies to <see cref="M:SharpDX.Direct3D11.Device1.CreateDeviceContextState(System.Int32,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,System.Guid,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.ID3DDeviceContextState)"/>, controls the feature level of the immediate context whenever the context state object is active. Because the Direct3D?11 device is free-threaded, the context state objects cannot assert the device's feature level. Instead, the device runs at a feature level that is the maximum of all previously created context state objects' feature levels. This means that the device's feature level can increase dynamically.The feature level of the context state object controls the functionality available from the immediate context. However, to maintain the free-threaded contract of the Direct3D?11 device methods?the resource-creation methods in particular?the upper-bound feature level of all created context state objects controls the set of resources that the device creates.Because the context state object interface is published by the immediate context, the interface requires the same threading model as the immediate context. Specifically, SwapDeviceContextState is single-threaded with respect to the other immediate context methods and with respect to the equivalent methods of <see cref="!:SharpDX.Direct3D10.Device"/>.Crucially, because only one of the Direct3D?10 or Direct3D?11 ref-count behaviors can be available at a time, one of the Direct3D?10 and Direct3D?11 interfaces must break its ref-count contract. To avoid this situation, the activation of a context state object turns off the incompatible version interface. Also, if you call a method of an incompatible version interface, the call silently fails if the method has  return type void, returns an <see cref="T:SharpDX.Result"/> value of E_INVALIDARG, or sets any out parameter to <c>null</c>.When you switch from Direct3D?11 mode to either Direct3D?10 mode or Direct3D?10.1 mode, the binding behavior of the device changes. Specifically, the final release of a resource induces unbind in Direct3D?10 mode or Direct3D?10.1 mode. During final release an application releases all of the resource's references, including indirect references such as the linkage from view to resource, and the linkage from context state object to any of the context state object's bound resources. Any bound resource to which the application has no reference is unbound and destroyed, in order to maintain the Direct3D?10 behavior.SwapDeviceContextState does not affect any state that <see cref="T:SharpDX.Direct3D11.VideoContext"/> sets.If deferred contexts activate context state objects, only one context can use a context state object at a time, a condition that SwapDeviceContextState verifies. SwapDeviceContextState causes a sync across all contexts.  Command lists that are generated by deferred contexts do not hold a reference to context state objects and are not affected by future updates to context state objects.No asynchronous objects are affected by SwapDeviceContextState. For example, if a query is active before a call to SwapDeviceContextState, it is still active after the call.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::SwapDeviceContextState']/*"/>	
            <unmanaged>void ID3D11DeviceContext1::SwapDeviceContextState([In] ID3DDeviceContextState* pState,[Out, Optional] ID3DDeviceContextState** ppPreviousState)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DeviceContext1.ClearView(SharpDX.Direct3D11.ResourceView,System.Single,SharpDX.Rectangle[],System.Int32)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="viewRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.ResourceView"/> interface that represents the resource view to clear.</para></param>	
            <param name="color"><para>A 4-component array that represents the color to use to clear the resource view.</para></param>	
            <param name="rectRef"><para>An array of D3D11_RECT structures for the rectangles in the resource view to clear. If <c>null</c>, ClearView clears the entire surface.</para></param>	
            <param name="numRects"><para>Number of rectangles in the array that the  pRect parameter specifies.</para></param>	
            <remarks>	
            ClearView works only on render-target views (RTVs), unordered-access views (UAVs), or any video view of a Texture2D surface. The runtime drops invalid calls.  ClearView applies the same color value to all array slices in the view. Each rectangle in the pRect array corresponds to each array slice.The runtime converts and clamps color values to the destination format as appropriate per Microsoft Direct3D conversion rules.  For example, if the format of the view is <see cref="F:SharpDX.DXGI.Format.R8G8B8A8_UNorm"/>, the runtime clamps inputs to 0.0f to 1.0f (INF/NaN -&gt; 0).If the format is integer, such as <see cref="F:SharpDX.DXGI.Format.R8G8B8A8_UInt"/>, the runtime interprets inputs as integral floats. Therefore, 235.0f maps to 235 (rounds to zero, out of range/INF values clamp to target range, and NaN to 0).Here are the color mappings:Color[0]: R (or Y for video) Color[1]: G (or U/Cb for video) Color[2]: B (or V/Cr for video) Color[3]: AFor video views with YUV or YCbBr formats, ClearView doesn't convert color values. In situations where the format name doesn?t indicate _UNORM,  _UINT, and so on, ClearView assumes _UINT. Therefore, 235.0f maps to 235 (rounds to zero, out of range/INF values clamp to target range, and NaN to 0).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext1::ClearView']/*"/>	
            <unmanaged>void ID3D11DeviceContext1::ClearView([In] ID3D11View* pView,[In] const float* Color,[In, Buffer, Optional] const RECT* pRect,[In] unsigned int NumRects)</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.DomainShaderStage">
            <summary>	
            The <see cref="T:SharpDX.Direct3D11.DeviceContext"/> interface represents a device context which generates rendering commands.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext']/*"/>	
            <unmanaged>ID3D11DeviceContext</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DomainShaderStage.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.DomainShaderStage"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.DomainShaderStage.SetShaderResources(System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            Bind an array of shader resources to the domain-shader stage.	
            </summary>	
            <param name="startSlot"><para>Index into the device's zero-based array to begin setting shader resources to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - 1).</para></param>	
            <param name="numViews"><para>Number of shader resources to set. Up to a maximum of 128 slots are available for shader resources(ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - StartSlot).</para></param>	
            <param name="shaderResourceViewsOut"><para>Array of shader resource view interfaces to set to the device.</para></param>	
            <remarks>	
            If an overlapping resource view is already bound to an output slot, such as a render target, then the method will fill the destination shader resource slot with <c>null</c>.For information about creating shader-resource views, see <see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/>.The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::DSSetShaderResources']/*"/>	
            <unmanaged>void ID3D11DeviceContext::DSSetShaderResources([In] unsigned int StartSlot,[In] unsigned int NumViews,[In, Buffer, Optional] const void** ppShaderResourceViews)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DomainShaderStage.SetShader(SharpDX.Direct3D11.DomainShader,SharpDX.Direct3D11.ClassInstance[],System.Int32)">
            <summary>	
            Set a domain shader to the device.	
            </summary>	
            <param name="domainShaderRef"><para>Pointer to a domain shader (see <see cref="T:SharpDX.Direct3D11.DomainShader"/>). Passing in <c>null</c> disables the shader for this pipeline stage.</para></param>	
            <param name="classInstancesOut"><para>A reference to an array of class-instance interfaces (see <see cref="T:SharpDX.Direct3D11.ClassInstance"/>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <c>null</c> if the shader does not use any interfaces.</para></param>	
            <param name="numClassInstances"><para>The number of class-instance interfaces in the array.</para></param>	
            <remarks>	
            The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.The maximum number of instances a shader can have is 256.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::DSSetShader']/*"/>	
            <unmanaged>void ID3D11DeviceContext::DSSetShader([In, Optional] ID3D11DomainShader* pDomainShader,[In, Buffer, Optional] const ID3D11ClassInstance** ppClassInstances,[In] unsigned int NumClassInstances)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DomainShaderStage.SetShader(SharpDX.Direct3D11.DomainShader,SharpDX.ComArray{SharpDX.Direct3D11.ClassInstance},System.Int32)">
            <summary>	
            Set a domain shader to the device.	
            </summary>	
            <param name="domainShaderRef"><para>Pointer to a domain shader (see <see cref="T:SharpDX.Direct3D11.DomainShader"/>). Passing in <c>null</c> disables the shader for this pipeline stage.</para></param>	
            <param name="classInstancesOut"><para>A reference to an array of class-instance interfaces (see <see cref="T:SharpDX.Direct3D11.ClassInstance"/>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <c>null</c> if the shader does not use any interfaces.</para></param>	
            <param name="numClassInstances"><para>The number of class-instance interfaces in the array.</para></param>	
            <remarks>	
            The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.The maximum number of instances a shader can have is 256.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::DSSetShader']/*"/>	
            <unmanaged>void ID3D11DeviceContext::DSSetShader([In, Optional] ID3D11DomainShader* pDomainShader,[In, Buffer, Optional] const ID3D11ClassInstance** ppClassInstances,[In] unsigned int NumClassInstances)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DomainShaderStage.SetSamplers(System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            Set an array of sampler states to the domain-shader stage.	
            </summary>	
            <param name="startSlot"><para>Index into the device's zero-based array to begin setting samplers to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - 1).</para></param>	
            <param name="numSamplers"><para>Number of samplers in the array. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - StartSlot).</para></param>	
            <param name="samplersOut"><para>Pointer to an array of sampler-state interfaces (see <see cref="T:SharpDX.Direct3D11.SamplerState"/>). See Remarks.</para></param>	
            <remarks>	
            Any sampler may be set to <c>null</c>; this invokes the default state, which is defined to be the following.<code>	
             //Default sampler state:	
            <see cref="T:SharpDX.Direct3D11.SamplerStateDescription"/> SamplerDesc;	
            SamplerDesc.Filter = <see cref="F:SharpDX.Direct3D11.Filter.MinMagMipLinear"/>;	
            SamplerDesc.AddressU = <see cref="F:SharpDX.Direct3D11.TextureAddressMode.Clamp"/>;	
            SamplerDesc.AddressV = <see cref="F:SharpDX.Direct3D11.TextureAddressMode.Clamp"/>;	
            SamplerDesc.AddressW = <see cref="F:SharpDX.Direct3D11.TextureAddressMode.Clamp"/>;	
            SamplerDesc.MipLODBias = 0;	
            SamplerDesc.MaxAnisotropy = 1;	
            SamplerDesc.ComparisonFunc = <see cref="F:SharpDX.Direct3D11.Comparison.Never"/>;	
            SamplerDesc.BorderColor[0] = 1.0f;	
            SamplerDesc.BorderColor[1] = 1.0f;	
            SamplerDesc.BorderColor[2] = 1.0f;	
            SamplerDesc.BorderColor[3] = 1.0f;	
            SamplerDesc.MinLOD = -FLT_MAX;	
            SamplerDesc.MaxLOD = FLT_MAX; 	
            </code>The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::DSSetSamplers']/*"/>	
            <unmanaged>void ID3D11DeviceContext::DSSetSamplers([In] unsigned int StartSlot,[In] unsigned int NumSamplers,[In, Buffer, Optional] const void** ppSamplers)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DomainShaderStage.SetConstantBuffers(System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            Sets the constant buffers used by the domain-shader stage.	
            </summary>	
            <param name="startSlot"><para>Index into the zero-based array to begin setting constant buffers to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</para></param>	
            <param name="numBuffers"><para>Number of buffers to set (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - StartSlot).</para></param>	
            <param name="constantBuffersOut"><para>Array of constant buffers (see <see cref="T:SharpDX.Direct3D11.Buffer"/>) being given to the device.</para></param>	
            <remarks>	
            The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.The Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, can bind a larger number of <see cref="T:SharpDX.Direct3D11.Buffer"/> resources to the shader than the maximum constant buffer size that is supported by shaders (4096 constants ? 4*32-bit components each).  When you bind such a large buffer, the shader can access only the first 4096 4*32-bit component constants in the buffer, as if 4096 constants is the full size of the buffer.If the application wants the shader to access other parts of the buffer, it must call the DSSetConstantBuffers1 method instead.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::DSSetConstantBuffers']/*"/>	
            <unmanaged>void ID3D11DeviceContext::DSSetConstantBuffers([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const void** ppConstantBuffers)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DomainShaderStage.GetShaderResources(System.Int32,System.Int32,SharpDX.Direct3D11.ShaderResourceView[])">
            <summary>	
            Get the domain-shader resources.	
            </summary>	
            <param name="startSlot"><para>Index into the device's zero-based array to begin getting shader resources from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - 1).</para></param>	
            <param name="numViews"><para>The number of resources to get from the device. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - StartSlot).</para></param>	
            <param name="shaderResourceViewsOut"><para>Array of shader resource view interfaces to be returned by the device.</para></param>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::DSGetShaderResources']/*"/>	
            <unmanaged>void ID3D11DeviceContext::DSGetShaderResources([In] unsigned int StartSlot,[In] unsigned int NumViews,[Out, Buffer, Optional] ID3D11ShaderResourceView** ppShaderResourceViews)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DomainShaderStage.GetShader(SharpDX.Direct3D11.DomainShader@,SharpDX.Direct3D11.ClassInstance[],System.Int32@)">
            <summary>	
            Get the domain shader currently set on the device.	
            </summary>	
            <param name="domainShaderOut"><para>Address of a reference to a domain shader (see <see cref="T:SharpDX.Direct3D11.DomainShader"/>) to be returned by the method.</para></param>	
            <param name="classInstancesOut"><para>Pointer to an array of class instance interfaces (see <see cref="T:SharpDX.Direct3D11.ClassInstance"/>).</para></param>	
            <param name="numClassInstancesRef"><para>The number of class-instance elements in the array.</para></param>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::DSGetShader']/*"/>	
            <unmanaged>void ID3D11DeviceContext::DSGetShader([Out] ID3D11DomainShader** ppDomainShader,[Out, Buffer, Optional] ID3D11ClassInstance** ppClassInstances,[InOut] unsigned int* pNumClassInstances)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DomainShaderStage.GetSamplers(System.Int32,System.Int32,SharpDX.Direct3D11.SamplerState[])">
            <summary>	
            Get an array of sampler state interfaces from the domain-shader stage.	
            </summary>	
            <param name="startSlot"><para>Index into a zero-based array to begin getting samplers from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - 1).</para></param>	
            <param name="numSamplers"><para>Number of samplers to get from a device context. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - StartSlot).</para></param>	
            <param name="samplersOut"><para>Pointer to an array of sampler-state interfaces (see <see cref="T:SharpDX.Direct3D11.SamplerState"/>).</para></param>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::DSGetSamplers']/*"/>	
            <unmanaged>void ID3D11DeviceContext::DSGetSamplers([In] unsigned int StartSlot,[In] unsigned int NumSamplers,[Out, Buffer, Optional] ID3D11SamplerState** ppSamplers)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.DomainShaderStage.GetConstantBuffers(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[])">
            <summary>	
            Get the constant buffers used by the domain-shader stage.	
            </summary>	
            <param name="startSlot"><para>Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</para></param>	
            <param name="numBuffers"><para>Number of buffers to retrieve (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - StartSlot).</para></param>	
            <param name="constantBuffersOut"><para>Array of constant buffer interface references (see <see cref="T:SharpDX.Direct3D11.Buffer"/>) to be returned by the method.</para></param>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::DSGetConstantBuffers']/*"/>	
            <unmanaged>void ID3D11DeviceContext::DSGetConstantBuffers([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[Out, Buffer, Optional] ID3D11Buffer** ppConstantBuffers)</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.GeometryShader">
            <summary>	
            A geometry-shader interface manages an executable program (a geometry shader) that controls the geometry-shader stage.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11GeometryShader']/*"/>	
            <unmanaged>ID3D11GeometryShader</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.GeometryShader.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.GeometryShader"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.GeometryShader.#ctor(SharpDX.Direct3D11.Device,SharpDX.D3DCompiler.ShaderBytecode)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.GeometryShader" /> class.
            </summary>
            <param name = "device">The device used to create the shader.</param>
            <param name = "shaderBytecode">The compiled shader bytecode.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.GeometryShader.#ctor(SharpDX.Direct3D11.Device,SharpDX.D3DCompiler.ShaderBytecode,SharpDX.Direct3D11.ClassLinkage)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.GeometryShader" /> class.
            </summary>
            <param name = "device">The device used to create the shader.</param>
            <param name = "shaderBytecode">The compiled shader bytecode.</param>
            <param name = "linkage">A dynamic class linkage interface.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.GeometryShader.#ctor(SharpDX.Direct3D11.Device,SharpDX.D3DCompiler.ShaderBytecode,SharpDX.Direct3D11.StreamOutputElement[],System.Int32[],System.Int32)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.GeometryShader" /> class.
            </summary>
            <param name = "device">The device used to create the shader.</param>
            <param name = "shaderBytecode">The compiled shader bytecode.</param>
            <param name = "elements">An array of <see cref = "T:SharpDX.Direct3D11.StreamOutputElement" /> instances describing the layout of the output buffers.</param>
            <param name = "bufferedStrides">An array of buffer strides; each stride is the size of an element for that buffer.</param>
            <param name = "rasterizedStream">The index number of the stream to be sent to the rasterizer stage. Set to NoRasterizedStream if no stream is to be rasterized.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.GeometryShader.#ctor(SharpDX.Direct3D11.Device,SharpDX.D3DCompiler.ShaderBytecode,SharpDX.Direct3D11.StreamOutputElement[],System.Int32[],System.Int32,SharpDX.Direct3D11.ClassLinkage)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.GeometryShader" /> class.
            </summary>
            <param name = "device">The device used to create the shader.</param>
            <param name = "shaderBytecode">The compiled shader bytecode.</param>
            <param name = "elements">An array of <see cref = "T:SharpDX.Direct3D11.StreamOutputElement" /> instances describing the layout of the output buffers.</param>
            <param name = "bufferedStrides">An array of buffer strides; each stride is the size of an element for that buffer.</param>
            <param name = "rasterizedStream">The index number of the stream to be sent to the rasterizer stage. Set to NoRasterizedStream if no stream is to be rasterized.</param>
            <param name = "linkage">A dynamic class linkage interface.</param>
        </member>
        <member name="T:SharpDX.Direct3D11.GeometryShaderStage">
            <summary>	
            The <see cref="T:SharpDX.Direct3D11.DeviceContext"/> interface represents a device context which generates rendering commands.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext']/*"/>	
            <unmanaged>ID3D11DeviceContext</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.GeometryShaderStage.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.GeometryShaderStage"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.GeometryShaderStage.SetConstantBuffers(System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            Sets the constant buffers used by the geometry shader pipeline stage.	
            </summary>	
            <param name="startSlot"><para>Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</para></param>	
            <param name="numBuffers"><para>Number of buffers to set (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - StartSlot).</para></param>	
            <param name="constantBuffersOut"><para>Array of constant buffers (see <see cref="T:SharpDX.Direct3D11.Buffer"/>) being given to the device.</para></param>	
            <remarks>	
            The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.You can't use the <see cref="T:SharpDX.D3DCompiler.ConstantBuffer"/> interface to get information about what is currently bound to the pipeline in the device context. But you can use <see cref="T:SharpDX.D3DCompiler.ConstantBuffer"/> to get information from a compiled shader. For example, you can use <see cref="T:SharpDX.D3DCompiler.ConstantBuffer"/> and <see cref="T:SharpDX.D3DCompiler.ShaderReflectionVariable"/> to determine the slot in which a geometry shader expects a constant buffer. You can then pass this slot number to GSSetConstantBuffers to set the constant buffer. You can call the D3D11Reflect function to retrieve the address of a reference to the <see cref="T:SharpDX.D3DCompiler.ShaderReflection"/> interface and then call <see cref="M:SharpDX.D3DCompiler.ShaderReflection.GetConstantBuffer(System.Int32)"/> to get a reference to <see cref="T:SharpDX.D3DCompiler.ConstantBuffer"/>.The Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, can bind a larger number of <see cref="T:SharpDX.Direct3D11.Buffer"/> resources to the shader than the maximum constant buffer size that is supported by shaders (4096 constants ? 4*32-bit components each).  When you bind such a large buffer, the shader can access only the first 4096 4*32-bit component constants in the buffer, as if 4096 constants is the full size of the buffer.If the application wants the shader to access other parts of the buffer, it must call the GSSetConstantBuffers1 method instead.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::GSSetConstantBuffers']/*"/>	
            <unmanaged>void ID3D11DeviceContext::GSSetConstantBuffers([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const void** ppConstantBuffers)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.GeometryShaderStage.SetShader(SharpDX.Direct3D11.GeometryShader,SharpDX.Direct3D11.ClassInstance[],System.Int32)">
            <summary>	
            Set a geometry shader to the device.	
            </summary>	
            <param name="shaderRef"><para>Pointer to a geometry shader (see <see cref="T:SharpDX.Direct3D11.GeometryShader"/>). Passing in <c>null</c> disables the shader for this pipeline stage.</para></param>	
            <param name="classInstancesOut"><para>A reference to an array of class-instance interfaces (see <see cref="T:SharpDX.Direct3D11.ClassInstance"/>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <c>null</c> if the shader does not use any interfaces.</para></param>	
            <param name="numClassInstances"><para>The number of class-instance interfaces in the array.</para></param>	
            <remarks>	
            The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.The maximum number of instances a shader can have is 256.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::GSSetShader']/*"/>	
            <unmanaged>void ID3D11DeviceContext::GSSetShader([In, Optional] ID3D11GeometryShader* pShader,[In, Buffer, Optional] const ID3D11ClassInstance** ppClassInstances,[In] unsigned int NumClassInstances)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.GeometryShaderStage.SetShader(SharpDX.Direct3D11.GeometryShader,SharpDX.ComArray{SharpDX.Direct3D11.ClassInstance},System.Int32)">
            <summary>	
            Set a geometry shader to the device.	
            </summary>	
            <param name="shaderRef"><para>Pointer to a geometry shader (see <see cref="T:SharpDX.Direct3D11.GeometryShader"/>). Passing in <c>null</c> disables the shader for this pipeline stage.</para></param>	
            <param name="classInstancesOut"><para>A reference to an array of class-instance interfaces (see <see cref="T:SharpDX.Direct3D11.ClassInstance"/>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <c>null</c> if the shader does not use any interfaces.</para></param>	
            <param name="numClassInstances"><para>The number of class-instance interfaces in the array.</para></param>	
            <remarks>	
            The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.The maximum number of instances a shader can have is 256.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::GSSetShader']/*"/>	
            <unmanaged>void ID3D11DeviceContext::GSSetShader([In, Optional] ID3D11GeometryShader* pShader,[In, Buffer, Optional] const ID3D11ClassInstance** ppClassInstances,[In] unsigned int NumClassInstances)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.GeometryShaderStage.SetShaderResources(System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            Bind an array of shader resources to the geometry shader stage.	
            </summary>	
            <param name="startSlot"><para>Index into the device's zero-based array to begin setting shader resources to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - 1).</para></param>	
            <param name="numViews"><para>Number of shader resources to set. Up to a maximum of 128 slots are available for shader resources(ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - StartSlot).</para></param>	
            <param name="shaderResourceViewsOut"><para>Array of shader resource view interfaces to set to the device.</para></param>	
            <remarks>	
            If an overlapping resource view is already bound to an output slot, such as a render target, then the method will fill the destination shader resource slot with <c>null</c>.For information about creating shader-resource views, see <see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/>.The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::GSSetShaderResources']/*"/>	
            <unmanaged>void ID3D11DeviceContext::GSSetShaderResources([In] unsigned int StartSlot,[In] unsigned int NumViews,[In, Buffer, Optional] const void** ppShaderResourceViews)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.GeometryShaderStage.SetSamplers(System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            Set an array of sampler states to the geometry shader pipeline stage.	
            </summary>	
            <param name="startSlot"><para>Index into the device's zero-based array to begin setting samplers to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - 1).</para></param>	
            <param name="numSamplers"><para>Number of samplers in the array. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - StartSlot).</para></param>	
            <param name="samplersOut"><para>Pointer to an array of sampler-state interfaces (see <see cref="T:SharpDX.Direct3D11.SamplerState"/>). See Remarks.</para></param>	
            <remarks>	
            Any sampler may be set to <c>null</c>; this invokes the default state, which is defined to be the following.<code>	
             //Default sampler state:	
            <see cref="T:SharpDX.Direct3D11.SamplerStateDescription"/> SamplerDesc;	
            SamplerDesc.Filter = <see cref="F:SharpDX.Direct3D11.Filter.MinMagMipLinear"/>;	
            SamplerDesc.AddressU = <see cref="F:SharpDX.Direct3D11.TextureAddressMode.Clamp"/>;	
            SamplerDesc.AddressV = <see cref="F:SharpDX.Direct3D11.TextureAddressMode.Clamp"/>;	
            SamplerDesc.AddressW = <see cref="F:SharpDX.Direct3D11.TextureAddressMode.Clamp"/>;	
            SamplerDesc.MipLODBias = 0;	
            SamplerDesc.MaxAnisotropy = 1;	
            SamplerDesc.ComparisonFunc = <see cref="F:SharpDX.Direct3D11.Comparison.Never"/>;	
            SamplerDesc.BorderColor[0] = 1.0f;	
            SamplerDesc.BorderColor[1] = 1.0f;	
            SamplerDesc.BorderColor[2] = 1.0f;	
            SamplerDesc.BorderColor[3] = 1.0f;	
            SamplerDesc.MinLOD = -FLT_MAX;	
            SamplerDesc.MaxLOD = FLT_MAX; 	
            </code>The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::GSSetSamplers']/*"/>	
            <unmanaged>void ID3D11DeviceContext::GSSetSamplers([In] unsigned int StartSlot,[In] unsigned int NumSamplers,[In, Buffer, Optional] const void** ppSamplers)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.GeometryShaderStage.GetConstantBuffers(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[])">
            <summary>	
            Get the constant buffers used by the geometry shader pipeline stage.	
            </summary>	
            <param name="startSlot"><para>Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</para></param>	
            <param name="numBuffers"><para>Number of buffers to retrieve (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - StartSlot).</para></param>	
            <param name="constantBuffersOut"><para>Array of constant buffer interface references (see <see cref="T:SharpDX.Direct3D11.Buffer"/>) to be returned by the method.</para></param>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::GSGetConstantBuffers']/*"/>	
            <unmanaged>void ID3D11DeviceContext::GSGetConstantBuffers([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[Out, Buffer, Optional] ID3D11Buffer** ppConstantBuffers)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.GeometryShaderStage.GetShader(SharpDX.Direct3D11.GeometryShader@,SharpDX.Direct3D11.ClassInstance[],System.Int32@)">
            <summary>	
            Get the geometry shader currently set on the device.	
            </summary>	
            <param name="geometryShaderOut"><para>Address of a reference to a geometry shader (see <see cref="T:SharpDX.Direct3D11.GeometryShader"/>) to be returned by the method.</para></param>	
            <param name="classInstancesOut"><para>Pointer to an array of class instance interfaces (see <see cref="T:SharpDX.Direct3D11.ClassInstance"/>).</para></param>	
            <param name="numClassInstancesRef"><para>The number of class-instance elements in the array.</para></param>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::GSGetShader']/*"/>	
            <unmanaged>void ID3D11DeviceContext::GSGetShader([Out] ID3D11GeometryShader** ppGeometryShader,[Out, Buffer, Optional] ID3D11ClassInstance** ppClassInstances,[InOut] unsigned int* pNumClassInstances)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.GeometryShaderStage.GetShaderResources(System.Int32,System.Int32,SharpDX.Direct3D11.ShaderResourceView[])">
            <summary>	
            Get the geometry shader resources.	
            </summary>	
            <param name="startSlot"><para>Index into the device's zero-based array to begin getting shader resources from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - 1).</para></param>	
            <param name="numViews"><para>The number of resources to get from the device. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - StartSlot).</para></param>	
            <param name="shaderResourceViewsOut"><para>Array of shader resource view interfaces to be returned by the device.</para></param>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::GSGetShaderResources']/*"/>	
            <unmanaged>void ID3D11DeviceContext::GSGetShaderResources([In] unsigned int StartSlot,[In] unsigned int NumViews,[Out, Buffer, Optional] ID3D11ShaderResourceView** ppShaderResourceViews)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.GeometryShaderStage.GetSamplers(System.Int32,System.Int32,SharpDX.Direct3D11.SamplerState[])">
            <summary>	
            Get an array of sampler state interfaces from the geometry shader pipeline stage.	
            </summary>	
            <param name="startSlot"><para>Index into a zero-based array to begin getting samplers from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - 1).</para></param>	
            <param name="numSamplers"><para>Number of samplers to get from a device context. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - StartSlot).</para></param>	
            <param name="samplersOut"><para>Pointer to an array of sampler-state interfaces (see <see cref="T:SharpDX.Direct3D11.SamplerState"/>).</para></param>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::GSGetSamplers']/*"/>	
            <unmanaged>void ID3D11DeviceContext::GSGetSamplers([In] unsigned int StartSlot,[In] unsigned int NumSamplers,[Out, Buffer, Optional] ID3D11SamplerState** ppSamplers)</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.HullShader">
            <summary>	
            A hull-shader interface manages an executable program (a hull shader) that controls the hull-shader stage.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11HullShader']/*"/>	
            <unmanaged>ID3D11HullShader</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.HullShader.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.HullShader"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.HullShader.#ctor(SharpDX.Direct3D11.Device,SharpDX.D3DCompiler.ShaderBytecode)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.HullShader" /> class.
            </summary>
            <param name = "device">The device used to create the shader.</param>
            <param name = "shaderBytecode">The compiled shader bytecode.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.HullShader.#ctor(SharpDX.Direct3D11.Device,SharpDX.D3DCompiler.ShaderBytecode,SharpDX.Direct3D11.ClassLinkage)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.HullShader" /> class.
            </summary>
            <param name = "device">The device used to create the shader.</param>
            <param name = "shaderBytecode">The compiled shader bytecode.</param>
            <param name = "linkage">A dynamic class linkage interface.</param>
        </member>
        <member name="T:SharpDX.Direct3D11.HullShaderStage">
            <summary>	
            The <see cref="T:SharpDX.Direct3D11.DeviceContext"/> interface represents a device context which generates rendering commands.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext']/*"/>	
            <unmanaged>ID3D11DeviceContext</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.HullShaderStage.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.HullShaderStage"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.HullShaderStage.SetShaderResources(System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            Bind an array of shader resources to the hull-shader stage.	
            </summary>	
            <param name="startSlot">No documentation.</param>	
            <param name="numViews">No documentation.</param>	
            <param name="shaderResourceViewsOut">No documentation.</param>	
            <remarks>	
            If an overlapping resource view is already bound to an output slot, such as a render target, then the method will fill the destination shader resource slot with <c>null</c>.For information about creating shader-resource views, see <see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/>.The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::HSSetShaderResources']/*"/>	
            <unmanaged>void ID3D11DeviceContext::HSSetShaderResources([In] unsigned int StartSlot,[In] unsigned int NumViews,[In, Buffer, Optional] const void** ppShaderResourceViews)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.HullShaderStage.SetShader(SharpDX.Direct3D11.HullShader,SharpDX.Direct3D11.ClassInstance[],System.Int32)">
            <summary>	
            Set a hull shader to the device.	
            </summary>	
            <param name="hullShaderRef"><para>Pointer to a hull shader (see <see cref="T:SharpDX.Direct3D11.HullShader"/>). Passing in <c>null</c> disables the shader for this pipeline stage.</para></param>	
            <param name="classInstancesOut"><para>A reference to an array of class-instance interfaces (see <see cref="T:SharpDX.Direct3D11.ClassInstance"/>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <c>null</c> if the shader does not use any interfaces.</para></param>	
            <param name="numClassInstances"><para>The number of class-instance interfaces in the array.</para></param>	
            <remarks>	
            The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.The maximum number of instances a shader can have is 256.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::HSSetShader']/*"/>	
            <unmanaged>void ID3D11DeviceContext::HSSetShader([In, Optional] ID3D11HullShader* pHullShader,[In, Buffer, Optional] const ID3D11ClassInstance** ppClassInstances,[In] unsigned int NumClassInstances)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.HullShaderStage.SetShader(SharpDX.Direct3D11.HullShader,SharpDX.ComArray{SharpDX.Direct3D11.ClassInstance},System.Int32)">
            <summary>	
            Set a hull shader to the device.	
            </summary>	
            <param name="hullShaderRef"><para>Pointer to a hull shader (see <see cref="T:SharpDX.Direct3D11.HullShader"/>). Passing in <c>null</c> disables the shader for this pipeline stage.</para></param>	
            <param name="classInstancesOut"><para>A reference to an array of class-instance interfaces (see <see cref="T:SharpDX.Direct3D11.ClassInstance"/>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <c>null</c> if the shader does not use any interfaces.</para></param>	
            <param name="numClassInstances"><para>The number of class-instance interfaces in the array.</para></param>	
            <remarks>	
            The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.The maximum number of instances a shader can have is 256.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::HSSetShader']/*"/>	
            <unmanaged>void ID3D11DeviceContext::HSSetShader([In, Optional] ID3D11HullShader* pHullShader,[In, Buffer, Optional] const ID3D11ClassInstance** ppClassInstances,[In] unsigned int NumClassInstances)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.HullShaderStage.SetSamplers(System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            Set an array of sampler states to the hull-shader stage.	
            </summary>	
            <param name="startSlot">No documentation.</param>	
            <param name="numSamplers">No documentation.</param>	
            <param name="samplersOut">No documentation.</param>	
            <remarks>	
            Any sampler may be set to <c>null</c>; this invokes the default state, which is defined to be the following.<code>	
             //Default sampler state:	
            <see cref="T:SharpDX.Direct3D11.SamplerStateDescription"/> SamplerDesc;	
            SamplerDesc.Filter = <see cref="F:SharpDX.Direct3D11.Filter.MinMagMipLinear"/>;	
            SamplerDesc.AddressU = <see cref="F:SharpDX.Direct3D11.TextureAddressMode.Clamp"/>;	
            SamplerDesc.AddressV = <see cref="F:SharpDX.Direct3D11.TextureAddressMode.Clamp"/>;	
            SamplerDesc.AddressW = <see cref="F:SharpDX.Direct3D11.TextureAddressMode.Clamp"/>;	
            SamplerDesc.MipLODBias = 0;	
            SamplerDesc.MaxAnisotropy = 1;	
            SamplerDesc.ComparisonFunc = <see cref="F:SharpDX.Direct3D11.Comparison.Never"/>;	
            SamplerDesc.BorderColor[0] = 1.0f;	
            SamplerDesc.BorderColor[1] = 1.0f;	
            SamplerDesc.BorderColor[2] = 1.0f;	
            SamplerDesc.BorderColor[3] = 1.0f;	
            SamplerDesc.MinLOD = -FLT_MAX;	
            SamplerDesc.MaxLOD = FLT_MAX; 	
            </code>The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::HSSetSamplers']/*"/>	
            <unmanaged>void ID3D11DeviceContext::HSSetSamplers([In] unsigned int StartSlot,[In] unsigned int NumSamplers,[In, Buffer, Optional] const void** ppSamplers)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.HullShaderStage.SetConstantBuffers(System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            Set the constant buffers used by the hull-shader stage.	
            </summary>	
            <param name="startSlot">No documentation.</param>	
            <param name="numBuffers">No documentation.</param>	
            <param name="constantBuffersOut">No documentation.</param>	
            <remarks>	
            The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.The Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, can bind a larger number of <see cref="T:SharpDX.Direct3D11.Buffer"/> resources to the shader than the maximum constant buffer size that is supported by shaders (4096 constants ? 4*32-bit components each).  When you bind such a large buffer, the shader can access only the first 4096 4*32-bit component constants in the buffer, as if 4096 constants is the full size of the buffer.If the application wants the shader to access other parts of the buffer, it must call the HSSetConstantBuffers1 method instead.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::HSSetConstantBuffers']/*"/>	
            <unmanaged>void ID3D11DeviceContext::HSSetConstantBuffers([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const void** ppConstantBuffers)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.HullShaderStage.GetShaderResources(System.Int32,System.Int32,SharpDX.Direct3D11.ShaderResourceView[])">
            <summary>	
            Get the hull-shader resources.	
            </summary>	
            <param name="startSlot"><para>Index into the device's zero-based array to begin getting shader resources from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - 1).</para></param>	
            <param name="numViews"><para>The number of resources to get from the device. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - StartSlot).</para></param>	
            <param name="shaderResourceViewsOut"><para>Array of shader resource view interfaces to be returned by the device.</para></param>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::HSGetShaderResources']/*"/>	
            <unmanaged>void ID3D11DeviceContext::HSGetShaderResources([In] unsigned int StartSlot,[In] unsigned int NumViews,[Out, Buffer, Optional] ID3D11ShaderResourceView** ppShaderResourceViews)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.HullShaderStage.GetShader(SharpDX.Direct3D11.HullShader@,SharpDX.Direct3D11.ClassInstance[],System.Int32@)">
            <summary>	
            Get the hull shader currently set on the device.	
            </summary>	
            <param name="hullShaderOut"><para>Address of a reference to a hull shader (see <see cref="T:SharpDX.Direct3D11.HullShader"/>) to be returned by the method.</para></param>	
            <param name="classInstancesOut"><para>Pointer to an array of class instance interfaces (see <see cref="T:SharpDX.Direct3D11.ClassInstance"/>).</para></param>	
            <param name="numClassInstancesRef"><para>The number of class-instance elements in the array.</para></param>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::HSGetShader']/*"/>	
            <unmanaged>void ID3D11DeviceContext::HSGetShader([Out] ID3D11HullShader** ppHullShader,[Out, Buffer, Optional] ID3D11ClassInstance** ppClassInstances,[InOut] unsigned int* pNumClassInstances)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.HullShaderStage.GetSamplers(System.Int32,System.Int32,SharpDX.Direct3D11.SamplerState[])">
            <summary>	
            Get an array of sampler state interfaces from the hull-shader stage.	
            </summary>	
            <param name="startSlot">No documentation.</param>	
            <param name="numSamplers">No documentation.</param>	
            <param name="samplersOut">No documentation.</param>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::HSGetSamplers']/*"/>	
            <unmanaged>void ID3D11DeviceContext::HSGetSamplers([In] unsigned int StartSlot,[In] unsigned int NumSamplers,[Out, Buffer, Optional] ID3D11SamplerState** ppSamplers)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.HullShaderStage.GetConstantBuffers(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[])">
            <summary>	
            Get the constant buffers used by the hull-shader stage.	
            </summary>	
            <param name="startSlot">No documentation.</param>	
            <param name="numBuffers">No documentation.</param>	
            <param name="constantBuffersOut">No documentation.</param>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::HSGetConstantBuffers']/*"/>	
            <unmanaged>void ID3D11DeviceContext::HSGetConstantBuffers([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[Out, Buffer, Optional] ID3D11Buffer** ppConstantBuffers)</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.ID3DDeviceContextState">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3DDeviceContextState']/*"/>	
            <unmanaged>ID3DDeviceContextState</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.ID3DDeviceContextState.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.ID3DDeviceContextState"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="T:SharpDX.Direct3D11.ID3DUserDefinedAnnotation">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3DUserDefinedAnnotation']/*"/>	
            <unmanaged>ID3DUserDefinedAnnotation</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.ID3DUserDefinedAnnotation.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.ID3DUserDefinedAnnotation"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.ID3DUserDefinedAnnotation.BeginEvent(System.String)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="name"><para>A <c>null</c>-terminated UNICODE string that contains the name of the event. The name is not relevant to the operating system. You can choose a name that is meaningful when the calling application is running under the Direct3D profiling tool.A <c>null</c> reference produces undefined results.</para></param>	
            <returns>Returns the number of previous calls to BeginEvent that have not yet been finalized by calls to the <see cref="M:SharpDX.Direct3D11.ID3DUserDefinedAnnotation.EndEvent"/> method.The return value is ?1 if the calling application is not running under a Direct3D profiling tool.</returns>	
            <remarks>	
            You call the EndEvent method to mark the end of the section of event code.A user can visualize the event when the calling application is running under an enabled Direct3D profiling tool such as Microsoft Visual Studio 11 Ultimate Developer Preview.BeginEvent has no effect if the calling application is not running under an enabled Direct3D profiling tool.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3DUserDefinedAnnotation::BeginEvent']/*"/>	
            <unmanaged>int ID3DUserDefinedAnnotation::BeginEvent([In] const wchar_t* Name)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.ID3DUserDefinedAnnotation.EndEvent">
            <summary>	
            No documentation.	
            </summary>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3DUserDefinedAnnotation::EndEvent']/*"/>	
            <unmanaged>int ID3DUserDefinedAnnotation::EndEvent()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.ID3DUserDefinedAnnotation.SetMarker(System.String)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="name"><para>A <c>null</c>-terminated UNICODE string that contains the name of the marker. The name is not relevant to the operating system. You can choose a name that is meaningful when the calling application is running under the Direct3D profiling tool.A <c>null</c> reference produces undefined results.</para></param>	
            <remarks>	
            A user can visualize the marker when the calling application is running under an enabled Direct3D profiling tool such as Microsoft Visual Studio 11 Ultimate Developer Preview.SetMarker has no effect if the calling application is not running under an enabled Direct3D profiling tool.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3DUserDefinedAnnotation::SetMarker']/*"/>	
            <unmanaged>void ID3DUserDefinedAnnotation::SetMarker([In] const wchar_t* Name)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.ID3DUserDefinedAnnotation.GetStatus">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <returns>The return value is nonzero if the calling application is running under a Direct3D profiling tool such as Visual Studio 11 Ultimate Developer Preview, and zero otherwise.</returns>	
            <remarks>	
            You can call GetStatus to determine whether your application is running under a Direct3D profiling tool before you make further calls to other methods of the <see cref="T:SharpDX.Direct3D11.ID3DUserDefinedAnnotation"/> interface. For example, the <see cref="M:SharpDX.Direct3D11.ID3DUserDefinedAnnotation.BeginEvent(System.String)"/> and <see cref="M:SharpDX.Direct3D11.ID3DUserDefinedAnnotation.EndEvent"/> methods have no effect if the calling application is not running under an enabled Direct3D profiling tool. Therefore, you do not need to call these methods unless your application is running under a Direct3D profiling tool.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3DUserDefinedAnnotation::GetStatus']/*"/>	
            <unmanaged>BOOL ID3DUserDefinedAnnotation::GetStatus()</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.ID3DUserDefinedAnnotation.Marker">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            A user can visualize the marker when the calling application is running under an enabled Direct3D profiling tool such as Microsoft Visual Studio 11 Ultimate Developer Preview.SetMarker has no effect if the calling application is not running under an enabled Direct3D profiling tool.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3DUserDefinedAnnotation::SetMarker']/*"/>	
            <unmanaged>SetMarker</unmanaged>	
            <unmanaged>void ID3DUserDefinedAnnotation::SetMarker([In] const wchar_t* Name)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.ID3DUserDefinedAnnotation.Status">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            You can call GetStatus to determine whether your application is running under a Direct3D profiling tool before you make further calls to other methods of the <see cref="T:SharpDX.Direct3D11.ID3DUserDefinedAnnotation"/> interface. For example, the <see cref="M:SharpDX.Direct3D11.ID3DUserDefinedAnnotation.BeginEvent(System.String)"/> and <see cref="M:SharpDX.Direct3D11.ID3DUserDefinedAnnotation.EndEvent"/> methods have no effect if the calling application is not running under an enabled Direct3D profiling tool. Therefore, you do not need to call these methods unless your application is running under a Direct3D profiling tool.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3DUserDefinedAnnotation::GetStatus']/*"/>	
            <unmanaged>GetStatus</unmanaged>	
            <unmanaged>BOOL ID3DUserDefinedAnnotation::GetStatus()</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.InputLayout">
            <summary>	
            An input-layout interface holds a definition of how to feed vertex data that is laid out in memory into the input-assembler stage of the graphics pipeline.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11InputLayout']/*"/>	
            <unmanaged>ID3D11InputLayout</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.InputLayout.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.InputLayout"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.InputLayout.#ctor(SharpDX.Direct3D11.Device,SharpDX.D3DCompiler.ShaderBytecode,SharpDX.Direct3D11.InputElement[])">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.InputLayout" /> object to describe the
              input-buffer data for the input-assembler stage.
            </summary>
            <unmanaged>ID3D11Device::CreateInputLayout</unmanaged>
            <param name = "device">The device used to create the layout.</param>
            <param name = "elements">An array of input elements describing the layout of the input data.</param>
            <param name = "shaderBytecode">The compiled shader used to validate the input elements.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.InputLayout.#ctor(SharpDX.Direct3D11.Device,SharpDX.D3DCompiler.ShaderSignature,SharpDX.Direct3D11.InputElement[])">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.InputLayout" /> object to describe the
              input-buffer data for the input-assembler stage.
            </summary>
            <unmanaged>ID3D11Device::CreateInputLayout</unmanaged>
            <param name = "device">The device used to create the layout.</param>
            <param name = "elements">An array of input elements describing the layout of the input data.</param>
            <param name = "shaderSignature">The shader signature used to validate the input elements.</param>
        </member>
        <member name="T:SharpDX.Direct3D11.PixelShader">
            <summary>	
            A pixel-shader interface manages an executable program (a pixel shader) that controls the pixel-shader stage.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11PixelShader']/*"/>	
            <unmanaged>ID3D11PixelShader</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.PixelShader.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.PixelShader"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.PixelShader.#ctor(SharpDX.Direct3D11.Device,SharpDX.D3DCompiler.ShaderBytecode)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.PixelShader" /> class.
            </summary>
            <param name = "device">The device used to create the shader.</param>
            <param name = "shaderBytecode">The compiled shader bytecode.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.PixelShader.#ctor(SharpDX.Direct3D11.Device,SharpDX.D3DCompiler.ShaderBytecode,SharpDX.Direct3D11.ClassLinkage)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.PixelShader" /> class.
            </summary>
            <param name = "device">The device used to create the shader.</param>
            <param name = "shaderBytecode">The compiled shader bytecode.</param>
            <param name = "linkage">A dynamic class linkage interface.</param>
        </member>
        <member name="T:SharpDX.Direct3D11.PixelShaderStage">
            <summary>	
            The <see cref="T:SharpDX.Direct3D11.DeviceContext"/> interface represents a device context which generates rendering commands.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext']/*"/>	
            <unmanaged>ID3D11DeviceContext</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.PixelShaderStage.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.PixelShaderStage"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.PixelShaderStage.SetShaderResources(System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            Bind an array of shader resources to the pixel shader stage.	
            </summary>	
            <param name="startSlot"><para>Index into the device's zero-based array to begin setting shader resources to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - 1).</para></param>	
            <param name="numViews"><para>Number of shader resources to set. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - StartSlot).</para></param>	
            <param name="shaderResourceViewsOut"><para>Array of shader resource view interfaces to set to the device.</para></param>	
            <remarks>	
            If an overlapping resource view is already bound to an output slot, such as a rendertarget, then this API will fill the destination shader resource slot with <c>null</c>.For information about creating shader-resource views, see <see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/>.The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::PSSetShaderResources']/*"/>	
            <unmanaged>void ID3D11DeviceContext::PSSetShaderResources([In] unsigned int StartSlot,[In] unsigned int NumViews,[In, Buffer, Optional] const void** ppShaderResourceViews)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.PixelShaderStage.SetShader(SharpDX.Direct3D11.PixelShader,SharpDX.Direct3D11.ClassInstance[],System.Int32)">
            <summary>	
            Sets a pixel shader to the device.	
            </summary>	
            <param name="pixelShaderRef"><para>Pointer to a pixel shader (see <see cref="T:SharpDX.Direct3D11.PixelShader"/>). Passing in <c>null</c> disables the shader for this pipeline stage.</para></param>	
            <param name="classInstancesOut"><para>A reference to an array of class-instance interfaces (see <see cref="T:SharpDX.Direct3D11.ClassInstance"/>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <c>null</c> if the shader does not use any interfaces.</para></param>	
            <param name="numClassInstances"><para>The number of class-instance interfaces in the array.</para></param>	
            <remarks>	
            The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.The maximum number of instances a shader can have is 256.Set ppClassInstances to <c>null</c> if no interfaces are used in the shader. If it is not <c>null</c>, the number of class instances must match the number of interfaces used in the shader. Furthermore, each interface reference must have a corresponding class instance or the assigned shader will be disabled.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::PSSetShader']/*"/>	
            <unmanaged>void ID3D11DeviceContext::PSSetShader([In, Optional] ID3D11PixelShader* pPixelShader,[In, Buffer, Optional] const ID3D11ClassInstance** ppClassInstances,[In] unsigned int NumClassInstances)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.PixelShaderStage.SetShader(SharpDX.Direct3D11.PixelShader,SharpDX.ComArray{SharpDX.Direct3D11.ClassInstance},System.Int32)">
            <summary>	
            Sets a pixel shader to the device.	
            </summary>	
            <param name="pixelShaderRef"><para>Pointer to a pixel shader (see <see cref="T:SharpDX.Direct3D11.PixelShader"/>). Passing in <c>null</c> disables the shader for this pipeline stage.</para></param>	
            <param name="classInstancesOut"><para>A reference to an array of class-instance interfaces (see <see cref="T:SharpDX.Direct3D11.ClassInstance"/>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <c>null</c> if the shader does not use any interfaces.</para></param>	
            <param name="numClassInstances"><para>The number of class-instance interfaces in the array.</para></param>	
            <remarks>	
            The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.The maximum number of instances a shader can have is 256.Set ppClassInstances to <c>null</c> if no interfaces are used in the shader. If it is not <c>null</c>, the number of class instances must match the number of interfaces used in the shader. Furthermore, each interface reference must have a corresponding class instance or the assigned shader will be disabled.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::PSSetShader']/*"/>	
            <unmanaged>void ID3D11DeviceContext::PSSetShader([In, Optional] ID3D11PixelShader* pPixelShader,[In, Buffer, Optional] const ID3D11ClassInstance** ppClassInstances,[In] unsigned int NumClassInstances)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.PixelShaderStage.SetSamplers(System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            Set an array of sampler states to the pixel shader pipeline stage.	
            </summary>	
            <param name="startSlot"><para>Index into the device's zero-based array to begin setting samplers to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - 1).</para></param>	
            <param name="numSamplers"><para>Number of samplers in the array. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - StartSlot).</para></param>	
            <param name="samplersOut"><para>Pointer to an array of sampler-state interfaces (see <see cref="T:SharpDX.Direct3D11.SamplerState"/>). See Remarks.</para></param>	
            <remarks>	
            Any sampler may be set to <c>null</c>; this invokes the default state, which is defined to be the following.StateDefault Value FilterD3D11_FILTER_MIN_MAG_MIP_LINEAR AddressUD3D11_TEXTURE_ADDRESS_CLAMP AddressVD3D11_TEXTURE_ADDRESS_CLAMP AddressWD3D11_TEXTURE_ADDRESS_CLAMP MipLODBias0 MaxAnisotropy1 ComparisonFuncD3D11_COMPARISON_NEVER BorderColor[0]1.0f BorderColor[1]1.0f BorderColor[2]1.0f BorderColor[3]1.0f MinLOD-FLT_MAX MaxLODFLT_MAX?The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::PSSetSamplers']/*"/>	
            <unmanaged>void ID3D11DeviceContext::PSSetSamplers([In] unsigned int StartSlot,[In] unsigned int NumSamplers,[In, Buffer, Optional] const void** ppSamplers)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.PixelShaderStage.SetConstantBuffers(System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            Sets the constant buffers used by the pixel shader pipeline stage.	
            </summary>	
            <param name="startSlot"><para>Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</para></param>	
            <param name="numBuffers"><para>Number of buffers to set (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - StartSlot).</para></param>	
            <param name="constantBuffersOut"><para>Array of constant buffers (see <see cref="T:SharpDX.Direct3D11.Buffer"/>) being given to the device.</para></param>	
            <remarks>	
            The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.The Direct3D 11.1 runtime, which is available on Windows Developer Preview and later operating systems, can bind a larger number of <see cref="T:SharpDX.Direct3D11.Buffer"/> resources to the shader than the maximum constant buffer size that is supported by shaders (4096 constants ? 4*32-bit components each).  When you bind such a large buffer, the shader can access only the first 4096 4*32-bit component constants in the buffer, as if 4096 constants is the full size of the buffer.If the application wants the shader to access other parts of the buffer, it must call the PSSetConstantBuffers1 method instead.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::PSSetConstantBuffers']/*"/>	
            <unmanaged>void ID3D11DeviceContext::PSSetConstantBuffers([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const void** ppConstantBuffers)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.PixelShaderStage.GetShaderResources(System.Int32,System.Int32,SharpDX.Direct3D11.ShaderResourceView[])">
            <summary>	
            Get the pixel shader resources.	
            </summary>	
            <param name="startSlot"><para>Index into the device's zero-based array to begin getting shader resources from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - 1).</para></param>	
            <param name="numViews"><para>The number of resources to get from the device. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - StartSlot).</para></param>	
            <param name="shaderResourceViewsOut"><para>Array of shader resource view interfaces to be returned by the device.</para></param>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::PSGetShaderResources']/*"/>	
            <unmanaged>void ID3D11DeviceContext::PSGetShaderResources([In] unsigned int StartSlot,[In] unsigned int NumViews,[Out, Buffer, Optional] ID3D11ShaderResourceView** ppShaderResourceViews)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.PixelShaderStage.GetShader(SharpDX.Direct3D11.PixelShader@,SharpDX.Direct3D11.ClassInstance[],System.Int32@)">
            <summary>	
            Get the pixel shader currently set on the device.	
            </summary>	
            <param name="pixelShaderOut"><para>Address of a reference to a pixel shader (see <see cref="T:SharpDX.Direct3D11.PixelShader"/>) to be returned by the method.</para></param>	
            <param name="classInstancesOut"><para>Pointer to an array of class instance interfaces (see <see cref="T:SharpDX.Direct3D11.ClassInstance"/>).</para></param>	
            <param name="numClassInstancesRef"><para>The number of class-instance elements in the array.</para></param>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::PSGetShader']/*"/>	
            <unmanaged>void ID3D11DeviceContext::PSGetShader([Out] ID3D11PixelShader** ppPixelShader,[Out, Buffer, Optional] ID3D11ClassInstance** ppClassInstances,[InOut] unsigned int* pNumClassInstances)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.PixelShaderStage.GetSamplers(System.Int32,System.Int32,SharpDX.Direct3D11.SamplerState[])">
            <summary>	
            Get an array of sampler states from the pixel shader pipeline stage.	
            </summary>	
            <param name="startSlot"><para>Index into a zero-based array to begin getting samplers from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - 1).</para></param>	
            <param name="numSamplers"><para>Number of samplers to get from a device context. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - StartSlot).</para></param>	
            <param name="samplersOut"><para>Arry of sampler-state interface references (see <see cref="T:SharpDX.Direct3D11.SamplerState"/>) to be returned by the device.</para></param>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::PSGetSamplers']/*"/>	
            <unmanaged>void ID3D11DeviceContext::PSGetSamplers([In] unsigned int StartSlot,[In] unsigned int NumSamplers,[Out, Buffer, Optional] ID3D11SamplerState** ppSamplers)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.PixelShaderStage.GetConstantBuffers(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[])">
            <summary>	
            Get the constant buffers used by the pixel shader pipeline stage.	
            </summary>	
            <param name="startSlot"><para>Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</para></param>	
            <param name="numBuffers"><para>Number of buffers to retrieve (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - StartSlot).</para></param>	
            <param name="constantBuffersOut"><para>Array of constant buffer interface references (see <see cref="T:SharpDX.Direct3D11.Buffer"/>) to be returned by the method.</para></param>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::PSGetConstantBuffers']/*"/>	
            <unmanaged>void ID3D11DeviceContext::PSGetConstantBuffers([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[Out, Buffer, Optional] ID3D11Buffer** ppConstantBuffers)</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.Predicate">
            <summary>	
            A predicate interface determines whether geometry should be processed depending on the results of a previous draw call.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Predicate']/*"/>	
            <unmanaged>ID3D11Predicate</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.Query">
            <summary>	
            A query interface queries information from the GPU.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Query']/*"/>	
            <unmanaged>ID3D11Query</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Query.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.Query"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.Query.GetDescription(SharpDX.Direct3D11.QueryDescription@)">
            <summary>	
            Get a query description.	
            </summary>	
            <param name="descRef"><para>Pointer to a query description (see <see cref="T:SharpDX.Direct3D11.QueryDescription"/>).</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Query::GetDesc']/*"/>	
            <unmanaged>void ID3D11Query::GetDesc([Out] D3D11_QUERY_DESC* pDesc)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Query.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.QueryDescription)">
            <summary>
              Constructs a new <see cref = "T:SharpDX.Direct3D11.Query" /> based on the specified description.
            </summary>
            <param name = "device">The device with which to associate the state object.</param>
            <param name = "description">The query description.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="P:SharpDX.Direct3D11.Query.Description">
            <summary>	
            Get a query description.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Query::GetDesc']/*"/>	
            <unmanaged>GetDesc</unmanaged>	
            <unmanaged>void ID3D11Query::GetDesc([Out] D3D11_QUERY_DESC* pDesc)</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.Predicate.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.Predicate"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.Predicate.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.QueryDescription)">
            <summary>
              Constructs a new <see cref = "T:SharpDX.Direct3D11.Predicate" /> based on the specified description.
            </summary>
            <param name = "device">The device with which to associate the state object.</param>
            <param name = "description">The query description.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="T:SharpDX.Direct3D11.RasterizerState">
            <summary>	
            The rasterizer-state interface holds a description for rasterizer state that you can bind to the rasterizer stage.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11RasterizerState']/*"/>	
            <unmanaged>ID3D11RasterizerState</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerState.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.RasterizerState"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerState.GetDescription(SharpDX.Direct3D11.RasterizerStateDescription@)">
            <summary>	
            Gets the description for rasterizer state that you used to create the rasterizer-state object.	
            </summary>	
            <param name="descRef"><para>A reference to a <see cref="T:SharpDX.Direct3D11.RasterizerStateDescription"/> structure that receives a description of the rasterizer state.</para></param>	
            <remarks>	
            You use the description for rasterizer state in a call to the <see cref="M:SharpDX.Direct3D11.Device.CreateRasterizerState(SharpDX.Direct3D11.RasterizerStateDescription@,SharpDX.Direct3D11.RasterizerState)"/> method to create the rasterizer-state object.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11RasterizerState::GetDesc']/*"/>	
            <unmanaged>void ID3D11RasterizerState::GetDesc([Out] D3D11_RASTERIZER_DESC* pDesc)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerState.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.RasterizerStateDescription)">
            <summary>
              Constructs a new <see cref = "T:SharpDX.Direct3D11.RasterizerState" /> based on the specified description.
            </summary>
            <param name = "device">The device with which to associate the state object.</param>
            <param name = "description">The state description.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerState.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.RasterizerStateDescription@)">
            <summary>
              Constructs a new <see cref = "T:SharpDX.Direct3D11.RasterizerState" /> based on the specified description.
            </summary>
            <param name = "device">The device with which to associate the state object.</param>
            <param name = "description">The state description.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="P:SharpDX.Direct3D11.RasterizerState.Description">
            <summary>	
            Gets the description for rasterizer state that you used to create the rasterizer-state object.	
            </summary>	
            <remarks>	
            You use the description for rasterizer state in a call to the <see cref="M:SharpDX.Direct3D11.Device.CreateRasterizerState(SharpDX.Direct3D11.RasterizerStateDescription@,SharpDX.Direct3D11.RasterizerState)"/> method to create the rasterizer-state object.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11RasterizerState::GetDesc']/*"/>	
            <unmanaged>GetDesc</unmanaged>	
            <unmanaged>void ID3D11RasterizerState::GetDesc([Out] D3D11_RASTERIZER_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.RasterizerState1">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11RasterizerState1']/*"/>	
            <unmanaged>ID3D11RasterizerState1</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerState1.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.RasterizerState1"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.RasterizerState1.GetDescription1(SharpDX.Direct3D11.RasterizerDescription1@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="descRef">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11RasterizerState1::GetDesc1']/*"/>	
            <unmanaged>void ID3D11RasterizerState1::GetDesc1([Out] D3D11_RASTERIZER_DESC1* pDesc)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.RasterizerState1.Description1">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11RasterizerState1::GetDesc1']/*"/>	
            <unmanaged>GetDesc1</unmanaged>	
            <unmanaged>void ID3D11RasterizerState1::GetDesc1([Out] D3D11_RASTERIZER_DESC1* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.RenderTargetView">
            <summary>	
            A render-target-view interface identifies the render-target subresources that can be accessed during rendering.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11RenderTargetView']/*"/>	
            <unmanaged>ID3D11RenderTargetView</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.RenderTargetView.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.RenderTargetView"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.RenderTargetView.GetDescription(SharpDX.Direct3D11.RenderTargetViewDescription@)">
            <summary>	
            Get the properties of a render target view.	
            </summary>	
            <param name="descRef"><para>Pointer to the description of a render target view (see <see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription"/>).</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11RenderTargetView::GetDesc']/*"/>	
            <unmanaged>void ID3D11RenderTargetView::GetDesc([Out] D3D11_RENDER_TARGET_VIEW_DESC* pDesc)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.RenderTargetView.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Resource)">
            <summary>
              Creates a <see cref = "T:SharpDX.Direct3D11.RenderTargetView" /> for accessing resource data.
            </summary>
            <param name = "device">The device to use when creating this <see cref = "T:SharpDX.Direct3D11.RenderTargetView" />.</param>
            <param name = "resource">The resource that represents the render-target surface. This surface must have been created with the <see cref = "T:SharpDX.Direct3D11.BindFlags">RenderTarget</see> flag.</param>
            <unmanaged>ID3D11Device::CreateRenderTargetView</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.RenderTargetView.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Resource,SharpDX.Direct3D11.RenderTargetViewDescription)">
            <summary>
              Creates a <see cref = "T:SharpDX.Direct3D11.RenderTargetView" /> for accessing resource data.
            </summary>
            <param name = "device">The device to use when creating this <see cref = "T:SharpDX.Direct3D11.RenderTargetView" />.</param>
            <param name = "resource">The resource that represents the render-target surface. This surface must have been created with the <see cref = "T:SharpDX.Direct3D11.BindFlags">RenderTarget</see> flag.</param>
            <param name = "description">A structure describing the <see cref = "T:SharpDX.Direct3D11.RenderTargetView" /> to be created.</param>
            <unmanaged>ID3D11Device::CreateRenderTargetView</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.RenderTargetView.Description">
            <summary>	
            Get the properties of a render target view.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11RenderTargetView::GetDesc']/*"/>	
            <unmanaged>GetDesc</unmanaged>	
            <unmanaged>void ID3D11RenderTargetView::GetDesc([Out] D3D11_RENDER_TARGET_VIEW_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.SamplerState">
            <summary>	
            The sampler-state interface holds a description for sampler state that you can bind to any shader stage of the pipeline for reference by texture sample operations.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11SamplerState']/*"/>	
            <unmanaged>ID3D11SamplerState</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.SamplerState.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.SamplerState"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.SamplerState.GetDescription(SharpDX.Direct3D11.SamplerStateDescription@)">
            <summary>	
            Gets the description for sampler state that you used to create the sampler-state object.	
            </summary>	
            <param name="descRef"><para>A reference to a <see cref="T:SharpDX.Direct3D11.SamplerStateDescription"/> structure that receives a description of the sampler state.</para></param>	
            <remarks>	
            You use the description for sampler state in a call to the <see cref="M:SharpDX.Direct3D11.Device.CreateSamplerState(SharpDX.Direct3D11.SamplerStateDescription@,SharpDX.Direct3D11.SamplerState)"/> method to create the sampler-state object.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11SamplerState::GetDesc']/*"/>	
            <unmanaged>void ID3D11SamplerState::GetDesc([Out] D3D11_SAMPLER_DESC* pDesc)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.SamplerState.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.SamplerStateDescription)">
            <summary>
              Constructs a new <see cref = "T:SharpDX.Direct3D11.SamplerState" /> based on the specified description.
            </summary>
            <param name = "device">The device with which to associate the state object.</param>
            <param name = "description">The state description.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="M:SharpDX.Direct3D11.SamplerState.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.SamplerStateDescription@)">
            <summary>
              Constructs a new <see cref = "T:SharpDX.Direct3D11.SamplerState" /> based on the specified description.
            </summary>
            <param name = "device">The device with which to associate the state object.</param>
            <param name = "description">The state description.</param>
            <returns>The newly created object.</returns>
        </member>
        <member name="P:SharpDX.Direct3D11.SamplerState.Description">
            <summary>	
            Gets the description for sampler state that you used to create the sampler-state object.	
            </summary>	
            <remarks>	
            You use the description for sampler state in a call to the <see cref="M:SharpDX.Direct3D11.Device.CreateSamplerState(SharpDX.Direct3D11.SamplerStateDescription@,SharpDX.Direct3D11.SamplerState)"/> method to create the sampler-state object.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11SamplerState::GetDesc']/*"/>	
            <unmanaged>GetDesc</unmanaged>	
            <unmanaged>void ID3D11SamplerState::GetDesc([Out] D3D11_SAMPLER_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.ShaderResourceView">
            <summary>	
            A shader-resource-view interface specifies the subresources a shader can access during rendering. Examples of shader resources include a constant buffer, a texture buffer, a texture or a sampler.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11ShaderResourceView']/*"/>	
            <unmanaged>ID3D11ShaderResourceView</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.ShaderResourceView.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.ShaderResourceView"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.ShaderResourceView.GetDescription(SharpDX.Direct3D11.ShaderResourceViewDescription@)">
            <summary>	
            Get the shader resource view's description.	
            </summary>	
            <param name="descRef"><para>A reference to a <see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription"/> structure to be filled with data about the shader resource view.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11ShaderResourceView::GetDesc']/*"/>	
            <unmanaged>void ID3D11ShaderResourceView::GetDesc([Out] D3D11_SHADER_RESOURCE_VIEW_DESC* pDesc)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.ShaderResourceView.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Resource)">
            <summary>
              Creates a <see cref = "T:SharpDX.Direct3D11.ShaderResourceView" /> for accessing resource data.
            </summary>
            <param name = "device">The device to use when creating this <see cref = "T:SharpDX.Direct3D11.ShaderResourceView" />.</param>
            <param name = "resource">The resource that represents the render-target surface. This surface must have been created with the <see cref = "T:SharpDX.Direct3D11.BindFlags">ShaderResource</see> flag.</param>
            <unmanaged>ID3D11Device::CreateShaderResourceView</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.ShaderResourceView.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Resource,SharpDX.Direct3D11.ShaderResourceViewDescription)">
            <summary>
              Creates a <see cref = "T:SharpDX.Direct3D11.ShaderResourceView" /> for accessing resource data.
            </summary>
            <param name = "device">The device to use when creating this <see cref = "T:SharpDX.Direct3D11.ShaderResourceView" />.</param>
            <param name = "resource">The resource that represents the render-target surface. This surface must have been created with the <see cref = "T:SharpDX.Direct3D11.BindFlags">ShaderResource</see> flag.</param>
            <param name = "description">A structure describing the <see cref = "T:SharpDX.Direct3D11.ShaderResourceView" /> to be created.</param>
            <unmanaged>ID3D11Device::CreateShaderResourceView</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.ShaderResourceView.Description">
            <summary>	
            Get the shader resource view's description.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11ShaderResourceView::GetDesc']/*"/>	
            <unmanaged>GetDesc</unmanaged>	
            <unmanaged>void ID3D11ShaderResourceView::GetDesc([Out] D3D11_SHADER_RESOURCE_VIEW_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.Texture1D">
            <summary>	
            A 1D texture interface accesses texel data, which is structured memory.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Texture1D']/*"/>	
            <unmanaged>ID3D11Texture1D</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Texture1D.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.Texture1D"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.Texture1D.GetDescription(SharpDX.Direct3D11.Texture1DDescription@)">
            <summary>	
            Get the properties of the texture resource.	
            </summary>	
            <param name="descRef"><para>Pointer to a resource description (see <see cref="T:SharpDX.Direct3D11.Texture1DDescription"/>).</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Texture1D::GetDesc']/*"/>	
            <unmanaged>void ID3D11Texture1D::GetDesc([Out] D3D11_TEXTURE1D_DESC* pDesc)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Texture1D.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture1DDescription)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.Texture1D" /> class.
            </summary>
            <param name = "device">The device with which to associate the texture.</param>
            <param name = "description">The description of the texture.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.Texture1D.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture1DDescription,SharpDX.DataStream[])">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.Texture1D" /> class.
            </summary>
            <param name = "device">The device with which to associate the texture.</param>
            <param name = "description">The description of the texture.</param>
            <param name = "data">An array of initial texture data for each subresource.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.Texture1D.CalculateSubResourceIndex(System.Int32,System.Int32,System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="P:SharpDX.Direct3D11.Texture1D.Description">
            <summary>	
            Get the properties of the texture resource.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Texture1D::GetDesc']/*"/>	
            <unmanaged>GetDesc</unmanaged>	
            <unmanaged>void ID3D11Texture1D::GetDesc([Out] D3D11_TEXTURE1D_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.Texture2D">
            <summary>	
            A 2D texture interface manages texel data, which is structured memory.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Texture2D']/*"/>	
            <unmanaged>ID3D11Texture2D</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Texture2D.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.Texture2D"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.Texture2D.GetDescription(SharpDX.Direct3D11.Texture2DDescription@)">
            <summary>	
            Get the properties of the texture resource.	
            </summary>	
            <param name="descRef"><para>Pointer to a resource description (see <see cref="T:SharpDX.Direct3D11.Texture2DDescription"/>).</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Texture2D::GetDesc']/*"/>	
            <unmanaged>void ID3D11Texture2D::GetDesc([Out] D3D11_TEXTURE2D_DESC* pDesc)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Texture2D.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture2DDescription)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.Texture2D" /> class.
            </summary>
            <param name = "device">The device with which to associate the texture.</param>
            <param name = "description">The description of the texture.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.Texture2D.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture2DDescription,SharpDX.DataRectangle[])">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.Texture2D" /> class.
            </summary>
            <param name = "device">The device with which to associate the texture.</param>
            <param name = "description">The description of the texture.</param>
            <param name = "data">An array of initial texture data for each subresource.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.Texture2D.CalculateSubResourceIndex(System.Int32,System.Int32,System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="P:SharpDX.Direct3D11.Texture2D.Description">
            <summary>	
            Get the properties of the texture resource.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Texture2D::GetDesc']/*"/>	
            <unmanaged>GetDesc</unmanaged>	
            <unmanaged>void ID3D11Texture2D::GetDesc([Out] D3D11_TEXTURE2D_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.Texture3D">
            <summary>	
            A 3D texture interface accesses texel data, which is structured memory.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Texture3D']/*"/>	
            <unmanaged>ID3D11Texture3D</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Texture3D.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.Texture3D"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.Texture3D.GetDescription(SharpDX.Direct3D11.Texture3DDescription@)">
            <summary>	
            Get the properties of the texture resource.	
            </summary>	
            <param name="descRef"><para>Pointer to a resource description (see <see cref="T:SharpDX.Direct3D11.Texture3DDescription"/>).</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Texture3D::GetDesc']/*"/>	
            <unmanaged>void ID3D11Texture3D::GetDesc([Out] D3D11_TEXTURE3D_DESC* pDesc)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Texture3D.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture3DDescription)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.Texture3D" /> class.
            </summary>
            <param name = "device">The device with which to associate the texture.</param>
            <param name = "description">The description of the texture.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.Texture3D.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Texture3DDescription,SharpDX.DataBox[])">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.Texture3D" /> class.
            </summary>
            <param name = "device">The device with which to associate the texture.</param>
            <param name = "description">The description of the texture.</param>
            <param name = "data">An array of initial texture data for each subresource.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.Texture3D.CalculateSubResourceIndex(System.Int32,System.Int32,System.Int32@)">
            <inheritdoc/>
        </member>
        <member name="P:SharpDX.Direct3D11.Texture3D.Description">
            <summary>	
            Get the properties of the texture resource.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11Texture3D::GetDesc']/*"/>	
            <unmanaged>GetDesc</unmanaged>	
            <unmanaged>void ID3D11Texture3D::GetDesc([Out] D3D11_TEXTURE3D_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.UnorderedAccessView">
            <summary>	
            A view interface specifies the parts of a resource the pipeline can access during rendering.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11UnorderedAccessView']/*"/>	
            <unmanaged>ID3D11UnorderedAccessView</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.UnorderedAccessView.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.UnorderedAccessView"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.UnorderedAccessView.GetDescription(SharpDX.Direct3D11.UnorderedAccessViewDescription@)">
            <summary>	
            Get a description of the resource.	
            </summary>	
            <param name="descRef"><para>Pointer to a resource description (see <see cref="T:SharpDX.Direct3D11.UnorderedAccessViewDescription"/>.)</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11UnorderedAccessView::GetDesc']/*"/>	
            <unmanaged>void ID3D11UnorderedAccessView::GetDesc([Out] D3D11_UNORDERED_ACCESS_VIEW_DESC* pDesc)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.UnorderedAccessView.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Resource)">
            <summary>
              Creates a <see cref = "T:SharpDX.Direct3D11.UnorderedAccessView" /> for accessing resource data.
            </summary>
            <param name = "device">The device to use when creating this <see cref = "T:SharpDX.Direct3D11.UnorderedAccessView" />.</param>
            <param name = "resource">The resource that represents the render-target surface. This surface must have been created with the <see cref = "T:SharpDX.Direct3D11.BindFlags">UnorderedAccess</see> flag.</param>
            <unmanaged>ID3D11Device::CreateUnorderedAccessView</unmanaged>
        </member>
        <member name="M:SharpDX.Direct3D11.UnorderedAccessView.#ctor(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.Resource,SharpDX.Direct3D11.UnorderedAccessViewDescription)">
            <summary>
              Creates a <see cref = "T:SharpDX.Direct3D11.UnorderedAccessView" /> for accessing resource data.
            </summary>
            <param name = "device">The device to use when creating this <see cref = "T:SharpDX.Direct3D11.UnorderedAccessView" />.</param>
            <param name = "resource">The resource that represents the render-target surface. This surface must have been created with the <see cref = "T:SharpDX.Direct3D11.BindFlags">UnorderedAccess</see> flag.</param>
            <param name = "description">A structure describing the <see cref = "T:SharpDX.Direct3D11.UnorderedAccessView" /> to be created.</param>
            <unmanaged>ID3D11Device::CreateUnorderedAccessView</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.UnorderedAccessView.Description">
            <summary>	
            Get a description of the resource.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11UnorderedAccessView::GetDesc']/*"/>	
            <unmanaged>GetDesc</unmanaged>	
            <unmanaged>void ID3D11UnorderedAccessView::GetDesc([Out] D3D11_UNORDERED_ACCESS_VIEW_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.VertexShader">
            <summary>	
            A vertex-shader interface manages an executable program (a vertex shader) that controls the vertex-shader stage.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VertexShader']/*"/>	
            <unmanaged>ID3D11VertexShader</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VertexShader.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.VertexShader"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.VertexShader.#ctor(SharpDX.Direct3D11.Device,SharpDX.D3DCompiler.ShaderBytecode)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.VertexShader" /> class.
            </summary>
            <param name = "device">The device used to create the shader.</param>
            <param name = "shaderBytecode">The compiled shader bytecode.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.VertexShader.#ctor(SharpDX.Direct3D11.Device,SharpDX.D3DCompiler.ShaderBytecode,SharpDX.Direct3D11.ClassLinkage)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.VertexShader" /> class.
            </summary>
            <param name = "device">The device used to create the shader.</param>
            <param name = "shaderBytecode">The compiled shader bytecode.</param>
            <param name = "linkage">A dynamic class linkage interface.</param>
        </member>
        <member name="T:SharpDX.Direct3D11.VertexShaderStage">
            <summary>	
            The <see cref="T:SharpDX.Direct3D11.DeviceContext"/> interface represents a device context which generates rendering commands.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext']/*"/>	
            <unmanaged>ID3D11DeviceContext</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VertexShaderStage.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.VertexShaderStage"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.VertexShaderStage.SetConstantBuffers(System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            Sets the constant buffers used by the vertex shader pipeline stage.	
            </summary>	
            <param name="startSlot"><para>Index into the device's zero-based array to begin setting constant buffers to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</para></param>	
            <param name="numBuffers"><para>Number of buffers to set (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - StartSlot).</para></param>	
            <param name="constantBuffersOut"><para>Array of constant buffers (see <see cref="T:SharpDX.Direct3D11.Buffer"/>) being given to the device.</para></param>	
            <remarks>	
            The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.The Direct3D 11.1 runtime, which is available starting with Windows Developer Preview, can bind a larger number of <see cref="T:SharpDX.Direct3D11.Buffer"/> resources to the shader than the maximum constant buffer size that is supported by shaders (4096 constants ? 4*32-bit components each).  When you bind such a large buffer, the shader can access only the first 4096 4*32-bit component constants in the buffer, as if 4096 constants is the full size of the buffer.If the application wants the shader to access other parts of the buffer, it must call the VSSetConstantBuffers1 method instead.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::VSSetConstantBuffers']/*"/>	
            <unmanaged>void ID3D11DeviceContext::VSSetConstantBuffers([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[In, Buffer, Optional] const void** ppConstantBuffers)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VertexShaderStage.SetShader(SharpDX.Direct3D11.VertexShader,SharpDX.Direct3D11.ClassInstance[],System.Int32)">
            <summary>	
            Set a vertex shader to the device.	
            </summary>	
            <param name="vertexShaderRef"><para>Pointer to a vertex shader (see <see cref="T:SharpDX.Direct3D11.VertexShader"/>). Passing in <c>null</c> disables the shader for this pipeline stage.</para></param>	
            <param name="classInstancesOut"><para>A reference to an array of class-instance interfaces (see <see cref="T:SharpDX.Direct3D11.ClassInstance"/>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <c>null</c> if the shader does not use any interfaces.</para></param>	
            <param name="numClassInstances"><para>The number of class-instance interfaces in the array.</para></param>	
            <remarks>	
            The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.The maximum number of instances a shader can have is 256.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::VSSetShader']/*"/>	
            <unmanaged>void ID3D11DeviceContext::VSSetShader([In, Optional] ID3D11VertexShader* pVertexShader,[In, Buffer, Optional] const ID3D11ClassInstance** ppClassInstances,[In] unsigned int NumClassInstances)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VertexShaderStage.SetShader(SharpDX.Direct3D11.VertexShader,SharpDX.ComArray{SharpDX.Direct3D11.ClassInstance},System.Int32)">
            <summary>	
            Set a vertex shader to the device.	
            </summary>	
            <param name="vertexShaderRef"><para>Pointer to a vertex shader (see <see cref="T:SharpDX.Direct3D11.VertexShader"/>). Passing in <c>null</c> disables the shader for this pipeline stage.</para></param>	
            <param name="classInstancesOut"><para>A reference to an array of class-instance interfaces (see <see cref="T:SharpDX.Direct3D11.ClassInstance"/>). Each interface used by a shader must have a corresponding class instance or the shader will get disabled. Set ppClassInstances to <c>null</c> if the shader does not use any interfaces.</para></param>	
            <param name="numClassInstances"><para>The number of class-instance interfaces in the array.</para></param>	
            <remarks>	
            The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.The maximum number of instances a shader can have is 256.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::VSSetShader']/*"/>	
            <unmanaged>void ID3D11DeviceContext::VSSetShader([In, Optional] ID3D11VertexShader* pVertexShader,[In, Buffer, Optional] const ID3D11ClassInstance** ppClassInstances,[In] unsigned int NumClassInstances)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VertexShaderStage.SetShaderResources(System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            Bind an array of shader resources to the vertex-shader stage.	
            </summary>	
            <param name="startSlot"><para>Index into the device's zero-based array to begin setting shader resources to (range is from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - 1).</para></param>	
            <param name="numViews"><para>Number of shader resources to set. Up to a maximum of 128 slots are available for shader resources (range is from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - StartSlot).</para></param>	
            <param name="shaderResourceViewsOut"><para>Array of shader resource view interfaces to set to the device.</para></param>	
            <remarks>	
            If an overlapping resource view is already bound to an output slot, such as a rendertarget, then this API will fill the destination shader resource slot with <c>null</c>.For information about creating shader-resource views, see <see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/>.The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::VSSetShaderResources']/*"/>	
            <unmanaged>void ID3D11DeviceContext::VSSetShaderResources([In] unsigned int StartSlot,[In] unsigned int NumViews,[In, Buffer, Optional] const void** ppShaderResourceViews)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VertexShaderStage.SetSamplers(System.Int32,System.Int32,System.IntPtr)">
            <summary>	
            Set an array of sampler states to the vertex shader pipeline stage.	
            </summary>	
            <param name="startSlot"><para>Index into the device's zero-based array to begin setting samplers to (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - 1).</para></param>	
            <param name="numSamplers"><para>Number of samplers in the array. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - StartSlot).</para></param>	
            <param name="samplersOut"><para>Pointer to an array of sampler-state interfaces (see <see cref="T:SharpDX.Direct3D11.SamplerState"/>). See Remarks.</para></param>	
            <remarks>	
            Any sampler may be set to <c>null</c>; this invokes the default state, which is defined to be the following.<code>	
             //Default sampler state:	
            <see cref="T:SharpDX.Direct3D11.SamplerStateDescription"/> SamplerDesc;	
            SamplerDesc.Filter = <see cref="F:SharpDX.Direct3D11.Filter.MinMagMipLinear"/>;	
            SamplerDesc.AddressU = <see cref="F:SharpDX.Direct3D11.TextureAddressMode.Clamp"/>;	
            SamplerDesc.AddressV = <see cref="F:SharpDX.Direct3D11.TextureAddressMode.Clamp"/>;	
            SamplerDesc.AddressW = <see cref="F:SharpDX.Direct3D11.TextureAddressMode.Clamp"/>;	
            SamplerDesc.MipLODBias = 0;	
            SamplerDesc.MaxAnisotropy = 1;	
            SamplerDesc.ComparisonFunc = <see cref="F:SharpDX.Direct3D11.Comparison.Never"/>;	
            SamplerDesc.BorderColor[0] = 1.0f;	
            SamplerDesc.BorderColor[1] = 1.0f;	
            SamplerDesc.BorderColor[2] = 1.0f;	
            SamplerDesc.BorderColor[3] = 1.0f;	
            SamplerDesc.MinLOD = -FLT_MAX;	
            SamplerDesc.MaxLOD = FLT_MAX; 	
            </code>The method will hold a reference to the interfaces passed in. This differs from the device state behavior in Direct3D 10.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::VSSetSamplers']/*"/>	
            <unmanaged>void ID3D11DeviceContext::VSSetSamplers([In] unsigned int StartSlot,[In] unsigned int NumSamplers,[In, Buffer, Optional] const void** ppSamplers)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VertexShaderStage.GetConstantBuffers(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[])">
            <summary>	
            Get the constant buffers used by the vertex shader pipeline stage.	
            </summary>	
            <param name="startSlot"><para>Index into the device's zero-based array to begin retrieving constant buffers from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - 1).</para></param>	
            <param name="numBuffers"><para>Number of buffers to retrieve (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.ConstantBufferApiSlotCount"/> - StartSlot).</para></param>	
            <param name="constantBuffersOut"><para>Array of constant buffer interface references (see <see cref="T:SharpDX.Direct3D11.Buffer"/>) to be returned by the method.</para></param>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::VSGetConstantBuffers']/*"/>	
            <unmanaged>void ID3D11DeviceContext::VSGetConstantBuffers([In] unsigned int StartSlot,[In] unsigned int NumBuffers,[Out, Buffer, Optional] ID3D11Buffer** ppConstantBuffers)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VertexShaderStage.GetShader(SharpDX.Direct3D11.VertexShader@,SharpDX.Direct3D11.ClassInstance[],System.Int32@)">
            <summary>	
            Get the vertex shader currently set on the device.	
            </summary>	
            <param name="vertexShaderOut"><para>Address of a reference to a vertex shader (see <see cref="T:SharpDX.Direct3D11.VertexShader"/>) to be returned by the method.</para></param>	
            <param name="classInstancesOut"><para>Pointer to an array of class instance interfaces (see <see cref="T:SharpDX.Direct3D11.ClassInstance"/>).</para></param>	
            <param name="numClassInstancesRef"><para>The number of class-instance elements in the array.</para></param>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::VSGetShader']/*"/>	
            <unmanaged>void ID3D11DeviceContext::VSGetShader([Out] ID3D11VertexShader** ppVertexShader,[Out, Buffer, Optional] ID3D11ClassInstance** ppClassInstances,[InOut] unsigned int* pNumClassInstances)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VertexShaderStage.GetShaderResources(System.Int32,System.Int32,SharpDX.Direct3D11.ShaderResourceView[])">
            <summary>	
            Get the vertex shader resources.	
            </summary>	
            <param name="startSlot"><para>Index into the device's zero-based array to begin getting shader resources from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - 1).</para></param>	
            <param name="numViews"><para>The number of resources to get from the device. Up to a maximum of 128 slots are available for shader resources (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.InputResourceSlotCount"/> - StartSlot).</para></param>	
            <param name="shaderResourceViewsOut"><para>Array of shader resource view interfaces to be returned by the device.</para></param>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::VSGetShaderResources']/*"/>	
            <unmanaged>void ID3D11DeviceContext::VSGetShaderResources([In] unsigned int StartSlot,[In] unsigned int NumViews,[Out, Buffer, Optional] ID3D11ShaderResourceView** ppShaderResourceViews)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VertexShaderStage.GetSamplers(System.Int32,System.Int32,SharpDX.Direct3D11.SamplerState[])">
            <summary>	
            Get an array of sampler states from the vertex shader pipeline stage.	
            </summary>	
            <param name="startSlot"><para>Index into a zero-based array to begin getting samplers from (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - 1).</para></param>	
            <param name="numSamplers"><para>Number of samplers to get from a device context. Each pipeline stage has a total of 16 sampler slots available (ranges from 0 to <see cref="F:SharpDX.Direct3D11.CommonShaderStage.SamplerSlotCount"/> - StartSlot).</para></param>	
            <param name="samplersOut"><para>Arry of sampler-state interface references (see <see cref="T:SharpDX.Direct3D11.SamplerState"/>) to be returned by the device.</para></param>	
            <remarks>	
            Any returned interfaces will have their reference count incremented by one. Applications should call IUnknown::Release on the returned interfaces when they are no longer needed to avoid memory leaks.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11DeviceContext::VSGetSamplers']/*"/>	
            <unmanaged>void ID3D11DeviceContext::VSGetSamplers([In] unsigned int StartSlot,[In] unsigned int NumSamplers,[Out, Buffer, Optional] ID3D11SamplerState** ppSamplers)</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoContext">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext']/*"/>	
            <unmanaged>ID3D11VideoContext</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.VideoContext"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.GetDecoderBuffer(SharpDX.Direct3D11.VideoDecoder,SharpDX.Direct3D11.VideoDecoderBufferType,System.Int32@,System.IntPtr)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="decoderRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.VideoDecoder"/> interface. To get this reference, call <see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoDecoder(SharpDX.Direct3D11.VideoDecoderDescription@,SharpDX.Direct3D11.VideoDecoderConfig@,SharpDX.Direct3D11.VideoDecoder@)"/>.</para></param>	
            <param name="type"><para>The type of buffer to retrieve, specified as a member of the <see cref="T:SharpDX.Direct3D11.VideoDecoderBufferType"/> enumeration.</para></param>	
            <param name="bufferSizeRef"><para>Receives the size of the buffer, in bytes. </para></param>	
            <param name="bufferOut"><para>Receives a reference to the start of the memory buffer. </para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The graphics driver allocates the buffers that are used for DXVA decoding. This method locks the Microsoft Direct3D surface that contains the buffer. When you are done using the buffer, call <see cref="M:SharpDX.Direct3D11.VideoContext.ReleaseDecoderBuffer(SharpDX.Direct3D11.VideoDecoder,SharpDX.Direct3D11.VideoDecoderBufferType)"/> to unlock the surface.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::GetDecoderBuffer']/*"/>	
            <unmanaged>HRESULT ID3D11VideoContext::GetDecoderBuffer([In] ID3D11VideoDecoder* pDecoder,[In] D3D11_VIDEO_DECODER_BUFFER_TYPE Type,[Out] unsigned int* pBufferSize,[Out, Buffer, Optional] void** ppBuffer)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.ReleaseDecoderBuffer(SharpDX.Direct3D11.VideoDecoder,SharpDX.Direct3D11.VideoDecoderBufferType)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="decoderRef">No documentation.</param>	
            <param name="type">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::ReleaseDecoderBuffer']/*"/>	
            <unmanaged>HRESULT ID3D11VideoContext::ReleaseDecoderBuffer([In] ID3D11VideoDecoder* pDecoder,[In] D3D11_VIDEO_DECODER_BUFFER_TYPE Type)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.DecoderBeginFrame(SharpDX.Direct3D11.VideoDecoder,SharpDX.Direct3D11.VideoDecoderOutputView,System.Int32,System.IntPtr)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="decoderRef">No documentation.</param>	
            <param name="viewRef">No documentation.</param>	
            <param name="contentKeySize">No documentation.</param>	
            <param name="contentKeyRef">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::DecoderBeginFrame']/*"/>	
            <unmanaged>HRESULT ID3D11VideoContext::DecoderBeginFrame([In] ID3D11VideoDecoder* pDecoder,[In] ID3D11VideoDecoderOutputView* pView,[In] unsigned int ContentKeySize,[In, Buffer, Optional] const void* pContentKey)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.DecoderEndFrame(SharpDX.Direct3D11.VideoDecoder)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="decoderRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.VideoDecoder"/> interface. To get this reference, call <see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoDecoder(SharpDX.Direct3D11.VideoDecoderDescription@,SharpDX.Direct3D11.VideoDecoderConfig@,SharpDX.Direct3D11.VideoDecoder@)"/>.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::DecoderEndFrame']/*"/>	
            <unmanaged>HRESULT ID3D11VideoContext::DecoderEndFrame([In] ID3D11VideoDecoder* pDecoder)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.SubmitDecoderBuffers(SharpDX.Direct3D11.VideoDecoder,System.Int32,SharpDX.Direct3D11.VideoDecoderBufferDescription[])">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="decoderRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.VideoDecoder"/> interface. To get this reference, call the <see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoDecoder(SharpDX.Direct3D11.VideoDecoderDescription@,SharpDX.Direct3D11.VideoDecoderConfig@,SharpDX.Direct3D11.VideoDecoder@)"/> method.</para></param>	
            <param name="numBuffers"><para>The number of buffers submitted for decoding.</para></param>	
            <param name="bufferDescRef"><para>A reference to an array of <see cref="T:SharpDX.Direct3D11.VideoDecoderBufferDescription"/> structures. The NumBuffers parameter specifies the number of elements in the array. Each element in the array describes a compressed buffer for decoding.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::SubmitDecoderBuffers']/*"/>	
            <unmanaged>HRESULT ID3D11VideoContext::SubmitDecoderBuffers([In] ID3D11VideoDecoder* pDecoder,[In] unsigned int NumBuffers,[In, Buffer] const D3D11_VIDEO_DECODER_BUFFER_DESC* pBufferDesc)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.DecoderExtension(SharpDX.Direct3D11.VideoDecoder,SharpDX.Direct3D11.VideoDecoderExtension@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="decoderRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.VideoDecoder"/> interface. To get this reference, call <see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoDecoder(SharpDX.Direct3D11.VideoDecoderDescription@,SharpDX.Direct3D11.VideoDecoderConfig@,SharpDX.Direct3D11.VideoDecoder@)"/>.</para></param>	
            <param name="extensionDataRef"><para>A reference to a <see cref="T:SharpDX.Direct3D11.VideoDecoderExtension"/> structure that contains data for the function.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::DecoderExtension']/*"/>	
            <unmanaged>HRESULT ID3D11VideoContext::DecoderExtension([In] ID3D11VideoDecoder* pDecoder,[In] const D3D11_VIDEO_DECODER_EXTENSION* pExtensionData)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetOutputTargetRect(SharpDX.Direct3D11.VideoProcessor,System.Boolean,System.Nullable{SharpDX.Rectangle})">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="videoProcessorRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.VideoProcessor"/> interface. To get this reference, call <see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/>.</para></param>	
            <param name="enable"><para>Specifies whether to apply the target rectangle.</para></param>	
            <param name="rectRef"><para>A reference to a <see cref="T:SharpDX.Rectangle"/> structure that specifies the target rectangle.  If Enable is <see cref="F:SharpDX.Result.False"/>, this parameter is ignored.</para></param>	
            <remarks>	
            The target rectangle is the area within the destination surface where the output will be drawn. The target rectangle is given in pixel coordinates, relative to the destination surface.If this method is never called, or if the Enable parameter is <see cref="F:SharpDX.Result.False"/>, the video processor writes to the entire destination surface.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetOutputTargetRect']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetOutputTargetRect([In] ID3D11VideoProcessor* pVideoProcessor,[In] BOOL Enable,[In, Optional] const RECT* pRect)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetOutputBackgroundColor(SharpDX.Direct3D11.VideoProcessor,System.Boolean,SharpDX.Direct3D11.VideoColor)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="videoProcessorRef">No documentation.</param>	
            <param name="yCbCr">No documentation.</param>	
            <param name="colorRef">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetOutputBackgroundColor']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetOutputBackgroundColor([In] ID3D11VideoProcessor* pVideoProcessor,[In] BOOL YCbCr,[In] const D3D11_VIDEO_COLOR* pColor)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetOutputColorSpace(SharpDX.Direct3D11.VideoProcessor,SharpDX.Direct3D11.VideoProcessorColorSpace)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="videoProcessorRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.VideoProcessor"/> interface. To get this reference, call <see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/>.</para></param>	
            <param name="colorSpaceRef"><para>A reference to a <see cref="T:SharpDX.Direct3D11.VideoProcessorColorSpace"/> structure that specifies the color space.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetOutputColorSpace']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetOutputColorSpace([In] ID3D11VideoProcessor* pVideoProcessor,[In] const D3D11_VIDEO_PROCESSOR_COLOR_SPACE* pColorSpace)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetOutputAlphaFillMode(SharpDX.Direct3D11.VideoProcessor,SharpDX.Direct3D11.VideoProcessorAlphaFillMode,System.Int32)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="videoProcessorRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.VideoProcessor"/> interface. To get this reference, call <see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/>.</para></param>	
            <param name="alphaFillMode"><para>The alpha fill mode, specified as a <see cref="T:SharpDX.Direct3D11.VideoProcessorAlphaFillMode"/> value.</para></param>	
            <param name="streamIndex"><para>The zero-based index of an input stream. This parameter is used if AlphaFillMode is <see cref="F:SharpDX.Direct3D11.VideoProcessorAlphaFillMode.SourceStream"/>. Otherwise, the parameter is ignored.</para></param>	
            <remarks>	
            To find out which fill modes the device supports, call the <see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/> method. If the driver reports the <see cref="F:SharpDX.Direct3D11.VideoProcessorFeatureCaps.AlphaFill"/> capability, the driver supports all of the fill modes. Otherwise, the AlphaFillMode parameter must be <see cref="F:SharpDX.Direct3D11.VideoProcessorAlphaFillMode.Opaque"/>.The default fill mode is <see cref="F:SharpDX.Direct3D11.VideoProcessorAlphaFillMode.Opaque"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetOutputAlphaFillMode']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetOutputAlphaFillMode([In] ID3D11VideoProcessor* pVideoProcessor,[In] D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE AlphaFillMode,[In] unsigned int StreamIndex)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetOutputConstriction(SharpDX.Direct3D11.VideoProcessor,System.Boolean,SharpDX.DrawingSize)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="videoProcessorRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.VideoProcessor"/> interface. To get this reference, call <see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/>.</para></param>	
            <param name="enable"><para>If TRUE, downsampling is enabled. Otherwise, downsampling is disabled and the Size member is ignored. </para></param>	
            <param name="size"><para>The sampling size.</para></param>	
            <remarks>	
            Downsampling is sometimes used to reduce the quality of premium content when other forms of content protection are not available. By default, downsampling is disabled.If the Enable parameter is TRUE, the driver downsamples the composed image  to the specified size, and then scales it back to the size of the target rectangle.The width and height of Size must be greater than zero. If the size is larger than the target rectangle, downsampling does not occur.To use this feature, the driver must support downsampling, indicated by the <see cref="F:SharpDX.Direct3D11.VideoProcessorFeatureCaps.Constriction"/> capability flag. To query for this capability, call <see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetOutputConstriction']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetOutputConstriction([In] ID3D11VideoProcessor* pVideoProcessor,[In] BOOL Enable,[In] SIZE Size)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetOutputStereoMode(SharpDX.Direct3D11.VideoProcessor,System.Boolean)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="videoProcessorRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.VideoProcessor"/> interface. To get this reference, call <see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/>.</para></param>	
            <param name="enable"><para>If TRUE, stereo output is enabled. Otherwise, the video processor produces mono video frames.</para></param>	
            <remarks>	
            By default, the video processor produces mono video frames. If stereo video is enabled,  set the stereo output format by calling <see cref="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetStreamStereoFormat(SharpDX.Direct3D11.VideoProcessor,System.Int32,System.Boolean,SharpDX.Direct3D11.VideoProcessorStereoFormat,System.Boolean,System.Boolean,SharpDX.Direct3D11.VideoProcessorStereoFlipMode,System.Int32)"/>.To use this feature, the driver must support stereo video, indicated by the <see cref="F:SharpDX.Direct3D11.VideoProcessorFeatureCaps.Stereo"/> capability flag. To query for this capability, call <see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetOutputStereoMode']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetOutputStereoMode([In] ID3D11VideoProcessor* pVideoProcessor,[In] BOOL Enable)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetOutputExtension(SharpDX.Direct3D11.VideoProcessor,System.Guid,System.Int32,System.IntPtr)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="videoProcessorRef">No documentation.</param>	
            <param name="extensionGuidRef">No documentation.</param>	
            <param name="dataSize">No documentation.</param>	
            <param name="dataRef">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetOutputExtension']/*"/>	
            <unmanaged>HRESULT ID3D11VideoContext::VideoProcessorSetOutputExtension([In] ID3D11VideoProcessor* pVideoProcessor,[In] const GUID* pExtensionGuid,[In] unsigned int DataSize,[In] void* pData)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetOutputTargetRect(SharpDX.Direct3D11.VideoProcessor,System.Boolean@,SharpDX.Rectangle@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="videoProcessorRef">No documentation.</param>	
            <param name="enabled">No documentation.</param>	
            <param name="rectRef">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetOutputTargetRect']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorGetOutputTargetRect([In] ID3D11VideoProcessor* pVideoProcessor,[Out] BOOL* Enabled,[Out] RECT* pRect)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetOutputBackgroundColor(SharpDX.Direct3D11.VideoProcessor,System.Boolean@,SharpDX.Direct3D11.VideoColor@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="videoProcessorRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.VideoProcessor"/> interface. To get this reference, call <see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/>.</para></param>	
            <param name="yCbCrRef"><para>Receives the value TRUE if the background color is a YCbCr color, or <see cref="F:SharpDX.Result.False"/> if the background color is an RGB color.</para></param>	
            <param name="colorRef"><para>A reference to a <see cref="T:SharpDX.Direct3D11.VideoColor"/> structure. The method fills in the structure with the background color.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetOutputBackgroundColor']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorGetOutputBackgroundColor([In] ID3D11VideoProcessor* pVideoProcessor,[Out] BOOL* pYCbCr,[Out] D3D11_VIDEO_COLOR* pColor)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetOutputColorSpace(SharpDX.Direct3D11.VideoProcessor,SharpDX.Direct3D11.VideoProcessorColorSpace@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="videoProcessorRef">No documentation.</param>	
            <param name="colorSpaceRef">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetOutputColorSpace']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorGetOutputColorSpace([In] ID3D11VideoProcessor* pVideoProcessor,[Out] D3D11_VIDEO_PROCESSOR_COLOR_SPACE* pColorSpace)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetOutputAlphaFillMode(SharpDX.Direct3D11.VideoProcessor,SharpDX.Direct3D11.VideoProcessorAlphaFillMode@,System.Int32@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="videoProcessorRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.VideoProcessor"/> interface. To get this reference, call <see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/>.</para></param>	
            <param name="alphaFillModeRef"><para>Receives the alpha fill mode, as a <see cref="T:SharpDX.Direct3D11.VideoProcessorAlphaFillMode"/> value.</para></param>	
            <param name="streamIndexRef"><para>If the alpha fill mode is <see cref="F:SharpDX.Direct3D11.VideoProcessorAlphaFillMode.SourceStream"/>, this parameter receives the zero-based index of an input stream. The input stream provides the alpha values for the alpha fill.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetOutputAlphaFillMode']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorGetOutputAlphaFillMode([In] ID3D11VideoProcessor* pVideoProcessor,[Out] D3D11_VIDEO_PROCESSOR_ALPHA_FILL_MODE* pAlphaFillMode,[Out] unsigned int* pStreamIndex)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetOutputConstriction(SharpDX.Direct3D11.VideoProcessor,System.Boolean@,SharpDX.DrawingSize@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="videoProcessorRef">No documentation.</param>	
            <param name="enabledRef">No documentation.</param>	
            <param name="sizeRef">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetOutputConstriction']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorGetOutputConstriction([In] ID3D11VideoProcessor* pVideoProcessor,[Out] BOOL* pEnabled,[Out] SIZE* pSize)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetOutputStereoMode(SharpDX.Direct3D11.VideoProcessor,System.Boolean@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="videoProcessorRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.VideoProcessor"/> interface. To get this reference, call <see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/>.</para></param>	
            <param name="enabledRef"><para>Receives the value TRUE if stereo output is enabled, or <see cref="F:SharpDX.Result.False"/> otherwise.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetOutputStereoMode']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorGetOutputStereoMode([In] ID3D11VideoProcessor* pVideoProcessor,[Out] BOOL* pEnabled)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetOutputExtension(SharpDX.Direct3D11.VideoProcessor,System.Guid,System.Int32,System.IntPtr@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="videoProcessorRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.VideoProcessor"/> interface. To get this reference, call <see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/>.</para></param>	
            <param name="extensionGuidRef"><para>A reference to a <see cref="T:System.Guid"/> that identifies the state. The meaning of this <see cref="T:System.Guid"/> is defined by the graphics driver.</para></param>	
            <param name="dataSize"><para>The size of the pData buffer, in bytes.</para></param>	
            <param name="dataRef"><para>A reference to a buffer that receives the private state data. </para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetOutputExtension']/*"/>	
            <unmanaged>HRESULT ID3D11VideoContext::VideoProcessorGetOutputExtension([In] ID3D11VideoProcessor* pVideoProcessor,[In] const GUID* pExtensionGuid,[In] unsigned int DataSize,[Out] void* pData)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetStreamFrameFormat(SharpDX.Direct3D11.VideoProcessor,System.Int32,SharpDX.Direct3D11.VideoFrameFormat)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="videoProcessorRef">No documentation.</param>	
            <param name="streamIndex">No documentation.</param>	
            <param name="frameFormat">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetStreamFrameFormat']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetStreamFrameFormat([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[In] D3D11_VIDEO_FRAME_FORMAT FrameFormat)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetStreamColorSpace(SharpDX.Direct3D11.VideoProcessor,System.Int32,SharpDX.Direct3D11.VideoProcessorColorSpace)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="videoProcessorRef">No documentation.</param>	
            <param name="streamIndex">No documentation.</param>	
            <param name="colorSpaceRef">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetStreamColorSpace']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetStreamColorSpace([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[In] const D3D11_VIDEO_PROCESSOR_COLOR_SPACE* pColorSpace)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetStreamOutputRate(SharpDX.Direct3D11.VideoProcessor,System.Int32,SharpDX.Direct3D11.VideoProcessorOutputRate,System.Boolean,System.Nullable{SharpDX.DXGI.Rational})">
            <summary>	
            No documentation.	
            </summary>	
            <param name="videoProcessorRef">No documentation.</param>	
            <param name="streamIndex">No documentation.</param>	
            <param name="outputRate">No documentation.</param>	
            <param name="repeatFrame">No documentation.</param>	
            <param name="customRateRef">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetStreamOutputRate']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetStreamOutputRate([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[In] D3D11_VIDEO_PROCESSOR_OUTPUT_RATE OutputRate,[In] BOOL RepeatFrame,[In, Optional] const DXGI_RATIONAL* pCustomRate)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetStreamSourceRect(SharpDX.Direct3D11.VideoProcessor,System.Int32,System.Boolean,System.Nullable{SharpDX.Rectangle})">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="videoProcessorRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.VideoProcessor"/> interface. To get this reference, call <see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/>.</para></param>	
            <param name="streamIndex"><para>The zero-based index of the input stream. To get the maximum number of streams, call <see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/> and check the MaxStreamStates structure member.</para></param>	
            <param name="enable"><para>Specifies whether to apply the source rectangle.</para></param>	
            <param name="rectRef"><para>A reference to a <see cref="T:SharpDX.Rectangle"/> structure that specifies the source rectangle. If Enable is <see cref="F:SharpDX.Result.False"/>, this parameter is ignored.</para></param>	
            <remarks>	
            The source rectangle is the portion of the input surface that is  blitted to the destination surface. The source rectangle is given in pixel coordinates, relative to the input surface.If this method is never called, or if the Enable parameter is <see cref="F:SharpDX.Result.False"/>, the video processor reads from the entire input surface.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetStreamSourceRect']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetStreamSourceRect([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[In] BOOL Enable,[In, Optional] const RECT* pRect)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetStreamDestRect(SharpDX.Direct3D11.VideoProcessor,System.Int32,System.Boolean,System.Nullable{SharpDX.Rectangle})">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="videoProcessorRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.VideoProcessor"/> interface. To get this reference, call <see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/>.</para></param>	
            <param name="streamIndex"><para>The zero-based index of the input stream. To get the maximum number of streams, call <see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/> and check the MaxStreamStates structure member.</para></param>	
            <param name="enable"><para>Specifies whether to apply the destination rectangle.</para></param>	
            <param name="rectRef"><para>A reference to a <see cref="T:SharpDX.Rectangle"/> structure that specifies the destination rectangle. If Enable is <see cref="F:SharpDX.Result.False"/>, this parameter is ignored.</para></param>	
            <remarks>	
            The destination rectangle is the portion of the output surface that receives the blit for this stream. The destination rectangle is given in pixel coordinates, relative to the output surface.The default destination rectangle is an empty rectangle (0, 0, 0, 0). If this method is never called, or if the Enable parameter is <see cref="F:SharpDX.Result.False"/>, no data is written from this stream.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetStreamDestRect']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetStreamDestRect([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[In] BOOL Enable,[In, Optional] const RECT* pRect)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetStreamAlpha(SharpDX.Direct3D11.VideoProcessor,System.Int32,System.Boolean,System.Single)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="videoProcessorRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.VideoProcessor"/> interface. To get this reference, call <see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/>.</para></param>	
            <param name="streamIndex"><para>The zero-based index of the input stream. To get the maximum number of streams, call <see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/> and check the MaxStreamStates structure member.</para></param>	
            <param name="enable"><para>Specifies whether alpha blending is enabled.</para></param>	
            <param name="alpha"><para>The planar alpha value. The value can range from 0.0 (transparent) to 1.0 (opaque).  If Enable is <see cref="F:SharpDX.Result.False"/>, this parameter is ignored.</para></param>	
            <remarks>	
            Alpha blending is disabled by default.For each pixel, the destination color value is computed as follows:Cd = Cs * (As * Ap * Ae) + Cd * (1.0 - As * Ap * Ae)where:Cd = The color value of the destination pixel Cs = The color value of the source pixel As = The per-pixel source alpha Ap = The planar alpha value Ae = The palette-entry alpha value, or 1.0 (see Note)Note??Palette-entry alpha values apply only to palettized color formats, and only when the device supports the <see cref="F:SharpDX.Direct3D11.VideoProcessorFeatureCaps.AlphaPalette"/> capability. Otherwise, this factor equals 1.0.The destination alpha value is computed according to the alpha fill mode. For more information, see <see cref="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetOutputAlphaFillMode(SharpDX.Direct3D11.VideoProcessor,SharpDX.Direct3D11.VideoProcessorAlphaFillMode,System.Int32)"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetStreamAlpha']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetStreamAlpha([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[In] BOOL Enable,[In] float Alpha)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetStreamPalette(SharpDX.Direct3D11.VideoProcessor,System.Int32,System.Int32,System.Int32[])">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="videoProcessorRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.VideoProcessor"/> interface. To get this reference, call <see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/>.</para></param>	
            <param name="streamIndex"><para>The zero-based index of the input stream. To get the maximum number of streams, call <see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/> and check the MaxStreamStates structure member.</para></param>	
            <param name="count"><para>The number of elements in the pEntries array.</para></param>	
            <param name="entriesRef"><para>A reference to an array of palette entries. For RGB streams, the palette entries use the DXGI_FORMAT_B8G8R8A8 representation. For YCbCr streams, the palette entries use the <see cref="F:SharpDX.DXGI.Format.Ayuv"/> representation. The caller allocates the array.</para></param>	
            <remarks>	
            This method applies only to  input streams that have a palettized color format. Palettized formats with 4 bits per pixel (bpp) use the first 16 entries in the list. Formats with 8 bpp use the first 256 entries.If a pixel has a palette index greater than the number of entries, the device treats the pixel as white with opaque alpha. For full-range RGB, this value is (255, 255, 255, 255); for YCbCr the value is (255, 235, 128, 128).If the driver does not report the <see cref="F:SharpDX.Direct3D11.VideoProcessorFeatureCaps.AlphaPalette"/> capability flag, every palette entry must have an alpha value of 0xFF (opaque). To query for this capability, call <see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetStreamPalette']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetStreamPalette([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[In] unsigned int Count,[In, Buffer, Optional] const unsigned int* pEntries)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetStreamPixelAspectRatio(SharpDX.Direct3D11.VideoProcessor,System.Int32,System.Boolean,System.Nullable{SharpDX.DXGI.Rational},System.Nullable{SharpDX.DXGI.Rational})">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="videoProcessorRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.VideoProcessor"/> interface. To get this reference, call <see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/>.</para></param>	
            <param name="streamIndex"><para>The zero-based index of the input stream. To get the maximum number of streams, call <see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/> and check the MaxStreamStates structure member.</para></param>	
            <param name="enable"><para>Specifies whether the pSourceAspectRatio and pDestinationAspectRatio parameters contain valid values. Otherwise, the pixel aspect ratios are unspecified.</para></param>	
            <param name="sourceAspectRatioRef"><para>A reference to a <see cref="T:SharpDX.DXGI.Rational"/> structure that contains the pixel aspect ratio of the source rectangle. If Enable is <see cref="F:SharpDX.Result.False"/>, this parameter can be <c>null</c>.</para></param>	
            <param name="destinationAspectRatioRef"><para>A reference to a <see cref="T:SharpDX.DXGI.Rational"/> structure that contains the pixel aspect ratio of the destination rectangle. If Enable is <see cref="F:SharpDX.Result.False"/>, this parameter can be <c>null</c>.</para></param>	
            <remarks>	
            Pixel aspect ratios of the form 0/n and n/0 are not valid.The default pixel aspect ratio is 1:1 (square pixels).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetStreamPixelAspectRatio']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetStreamPixelAspectRatio([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[In] BOOL Enable,[In, Optional] const DXGI_RATIONAL* pSourceAspectRatio,[In, Optional] const DXGI_RATIONAL* pDestinationAspectRatio)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetStreamLumaKey(SharpDX.Direct3D11.VideoProcessor,System.Int32,System.Boolean,System.Single,System.Single)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="videoProcessorRef">No documentation.</param>	
            <param name="streamIndex">No documentation.</param>	
            <param name="enable">No documentation.</param>	
            <param name="lower">No documentation.</param>	
            <param name="upper">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetStreamLumaKey']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetStreamLumaKey([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[In] BOOL Enable,[In] float Lower,[In] float Upper)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetStreamStereoFormat(SharpDX.Direct3D11.VideoProcessor,System.Int32,System.Boolean,SharpDX.Direct3D11.VideoProcessorStereoFormat,System.Boolean,System.Boolean,SharpDX.Direct3D11.VideoProcessorStereoFlipMode,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="videoProcessorRef">No documentation.</param>	
            <param name="streamIndex">No documentation.</param>	
            <param name="enable">No documentation.</param>	
            <param name="format">No documentation.</param>	
            <param name="leftViewFrame0">No documentation.</param>	
            <param name="baseViewFrame0">No documentation.</param>	
            <param name="flipMode">No documentation.</param>	
            <param name="monoOffset">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetStreamStereoFormat']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetStreamStereoFormat([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[In] BOOL Enable,[In] D3D11_VIDEO_PROCESSOR_STEREO_FORMAT Format,[In] BOOL LeftViewFrame0,[In] BOOL BaseViewFrame0,[In] D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE FlipMode,[In] int MonoOffset)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetStreamAutoProcessingMode(SharpDX.Direct3D11.VideoProcessor,System.Int32,System.Boolean)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="videoProcessorRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.VideoProcessor"/> interface. To get this reference, call <see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/>.</para></param>	
            <param name="streamIndex"><para>The zero-based index of the input stream. To get the maximum number of streams, call <see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/> and check the MaxStreamStates structure member.</para></param>	
            <param name="enable"><para>If TRUE, automatic processing features are enabled. If <see cref="F:SharpDX.Result.False"/>, the driver disables any  extra video processing that it might be performing.</para></param>	
            <remarks>	
            By default, the driver might perform certain processing tasks automatically during the video processor blit. This method enables the application to disable these extra video processing features. For example, if you provide your own pixel  shader for the video processor, you might want to disable the driver's automatic processing.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetStreamAutoProcessingMode']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetStreamAutoProcessingMode([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[In] BOOL Enable)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetStreamFilter(SharpDX.Direct3D11.VideoProcessor,System.Int32,SharpDX.Direct3D11.VideoProcessorFilter,System.Boolean,System.Int32)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="videoProcessorRef">No documentation.</param>	
            <param name="streamIndex">No documentation.</param>	
            <param name="filter">No documentation.</param>	
            <param name="enable">No documentation.</param>	
            <param name="level">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetStreamFilter']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetStreamFilter([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[In] D3D11_VIDEO_PROCESSOR_FILTER Filter,[In] BOOL Enable,[In] int Level)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetStreamExtension(SharpDX.Direct3D11.VideoProcessor,System.Int32,System.Guid,System.Int32,System.IntPtr)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="videoProcessorRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.VideoProcessor"/> interface. To get this reference, call <see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/>.</para></param>	
            <param name="streamIndex"><para>The zero-based index of the input stream. To get the maximum number of streams, call <see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/> and check the MaxStreamStates structure member.</para></param>	
            <param name="extensionGuidRef"><para>A reference to a <see cref="T:System.Guid"/> that identifies the operation. The meaning of this <see cref="T:System.Guid"/> is defined by the graphics driver.</para></param>	
            <param name="dataSize"><para>The size of the pData buffer, in bytes.</para></param>	
            <param name="dataRef"><para>A reference to a buffer that contains private state data. The method passes this buffer directly to the driver without validation. It is the responsibility of the driver to validate the data.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetStreamExtension']/*"/>	
            <unmanaged>HRESULT ID3D11VideoContext::VideoProcessorSetStreamExtension([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[In] const GUID* pExtensionGuid,[In] unsigned int DataSize,[In] void* pData)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetStreamFrameFormat(SharpDX.Direct3D11.VideoProcessor,System.Int32,SharpDX.Direct3D11.VideoFrameFormat@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="videoProcessorRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.VideoProcessor"/> interface. To get this reference, call <see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/>.</para></param>	
            <param name="streamIndex"><para>The zero-based index of the input stream. To get the maximum number of streams, call <see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/> and check the MaxStreamStates structure member.</para></param>	
            <param name="frameFormatRef"><para>Receives a <see cref="T:SharpDX.Direct3D11.VideoFrameFormat"/> value that specifies whether the stream contains interlaced or progressive frames.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetStreamFrameFormat']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorGetStreamFrameFormat([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[Out] D3D11_VIDEO_FRAME_FORMAT* pFrameFormat)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetStreamColorSpace(SharpDX.Direct3D11.VideoProcessor,System.Int32,SharpDX.Direct3D11.VideoProcessorColorSpace@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="videoProcessorRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.VideoProcessor"/> interface. To get this reference, call <see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/>.</para></param>	
            <param name="streamIndex"><para>The zero-based index of the input stream. To get the maximum number of streams, call <see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/> and check the MaxStreamStates structure member.</para></param>	
            <param name="colorSpaceRef"><para>Receives a <see cref="T:SharpDX.Direct3D11.VideoProcessorColorSpace"/> value that specifies the color space.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetStreamColorSpace']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorGetStreamColorSpace([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[Out] D3D11_VIDEO_PROCESSOR_COLOR_SPACE* pColorSpace)</unmanaged>	
        </member>
        <!-- Badly formed XML comment ignored for member "M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetStreamOutputRate(SharpDX.Direct3D11.VideoProcessor,System.Int32,SharpDX.Direct3D11.VideoProcessorOutputRate@,System.Boolean@,SharpDX.DXGI.Rational@)" -->
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetStreamSourceRect(SharpDX.Direct3D11.VideoProcessor,System.Int32,System.Boolean@,SharpDX.Rectangle@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="videoProcessorRef">No documentation.</param>	
            <param name="streamIndex">No documentation.</param>	
            <param name="enabledRef">No documentation.</param>	
            <param name="rectRef">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetStreamSourceRect']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorGetStreamSourceRect([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[Out] BOOL* pEnabled,[Out] RECT* pRect)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetStreamDestRect(SharpDX.Direct3D11.VideoProcessor,System.Int32,System.Boolean@,SharpDX.Rectangle@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="videoProcessorRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.VideoProcessor"/> interface. To get this reference, call <see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/>.</para></param>	
            <param name="streamIndex"><para>The zero-based index of the input stream. To get the maximum number of streams, call <see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/> and check the MaxStreamStates structure member.</para></param>	
            <param name="enabledRef"><para>Receives the value TRUE if the destination rectangle is enabled, or <see cref="F:SharpDX.Result.False"/> otherwise.</para></param>	
            <param name="rectRef"><para>A reference to a <see cref="T:SharpDX.Rectangle"/> structure that receives the destination rectangle.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetStreamDestRect']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorGetStreamDestRect([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[Out] BOOL* pEnabled,[Out] RECT* pRect)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetStreamAlpha(SharpDX.Direct3D11.VideoProcessor,System.Int32,System.Boolean@,System.Single@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="videoProcessorRef">No documentation.</param>	
            <param name="streamIndex">No documentation.</param>	
            <param name="enabledRef">No documentation.</param>	
            <param name="alphaRef">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetStreamAlpha']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorGetStreamAlpha([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[Out] BOOL* pEnabled,[Out] float* pAlpha)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetStreamPalette(SharpDX.Direct3D11.VideoProcessor,System.Int32,System.Int32,System.Int32[])">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="videoProcessorRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.VideoProcessor"/> interface. To get this reference, call <see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/>.</para></param>	
            <param name="streamIndex"><para>The zero-based index of the input stream. To get the maximum number of streams, call <see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/> and check the MaxStreamStates structure member.</para></param>	
            <param name="count"><para>The number of entries in the pEntries array.</para></param>	
            <param name="entriesRef"><para>A reference to a UINT array allocated by the caller. The method fills the array with the palette entries. For RGB streams, the palette entries use the DXGI_FORMAT_B8G8R8A8 representation. For YCbCr streams, the palette entries use the <see cref="F:SharpDX.DXGI.Format.Ayuv"/> representation.</para></param>	
            <remarks>	
            This method applies only to input streams that have a palettized color format. Palettized formats with 4 bits per pixel (bpp) use 16 palette entries. Formats with 8 bpp use 256 entries.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetStreamPalette']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorGetStreamPalette([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[In] unsigned int Count,[Out, Buffer] unsigned int* pEntries)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetStreamPixelAspectRatio(SharpDX.Direct3D11.VideoProcessor,System.Int32,System.Boolean@,SharpDX.DXGI.Rational@,SharpDX.DXGI.Rational@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="videoProcessorRef">No documentation.</param>	
            <param name="streamIndex">No documentation.</param>	
            <param name="enabledRef">No documentation.</param>	
            <param name="sourceAspectRatioRef">No documentation.</param>	
            <param name="destinationAspectRatioRef">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetStreamPixelAspectRatio']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorGetStreamPixelAspectRatio([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[Out] BOOL* pEnabled,[Out] DXGI_RATIONAL* pSourceAspectRatio,[Out] DXGI_RATIONAL* pDestinationAspectRatio)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetStreamLumaKey(SharpDX.Direct3D11.VideoProcessor,System.Int32,System.Boolean@,System.Single@,System.Single@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="videoProcessorRef">No documentation.</param>	
            <param name="streamIndex">No documentation.</param>	
            <param name="enabledRef">No documentation.</param>	
            <param name="lowerRef">No documentation.</param>	
            <param name="upperRef">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetStreamLumaKey']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorGetStreamLumaKey([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[Out] BOOL* pEnabled,[Out] float* pLower,[Out] float* pUpper)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetStreamStereoFormat(SharpDX.Direct3D11.VideoProcessor,System.Int32,System.Boolean@,SharpDX.Direct3D11.VideoProcessorStereoFormat@,System.Boolean@,System.Boolean@,SharpDX.Direct3D11.VideoProcessorStereoFlipMode@,System.Int32@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="videoProcessorRef">No documentation.</param>	
            <param name="streamIndex">No documentation.</param>	
            <param name="enableRef">No documentation.</param>	
            <param name="formatRef">No documentation.</param>	
            <param name="leftViewFrame0Ref">No documentation.</param>	
            <param name="baseViewFrame0Ref">No documentation.</param>	
            <param name="flipModeRef">No documentation.</param>	
            <param name="monoOffset">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetStreamStereoFormat']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorGetStreamStereoFormat([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[Out] BOOL* pEnable,[Out] D3D11_VIDEO_PROCESSOR_STEREO_FORMAT* pFormat,[Out] BOOL* pLeftViewFrame0,[Out] BOOL* pBaseViewFrame0,[Out] D3D11_VIDEO_PROCESSOR_STEREO_FLIP_MODE* pFlipMode,[Out] int* MonoOffset)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetStreamAutoProcessingMode(SharpDX.Direct3D11.VideoProcessor,System.Int32,System.Boolean@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="videoProcessorRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.VideoProcessor"/> interface. To get this reference, call <see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/>.</para></param>	
            <param name="streamIndex"><para>The zero-based index of the input stream. To get the maximum number of streams, call <see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/> and check the MaxStreamStates structure member.</para></param>	
            <param name="enabledRef"><para>Receives the value TRUE if automatic processing features are enabled, or <see cref="F:SharpDX.Result.False"/> otherwise.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetStreamAutoProcessingMode']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorGetStreamAutoProcessingMode([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[Out] BOOL* pEnabled)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetStreamFilter(SharpDX.Direct3D11.VideoProcessor,System.Int32,SharpDX.Direct3D11.VideoProcessorFilter,System.Boolean@,System.Int32@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="videoProcessorRef">No documentation.</param>	
            <param name="streamIndex">No documentation.</param>	
            <param name="filter">No documentation.</param>	
            <param name="enabledRef">No documentation.</param>	
            <param name="levelRef">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetStreamFilter']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorGetStreamFilter([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[In] D3D11_VIDEO_PROCESSOR_FILTER Filter,[Out] BOOL* pEnabled,[Out] int* pLevel)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetStreamExtension(SharpDX.Direct3D11.VideoProcessor,System.Int32,System.Guid,System.Int32,System.IntPtr@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="videoProcessorRef">No documentation.</param>	
            <param name="streamIndex">No documentation.</param>	
            <param name="extensionGuidRef">No documentation.</param>	
            <param name="dataSize">No documentation.</param>	
            <param name="dataRef">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetStreamExtension']/*"/>	
            <unmanaged>HRESULT ID3D11VideoContext::VideoProcessorGetStreamExtension([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[In] const GUID* pExtensionGuid,[In] unsigned int DataSize,[Out] void* pData)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorBlt(SharpDX.Direct3D11.VideoProcessor,SharpDX.Direct3D11.VideoProcessorOutputView,System.Int32,System.Int32,SharpDX.Direct3D11.VideoProcessorStream[])">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="videoProcessorRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.VideoProcessor"/> interface. To get this reference, call the <see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/> method.</para></param>	
            <param name="viewRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.VideoProcessorOutputView"/> interface for the output surface. The output of the video processing operation will be written to this surface.</para></param>	
            <param name="outputFrame"><para>The frame number of the output video frame, indexed from zero. </para></param>	
            <param name="streamCount"><para>The number of input streams to process.</para></param>	
            <param name="streamsRef"><para>A reference to an array of <see cref="T:SharpDX.Direct3D11.VideoProcessorStream"/> structures that contain information about the input streams. The caller allocates the array and fills in each structure. The number of elements in the array is given in the StreamCount parameter. </para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The maximum value of StreamCount is given in the MaxStreamStates member of the <see cref="T:SharpDX.Direct3D11.VideoProcessorCaps"/> structure. The maximum numbr of streams that can be enabled at one time is given in the MaxInputStreams member of that structure.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorBlt']/*"/>	
            <unmanaged>HRESULT ID3D11VideoContext::VideoProcessorBlt([In] ID3D11VideoProcessor* pVideoProcessor,[In] ID3D11VideoProcessorOutputView* pView,[In] unsigned int OutputFrame,[In] unsigned int StreamCount,[In, Buffer] const D3D11_VIDEO_PROCESSOR_STREAM* pStreams)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.NegotiateCryptoSessionKeyExchange(SharpDX.Direct3D11.CryptoSession,System.Int32,System.IntPtr)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="cryptoSessionRef">No documentation.</param>	
            <param name="dataSize">No documentation.</param>	
            <param name="dataRef">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::NegotiateCryptoSessionKeyExchange']/*"/>	
            <unmanaged>HRESULT ID3D11VideoContext::NegotiateCryptoSessionKeyExchange([In] ID3D11CryptoSession* pCryptoSession,[In] unsigned int DataSize,[Out, Buffer] void* pData)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.EncryptionBlt(SharpDX.Direct3D11.CryptoSession,SharpDX.Direct3D11.Texture2D,SharpDX.Direct3D11.Texture2D,System.Int32,System.IntPtr)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="cryptoSessionRef">No documentation.</param>	
            <param name="srcSurfaceRef">No documentation.</param>	
            <param name="dstSurfaceRef">No documentation.</param>	
            <param name="iVSize">No documentation.</param>	
            <param name="iVRef">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::EncryptionBlt']/*"/>	
            <unmanaged>void ID3D11VideoContext::EncryptionBlt([In] ID3D11CryptoSession* pCryptoSession,[In] ID3D11Texture2D* pSrcSurface,[In] ID3D11Texture2D* pDstSurface,[In] unsigned int IVSize,[In, Buffer, Optional] void* pIV)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.DecryptionBlt(SharpDX.Direct3D11.CryptoSession,SharpDX.Direct3D11.Texture2D,SharpDX.Direct3D11.Texture2D,System.Nullable{SharpDX.Direct3D11.EncryptedBlockInformation},System.Int32,System.IntPtr,System.Int32,System.IntPtr)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="cryptoSessionRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.CryptoSession"/> interface.</para></param>	
            <param name="srcSurfaceRef"><para>A reference to the surface that contains the source data.</para></param>	
            <param name="dstSurfaceRef"><para>A reference to the protected surface where the encrypted data is written.</para></param>	
            <param name="encryptedBlockInfoRef"><para>A reference to a <see cref="T:SharpDX.Direct3D11.EncryptedBlockInformation"/> structure, or <c>null</c>.</para> <para>If the driver supports partially encrypted buffers,  pEncryptedBlockInfo indicates which portions of the buffer are encrypted.  If the entire surface is encrypted, set this parameter to <c>null</c>. </para> <para>To check whether the driver supports partially encrypted buffers, call <see cref="M:SharpDX.Direct3D11.VideoDevice.GetContentProtectionCaps(System.Nullable{System.Guid},System.Nullable{System.Guid},SharpDX.Direct3D11.VideoContentProtectionCaps@)"/> and check for the <see cref="F:SharpDX.Direct3D11.ContentProtectionCaps.PartialDecryption"/>  capabilities flag. If the driver does not support partially encrypted buffers, set this parameter to <c>null</c>.</para></param>	
            <param name="contentKeySize"><para>A reference to a buffer that contains a content encryption key, or <c>null</c>. To query whether the driver supports the use of content keys, call <see cref="M:SharpDX.Direct3D11.VideoDevice.GetContentProtectionCaps(System.Nullable{System.Guid},System.Nullable{System.Guid},SharpDX.Direct3D11.VideoContentProtectionCaps@)"/> and check for the <see cref="F:SharpDX.Direct3D11.ContentProtectionCaps.ContentKey"/> capabilities flag. </para> <para>If the driver supports content keys, use the content key to encrypt the surface. Encrypt the content key using the session key, and place the  resulting cipher text in pContentKey. If the driver does not support content keys, use the session key to encrypt the surface and set pContentKey to <c>null</c>.</para></param>	
            <param name="contentKeyRef"><para>The size of the encrypted content key, in bytes.</para></param>	
            <param name="iVSize"><para>A reference to a buffer that contains the initialization vector (IV). </para> <para>For 128-bit AES-CTR encryption, pIV points to a <see cref="T:SharpDX.Direct3D11.AesCtrIv"/> structure. The caller allocates the structure and generates the IV. When you generate the first IV, initialize the structure to a random number. For each subsequent IV, simply increment the IV member of the structure, ensuring that the value always increases.  This procedure enables the driver to validate that the same IV is never used more than once with the same key pair.</para> <para>For other encryption types, a different structure might be used, or the encryption might not use an IV.</para></param>	
            <param name="iVRef"><para>The size of the pIV buffer, in bytes.</para></param>	
            <remarks>	
            Not all hardware or drivers support this functionality for all cryptographic types.This method does not support writing to subrectangles of the surface.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::DecryptionBlt']/*"/>	
            <unmanaged>void ID3D11VideoContext::DecryptionBlt([In] ID3D11CryptoSession* pCryptoSession,[In] ID3D11Texture2D* pSrcSurface,[In] ID3D11Texture2D* pDstSurface,[In, Optional] D3D11_ENCRYPTED_BLOCK_INFO* pEncryptedBlockInfo,[In] unsigned int ContentKeySize,[In, Buffer, Optional] const void* pContentKey,[In] unsigned int IVSize,[In, Buffer, Optional] void* pIV)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.StartSessionKeyRefresh(SharpDX.Direct3D11.CryptoSession,System.Int32,System.IntPtr)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="cryptoSessionRef">No documentation.</param>	
            <param name="randomNumberSize">No documentation.</param>	
            <param name="randomNumberRef">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::StartSessionKeyRefresh']/*"/>	
            <unmanaged>void ID3D11VideoContext::StartSessionKeyRefresh([In] ID3D11CryptoSession* pCryptoSession,[In] unsigned int RandomNumberSize,[Out, Buffer] void* pRandomNumber)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.FinishSessionKeyRefresh(SharpDX.Direct3D11.CryptoSession)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="cryptoSessionRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.CryptoSession"/> interface.</para></param>	
            <remarks>	
            Before calling this method, call <see cref="M:SharpDX.Direct3D11.VideoContext.StartSessionKeyRefresh(SharpDX.Direct3D11.CryptoSession,System.Int32,System.IntPtr)"/>. The StartSessionKeyRefresh method gets a random number from the driver, which is used to create a new session key. The new session key does not become active until the application calls FinishSessionKeyRefresh. After the application calls FinishSessionKeyRefresh, all protected surfaces are encrypted using the new session key.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::FinishSessionKeyRefresh']/*"/>	
            <unmanaged>void ID3D11VideoContext::FinishSessionKeyRefresh([In] ID3D11CryptoSession* pCryptoSession)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.GetEncryptionBltKey(SharpDX.Direct3D11.CryptoSession,System.Int32,System.IntPtr)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="cryptoSessionRef">No documentation.</param>	
            <param name="keySize">No documentation.</param>	
            <param name="readbackKeyRef">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::GetEncryptionBltKey']/*"/>	
            <unmanaged>HRESULT ID3D11VideoContext::GetEncryptionBltKey([In] ID3D11CryptoSession* pCryptoSession,[In] unsigned int KeySize,[Out, Buffer] void* pReadbackKey)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.NegotiateAuthenticatedChannelKeyExchange(SharpDX.Direct3D11.AuthenticatedChannel,System.Int32,System.IntPtr)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="channelRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.AuthenticatedChannel"/> interface.</para></param>	
            <param name="dataSize"><para>The size of the data in the pData array, in bytes.</para></param>	
            <param name="dataRef"><para>A reference to a byte array that contains the encrypted session key. The buffer must contain 256 bytes of data, encrypted using RSA Encryption Scheme - Optimal Asymmetric Encryption Padding (RSAES-OAEP).</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::NegotiateAuthenticatedChannelKeyExchange']/*"/>	
            <unmanaged>HRESULT ID3D11VideoContext::NegotiateAuthenticatedChannelKeyExchange([In] ID3D11AuthenticatedChannel* pChannel,[In] unsigned int DataSize,[Out, Buffer] void* pData)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.QueryAuthenticatedChannel(SharpDX.Direct3D11.AuthenticatedChannel,System.Int32,System.IntPtr,System.Int32,System.IntPtr)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="channelRef">No documentation.</param>	
            <param name="inputSize">No documentation.</param>	
            <param name="inputRef">No documentation.</param>	
            <param name="outputSize">No documentation.</param>	
            <param name="outputRef">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::QueryAuthenticatedChannel']/*"/>	
            <unmanaged>HRESULT ID3D11VideoContext::QueryAuthenticatedChannel([In] ID3D11AuthenticatedChannel* pChannel,[In] unsigned int InputSize,[In, Buffer] const void* pInput,[In] unsigned int OutputSize,[Out, Buffer] void* pOutput)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.ConfigureAuthenticatedChannel(SharpDX.Direct3D11.AuthenticatedChannel,System.Int32,System.IntPtr,SharpDX.Direct3D11.AuthenticatedConfigureOutput@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="channelRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.AuthenticatedChannel"/> interface.</para></param>	
            <param name="inputSize"><para>The size of the pInput array, in bytes.</para></param>	
            <param name="inputRef"><para>A reference to a byte array that contains input data for the command. This buffer always starts with a <see cref="T:SharpDX.Direct3D11.AuthenticatedConfigureInput"/> structure. The ConfigureType member of the structure specifies the command and defines the meaning of the rest of the buffer.</para></param>	
            <param name="outputRef"><para>A reference to a <see cref="T:SharpDX.Direct3D11.AuthenticatedConfigureOutput"/> structure that receives the response to the command.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::ConfigureAuthenticatedChannel']/*"/>	
            <unmanaged>HRESULT ID3D11VideoContext::ConfigureAuthenticatedChannel([In] ID3D11AuthenticatedChannel* pChannel,[In] unsigned int InputSize,[In, Buffer] const void* pInput,[Out] D3D11_AUTHENTICATED_CONFIGURE_OUTPUT* pOutput)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorSetStreamRotation(SharpDX.Direct3D11.VideoProcessor,System.Int32,System.Boolean,SharpDX.Direct3D11.VideoProcessorRotation)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="videoProcessorRef">No documentation.</param>	
            <param name="streamIndex">No documentation.</param>	
            <param name="enable">No documentation.</param>	
            <param name="rotation">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorSetStreamRotation']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorSetStreamRotation([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[In] BOOL Enable,[In] D3D11_VIDEO_PROCESSOR_ROTATION Rotation)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoContext.VideoProcessorGetStreamRotation(SharpDX.Direct3D11.VideoProcessor,System.Int32,System.Boolean@,SharpDX.Direct3D11.VideoProcessorRotation@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="videoProcessorRef">No documentation.</param>	
            <param name="streamIndex">No documentation.</param>	
            <param name="enableRef">No documentation.</param>	
            <param name="rotationRef">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoContext::VideoProcessorGetStreamRotation']/*"/>	
            <unmanaged>void ID3D11VideoContext::VideoProcessorGetStreamRotation([In] ID3D11VideoProcessor* pVideoProcessor,[In] unsigned int StreamIndex,[Out] BOOL* pEnable,[Out] D3D11_VIDEO_PROCESSOR_ROTATION* pRotation)</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoDecoder">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDecoder']/*"/>	
            <unmanaged>ID3D11VideoDecoder</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDecoder.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.VideoDecoder"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDecoder.GetCreationParameters(SharpDX.Direct3D11.VideoDecoderDescription@,SharpDX.Direct3D11.VideoDecoderConfig@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="videoDescRef"><para>A reference to a <see cref="T:SharpDX.Direct3D11.VideoDecoderDescription"/> structure that receives a description of the video stream.</para></param>	
            <param name="configRef"><para>A reference to a <see cref="T:SharpDX.Direct3D11.VideoDecoderConfig"/> structure that receives the decoder configuration.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDecoder::GetCreationParameters']/*"/>	
            <unmanaged>HRESULT ID3D11VideoDecoder::GetCreationParameters([Out] D3D11_VIDEO_DECODER_DESC* pVideoDesc,[Out] D3D11_VIDEO_DECODER_CONFIG* pConfig)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDecoder.GetDriverHandle(System.IntPtr@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="driverHandleRef"><para>Receives a handle to the driver.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The driver handle can be used to configure content protection.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDecoder::GetDriverHandle']/*"/>	
            <unmanaged>HRESULT ID3D11VideoDecoder::GetDriverHandle([Out] void** pDriverHandle)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.VideoDecoder.DriverHandle">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            The driver handle can be used to configure content protection.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDecoder::GetDriverHandle']/*"/>	
            <unmanaged>GetDriverHandle</unmanaged>	
            <unmanaged>HRESULT ID3D11VideoDecoder::GetDriverHandle([Out] void** pDriverHandle)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.VideoDecoderOutputView">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDecoderOutputView']/*"/>	
            <unmanaged>ID3D11VideoDecoderOutputView</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDecoderOutputView.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.VideoDecoderOutputView"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDecoderOutputView.GetDescription(SharpDX.Direct3D11.VideoDecoderOutputViewDescription@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="descRef"><para>A reference to a <see cref="T:SharpDX.Direct3D11.VideoDecoderOutputViewDescription"/> structure. The method fills the structure with the view properties.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDecoderOutputView::GetDesc']/*"/>	
            <unmanaged>void ID3D11VideoDecoderOutputView::GetDesc([Out] D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC* pDesc)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.VideoDecoderOutputView.Description">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDecoderOutputView::GetDesc']/*"/>	
            <unmanaged>GetDesc</unmanaged>	
            <unmanaged>void ID3D11VideoDecoderOutputView::GetDesc([Out] D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.VideoDevice">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice']/*"/>	
            <unmanaged>ID3D11VideoDevice</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDevice.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.VideoDevice"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDevice.CreateVideoDecoder(SharpDX.Direct3D11.VideoDecoderDescription@,SharpDX.Direct3D11.VideoDecoderConfig@,SharpDX.Direct3D11.VideoDecoder@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="videoDescRef"><para>A reference to a <see cref="T:SharpDX.Direct3D11.VideoDecoderDescription"/> structure that describes the video stream and the decoder profile.</para></param>	
            <param name="configRef"><para>A reference to a <see cref="T:SharpDX.Direct3D11.VideoDecoderConfig"/> structure that specifies the decoder configuration.</para></param>	
            <param name="decoderOut"><para>Receives a reference to the <see cref="T:SharpDX.Direct3D11.VideoDecoder"/> interface. The caller must release the interface.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            This method allocates the necessary decoder buffers.The <see cref="M:SharpDX.Direct3D11.DeviceContext.ClearState"/> method does not affect the internal state of the video decoder.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice::CreateVideoDecoder']/*"/>	
            <unmanaged>HRESULT ID3D11VideoDevice::CreateVideoDecoder([In] const D3D11_VIDEO_DECODER_DESC* pVideoDesc,[In] const D3D11_VIDEO_DECODER_CONFIG* pConfig,[Out] ID3D11VideoDecoder** ppDecoder)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="enumRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.VideoProcessorEnumerator"/> interface. To get this reference, call <see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessorEnumerator(SharpDX.Direct3D11.VideoProcessorContentDescription@,SharpDX.Direct3D11.VideoProcessorEnumerator@)"/>.</para></param>	
            <param name="rateConversionIndex"><para>Specifies the frame-rate conversion capabilities for the video processor. The value is a zero-based index that corresponds to the TypeIndex parameter of the <see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorRateConversionCaps(System.Int32,SharpDX.Direct3D11.VideoProcessorRateConversionCaps@)"/> method. </para></param>	
            <param name="videoProcessorOut"><para>Receives a reference to the <see cref="T:SharpDX.Direct3D11.VideoProcessor"/> interface. The caller must release the interface.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            The <see cref="M:SharpDX.Direct3D11.DeviceContext.ClearState"/> method does not affect the internal state of the video processor.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice::CreateVideoProcessor']/*"/>	
            <unmanaged>HRESULT ID3D11VideoDevice::CreateVideoProcessor([In] ID3D11VideoProcessorEnumerator* pEnum,[In] unsigned int RateConversionIndex,[Out] ID3D11VideoProcessor** ppVideoProcessor)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDevice.CreateAuthenticatedChannel(SharpDX.Direct3D11.AuthenticatedChannelType,SharpDX.Direct3D11.AuthenticatedChannel@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="channelType">No documentation.</param>	
            <param name="authenticatedChannelOut">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice::CreateAuthenticatedChannel']/*"/>	
            <unmanaged>HRESULT ID3D11VideoDevice::CreateAuthenticatedChannel([In] D3D11_AUTHENTICATED_CHANNEL_TYPE ChannelType,[Out] ID3D11AuthenticatedChannel** ppAuthenticatedChannel)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDevice.CreateCryptoSession(System.Guid,System.Nullable{System.Guid},System.Guid,SharpDX.Direct3D11.CryptoSession@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="cryptoTypeRef">No documentation.</param>	
            <param name="decoderProfileRef">No documentation.</param>	
            <param name="keyExchangeTypeRef">No documentation.</param>	
            <param name="cryptoSessionOut">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice::CreateCryptoSession']/*"/>	
            <unmanaged>HRESULT ID3D11VideoDevice::CreateCryptoSession([In] const GUID* pCryptoType,[In, Optional] const GUID* pDecoderProfile,[In] const GUID* pKeyExchangeType,[Out] ID3D11CryptoSession** ppCryptoSession)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDevice.CreateVideoDecoderOutputView(SharpDX.Direct3D11.Resource,SharpDX.Direct3D11.VideoDecoderOutputViewDescription@,SharpDX.Direct3D11.VideoDecoderOutputView@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="resourceRef">No documentation.</param>	
            <param name="descRef">No documentation.</param>	
            <param name="vDOVViewOut">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice::CreateVideoDecoderOutputView']/*"/>	
            <unmanaged>HRESULT ID3D11VideoDevice::CreateVideoDecoderOutputView([In] ID3D11Resource* pResource,[In] const D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC* pDesc,[Out, Optional] ID3D11VideoDecoderOutputView** ppVDOVView)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessorInputView(SharpDX.Direct3D11.Resource,SharpDX.Direct3D11.VideoProcessorEnumerator,SharpDX.Direct3D11.VideoProcessorInputViewDescription,SharpDX.Direct3D11.VideoProcessorInputView@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="resourceRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.Resource"/> interface of the input surface.</para></param>	
            <param name="enumRef"><para>A reference to the <see cref="T:SharpDX.Direct3D11.VideoProcessorEnumerator"/> interface that specifies the video processor. To get this reference, call <see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessorEnumerator(SharpDX.Direct3D11.VideoProcessorContentDescription@,SharpDX.Direct3D11.VideoProcessorEnumerator@)"/>.</para></param>	
            <param name="descRef"><para>A reference to a <see cref="T:SharpDX.Direct3D11.VideoProcessorInputViewDescription"/> structure that describes the view.</para></param>	
            <param name="vPIViewOut"><para>Receives a reference to the <see cref="T:SharpDX.Direct3D11.VideoProcessorInputView"/> interface. The caller must release the resource. If this parameter is <c>null</c>, the method checks whether the view is supported, but does not create the view. </para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            Set the ppVPIView parameter to <c>null</c> to test whether a view is supported.The surface format is given in the FourCC member of the <see cref="T:SharpDX.Direct3D11.VideoProcessorInputViewDescription"/> structure. The method fails if the video processor does not support this format as an input sample.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice::CreateVideoProcessorInputView']/*"/>	
            <unmanaged>HRESULT ID3D11VideoDevice::CreateVideoProcessorInputView([In] ID3D11Resource* pResource,[In] ID3D11VideoProcessorEnumerator* pEnum,[In] const D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC* pDesc,[Out, Optional] ID3D11VideoProcessorInputView** ppVPIView)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessorOutputView(SharpDX.Direct3D11.Resource,SharpDX.Direct3D11.VideoProcessorEnumerator,SharpDX.Direct3D11.VideoProcessorOutputViewDescription,SharpDX.Direct3D11.VideoProcessorOutputView@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="resourceRef">No documentation.</param>	
            <param name="enumRef">No documentation.</param>	
            <param name="descRef">No documentation.</param>	
            <param name="vPOViewOut">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice::CreateVideoProcessorOutputView']/*"/>	
            <unmanaged>HRESULT ID3D11VideoDevice::CreateVideoProcessorOutputView([In] ID3D11Resource* pResource,[In] ID3D11VideoProcessorEnumerator* pEnum,[In] const D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC* pDesc,[Out, Optional] ID3D11VideoProcessorOutputView** ppVPOView)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessorEnumerator(SharpDX.Direct3D11.VideoProcessorContentDescription@,SharpDX.Direct3D11.VideoProcessorEnumerator@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="descRef"><para>A reference to a <see cref="T:SharpDX.Direct3D11.VideoProcessorContentDescription"/> structure that describes the video content.</para></param>	
            <param name="enumOut"><para>Receives a reference to the <see cref="T:SharpDX.Direct3D11.VideoProcessorEnumerator"/> interface. The caller must release the interface.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            To create the video processor device, pass the <see cref="T:SharpDX.Direct3D11.VideoProcessorEnumerator"/> reference to the <see cref="M:SharpDX.Direct3D11.VideoDevice.CreateVideoProcessor(SharpDX.Direct3D11.VideoProcessorEnumerator,System.Int32,SharpDX.Direct3D11.VideoProcessor@)"/> method.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice::CreateVideoProcessorEnumerator']/*"/>	
            <unmanaged>HRESULT ID3D11VideoDevice::CreateVideoProcessorEnumerator([In] const D3D11_VIDEO_PROCESSOR_CONTENT_DESC* pDesc,[Out] ID3D11VideoProcessorEnumerator** ppEnum)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDevice.GetVideoDecoderProfileCount">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <returns>Returns the number of DXVA profiles.</returns>	
            <remarks>	
            To enumerate the profiles, call <see cref="M:SharpDX.Direct3D11.VideoDevice.GetVideoDecoderProfile(System.Int32,System.Guid@)"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice::GetVideoDecoderProfileCount']/*"/>	
            <unmanaged>unsigned int ID3D11VideoDevice::GetVideoDecoderProfileCount()</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDevice.GetVideoDecoderProfile(System.Int32,System.Guid@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="index">No documentation.</param>	
            <param name="decoderProfileRef">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice::GetVideoDecoderProfile']/*"/>	
            <unmanaged>HRESULT ID3D11VideoDevice::GetVideoDecoderProfile([In] unsigned int Index,[Out] GUID* pDecoderProfile)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDevice.CheckVideoDecoderFormat(System.Guid,SharpDX.DXGI.Format,System.Boolean@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="decoderProfileRef"><para>A reference to a <see cref="T:System.Guid"/> that identifies the DXVA profile. To get the list of supported profiles, call <see cref="M:SharpDX.Direct3D11.VideoDevice.GetVideoDecoderProfile(System.Int32,System.Guid@)"/>.</para></param>	
            <param name="format"><para>A <see cref="T:SharpDX.DXGI.Format"/> value that specifies the output format. Typical values include <see cref="F:SharpDX.DXGI.Format.Nv12"/> and <see cref="F:SharpDX.DXGI.Format.Opaque420"/>.</para></param>	
            <param name="supportedRef"><para>Receives the value TRUE if the format is supported, or <see cref="F:SharpDX.Result.False"/> otherwise.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            If the driver does not support the DXVA profile given in pDecoderProfile, the method returns E_INVALIDARG. If the driver supports the profile, but the DXGI format is not compatible with the profile, the method succeeds but returns the value <see cref="F:SharpDX.Result.False"/> in pSupported.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice::CheckVideoDecoderFormat']/*"/>	
            <unmanaged>HRESULT ID3D11VideoDevice::CheckVideoDecoderFormat([In] const GUID* pDecoderProfile,[In] DXGI_FORMAT Format,[Out] BOOL* pSupported)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDevice.GetVideoDecoderConfigCount(SharpDX.Direct3D11.VideoDecoderDescription@,System.Int32@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="descRef"><para>A reference to a  <see cref="T:SharpDX.Direct3D11.VideoDecoderDescription"/> structure that describes the video stream.</para></param>	
            <param name="countRef"><para>Receives the number of decoder configurations.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <remarks>	
            To enumerate the decoder configurations, call <see cref="M:SharpDX.Direct3D11.VideoDevice.GetVideoDecoderConfig(SharpDX.Direct3D11.VideoDecoderDescription@,System.Int32,SharpDX.Direct3D11.VideoDecoderConfig@)"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice::GetVideoDecoderConfigCount']/*"/>	
            <unmanaged>HRESULT ID3D11VideoDevice::GetVideoDecoderConfigCount([In] const D3D11_VIDEO_DECODER_DESC* pDesc,[Out] unsigned int* pCount)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDevice.GetVideoDecoderConfig(SharpDX.Direct3D11.VideoDecoderDescription@,System.Int32,SharpDX.Direct3D11.VideoDecoderConfig@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="descRef"><para>A reference to a  <see cref="T:SharpDX.Direct3D11.VideoDecoderDescription"/> structure that describes the video stream.</para></param>	
            <param name="index"><para>The zero-based index of the decoder configuration. To get the number of configurations that the driver supports, call <see cref="M:SharpDX.Direct3D11.VideoDevice.GetVideoDecoderConfigCount(SharpDX.Direct3D11.VideoDecoderDescription@,System.Int32@)"/>.</para></param>	
            <param name="configRef"><para>A reference to a <see cref="T:SharpDX.Direct3D11.VideoDecoderConfig"/> structure. The method fills in the structure with the decoder configuration.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice::GetVideoDecoderConfig']/*"/>	
            <unmanaged>HRESULT ID3D11VideoDevice::GetVideoDecoderConfig([In] const D3D11_VIDEO_DECODER_DESC* pDesc,[In] unsigned int Index,[Out] D3D11_VIDEO_DECODER_CONFIG* pConfig)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDevice.GetContentProtectionCaps(System.Nullable{System.Guid},System.Nullable{System.Guid},SharpDX.Direct3D11.VideoContentProtectionCaps@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="cryptoTypeRef">No documentation.</param>	
            <param name="decoderProfileRef">No documentation.</param>	
            <param name="capsRef">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice::GetContentProtectionCaps']/*"/>	
            <unmanaged>HRESULT ID3D11VideoDevice::GetContentProtectionCaps([In, Optional] const GUID* pCryptoType,[In, Optional] const GUID* pDecoderProfile,[Out] D3D11_VIDEO_CONTENT_PROTECTION_CAPS* pCaps)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDevice.CheckCryptoKeyExchange(System.Guid,System.Nullable{System.Guid},System.Int32,System.Guid@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="cryptoTypeRef">No documentation.</param>	
            <param name="decoderProfileRef">No documentation.</param>	
            <param name="index">No documentation.</param>	
            <param name="keyExchangeTypeRef">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice::CheckCryptoKeyExchange']/*"/>	
            <unmanaged>HRESULT ID3D11VideoDevice::CheckCryptoKeyExchange([In] const GUID* pCryptoType,[In, Optional] const GUID* pDecoderProfile,[In] unsigned int Index,[Out] GUID* pKeyExchangeType)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDevice.SetPrivateData(System.Guid,System.Int32,System.IntPtr)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="guid"><para>The <see cref="T:System.Guid"/> associated with the data.</para></param>	
            <param name="dataSize"><para>The size of the data, in bytes.</para></param>	
            <param name="dataRef"><para>A reference to the data.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice::SetPrivateData']/*"/>	
            <unmanaged>HRESULT ID3D11VideoDevice::SetPrivateData([In] const GUID&amp; guid,[In] unsigned int DataSize,[In, Buffer, Optional] const void* pData)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoDevice.SetPrivateDataInterface(System.Guid,SharpDX.ComObject)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="guid">No documentation.</param>	
            <param name="dataRef">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice::SetPrivateDataInterface']/*"/>	
            <unmanaged>HRESULT ID3D11VideoDevice::SetPrivateDataInterface([In] const GUID&amp; guid,[In, Optional] const IUnknown* pData)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.VideoDevice.VideoDecoderProfileCount">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            To enumerate the profiles, call <see cref="M:SharpDX.Direct3D11.VideoDevice.GetVideoDecoderProfile(System.Int32,System.Guid@)"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoDevice::GetVideoDecoderProfileCount']/*"/>	
            <unmanaged>GetVideoDecoderProfileCount</unmanaged>	
            <unmanaged>unsigned int ID3D11VideoDevice::GetVideoDecoderProfileCount()</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessor">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessor']/*"/>	
            <unmanaged>ID3D11VideoProcessor</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoProcessor.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.VideoProcessor"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoProcessor.GetContentDescription(SharpDX.Direct3D11.VideoProcessorContentDescription@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="descRef">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessor::GetContentDesc']/*"/>	
            <unmanaged>void ID3D11VideoProcessor::GetContentDesc([Out] D3D11_VIDEO_PROCESSOR_CONTENT_DESC* pDesc)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoProcessor.GetRateConversionCaps(SharpDX.Direct3D11.VideoProcessorRateConversionCaps@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="capsRef"><para>A reference to a <see cref="T:SharpDX.Direct3D11.VideoProcessorRateConversionCaps"/> structure that receives the rate conversion capabilities.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessor::GetRateConversionCaps']/*"/>	
            <unmanaged>void ID3D11VideoProcessor::GetRateConversionCaps([Out] D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS* pCaps)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.VideoProcessor.ContentDescription">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessor::GetContentDesc']/*"/>	
            <unmanaged>GetContentDesc</unmanaged>	
            <unmanaged>void ID3D11VideoProcessor::GetContentDesc([Out] D3D11_VIDEO_PROCESSOR_CONTENT_DESC* pDesc)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.VideoProcessor.RateConversionCaps">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessor::GetRateConversionCaps']/*"/>	
            <unmanaged>GetRateConversionCaps</unmanaged>	
            <unmanaged>void ID3D11VideoProcessor::GetRateConversionCaps([Out] D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS* pCaps)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorEnumerator">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessorEnumerator']/*"/>	
            <unmanaged>ID3D11VideoProcessorEnumerator</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoProcessorEnumerator.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.VideoProcessorEnumerator"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorContentDescription(SharpDX.Direct3D11.VideoProcessorContentDescription@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="contentDescRef">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessorEnumerator::GetVideoProcessorContentDesc']/*"/>	
            <unmanaged>HRESULT ID3D11VideoProcessorEnumerator::GetVideoProcessorContentDesc([Out] D3D11_VIDEO_PROCESSOR_CONTENT_DESC* pContentDesc)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoProcessorEnumerator.CheckVideoProcessorFormat(SharpDX.DXGI.Format,System.Int32@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="format"><para>The video format to query, specified as a <see cref="T:SharpDX.DXGI.Format"/> value.</para></param>	
            <param name="flagsRef"><para>Receives a bitwise OR of zero or more flags from the <see cref="T:SharpDX.Direct3D11.VideoProcessorFormatSupport"/> enumeration.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessorEnumerator::CheckVideoProcessorFormat']/*"/>	
            <unmanaged>HRESULT ID3D11VideoProcessorEnumerator::CheckVideoProcessorFormat([In] DXGI_FORMAT Format,[Out] unsigned int* pFlags)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="capsRef"><para>A reference to a <see cref="T:SharpDX.Direct3D11.VideoProcessorCaps"/> structure that receives the capabilities.</para></param>	
            <returns>If this method succeeds, it returns <see cref="F:SharpDX.Result.Ok"/>. Otherwise, it returns an <see cref="T:SharpDX.Result"/> error code.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps']/*"/>	
            <unmanaged>HRESULT ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps([Out] D3D11_VIDEO_PROCESSOR_CAPS* pCaps)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorRateConversionCaps(System.Int32,SharpDX.Direct3D11.VideoProcessorRateConversionCaps@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="typeIndex">No documentation.</param>	
            <param name="capsRef">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessorEnumerator::GetVideoProcessorRateConversionCaps']/*"/>	
            <unmanaged>HRESULT ID3D11VideoProcessorEnumerator::GetVideoProcessorRateConversionCaps([In] unsigned int TypeIndex,[Out] D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS* pCaps)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCustomRate(System.Int32,System.Int32,SharpDX.Direct3D11.VideoProcessorCustomRate@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="typeIndex">No documentation.</param>	
            <param name="customRateIndex">No documentation.</param>	
            <param name="rateRef">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessorEnumerator::GetVideoProcessorCustomRate']/*"/>	
            <unmanaged>HRESULT ID3D11VideoProcessorEnumerator::GetVideoProcessorCustomRate([In] unsigned int TypeIndex,[In] unsigned int CustomRateIndex,[Out] D3D11_VIDEO_PROCESSOR_CUSTOM_RATE* pRate)</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorFilterRange(SharpDX.Direct3D11.VideoProcessorFilter,SharpDX.Direct3D11.VideoProcessorFilterRange@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="filter">No documentation.</param>	
            <param name="rangeRef">No documentation.</param>	
            <returns>No documentation.</returns>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessorEnumerator::GetVideoProcessorFilterRange']/*"/>	
            <unmanaged>HRESULT ID3D11VideoProcessorEnumerator::GetVideoProcessorFilterRange([In] D3D11_VIDEO_PROCESSOR_FILTER Filter,[Out] D3D11_VIDEO_PROCESSOR_FILTER_RANGE* pRange)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.VideoProcessorEnumerator.VideoProcessorContentDescription">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessorEnumerator::GetVideoProcessorContentDesc']/*"/>	
            <unmanaged>GetVideoProcessorContentDesc</unmanaged>	
            <unmanaged>HRESULT ID3D11VideoProcessorEnumerator::GetVideoProcessorContentDesc([Out] D3D11_VIDEO_PROCESSOR_CONTENT_DESC* pContentDesc)</unmanaged>
        </member>
        <member name="P:SharpDX.Direct3D11.VideoProcessorEnumerator.VideoProcessorCaps">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps']/*"/>	
            <unmanaged>GetVideoProcessorCaps</unmanaged>	
            <unmanaged>HRESULT ID3D11VideoProcessorEnumerator::GetVideoProcessorCaps([Out] D3D11_VIDEO_PROCESSOR_CAPS* pCaps)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorInputView">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessorInputView']/*"/>	
            <unmanaged>ID3D11VideoProcessorInputView</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoProcessorInputView.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.VideoProcessorInputView"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoProcessorInputView.GetDescription(SharpDX.Direct3D11.VideoProcessorInputViewDescription@)">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <param name="descRef"><para>A reference to a <see cref="T:SharpDX.Direct3D11.VideoProcessorInputViewDescription"/> structure. The method fills the structure with the view properties.</para></param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessorInputView::GetDesc']/*"/>	
            <unmanaged>void ID3D11VideoProcessorInputView::GetDesc([Out] D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC* pDesc)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.VideoProcessorInputView.Description">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessorInputView::GetDesc']/*"/>	
            <unmanaged>GetDesc</unmanaged>	
            <unmanaged>void ID3D11VideoProcessorInputView::GetDesc([Out] D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorOutputView">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessorOutputView']/*"/>	
            <unmanaged>ID3D11VideoProcessorOutputView</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoProcessorOutputView.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:SharpDX.Direct3D11.VideoProcessorOutputView"/> class.
            </summary>
            <param name="nativePtr">The native pointer.</param>	
        </member>
        <member name="M:SharpDX.Direct3D11.VideoProcessorOutputView.GetDescription(SharpDX.Direct3D11.VideoProcessorOutputViewDescription@)">
            <summary>	
            No documentation.	
            </summary>	
            <param name="descRef">No documentation.</param>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessorOutputView::GetDesc']/*"/>	
            <unmanaged>void ID3D11VideoProcessorOutputView::GetDesc([Out] D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC* pDesc)</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.VideoProcessorOutputView.Description">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='ID3D11VideoProcessorOutputView::GetDesc']/*"/>	
            <unmanaged>GetDesc</unmanaged>	
            <unmanaged>void ID3D11VideoProcessorOutputView::GetDesc([Out] D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC* pDesc)</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.AesCtrIv">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AES_CTR_IV']/*"/>	
            <unmanaged>D3D11_AES_CTR_IV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AesCtrIv.Iv">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AES_CTR_IV::IV']/*"/>	
            <unmanaged>unsigned longlong IV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AesCtrIv.Count">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AES_CTR_IV::Count']/*"/>	
            <unmanaged>unsigned longlong Count</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedConfigureAccessibleEncryptionInput">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_ACCESSIBLE_ENCRYPTION_INPUT']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_CONFIGURE_ACCESSIBLE_ENCRYPTION_INPUT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureAccessibleEncryptionInput.Parameters">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_ACCESSIBLE_ENCRYPTION_INPUT::Parameters']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_CONFIGURE_INPUT Parameters</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureAccessibleEncryptionInput.EncryptionGuid">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_ACCESSIBLE_ENCRYPTION_INPUT::EncryptionGuid']/*"/>	
            <unmanaged>GUID EncryptionGuid</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedConfigureCryptoSessionInput">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION_INPUT']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION_INPUT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureCryptoSessionInput.Parameters">
            <summary>	
            <para>A <see cref="T:SharpDX.Direct3D11.AuthenticatedConfigureInput"/> structure that contains the command <see cref="T:System.Guid"/> and other data. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION_INPUT::Parameters']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_CONFIGURE_INPUT Parameters</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureCryptoSessionInput.DecoderHandle">
            <summary>	
            <para>A handle to the decoder device.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION_INPUT::DecoderHandle']/*"/>	
            <unmanaged>void* DecoderHandle</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureCryptoSessionInput.CryptoSessionHandle">
            <summary>	
            <para>A handle to the cryptographic session.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION_INPUT::CryptoSessionHandle']/*"/>	
            <unmanaged>void* CryptoSessionHandle</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureCryptoSessionInput.DeviceHandle">
            <summary>	
            <para>A handle to the Direct3D device.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_CRYPTO_SESSION_INPUT::DeviceHandle']/*"/>	
            <unmanaged>void* DeviceHandle</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedConfigureInitializeInput">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_INITIALIZE_INPUT']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_CONFIGURE_INITIALIZE_INPUT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureInitializeInput.Parameters">
            <summary>	
            <para>A <see cref="T:SharpDX.Direct3D11.AuthenticatedConfigureInput"/> structure that contains the command <see cref="T:System.Guid"/> and other data. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_INITIALIZE_INPUT::Parameters']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_CONFIGURE_INPUT Parameters</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureInitializeInput.StartSequenceQuery">
            <summary>	
            <para>The initial sequence number for queries.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_INITIALIZE_INPUT::StartSequenceQuery']/*"/>	
            <unmanaged>unsigned int StartSequenceQuery</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureInitializeInput.StartSequenceConfigure">
            <summary>	
            <para>The initial sequence number for commands.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_INITIALIZE_INPUT::StartSequenceConfigure']/*"/>	
            <unmanaged>unsigned int StartSequenceConfigure</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedConfigureInput">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_INPUT']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_CONFIGURE_INPUT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureInput.Omac">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_INPUT::omac']/*"/>	
            <unmanaged>D3D11_OMAC omac</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureInput.ConfigureType">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_INPUT::ConfigureType']/*"/>	
            <unmanaged>GUID ConfigureType</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureInput.HChannel">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_INPUT::hChannel']/*"/>	
            <unmanaged>void* hChannel</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureInput.SequenceNumber">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_INPUT::SequenceNumber']/*"/>	
            <unmanaged>unsigned int SequenceNumber</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedConfigureOutput">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_OUTPUT']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_CONFIGURE_OUTPUT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureOutput.Omac">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_OUTPUT::omac']/*"/>	
            <unmanaged>D3D11_OMAC omac</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureOutput.ConfigureType">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_OUTPUT::ConfigureType']/*"/>	
            <unmanaged>GUID ConfigureType</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureOutput.HChannel">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_OUTPUT::hChannel']/*"/>	
            <unmanaged>void* hChannel</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureOutput.SequenceNumber">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_OUTPUT::SequenceNumber']/*"/>	
            <unmanaged>unsigned int SequenceNumber</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureOutput.ReturnCode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_OUTPUT::ReturnCode']/*"/>	
            <unmanaged>HRESULT ReturnCode</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedConfigureProtectionInput">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_PROTECTION_INPUT']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_CONFIGURE_PROTECTION_INPUT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureProtectionInput.Parameters">
            <summary>	
            <para>A <see cref="T:SharpDX.Direct3D11.AuthenticatedConfigureInput"/> structure that contains the command <see cref="T:System.Guid"/> and other data. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_PROTECTION_INPUT::Parameters']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_CONFIGURE_INPUT Parameters</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureProtectionInput.Protections">
            <summary>	
            <para>A <see cref="T:SharpDX.Direct3D11.AuthenticatedProtectionFlags"/> union that specifies the protection level.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_PROTECTION_INPUT::Protections']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_PROTECTION_FLAGS Protections</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedConfigureSharedResourceInput">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE_INPUT']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE_INPUT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureSharedResourceInput.Parameters">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE_INPUT::Parameters']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_CONFIGURE_INPUT Parameters</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureSharedResourceInput.ProcessType">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE_INPUT::ProcessType']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_PROCESS_IDENTIFIER_TYPE ProcessType</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedConfigureSharedResourceInput.ProcessHandle">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE_INPUT::ProcessHandle']/*"/>	
            <unmanaged>void* ProcessHandle</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.AuthenticatedConfigureSharedResourceInput.AllowAccess">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_CONFIGURE_SHARED_RESOURCE_INPUT::AllowAccess']/*"/>	
            <unmanaged>BOOL AllowAccess</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedProtectionFlags">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_PROTECTION_FLAGS']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_PROTECTION_FLAGS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedProtectionFlags.Flags">
            <summary>	
            <list>	
             <item><term>ProtectionEnabled</term> <description> <para>If 1, video content protection is enabled. </para>	
             </description></item>	
             <item><term>OverlayOrFullscreenRequired</term> <description> <para>If 1, the application requires video to be displayed using either a hardware overlay or full-screen exclusive mode.</para>	
             </description></item>	
             <item><term>Reserved </term> <description> <para>Reserved. Set all bits to zero. </para>	
             </description></item>	
             </list>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_PROTECTION_FLAGS::Flags']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_PROTECTION_FLAGS___MIDL___MIDL_itf_d3d11_0000_0034_0001_INNER Flags</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedProtectionFlags.Value">
            <summary>	
            <para>Use this member to access all of the bits in the union. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_PROTECTION_FLAGS::Value']/*"/>	
            <unmanaged>unsigned int Value</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedProtectionFlagsMidlMidlItfD3d11000000340001Inner">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_PROTECTION_FLAGS___MIDL___MIDL_itf_d3d11_0000_0034_0001_INNER']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_PROTECTION_FLAGS___MIDL___MIDL_itf_d3d11_0000_0034_0001_INNER</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.AuthenticatedProtectionFlagsMidlMidlItfD3d11000000340001Inner.ProtectionEnabled">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_PROTECTION_FLAGS___MIDL___MIDL_itf_d3d11_0000_0034_0001_INNER::ProtectionEnabled']/*"/>	
            <unmanaged>unsigned int ProtectionEnabled</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.AuthenticatedProtectionFlagsMidlMidlItfD3d11000000340001Inner.OverlayOrFullscreenRequired">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_PROTECTION_FLAGS___MIDL___MIDL_itf_d3d11_0000_0034_0001_INNER::OverlayOrFullscreenRequired']/*"/>	
            <unmanaged>unsigned int OverlayOrFullscreenRequired</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.AuthenticatedProtectionFlagsMidlMidlItfD3d11000000340001Inner.Reserved">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_PROTECTION_FLAGS___MIDL___MIDL_itf_d3d11_0000_0034_0001_INNER::Reserved']/*"/>	
            <unmanaged>unsigned int Reserved</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryAccessibilityEncryptionGuidCountOutput">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_COUNT_OUTPUT']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_COUNT_OUTPUT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryAccessibilityEncryptionGuidCountOutput.Output">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_COUNT_OUTPUT::Output']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryAccessibilityEncryptionGuidCountOutput.EncryptionGuidCount">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_COUNT_OUTPUT::EncryptionGuidCount']/*"/>	
            <unmanaged>unsigned int EncryptionGuidCount</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryAccessibilityEncryptionGuidInput">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_INPUT']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_INPUT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryAccessibilityEncryptionGuidInput.Input">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_INPUT::Input']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_INPUT Input</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryAccessibilityEncryptionGuidInput.EncryptionGuidIndex">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_INPUT::EncryptionGuidIndex']/*"/>	
            <unmanaged>unsigned int EncryptionGuidIndex</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryAccessibilityEncryptionGuidOutput">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_OUTPUT']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_OUTPUT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryAccessibilityEncryptionGuidOutput.Output">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_OUTPUT::Output']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryAccessibilityEncryptionGuidOutput.EncryptionGuidIndex">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_OUTPUT::EncryptionGuidIndex']/*"/>	
            <unmanaged>unsigned int EncryptionGuidIndex</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryAccessibilityEncryptionGuidOutput.EncryptionGuid">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_ACCESSIBILITY_ENCRYPTION_GUID_OUTPUT::EncryptionGuid']/*"/>	
            <unmanaged>GUID EncryptionGuid</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryAcessibilityOutput">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_ACESSIBILITY_OUTPUT']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_ACESSIBILITY_OUTPUT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryAcessibilityOutput.Output">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_ACESSIBILITY_OUTPUT::Output']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryAcessibilityOutput.BusType">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_ACESSIBILITY_OUTPUT::BusType']/*"/>	
            <unmanaged>D3D11_BUS_TYPE BusType</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.AuthenticatedQueryAcessibilityOutput.AccessibleInContiguousBlocks">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_ACESSIBILITY_OUTPUT::AccessibleInContiguousBlocks']/*"/>	
            <unmanaged>BOOL AccessibleInContiguousBlocks</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.AuthenticatedQueryAcessibilityOutput.AccessibleInNonContiguousBlocks">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_ACESSIBILITY_OUTPUT::AccessibleInNonContiguousBlocks']/*"/>	
            <unmanaged>BOOL AccessibleInNonContiguousBlocks</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryChannelTypeOutput">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_CHANNEL_TYPE_OUTPUT']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_CHANNEL_TYPE_OUTPUT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryChannelTypeOutput.Output">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_CHANNEL_TYPE_OUTPUT::Output']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryChannelTypeOutput.ChannelType">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_CHANNEL_TYPE_OUTPUT::ChannelType']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_CHANNEL_TYPE ChannelType</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryCryptoSessionInput">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_INPUT']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_INPUT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryCryptoSessionInput.Input">
            <summary>	
            <para>A <see cref="T:SharpDX.Direct3D11.AuthenticatedQueryInput"/> structure that contains the <see cref="T:System.Guid"/> for the query and other data.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_INPUT::Input']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_INPUT Input</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryCryptoSessionInput.DecoderHandle">
            <summary>	
            <para>A handle to a decoder device.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_INPUT::DecoderHandle']/*"/>	
            <unmanaged>void* DecoderHandle</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryCryptoSessionOutput">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_OUTPUT']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_OUTPUT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryCryptoSessionOutput.Output">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_OUTPUT::Output']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryCryptoSessionOutput.DecoderHandle">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_OUTPUT::DecoderHandle']/*"/>	
            <unmanaged>void* DecoderHandle</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryCryptoSessionOutput.CryptoSessionHandle">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_OUTPUT::CryptoSessionHandle']/*"/>	
            <unmanaged>void* CryptoSessionHandle</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryCryptoSessionOutput.DeviceHandle">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_CRYPTO_SESSION_OUTPUT::DeviceHandle']/*"/>	
            <unmanaged>void* DeviceHandle</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryCurrentAccessibilityEncryptionOutput">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_CURRENT_ACCESSIBILITY_ENCRYPTION_OUTPUT']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_CURRENT_ACCESSIBILITY_ENCRYPTION_OUTPUT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryCurrentAccessibilityEncryptionOutput.Output">
            <summary>	
            <para>A <see cref="T:SharpDX.Direct3D11.AuthenticatedQueryOutput"/> structure that contains a Message Authentication Code (MAC) and other data.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_CURRENT_ACCESSIBILITY_ENCRYPTION_OUTPUT::Output']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryCurrentAccessibilityEncryptionOutput.EncryptionGuid">
            <summary>	
            <para>A <see cref="T:System.Guid"/> that specifies the current encryption type. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_CURRENT_ACCESSIBILITY_ENCRYPTION_OUTPUT::EncryptionGuid']/*"/>	
            <unmanaged>GUID EncryptionGuid</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryDeviceHandleOutput">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_DEVICE_HANDLE_OUTPUT']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_DEVICE_HANDLE_OUTPUT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryDeviceHandleOutput.Output">
            <summary>	
            <para>A <see cref="T:SharpDX.Direct3D11.AuthenticatedQueryOutput"/> structure that contains a Message Authentication Code (MAC) and other data. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_DEVICE_HANDLE_OUTPUT::Output']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryDeviceHandleOutput.DeviceHandle">
            <summary>	
            <para>A handle to the device. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_DEVICE_HANDLE_OUTPUT::DeviceHandle']/*"/>	
            <unmanaged>void* DeviceHandle</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryInput">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_INPUT']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_INPUT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryInput.QueryType">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_INPUT::QueryType']/*"/>	
            <unmanaged>GUID QueryType</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryInput.HChannel">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_INPUT::hChannel']/*"/>	
            <unmanaged>void* hChannel</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryInput.SequenceNumber">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_INPUT::SequenceNumber']/*"/>	
            <unmanaged>unsigned int SequenceNumber</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryOutput">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_OUTPUT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutput.Omac">
            <summary>	
            <para>A <see cref="T:SharpDX.Direct3D11.AuthenticatedQueryOutput"/> structure that contains a Message Authentication Code (MAC) and other data.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT::omac']/*"/>	
            <unmanaged>D3D11_OMAC omac</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutput.QueryType">
            <summary>	
            <para>A handle to the device.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT::QueryType']/*"/>	
            <unmanaged>GUID QueryType</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutput.HChannel">
            <summary>	
            <para>A handle to the cryptographic session.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT::hChannel']/*"/>	
            <unmanaged>void* hChannel</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutput.SequenceNumber">
            <summary>	
            <para>The number of output IDs associated with the specified device and cryptographic session.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT::SequenceNumber']/*"/>	
            <unmanaged>unsigned int SequenceNumber</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutput.ReturnCode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT::ReturnCode']/*"/>	
            <unmanaged>HRESULT ReturnCode</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryOutputIdCountInput">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_INPUT']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_INPUT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutputIdCountInput.Input">
            <summary>	
            <para>A <see cref="T:SharpDX.Direct3D11.AuthenticatedQueryInput"/> structure that contains the <see cref="T:System.Guid"/> for the query and other data.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_INPUT::Input']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_INPUT Input</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutputIdCountInput.DeviceHandle">
            <summary>	
            <para>A handle to the device.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_INPUT::DeviceHandle']/*"/>	
            <unmanaged>void* DeviceHandle</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutputIdCountInput.CryptoSessionHandle">
            <summary>	
            <para>A handle to the cryptographic session.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_INPUT::CryptoSessionHandle']/*"/>	
            <unmanaged>void* CryptoSessionHandle</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryOutputIdCountOutput">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_OUTPUT']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_OUTPUT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutputIdCountOutput.Output">
            <summary>	
            <para>A <see cref="T:SharpDX.Direct3D11.AuthenticatedQueryOutput"/> structure that contains a Message Authentication Code (MAC) and other data.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_OUTPUT::Output']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutputIdCountOutput.DeviceHandle">
            <summary>	
            <para>A handle to the device.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_OUTPUT::DeviceHandle']/*"/>	
            <unmanaged>void* DeviceHandle</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutputIdCountOutput.CryptoSessionHandle">
            <summary>	
            <para>A handle to the cryptographic session.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_OUTPUT::CryptoSessionHandle']/*"/>	
            <unmanaged>void* CryptoSessionHandle</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutputIdCountOutput.OutputIDCount">
            <summary>	
            <para>The number of output IDs associated with the specified device and cryptographic session.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_COUNT_OUTPUT::OutputIDCount']/*"/>	
            <unmanaged>unsigned int OutputIDCount</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryOutputIdInput">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_INPUT']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_INPUT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutputIdInput.Input">
            <summary>	
            <para>A <see cref="T:SharpDX.Direct3D11.AuthenticatedQueryInput"/> structure that contains the <see cref="T:System.Guid"/> for the query and other data.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_INPUT::Input']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_INPUT Input</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutputIdInput.DeviceHandle">
            <summary>	
            <para>A handle to the device.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_INPUT::DeviceHandle']/*"/>	
            <unmanaged>void* DeviceHandle</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutputIdInput.CryptoSessionHandle">
            <summary>	
            <para>A handle to the cryptographic session.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_INPUT::CryptoSessionHandle']/*"/>	
            <unmanaged>void* CryptoSessionHandle</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutputIdInput.OutputIDIndex">
            <summary>	
            <para>The index of the output ID.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_INPUT::OutputIDIndex']/*"/>	
            <unmanaged>unsigned int OutputIDIndex</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryOutputIdOutput">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_OUTPUT']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_OUTPUT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutputIdOutput.Output">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_OUTPUT::Output']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutputIdOutput.DeviceHandle">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_OUTPUT::DeviceHandle']/*"/>	
            <unmanaged>void* DeviceHandle</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutputIdOutput.CryptoSessionHandle">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_OUTPUT::CryptoSessionHandle']/*"/>	
            <unmanaged>void* CryptoSessionHandle</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutputIdOutput.OutputIDIndex">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_OUTPUT::OutputIDIndex']/*"/>	
            <unmanaged>unsigned int OutputIDIndex</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryOutputIdOutput.OutputID">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_OUTPUT_ID_OUTPUT::OutputID']/*"/>	
            <unmanaged>unsigned longlong OutputID</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryProtectionOutput">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_PROTECTION_OUTPUT']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_PROTECTION_OUTPUT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryProtectionOutput.Output">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_PROTECTION_OUTPUT::Output']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryProtectionOutput.ProtectionFlags">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_PROTECTION_OUTPUT::ProtectionFlags']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_PROTECTION_FLAGS ProtectionFlags</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryRestrictedSharedResourceProcessCountOutput">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_COUNT_OUTPUT']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_COUNT_OUTPUT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryRestrictedSharedResourceProcessCountOutput.Output">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_COUNT_OUTPUT::Output']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryRestrictedSharedResourceProcessCountOutput.RestrictedSharedResourceProcessCount">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_COUNT_OUTPUT::RestrictedSharedResourceProcessCount']/*"/>	
            <unmanaged>unsigned int RestrictedSharedResourceProcessCount</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryRestrictedSharedResourceProcessInput">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_INPUT']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_INPUT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryRestrictedSharedResourceProcessInput.Input">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_INPUT::Input']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_INPUT Input</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryRestrictedSharedResourceProcessInput.ProcessIndex">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_INPUT::ProcessIndex']/*"/>	
            <unmanaged>unsigned int ProcessIndex</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryRestrictedSharedResourceProcessOutput">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_OUTPUT']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_OUTPUT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryRestrictedSharedResourceProcessOutput.Output">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_OUTPUT::Output']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryRestrictedSharedResourceProcessOutput.ProcessIndex">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_OUTPUT::ProcessIndex']/*"/>	
            <unmanaged>unsigned int ProcessIndex</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryRestrictedSharedResourceProcessOutput.ProcessIdentifier">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_OUTPUT::ProcessIdentifier']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_PROCESS_IDENTIFIER_TYPE ProcessIdentifier</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryRestrictedSharedResourceProcessOutput.ProcessHandle">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_RESTRICTED_SHARED_RESOURCE_PROCESS_OUTPUT::ProcessHandle']/*"/>	
            <unmanaged>void* ProcessHandle</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.AuthenticatedQueryUnrestrictedProtectedSharedResourceCountOutput">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_UNRESTRICTED_PROTECTED_SHARED_RESOURCE_COUNT_OUTPUT']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_UNRESTRICTED_PROTECTED_SHARED_RESOURCE_COUNT_OUTPUT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryUnrestrictedProtectedSharedResourceCountOutput.Output">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_UNRESTRICTED_PROTECTED_SHARED_RESOURCE_COUNT_OUTPUT::Output']/*"/>	
            <unmanaged>D3D11_AUTHENTICATED_QUERY_OUTPUT Output</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.AuthenticatedQueryUnrestrictedProtectedSharedResourceCountOutput.UnrestrictedProtectedSharedResourceCount">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_AUTHENTICATED_QUERY_UNRESTRICTED_PROTECTED_SHARED_RESOURCE_COUNT_OUTPUT::UnrestrictedProtectedSharedResourceCount']/*"/>	
            <unmanaged>unsigned int UnrestrictedProtectedSharedResourceCount</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.BlendDescription1">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            Here are the default values for blend state.StateDefault Value AlphaToCoverageEnableFALSE IndependentBlendEnableFALSE RenderTarget[0].BlendEnableFALSE RenderTarget[0].SrcBlendD3D11_BLEND_ONE RenderTarget[0].DestBlendD3D11_BLEND_ZERO RenderTarget[0].BlendOpD3D11_BLEND_OP_ADD RenderTarget[0].SrcBlendAlphaD3D11_BLEND_ONE RenderTarget[0].DestBlendAlphaD3D11_BLEND_ZERO RenderTarget[0].BlendOpAlphaD3D11_BLEND_OP_ADD RenderTarget[0].RenderTargetWriteMaskD3D11_COLOR_WRITE_ENABLE_ALL?If the driver type is set to <see cref="F:SharpDX.Direct3D.DriverType.Hardware"/>, the feature level is set to less than or equal to <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_9_3"/>, and the pixel format of the render target is set to <see cref="F:SharpDX.DXGI.Format.R8G8B8A8_UNorm_SRgb"/>, <see cref="F:SharpDX.DXGI.Format.B8G8R8A8_UNorm_SRgb"/>, or <see cref="F:SharpDX.DXGI.Format.B8G8R8X8_UNorm_SRgb"/>, the display device performs the blend in standard RGB (sRGB) space and not in linear space. However, if the feature level is set to greater than <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_9_3"/>, the display device performs the blend in linear space, which is ideal.When you set the LogicOpEnable member of the first element of the RenderTarget array (RenderTarget[0]) to TRUE, you must also set the BlendEnable member of  RenderTarget[0] to <see cref="F:SharpDX.Result.False"/>, and the IndependentBlendEnable member of  this <see cref="T:SharpDX.Direct3D11.BlendDescription1"/> to <see cref="F:SharpDX.Result.False"/>.  This reflects the limitation in hardware that you can't mix logic operations with blending across multiple render targets, and that when you use a logic operation, you must apply the same logic operation to all render targets.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_DESC1']/*"/>	
            <unmanaged>D3D11_BLEND_DESC1</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.BlendDescription1.AlphaToCoverageEnable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_DESC1::AlphaToCoverageEnable']/*"/>	
            <unmanaged>BOOL AlphaToCoverageEnable</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.BlendDescription1.IndependentBlendEnable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_DESC1::IndependentBlendEnable']/*"/>	
            <unmanaged>BOOL IndependentBlendEnable</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.BlendDescription1.RenderTarget">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_DESC1::RenderTarget']/*"/>	
            <unmanaged>D3D11_RENDER_TARGET_BLEND_DESC1 RenderTarget[8]</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.BlendStateDescription">
            <summary>	
            Describes the blend state that you use in a call to <see cref="M:SharpDX.Direct3D11.Device.CreateBlendState(SharpDX.Direct3D11.BlendStateDescription@,SharpDX.Direct3D11.BlendState)"/> to create a blend-state object.	
            </summary>	
            <remarks>	
            Here are the default values for blend state.StateDefault Value AlphaToCoverageEnableFALSE IndependentBlendEnableFALSE RenderTarget[0].BlendEnableFALSE RenderTarget[0].SrcBlendD3D11_BLEND_ONE RenderTarget[0].DestBlendD3D11_BLEND_ZERO RenderTarget[0].BlendOpD3D11_BLEND_OP_ADD RenderTarget[0].SrcBlendAlphaD3D11_BLEND_ONE RenderTarget[0].DestBlendAlphaD3D11_BLEND_ZERO RenderTarget[0].BlendOpAlphaD3D11_BLEND_OP_ADD RenderTarget[0].RenderTargetWriteMaskD3D11_COLOR_WRITE_ENABLE_ALL?Note??<see cref="T:SharpDX.Direct3D11.BlendStateDescription"/> is identical to <see cref="!:SharpDX.Direct3D10.BlendStateDescription1"/>.If the driver type is set to <see cref="F:SharpDX.Direct3D.DriverType.Hardware"/>, the feature level is set to less than or equal to <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_9_3"/>, and the pixel format of the render target is set to <see cref="F:SharpDX.DXGI.Format.R8G8B8A8_UNorm_SRgb"/>, <see cref="F:SharpDX.DXGI.Format.B8G8R8A8_UNorm_SRgb"/>, or <see cref="F:SharpDX.DXGI.Format.B8G8R8X8_UNorm_SRgb"/>, the display device performs the blend in standard RGB (sRGB) space and not in linear space. However, if the feature level is set to greater than <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_9_3"/>, the display device performs the blend in linear space, which is ideal.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_DESC']/*"/>	
            <unmanaged>D3D11_BLEND_DESC</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.BlendStateDescription.AlphaToCoverageEnable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_DESC::AlphaToCoverageEnable']/*"/>	
            <unmanaged>BOOL AlphaToCoverageEnable</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.BlendStateDescription.IndependentBlendEnable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_DESC::IndependentBlendEnable']/*"/>	
            <unmanaged>BOOL IndependentBlendEnable</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.BlendStateDescription.RenderTarget">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BLEND_DESC::RenderTarget']/*"/>	
            <unmanaged>D3D11_RENDER_TARGET_BLEND_DESC RenderTarget[8]</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.Cd3d11VideoDefault">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='CD3D11_VIDEO_DEFAULT']/*"/>	
            <unmanaged>CD3D11_VIDEO_DEFAULT</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.ClassInstanceDescription">
            <summary>	
            Describes an HLSL class instance.	
            </summary>	
            <remarks>	
            The <see cref="T:SharpDX.Direct3D11.ClassInstanceDescription"/> structure is returned by the <see cref="M:SharpDX.Direct3D11.ClassInstance.GetDescription(SharpDX.Direct3D11.ClassInstanceDescription@)"/> method.The members of this structure except InstanceIndex are valid (non default values) if they describe a class instance aquired using  <see cref="M:SharpDX.Direct3D11.ClassLinkage.CreateClassInstance(System.String,System.Int32,System.Int32,System.Int32,System.Int32,SharpDX.Direct3D11.ClassInstance)"/>.  The InstanceIndex member is only valid when the class instance is aquired using <see cref="M:SharpDX.Direct3D11.ClassLinkage.GetClassInstance(System.String,System.Int32)"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CLASS_INSTANCE_DESC']/*"/>	
            <unmanaged>D3D11_CLASS_INSTANCE_DESC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ClassInstanceDescription.InstanceId">
            <summary>	
            <para>The instance ID of an HLSL class; the default value is 0.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CLASS_INSTANCE_DESC::InstanceId']/*"/>	
            <unmanaged>unsigned int InstanceId</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ClassInstanceDescription.InstanceIndex">
            <summary>	
            <para>The instance index of an HLSL class; the default value is 0.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CLASS_INSTANCE_DESC::InstanceIndex']/*"/>	
            <unmanaged>unsigned int InstanceIndex</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ClassInstanceDescription.TypeId">
            <summary>	
            <para>The type ID of an HLSL class; the default value is 0.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CLASS_INSTANCE_DESC::TypeId']/*"/>	
            <unmanaged>unsigned int TypeId</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ClassInstanceDescription.ConstantBuffer">
            <summary>	
            <para>Describes the constant buffer associated with an HLSL class; the default value is 0.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CLASS_INSTANCE_DESC::ConstantBuffer']/*"/>	
            <unmanaged>unsigned int ConstantBuffer</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ClassInstanceDescription.BaseConstantBufferOffset">
            <summary>	
            <para>The base constant buffer offset associated with an HLSL class; the default value is 0.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CLASS_INSTANCE_DESC::BaseConstantBufferOffset']/*"/>	
            <unmanaged>unsigned int BaseConstantBufferOffset</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ClassInstanceDescription.BaseTexture">
            <summary>	
            <para>The base texture associated with an HLSL class; the default value is 127.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CLASS_INSTANCE_DESC::BaseTexture']/*"/>	
            <unmanaged>unsigned int BaseTexture</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ClassInstanceDescription.BaseSampler">
            <summary>	
            <para>The base sampler associated with an HLSL class; the default value is 15.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CLASS_INSTANCE_DESC::BaseSampler']/*"/>	
            <unmanaged>unsigned int BaseSampler</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.ClassInstanceDescription.IsCreated">
            <summary>	
            <para>True if the class was created; the default value is false.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_CLASS_INSTANCE_DESC::Created']/*"/>	
            <unmanaged>BOOL Created</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.CounterCapabilities">
            <summary>	
            Information about the video card's performance counter capabilities.	
            </summary>	
            <remarks>	
            This structure is returned by <see cref="M:SharpDX.Direct3D11.Device.GetCounterCapabilities"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COUNTER_INFO']/*"/>	
            <unmanaged>D3D11_COUNTER_INFO</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.CounterCapabilities.LastDeviceDependentCounter">
            <summary>	
            <para>Largest device-dependent counter ID that the device supports. If none are supported, this value will be 0. Otherwise it will be greater than or equal to <see cref="F:SharpDX.Direct3D11.CounterKind.DeviceDependent0"/>. See <see cref="T:SharpDX.Direct3D11.CounterKind"/>.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COUNTER_INFO::LastDeviceDependentCounter']/*"/>	
            <unmanaged>D3D11_COUNTER LastDeviceDependentCounter</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.CounterCapabilities.SimultaneousCounterCount">
            <summary>	
            <para>Number of counters that can be simultaneously supported.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COUNTER_INFO::NumSimultaneousCounters']/*"/>	
            <unmanaged>unsigned int NumSimultaneousCounters</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.CounterCapabilities.DetectableParallelUnitCount">
            <summary>	
            <para>Number of detectable parallel units that the counter is able to discern. Values are 1 ~ 4. Use NumDetectableParallelUnits to interpret the values of the VERTEX_PROCESSING, GEOMETRY_PROCESSING, PIXEL_PROCESSING, and OTHER_GPU_PROCESSING counters. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COUNTER_INFO::NumDetectableParallelUnits']/*"/>	
            <unmanaged>unsigned char NumDetectableParallelUnits</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.CounterDescription">
            <summary>	
            Describes a counter.	
            </summary>	
            <remarks>	
            This structure is used by <see cref="M:SharpDX.Direct3D11.Counter.GetDescription(SharpDX.Direct3D11.CounterDescription@)"/>, <see cref="M:SharpDX.Direct3D11.Device.CheckCounter(SharpDX.Direct3D11.CounterDescription,SharpDX.Direct3D11.CounterType@,System.Int32@,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)"/> and <see cref="M:SharpDX.Direct3D11.Device.CreateCounter(SharpDX.Direct3D11.CounterDescription,SharpDX.Direct3D11.Counter)"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COUNTER_DESC']/*"/>	
            <unmanaged>D3D11_COUNTER_DESC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.CounterDescription.Counter">
            <summary>	
            <para>Type of counter (see <see cref="T:SharpDX.Direct3D11.CounterKind"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COUNTER_DESC::Counter']/*"/>	
            <unmanaged>D3D11_COUNTER Counter</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.CounterDescription.MiscFlags">
            <summary>	
            <para>Reserved.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_COUNTER_DESC::MiscFlags']/*"/>	
            <unmanaged>unsigned int MiscFlags</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.DepthStencilOperationDescription">
            <summary>	
            Stencil operations that can be performed based on the results of stencil test.	
            </summary>	
            <remarks>	
            All stencil operations are specified as a <see cref="T:SharpDX.Direct3D11.StencilOperation"/>. The stencil operation can be set differently based on the outcome of the stencil test (which is referred to as StencilFunc in the stencil test portion of depth-stencil testing.This structure is a member of a depth-stencil description.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCILOP_DESC']/*"/>	
            <unmanaged>D3D11_DEPTH_STENCILOP_DESC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilOperationDescription.FailOperation">
            <summary>	
            <para>The stencil operation to perform when stencil testing fails.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCILOP_DESC::StencilFailOp']/*"/>	
            <unmanaged>D3D11_STENCIL_OP StencilFailOp</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilOperationDescription.DepthFailOperation">
            <summary>	
            <para>The stencil operation to perform when stencil testing passes and depth testing fails.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCILOP_DESC::StencilDepthFailOp']/*"/>	
            <unmanaged>D3D11_STENCIL_OP StencilDepthFailOp</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilOperationDescription.PassOperation">
            <summary>	
            <para>The stencil operation to perform when stencil testing and depth testing both pass.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCILOP_DESC::StencilPassOp']/*"/>	
            <unmanaged>D3D11_STENCIL_OP StencilPassOp</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilOperationDescription.Comparison">
            <summary>	
            <para>A function that compares stencil data against existing stencil data. The function options are listed in <see cref="T:SharpDX.Direct3D11.Comparison"/>.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCILOP_DESC::StencilFunc']/*"/>	
            <unmanaged>D3D11_COMPARISON_FUNC StencilFunc</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.DepthStencilStateDescription">
            <summary>	
            Describes depth-stencil state.	
            </summary>	
            <remarks>	
            Depth-stencil state controls how depth-stencil testing is performed by the output-merger stage.The following table shows the default values of depth-stencil states.StateDefault Value DepthEnableTRUE DepthWriteMaskD3D11_DEPTH_WRITE_MASK_ALL DepthFuncD3D11_COMPARISON_LESS StencilEnableFALSE StencilReadMaskD3D11_DEFAULT_STENCIL_READ_MASK StencilWriteMaskD3D11_DEFAULT_STENCIL_WRITE_MASK  <para>FrontFace.StencilFunc</para>	
             <para>and</para>	
             <para>BackFace.StencilFunc</para>	
             <see cref="F:SharpDX.Direct3D11.Comparison.Always"/>  <para>FrontFace.StencilDepthFailOp</para>	
             <para>and</para>	
             <para>BackFace.StencilDepthFailOp</para>	
             <see cref="F:SharpDX.Direct3D11.StencilOperation.Keep"/>  <para>FrontFace.StencilPassOp</para>	
             <para>and</para>	
             <para>BackFace.StencilPassOp</para>	
             <see cref="F:SharpDX.Direct3D11.StencilOperation.Keep"/>  <para>FrontFace.StencilFailOp</para>	
             <para>and</para>	
             <para>BackFace.StencilFailOp</para>	
             <see cref="F:SharpDX.Direct3D11.StencilOperation.Keep"/>?The formats that support stenciling are <see cref="F:SharpDX.DXGI.Format.D24_UNorm_S8_UInt"/> and <see cref="F:SharpDX.DXGI.Format.D32_Float_S8X24_UInt"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_DESC']/*"/>	
            <unmanaged>D3D11_DEPTH_STENCIL_DESC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilStateDescription.DepthWriteMask">
            <summary>	
            <para>Identify a portion of the depth-stencil buffer that can be modified by depth data (see <see cref="T:SharpDX.Direct3D11.DepthWriteMask"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_DESC::DepthWriteMask']/*"/>	
            <unmanaged>D3D11_DEPTH_WRITE_MASK DepthWriteMask</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilStateDescription.DepthComparison">
            <summary>	
            <para>A function that compares depth data against existing depth data. The function options are listed in <see cref="T:SharpDX.Direct3D11.Comparison"/>.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_DESC::DepthFunc']/*"/>	
            <unmanaged>D3D11_COMPARISON_FUNC DepthFunc</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilStateDescription.StencilReadMask">
            <summary>	
            <para>Identify a portion of the depth-stencil buffer for reading stencil data.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_DESC::StencilReadMask']/*"/>	
            <unmanaged>unsigned char StencilReadMask</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilStateDescription.StencilWriteMask">
            <summary>	
            <para>Identify a portion of the depth-stencil buffer for writing stencil data.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_DESC::StencilWriteMask']/*"/>	
            <unmanaged>unsigned char StencilWriteMask</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilStateDescription.FrontFace">
            <summary>	
            <para>Identify how to use the results of the depth test and the stencil test for pixels whose surface normal is facing towards the camera (see <see cref="T:SharpDX.Direct3D11.DepthStencilOperationDescription"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_DESC::FrontFace']/*"/>	
            <unmanaged>D3D11_DEPTH_STENCILOP_DESC FrontFace</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilStateDescription.BackFace">
            <summary>	
            <para>Identify how to use the results of the depth test and the stencil test for pixels whose surface normal is facing away from the camera (see <see cref="T:SharpDX.Direct3D11.DepthStencilOperationDescription"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_DESC::BackFace']/*"/>	
            <unmanaged>D3D11_DEPTH_STENCILOP_DESC BackFace</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.DepthStencilStateDescription.IsDepthEnabled">
            <summary>	
            <para>Enable depth testing.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_DESC::DepthEnable']/*"/>	
            <unmanaged>BOOL DepthEnable</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.DepthStencilStateDescription.IsStencilEnabled">
            <summary>	
            <para>Enable stencil testing.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_DESC::StencilEnable']/*"/>	
            <unmanaged>BOOL StencilEnable</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.DepthStencilViewDescription">
            <summary>	
            Specifies the subresources of a texture that are accessible from a depth-stencil view.	
            </summary>	
            <remarks>	
            These are valid formats for a depth-stencil view:<see cref="F:SharpDX.DXGI.Format.D16_UNorm"/> <see cref="F:SharpDX.DXGI.Format.D24_UNorm_S8_UInt"/> <see cref="F:SharpDX.DXGI.Format.D32_Float"/> <see cref="F:SharpDX.DXGI.Format.D32_Float_S8X24_UInt"/> <see cref="F:SharpDX.DXGI.Format.Unknown"/>A depth-stencil view cannot use a typeless format.  If the format chosen is <see cref="F:SharpDX.DXGI.Format.Unknown"/>, then the format of the parent resource is used.A depth-stencil-view description is needed when calling <see cref="M:SharpDX.Direct3D11.Device.CreateDepthStencilView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.DepthStencilViewDescription},SharpDX.Direct3D11.DepthStencilView)"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_VIEW_DESC']/*"/>	
            <unmanaged>D3D11_DEPTH_STENCIL_VIEW_DESC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Format">
            <summary>	
            <para>Resource data  format (see <see cref="T:SharpDX.DXGI.Format"/>). See remarks for allowable formats.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_VIEW_DESC::Format']/*"/>	
            <unmanaged>DXGI_FORMAT Format</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Dimension">
            <summary>	
            <para>Type of resource (see <see cref="T:SharpDX.Direct3D11.DepthStencilViewDimension"/>). Specifies how a depth-stencil resource will be accessed; the value is stored in the  union in this structure.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_VIEW_DESC::ViewDimension']/*"/>	
            <unmanaged>D3D11_DSV_DIMENSION ViewDimension</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Flags">
            <summary>	
            <para>A value that describes whether the texture is read only.  Pass 0 to specify that it is not read only; otherwise, pass one of the members of  the <see cref="T:SharpDX.Direct3D11.DepthStencilViewFlags"/> enumerated type.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_VIEW_DESC::Flags']/*"/>	
            <unmanaged>D3D11_DSV_FLAG Flags</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Texture1D">
            <summary>	
            <para>Specifies a 1D texture subresource (see <see cref="T:SharpDX.Direct3D11.DepthStencilViewDescription.Texture1DResource"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_VIEW_DESC::Texture1D']/*"/>	
            <unmanaged>D3D11_TEX1D_DSV Texture1D</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Texture1DArray">
            <summary>	
            <para>Specifies an array of 1D texture subresources (see <see cref="T:SharpDX.Direct3D11.DepthStencilViewDescription.Texture1DArrayResource"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_VIEW_DESC::Texture1DArray']/*"/>	
            <unmanaged>D3D11_TEX1D_ARRAY_DSV Texture1DArray</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2D">
            <summary>	
            <para>Specifies a 2D texture subresource (see <see cref="T:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2DResource"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_VIEW_DESC::Texture2D']/*"/>	
            <unmanaged>D3D11_TEX2D_DSV Texture2D</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2DArray">
            <summary>	
            <para>Specifies an array of 2D texture subresources (see <see cref="T:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2DArrayResource"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_VIEW_DESC::Texture2DArray']/*"/>	
            <unmanaged>D3D11_TEX2D_ARRAY_DSV Texture2DArray</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2DMS">
            <summary>	
            <para>Specifies a multisampled 2D texture (see <see cref="T:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2DMultisampledResource"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_VIEW_DESC::Texture2DMS']/*"/>	
            <unmanaged>D3D11_TEX2DMS_DSV Texture2DMS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2DMSArray">
            <summary>	
            <para>Specifies an array of multisampled 2D textures (see <see cref="T:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2DMultisampledArrayResource"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_DEPTH_STENCIL_VIEW_DESC::Texture2DMSArray']/*"/>	
            <unmanaged>D3D11_TEX2DMS_ARRAY_DSV Texture2DMSArray</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2DMultisampledResource">
            <summary>	
            Specifies the subresource from a multisampled 2D texture that is accessible to a depth-stencil view.	
            </summary>	
            <remarks>	
            Because a multisampled 2D texture contains a single subtexture, there is nothing to specify; this unused member is included so that this structure will compile in C.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2DMS_DSV']/*"/>	
            <unmanaged>D3D11_TEX2DMS_DSV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2DMultisampledResource.UnusedFieldNothingToDefine">
            <summary>	
            <para>Unused.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2DMS_DSV::UnusedField_NothingToDefine']/*"/>	
            <unmanaged>unsigned int UnusedField_NothingToDefine</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2DResource">
            <summary>	
            Specifies the subresource from a 2D texture that is accessible to a depth-stencil view.	
            </summary>	
            <remarks>	
            This structure is one member of a depth-stencil-view description (see <see cref="T:SharpDX.Direct3D11.DepthStencilViewDescription"/>).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_DSV']/*"/>	
            <unmanaged>D3D11_TEX2D_DSV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2DResource.MipSlice">
            <summary>	
            <para>The index of the first mipmap level to use.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_DSV::MipSlice']/*"/>	
            <unmanaged>unsigned int MipSlice</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.DepthStencilViewDescription.Texture1DArrayResource">
            <summary>	
            Specifies the subresources from an array of 1D textures to use in a depth-stencil view.	
            </summary>	
            <remarks>	
            This structure is one member of a depth-stencil-view description (see <see cref="T:SharpDX.Direct3D11.DepthStencilViewDescription"/>).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_ARRAY_DSV']/*"/>	
            <unmanaged>D3D11_TEX1D_ARRAY_DSV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Texture1DArrayResource.MipSlice">
            <summary>	
            <para>The index of the first mipmap level to use.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_ARRAY_DSV::MipSlice']/*"/>	
            <unmanaged>unsigned int MipSlice</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Texture1DArrayResource.FirstArraySlice">
            <summary>	
            <para>The index of the first texture to use in an array of textures.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_ARRAY_DSV::FirstArraySlice']/*"/>	
            <unmanaged>unsigned int FirstArraySlice</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Texture1DArrayResource.ArraySize">
            <summary>	
            <para>Number of textures to use.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_ARRAY_DSV::ArraySize']/*"/>	
            <unmanaged>unsigned int ArraySize</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2DMultisampledArrayResource">
            <summary>	
            Specifies the subresources from an array of multisampled 2D textures for a depth-stencil view.	
            </summary>	
            <remarks>	
            This structure is one member of a depth-stencil-view description (see <see cref="T:SharpDX.Direct3D11.DepthStencilViewDescription"/>).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2DMS_ARRAY_DSV']/*"/>	
            <unmanaged>D3D11_TEX2DMS_ARRAY_DSV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2DMultisampledArrayResource.FirstArraySlice">
            <summary>	
            <para>The index of the first texture to use in an array of textures.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2DMS_ARRAY_DSV::FirstArraySlice']/*"/>	
            <unmanaged>unsigned int FirstArraySlice</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2DMultisampledArrayResource.ArraySize">
            <summary>	
            <para>Number of textures to use.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2DMS_ARRAY_DSV::ArraySize']/*"/>	
            <unmanaged>unsigned int ArraySize</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2DArrayResource">
            <summary>	
            Specifies the subresources from an array 2D textures that are accessible to a depth-stencil view.	
            </summary>	
            <remarks>	
            This structure is one member of a depth-stencil-view description (see <see cref="T:SharpDX.Direct3D11.DepthStencilViewDescription"/>).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_DSV']/*"/>	
            <unmanaged>D3D11_TEX2D_ARRAY_DSV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2DArrayResource.MipSlice">
            <summary>	
            <para>The index of the first mipmap level to use.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_DSV::MipSlice']/*"/>	
            <unmanaged>unsigned int MipSlice</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2DArrayResource.FirstArraySlice">
            <summary>	
            <para>The index of the first texture to use in an array of textures.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_DSV::FirstArraySlice']/*"/>	
            <unmanaged>unsigned int FirstArraySlice</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Texture2DArrayResource.ArraySize">
            <summary>	
            <para>Number of textures to use.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_DSV::ArraySize']/*"/>	
            <unmanaged>unsigned int ArraySize</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.DepthStencilViewDescription.Texture1DResource">
            <summary>	
            Specifies the subresource from a 1D texture that is accessible to a depth-stencil view.	
            </summary>	
            <remarks>	
            This structure is one member of a depth-stencil-view description (see <see cref="T:SharpDX.Direct3D11.DepthStencilViewDescription"/>).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_DSV']/*"/>	
            <unmanaged>D3D11_TEX1D_DSV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.DepthStencilViewDescription.Texture1DResource.MipSlice">
            <summary>	
            <para>The index of the first mipmap level to use.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_DSV::MipSlice']/*"/>	
            <unmanaged>unsigned int MipSlice</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.EncryptedBlockInformation">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_ENCRYPTED_BLOCK_INFO']/*"/>	
            <unmanaged>D3D11_ENCRYPTED_BLOCK_INFO</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.EncryptedBlockInformation.NumEncryptedBytesAtBeginning">
            <summary>	
            <para>The number of bytes that are encrypted at the start of the buffer. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_ENCRYPTED_BLOCK_INFO::NumEncryptedBytesAtBeginning']/*"/>	
            <unmanaged>unsigned int NumEncryptedBytesAtBeginning</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.EncryptedBlockInformation.NumBytesInSkipPattern">
            <summary>	
            <para>The number of bytes that are skipped after the first NumEncryptedBytesAtBeginning bytes, and then after each block of NumBytesInEncryptPattern bytes. Skipped bytes are not encrypted. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_ENCRYPTED_BLOCK_INFO::NumBytesInSkipPattern']/*"/>	
            <unmanaged>unsigned int NumBytesInSkipPattern</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.EncryptedBlockInformation.NumBytesInEncryptPattern">
            <summary>	
            <para>The number of bytes that are encrypted after each block of skipped bytes.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_ENCRYPTED_BLOCK_INFO::NumBytesInEncryptPattern']/*"/>	
            <unmanaged>unsigned int NumBytesInEncryptPattern</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.FeatureDataArchitectureInformation">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_ARCHITECTURE_INFO']/*"/>	
            <unmanaged>D3D11_FEATURE_DATA_ARCHITECTURE_INFO</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.FeatureDataArchitectureInformation.TileBasedDeferredRenderer">
            <summary>	
            <para>Specifies whether a rendering device batches rendering commands and performs multipass rendering into tiles or bins over a render area. Certain API usage patterns that are fine TileBasedDefferredRenderers (TBDRs) can perform worse on non-TBDRs and vice versa.  Applications that are careful about rendering can be friendly to both TBDR and non-TBDR architectures. TRUE if the rendering device batches rendering commands and <see cref="F:SharpDX.Result.False"/> otherwise. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_ARCHITECTURE_INFO::TileBasedDeferredRenderer']/*"/>	
            <unmanaged>BOOL TileBasedDeferredRenderer</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.FeatureDataD3D10XHardwareOptions">
            <summary>	
            Describes compute shader and raw and structured buffer support in the current graphics driver.	
            </summary>	
            <remarks>	
            Direct3D 11 devices (<see cref="F:SharpDX.Direct3D.FeatureLevel.Level_11_0"/>) are required to support Compute Shader model 5.0.  Direct3D 10.x devices (<see cref="F:SharpDX.Direct3D.FeatureLevel.Level_10_0"/>, <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_10_1"/>) can optionally support Compute Shader model 4.0 or 4.1.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS']/*"/>	
            <unmanaged>D3D11_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.FeatureDataD3D10XHardwareOptions.ComputeShadersPlusRawAndStructuredBuffersViaShader4X">
            <summary>	
            <para>TRUE if compute shaders and raw and structured buffers are supported; otherwise <see cref="F:SharpDX.Result.False"/>.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D10_X_HARDWARE_OPTIONS::ComputeShaders_Plus_RawAndStructuredBuffers_Via_Shader_4_x']/*"/>	
            <unmanaged>BOOL ComputeShaders_Plus_RawAndStructuredBuffers_Via_Shader_4_x</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.FeatureDataD3D11Options">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            If a Microsoft Direct3D device supports feature level 11.1 (<see cref="F:SharpDX.Direct3D.FeatureLevel.Level_11_1"/>), when you call <see cref="M:SharpDX.Direct3D11.Device.CheckFeatureSupport(SharpDX.Direct3D11.Feature)"/> with <see cref="F:SharpDX.Direct3D11.Feature.D3D11Options"/>, CheckFeatureSupport returns a reference to <see cref="T:SharpDX.Direct3D11.FeatureDataD3D11Options"/> with all member set to TRUE except the SAD4ShaderInstructions and ExtendedDoublesShaderInstructions members, which are optionally supported by the hardware and driver and therefore can be TRUE or <see cref="F:SharpDX.Result.False"/>.Feature level 11.1  provides the following additional features:UAVs at every shader stage with 64 UAV bind slots instead of 8. Target-independent rasterization, which enables you  to set the ForcedSampleCount member of <see cref="T:SharpDX.Direct3D11.RasterizerDescription1"/> to 1, 4, 8, or 16 and to render to RTVs with a single sample. UAV-only rendering with the ForcedSampleCount member of <see cref="T:SharpDX.Direct3D11.RasterizerDescription1"/> set to up to 16 (only up to 8 for feature level 11).The runtime always sets the following groupings of members identically. That is, all the values in a grouping are TRUE or <see cref="F:SharpDX.Result.False"/> together:DiscardAPIsSeenByDriver and FlagsForUpdateAndCopySeenByDriver ClearView, CopyWithOverlap, ConstantBufferPartialUpdate, ConstantBufferOffsetting, and MapNoOverwriteOnDynamicConstantBuffer MapNoOverwriteOnDynamicBufferSRV and MultisampleRTVWithForcedSampleCountOne	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D11_OPTIONS']/*"/>	
            <unmanaged>D3D11_FEATURE_DATA_D3D11_OPTIONS</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.FeatureDataD3D11Options.OutputMergerLogicOp">
            <summary>	
            <para>Specifies whether logic operations are available in blend state. The runtime sets this member to TRUE if logic operations are available in blend state and <see cref="F:SharpDX.Result.False"/> otherwise. This member is <see cref="F:SharpDX.Result.False"/> for feature level 9.1, 9.2, and 9.3.  This member is optional for feature level 10, 10.1, and 11.  This member is TRUE for feature level 11.1.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D11_OPTIONS::OutputMergerLogicOp']/*"/>	
            <unmanaged>BOOL OutputMergerLogicOp</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.FeatureDataD3D11Options.UAVOnlyRenderingForcedSampleCount">
            <summary>	
            <para>Specifies whether the driver can render with no RTVs or DSVs and only UAVs bound. The runtime sets this member to TRUE if  the driver can render with no RTVs or DSVs and only UAVs bound and <see cref="F:SharpDX.Result.False"/> otherwise. If TRUE, you can set the ForcedSampleCount member of <see cref="T:SharpDX.Direct3D11.RasterizerDescription1"/> to 1, 4, or 8 when you render with no RTVs or DSV and only UAVs bound.  For feature level 11.1, this member is always TRUE and you can also set ForcedSampleCount to 16 in addition to 1, 4, or 8.  The default value of ForcedSampleCount is 0, which means the same as if the value is set to 1. You can always set ForcedSampleCount to 0 or 1 for UAV-only rendering independently of how this member is set.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D11_OPTIONS::UAVOnlyRenderingForcedSampleCount']/*"/>	
            <unmanaged>BOOL UAVOnlyRenderingForcedSampleCount</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.FeatureDataD3D11Options.DiscardAPIsSeenByDriver">
            <summary>	
            <para>Specifies whether the driver supports the <see cref="M:SharpDX.Direct3D11.DeviceContext1.DiscardView(SharpDX.Direct3D11.ResourceView)"/> and <see cref="M:SharpDX.Direct3D11.DeviceContext1.DiscardResource(SharpDX.Direct3D11.Resource)"/> methods. The runtime sets this member to TRUE if the driver supports these methods and <see cref="F:SharpDX.Result.False"/> otherwise. How this member is set does not indicate whether the driver actually uses these methods; that is,   the driver might ignore these methods if they are not useful to the  hardware.  If <see cref="F:SharpDX.Result.False"/>, the runtime does not expose these methods to the driver because the driver does not support them.  You can monitor this member during development to rule out legacy drivers on hardware where these methods might have otherwise been beneficial.  You are not required to write separate code paths based on whether this member is TRUE or <see cref="F:SharpDX.Result.False"/>; you can call these methods whenever applicable.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D11_OPTIONS::DiscardAPIsSeenByDriver']/*"/>	
            <unmanaged>BOOL DiscardAPIsSeenByDriver</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.FeatureDataD3D11Options.FlagsForUpdateAndCopySeenByDriver">
            <summary>	
            <para>Specifies whether the driver supports new semantics for copy and update that are exposed by the <see cref="M:SharpDX.Direct3D11.DeviceContext1.CopySubresourceRegion1(SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32,System.Int32,SharpDX.Direct3D11.Resource,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion},System.Int32)"/> and <see cref="M:SharpDX.Direct3D11.DeviceContext1.UpdateSubresource1(SharpDX.Direct3D11.Resource,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion},System.IntPtr,System.Int32,System.Int32,System.Int32)"/> methods.  The runtime sets this member to TRUE if the driver supports new semantics for copy and update. The runtime sets this member to <see cref="F:SharpDX.Result.False"/> only for legacy drivers. The runtime handles this member similarly to the DiscardAPIsSeenByDriver member.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D11_OPTIONS::FlagsForUpdateAndCopySeenByDriver']/*"/>	
            <unmanaged>BOOL FlagsForUpdateAndCopySeenByDriver</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.FeatureDataD3D11Options.ClearView">
            <summary>	
            <para>Specifies whether the driver supports the <see cref="M:SharpDX.Direct3D11.DeviceContext1.ClearView(SharpDX.Direct3D11.ResourceView,System.Single,SharpDX.Rectangle[],System.Int32)"/> method. The runtime sets this member to TRUE if the driver supports this method and <see cref="F:SharpDX.Result.False"/> otherwise. If <see cref="F:SharpDX.Result.False"/>, the runtime does not expose this method to the driver because the driver does not support it.  </para>	
             <para>Note??For feature level 9.1, 9.2, and 9.3, this member is always TRUE because the option is emulated by the runtime.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D11_OPTIONS::ClearView']/*"/>	
            <unmanaged>BOOL ClearView</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.FeatureDataD3D11Options.CopyWithOverlap">
            <summary>	
            <para>Specifies whether you can call <see cref="M:SharpDX.Direct3D11.DeviceContext1.CopySubresourceRegion1(SharpDX.Direct3D11.Resource,System.Int32,System.Int32,System.Int32,System.Int32,SharpDX.Direct3D11.Resource,System.Int32,System.Nullable{SharpDX.Direct3D11.ResourceRegion},System.Int32)"/> with overlapping source and destination rectangles. The runtime sets this member to TRUE if  you can call CopySubresourceRegion1 with overlapping source and destination rectangles and <see cref="F:SharpDX.Result.False"/> otherwise. If <see cref="F:SharpDX.Result.False"/>, the runtime does not expose this method to the driver because the driver does not support it.  </para>	
             <para>Note??For feature level 9.1, 9.2, and 9.3, this member is always TRUE because the option is emulated by the runtime.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D11_OPTIONS::CopyWithOverlap']/*"/>	
            <unmanaged>BOOL CopyWithOverlap</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.FeatureDataD3D11Options.ConstantBufferPartialUpdate">
            <summary>	
            <para>Specifies whether the driver supports partial updates of constant buffers. The runtime sets this member to TRUE if  the driver supports partial updates of constant buffers and <see cref="F:SharpDX.Result.False"/> otherwise. If <see cref="F:SharpDX.Result.False"/>, the runtime does not expose this operation to the driver because the driver does not support it.  </para>	
             <para>Note??For feature level 9.1, 9.2, and 9.3, this member is always TRUE because the option is emulated by the runtime.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D11_OPTIONS::ConstantBufferPartialUpdate']/*"/>	
            <unmanaged>BOOL ConstantBufferPartialUpdate</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.FeatureDataD3D11Options.ConstantBufferOffsetting">
            <summary>	
            <para>Specifies whether the driver supports new semantics for setting offsets in constant buffers for a shader. The runtime sets this member to TRUE if  the driver supports allowing you to specify offsets when you call new methods like the <see cref="M:SharpDX.Direct3D11.DeviceContext1.VSSetConstantBuffers1(System.Int32,System.Int32,SharpDX.Direct3D11.Buffer[],System.Int32[],System.Int32[])"/> method and <see cref="F:SharpDX.Result.False"/> otherwise. If <see cref="F:SharpDX.Result.False"/>, the runtime does not expose this operation to the driver because the driver does not support it.    </para>	
             <para>Note??For feature level 9.1, 9.2, and 9.3, this member is always TRUE because the option is emulated by the runtime.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D11_OPTIONS::ConstantBufferOffsetting']/*"/>	
            <unmanaged>BOOL ConstantBufferOffsetting</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.FeatureDataD3D11Options.MapNoOverwriteOnDynamicConstantBuffer">
            <summary>	
            <para>Specifies whether you can call <see cref="M:SharpDX.Direct3D11.DeviceContext.MapSubresource(SharpDX.Direct3D11.Texture1D,System.Int32,System.Int32,SharpDX.Direct3D11.MapMode,SharpDX.Direct3D11.MapFlags,SharpDX.DataStream@)"/> with <see cref="F:SharpDX.Direct3D11.MapMode.WriteNoOverwrite"/> on a dynamic constant buffer (that is, whether the driver supports this operation). The runtime sets this member to TRUE if  the driver supports this operation and <see cref="F:SharpDX.Result.False"/> otherwise. If <see cref="F:SharpDX.Result.False"/>, the runtime fails this method because the driver does not support the operation.  </para>	
             <para>Note??For feature level 9.1, 9.2, and 9.3, this member is always TRUE because the option is emulated by the runtime.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D11_OPTIONS::MapNoOverwriteOnDynamicConstantBuffer']/*"/>	
            <unmanaged>BOOL MapNoOverwriteOnDynamicConstantBuffer</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.FeatureDataD3D11Options.MapNoOverwriteOnDynamicBufferSRV">
            <summary>	
            <para>Specifies whether you can call <see cref="M:SharpDX.Direct3D11.DeviceContext.MapSubresource(SharpDX.Direct3D11.Texture1D,System.Int32,System.Int32,SharpDX.Direct3D11.MapMode,SharpDX.Direct3D11.MapFlags,SharpDX.DataStream@)"/> with <see cref="F:SharpDX.Direct3D11.MapMode.WriteNoOverwrite"/> on a dynamic buffer SRV (that is, whether the driver supports this operation). The runtime sets this member to TRUE if  the driver supports this operation and <see cref="F:SharpDX.Result.False"/> otherwise. If <see cref="F:SharpDX.Result.False"/>, the runtime fails this method because the driver does not support the operation.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D11_OPTIONS::MapNoOverwriteOnDynamicBufferSRV']/*"/>	
            <unmanaged>BOOL MapNoOverwriteOnDynamicBufferSRV</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.FeatureDataD3D11Options.MultisampleRTVWithForcedSampleCountOne">
            <summary>	
            <para>Specifies whether the driver supports multisample rendering when you render with RTVs bound. If TRUE, you can set the ForcedSampleCount member of <see cref="T:SharpDX.Direct3D11.RasterizerDescription1"/> to 1 with a multisample RTV bound. The driver can support this option on feature level 10 and higher.  If <see cref="F:SharpDX.Result.False"/>, the rasterizer-state creation will fail because the driver is legacy or the feature level is too low.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D11_OPTIONS::MultisampleRTVWithForcedSampleCountOne']/*"/>	
            <unmanaged>BOOL MultisampleRTVWithForcedSampleCountOne</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.FeatureDataD3D11Options.SAD4ShaderInstructions">
            <summary>	
            <para>Specifies whether the hardware and driver support SAD4 instructions in shaders. The runtime sets this member to TRUE if  the hardware and driver support SAD4 instructions in shaders. If <see cref="F:SharpDX.Result.False"/>, the driver is legacy or the hardware does not support the option; the runtime will fail shader creation for shaders that use SAD4 instructions.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D11_OPTIONS::SAD4ShaderInstructions']/*"/>	
            <unmanaged>BOOL SAD4ShaderInstructions</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.FeatureDataD3D11Options.ExtendedDoublesShaderInstructions">
            <summary>	
            <para>Specifies whether the hardware and driver support extended doubles instructions in shaders. The runtime sets this member to TRUE if  the hardware and driver support extended doubles instructions in shaders (shader model 5 and higher).  Support of this option implies support of basic double-precision shader instructions as well. You can use the <see cref="F:SharpDX.Direct3D11.Feature.ShaderDoubles"/> value to query for support of double-precision shaders.  If <see cref="F:SharpDX.Result.False"/>, the hardware and driver do not support the option; the runtime will fail shader creation for shaders that use extended doubles instructions.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D11_OPTIONS::ExtendedDoublesShaderInstructions']/*"/>	
            <unmanaged>BOOL ExtendedDoublesShaderInstructions</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.FeatureDataD3D9Options">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D9_OPTIONS']/*"/>	
            <unmanaged>D3D11_FEATURE_DATA_D3D9_OPTIONS</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.FeatureDataD3D9Options.FullNonPow2TextureSupport">
            <summary>	
            <para>Specifies whether the driver supports the nonpowers-of-2-unconditionally feature. For more information about this feature, see feature level. The runtime sets this member to TRUE for hardware at Direct3D 10 and higher feature levels.  For hardware at Direct3D 9.3 and lower feature levels, the runtime sets this member to <see cref="F:SharpDX.Result.False"/> if the hardware and driver support the powers-of-2 (2D textures must have widths and heights specified as powers of two) feature or the nonpowers-of-2-conditionally feature. For more information about this feature, see feature level.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_D3D9_OPTIONS::FullNonPow2TextureSupport']/*"/>	
            <unmanaged>BOOL FullNonPow2TextureSupport</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.FeatureDataDoubles">
            <summary>	
            Describes double data type support in the current graphics driver.	
            </summary>	
            <remarks>	
            If the runtime sets DoublePrecisionFloatShaderOps to  TRUE, the hardware and driver support the following Shader Model 5 instructions:dadd   dmax   dmin   dmul   deq   dge   dlt   dne   dmov   dmovc   dtof   ftodNote??If DoublePrecisionFloatShaderOps is TRUE, the hardware and driver do not necessarily support double-precision division.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_DOUBLES']/*"/>	
            <unmanaged>D3D11_FEATURE_DATA_DOUBLES</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.FeatureDataDoubles.DoublePrecisionFloatShaderOps">
            <summary>	
            <para>Specifies whether double types are allowed. If TRUE, double types are allowed; otherwise <see cref="F:SharpDX.Result.False"/>. The runtime must set DoublePrecisionFloatShaderOps to  TRUE in order for you to use any HLSL shader that is compiled with a double type.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_DOUBLES::DoublePrecisionFloatShaderOps']/*"/>	
            <unmanaged>BOOL DoublePrecisionFloatShaderOps</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.FeatureDataFormatSupport">
            <summary>	
            Describes which resources are supported by the current graphics driver for a given format.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_FORMAT_SUPPORT']/*"/>	
            <unmanaged>D3D11_FEATURE_DATA_FORMAT_SUPPORT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FeatureDataFormatSupport.InFormat">
            <summary>	
            <para> <see cref="T:SharpDX.DXGI.Format"/> to return information on.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_FORMAT_SUPPORT::InFormat']/*"/>	
            <unmanaged>DXGI_FORMAT InFormat</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FeatureDataFormatSupport.OutFormatSupport">
            <summary>	
            <para>Combination of <see cref="T:SharpDX.Direct3D11.FormatSupport"/> flags indicating which resources are supported.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_FORMAT_SUPPORT::OutFormatSupport']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT OutFormatSupport</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.FeatureDataFormatSupport2">
            <summary>	
            Describes which unordered resource options are supported by the current graphics driver for a given format.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_FORMAT_SUPPORT2']/*"/>	
            <unmanaged>D3D11_FEATURE_DATA_FORMAT_SUPPORT2</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FeatureDataFormatSupport2.InFormat">
            <summary>	
            <para> <see cref="T:SharpDX.DXGI.Format"/> to return information on.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_FORMAT_SUPPORT2::InFormat']/*"/>	
            <unmanaged>DXGI_FORMAT InFormat</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FeatureDataFormatSupport2.OutFormatSupport2">
            <summary>	
            <para>Combination of <see cref="T:SharpDX.Direct3D11.ComputeShaderFormatSupport"/> flags indicating which unordered resource options are supported.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_FORMAT_SUPPORT2::OutFormatSupport2']/*"/>	
            <unmanaged>D3D11_FORMAT_SUPPORT2 OutFormatSupport2</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.FeatureDataShaderMinimumPrecisionSupport">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_SHADER_MIN_PRECISION_SUPPORT']/*"/>	
            <unmanaged>D3D11_FEATURE_DATA_SHADER_MIN_PRECISION_SUPPORT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FeatureDataShaderMinimumPrecisionSupport.PixelShaderMinPrecision">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_SHADER_MIN_PRECISION_SUPPORT::PixelShaderMinPrecision']/*"/>	
            <unmanaged>unsigned int PixelShaderMinPrecision</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.FeatureDataShaderMinimumPrecisionSupport.AllOtherShaderStagesMinPrecision">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_SHADER_MIN_PRECISION_SUPPORT::AllOtherShaderStagesMinPrecision']/*"/>	
            <unmanaged>unsigned int AllOtherShaderStagesMinPrecision</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.FeatureDataThreading">
            <summary>	
            Describes the multi-threading features that are supported by the current graphics driver.	
            </summary>	
            <remarks>	
            Use the <see cref="T:SharpDX.Direct3D11.FeatureDataThreading"/> structure with the <see cref="M:SharpDX.Direct3D11.Device.CheckFeatureSupport(SharpDX.Direct3D11.Feature)"/> method to determine multi-threading support.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_THREADING']/*"/>	
            <unmanaged>D3D11_FEATURE_DATA_THREADING</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.FeatureDataThreading.DriverConcurrentCreates">
            <summary>	
            <para>TRUE means resources can be created concurrently on multiple threads while drawing; <see cref="F:SharpDX.Result.False"/> means that the presence of coarse synchronization will prevent concurrency.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_THREADING::DriverConcurrentCreates']/*"/>	
            <unmanaged>BOOL DriverConcurrentCreates</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.FeatureDataThreading.DriverCommandLists">
            <summary>	
            <para>TRUE means command lists are supported by the current driver; <see cref="F:SharpDX.Result.False"/> means that the API will emulate deferred contexts and command lists with software.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_FEATURE_DATA_THREADING::DriverCommandLists']/*"/>	
            <unmanaged>BOOL DriverCommandLists</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.InputElement">
            <summary>	
            A description of a single element for the input-assembler stage.	
            </summary>	
            <remarks>	
            An input-layout object contains an array of structures, each structure defines one element being read from an input slot. Create an input-layout  object by calling <see cref="M:SharpDX.Direct3D11.Device.CreateInputLayout(SharpDX.Direct3D11.InputElement[],System.Int32,System.IntPtr,SharpDX.PointerSize,SharpDX.Direct3D11.InputLayout)"/>. For an example, see the "Create the Input-Layout Object" subtopic under the  Getting Started with the Input-Assembler Stage topic.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_INPUT_ELEMENT_DESC']/*"/>	
            <unmanaged>D3D11_INPUT_ELEMENT_DESC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.InputElement.SemanticName">
            <summary>	
            <para>The HLSL semantic associated with this element in a shader input-signature.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_INPUT_ELEMENT_DESC::SemanticName']/*"/>	
            <unmanaged>const char* SemanticName</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.InputElement.SemanticIndex">
            <summary>	
            <para>The semantic index for the element. A semantic index modifies a semantic, with an integer index number. A semantic index is only needed in a  case where there is more than one element with the same semantic. For example, a 4x4 matrix would have four components each with the semantic  name </para>	
              	
            <code>	
            matrix	
            </code>	
              <para>, however each of the four component would have different semantic indices (0, 1, 2, and 3).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_INPUT_ELEMENT_DESC::SemanticIndex']/*"/>	
            <unmanaged>unsigned int SemanticIndex</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.InputElement.Format">
            <summary>	
            <para>The data type of the element data. See <see cref="T:SharpDX.DXGI.Format"/>.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_INPUT_ELEMENT_DESC::Format']/*"/>	
            <unmanaged>DXGI_FORMAT Format</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.InputElement.Slot">
            <summary>	
            <para>An integer value that identifies the input-assembler (see input slot). Valid values are between 0 and 15, defined in D3D11.h.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_INPUT_ELEMENT_DESC::InputSlot']/*"/>	
            <unmanaged>unsigned int InputSlot</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.InputElement.AlignedByteOffset">
            <summary>	
            <para>Optional. Offset (in bytes) between each element. Use D3D11_APPEND_ALIGNED_ELEMENT for convenience to define the current element directly  after the previous one, including any packing if necessary.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_INPUT_ELEMENT_DESC::AlignedByteOffset']/*"/>	
            <unmanaged>unsigned int AlignedByteOffset</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.InputElement.Classification">
            <summary>	
            <para>Identifies the input data class for a single input slot (see <see cref="T:SharpDX.Direct3D11.InputClassification"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_INPUT_ELEMENT_DESC::InputSlotClass']/*"/>	
            <unmanaged>D3D11_INPUT_CLASSIFICATION InputSlotClass</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.InputElement.InstanceDataStepRate">
            <summary>	
            <para>The number of instances to draw using the same per-instance data before advancing in the buffer by one element. This value must be 0 for an  element that contains per-vertex data (the slot class is set to <see cref="F:SharpDX.Direct3D11.InputClassification.PerVertexData"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_INPUT_ELEMENT_DESC::InstanceDataStepRate']/*"/>	
            <unmanaged>unsigned int InstanceDataStepRate</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.InputElement.#ctor(System.String,System.Int32,SharpDX.DXGI.Format,System.Int32,System.Int32,SharpDX.Direct3D11.InputClassification,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.InputElement" /> struct.
            </summary>
            <param name = "name">The HLSL semantic associated with this element in a shader input-signature.</param>
            <param name = "index">The semantic index for the element. A semantic index modifies a semantic, with an integer index number. A semantic index is only needed in a case where there is more than one element with the same semantic. For example, a 4x4 matrix would have four components each with the semantic name matrix, however each of the four component would have different semantic indices (0, 1, 2, and 3).</param>
            <param name = "format">The data type of the element data.</param>
            <param name = "offset">Offset (in bytes) between each element. Use AppendAligned for convenience to define the current element directly after the previous one, including any packing if necessary.</param>
            <param name = "slot">An integer value that identifies the input-assembler. Valid values are between 0 and 15.</param>
            <param name = "slotClass">Identifies the input data class for a single input slot.</param>
            <param name = "stepRate">The number of instances to draw using the same per-instance data before advancing in the buffer by one element. This value must be 0 for an element that contains per-vertex data.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.InputElement.#ctor(System.String,System.Int32,SharpDX.DXGI.Format,System.Int32,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.InputElement" /> struct.
            </summary>
            <param name = "name">The HLSL semantic associated with this element in a shader input-signature.</param>
            <param name = "index">The semantic index for the element. A semantic index modifies a semantic, with an integer index number. A semantic index is only needed in a case where there is more than one element with the same semantic. For example, a 4x4 matrix would have four components each with the semantic name matrix, however each of the four component would have different semantic indices (0, 1, 2, and 3).</param>
            <param name = "format">The data type of the element data.</param>
            <param name = "offset">Offset (in bytes) between each element. Use AppendAligned for convenience to define the current element directly after the previous one, including any packing if necessary.</param>
            <param name = "slot">An integer value that identifies the input-assembler. Valid values are between 0 and 15.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.InputElement.#ctor(System.String,System.Int32,SharpDX.DXGI.Format,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.InputElement" /> struct.
            </summary>
            <param name = "name">The HLSL semantic associated with this element in a shader input-signature.</param>
            <param name = "index">The semantic index for the element. A semantic index modifies a semantic, with an integer index number. A semantic index is only needed in a case where there is more than one element with the same semantic. For example, a 4x4 matrix would have four components each with the semantic name matrix, however each of the four component would have different semantic indices (0, 1, 2, and 3).</param>
            <param name = "format">The data type of the element data.</param>
            <param name = "slot">An integer value that identifies the input-assembler. Valid values are between 0 and 15.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.InputElement.Equals(SharpDX.Direct3D11.InputElement)">
            <summary>
            Determines whether the specified <see cref="T:SharpDX.Direct3D11.InputElement"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:SharpDX.Direct3D11.InputElement"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:SharpDX.Direct3D11.InputElement"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.InputElement.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:SharpDX.Direct3D11.InputElement.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:SharpDX.Direct3D11.InputElement.op_Equality(SharpDX.Direct3D11.InputElement,SharpDX.Direct3D11.InputElement)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:SharpDX.Direct3D11.InputElement.op_Inequality(SharpDX.Direct3D11.InputElement,SharpDX.Direct3D11.InputElement)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="P:SharpDX.Direct3D11.InputElement.AppendAligned">
            <summary>
              Returns a value that can be used for the offset parameter of an InputElement to indicate that the element
              should be aligned directly after the previous element, including any packing if neccessary.
            </summary>
            <returns>A value used to align input elements.</returns>
            <unmanaged>D3D11_APPEND_ALIGNED_ELEMENT</unmanaged>
        </member>
        <member name="T:SharpDX.Direct3D11.MessageAuthenticationCode">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_OMAC']/*"/>	
            <unmanaged>D3D11_OMAC</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.MessageAuthenticationCode.Buffer">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_OMAC::Omac']/*"/>	
            <unmanaged>unsigned char Omac[16]</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.QueryDataPipelineStatistics">
            <summary>	
            Query information about graphics-pipeline activity in between calls to <see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/> and <see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/>.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DATA_PIPELINE_STATISTICS']/*"/>	
            <unmanaged>D3D11_QUERY_DATA_PIPELINE_STATISTICS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryDataPipelineStatistics.IAVerticeCount">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DATA_PIPELINE_STATISTICS::IAVertices']/*"/>	
            <unmanaged>unsigned longlong IAVertices</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryDataPipelineStatistics.IAPrimitiveCount">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DATA_PIPELINE_STATISTICS::IAPrimitives']/*"/>	
            <unmanaged>unsigned longlong IAPrimitives</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryDataPipelineStatistics.VSInvocationCount">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DATA_PIPELINE_STATISTICS::VSInvocations']/*"/>	
            <unmanaged>unsigned longlong VSInvocations</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryDataPipelineStatistics.GSInvocationCount">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DATA_PIPELINE_STATISTICS::GSInvocations']/*"/>	
            <unmanaged>unsigned longlong GSInvocations</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryDataPipelineStatistics.GSPrimitiveCount">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DATA_PIPELINE_STATISTICS::GSPrimitives']/*"/>	
            <unmanaged>unsigned longlong GSPrimitives</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryDataPipelineStatistics.CInvocationCount">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DATA_PIPELINE_STATISTICS::CInvocations']/*"/>	
            <unmanaged>unsigned longlong CInvocations</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryDataPipelineStatistics.CPrimitiveCount">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DATA_PIPELINE_STATISTICS::CPrimitives']/*"/>	
            <unmanaged>unsigned longlong CPrimitives</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryDataPipelineStatistics.PSInvocationCount">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DATA_PIPELINE_STATISTICS::PSInvocations']/*"/>	
            <unmanaged>unsigned longlong PSInvocations</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryDataPipelineStatistics.HSInvocationCount">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DATA_PIPELINE_STATISTICS::HSInvocations']/*"/>	
            <unmanaged>unsigned longlong HSInvocations</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryDataPipelineStatistics.DSInvocationCount">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DATA_PIPELINE_STATISTICS::DSInvocations']/*"/>	
            <unmanaged>unsigned longlong DSInvocations</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryDataPipelineStatistics.CSInvocationCount">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DATA_PIPELINE_STATISTICS::CSInvocations']/*"/>	
            <unmanaged>unsigned longlong CSInvocations</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.QueryDataTimestampDisjoint">
            <summary>	
            Query information about the reliability of a timestamp query.	
            </summary>	
            <remarks>	
            For a list of query types see <see cref="T:SharpDX.Direct3D11.QueryType"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DATA_TIMESTAMP_DISJOINT']/*"/>	
            <unmanaged>D3D11_QUERY_DATA_TIMESTAMP_DISJOINT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryDataTimestampDisjoint.Frequency">
            <summary>	
            <para>How frequently the GPU counter increments in Hz.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DATA_TIMESTAMP_DISJOINT::Frequency']/*"/>	
            <unmanaged>unsigned longlong Frequency</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.QueryDataTimestampDisjoint.Disjoint">
            <summary>	
            <para>If this is TRUE, something occurred in between the query's <see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/> and <see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/> calls that caused the timestamp counter to become discontinuous or disjoint, such as unplugging the AC chord on a laptop, overheating, or throttling up/down due to laptop savings events. The timestamp returned by <see cref="M:SharpDX.Direct3D11.DeviceContext.GetDataInternal(SharpDX.Direct3D11.Asynchronous,System.IntPtr,System.Int32,SharpDX.Direct3D11.AsynchronousFlags)"/> for a timestamp query is only reliable if Disjoint is <see cref="F:SharpDX.Result.False"/>.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DATA_TIMESTAMP_DISJOINT::Disjoint']/*"/>	
            <unmanaged>BOOL Disjoint</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.QueryDescription">
            <summary>	
            Describes a query.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DESC']/*"/>	
            <unmanaged>D3D11_QUERY_DESC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryDescription.Type">
            <summary>	
            <para>Type of query (see <see cref="T:SharpDX.Direct3D11.QueryType"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DESC::Query']/*"/>	
            <unmanaged>D3D11_QUERY Query</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.QueryDescription.Flags">
            <summary>	
            <para>Miscellaneous flags (see <see cref="T:SharpDX.Direct3D11.QueryFlags"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DESC::MiscFlags']/*"/>	
            <unmanaged>D3D11_QUERY_MISC_FLAG MiscFlags</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.RasterizerDescription1">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            Rasterizer state defines the behavior of the rasterizer stage. To set rasterizer state, call <see cref="M:SharpDX.Direct3D11.RasterizerStage.SetState(SharpDX.Direct3D11.RasterizerState)"/>.If you do not specify some rasterizer state,  the Microsoft Direct3D runtime uses the following default values for rasterizer state.StateDefault Value FillModeSolid CullModeBack FrontCounterClockwiseFALSE DepthBias0 SlopeScaledDepthBias0.0f DepthBiasClamp0.0f DepthClipEnableTRUE ScissorEnableFALSE MultisampleEnableFALSE AntialiasedLineEnableFALSE ForcedSampleCount0?	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC1']/*"/>	
            <unmanaged>D3D11_RASTERIZER_DESC1</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RasterizerDescription1.FillMode">
            <summary>	
            <para>Determines the fill mode to use when rendering.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC1::FillMode']/*"/>	
            <unmanaged>D3D11_FILL_MODE FillMode</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RasterizerDescription1.CullMode">
            <summary>	
            <para>Indicates that triangles facing the specified direction are not drawn.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC1::CullMode']/*"/>	
            <unmanaged>D3D11_CULL_MODE CullMode</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RasterizerDescription1.DepthBias">
            <summary>	
            <para>Depth value added to a given pixel.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC1::DepthBias']/*"/>	
            <unmanaged>int DepthBias</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RasterizerDescription1.DepthBiasClamp">
            <summary>	
            <para>Maximum depth bias of a pixel.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC1::DepthBiasClamp']/*"/>	
            <unmanaged>float DepthBiasClamp</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RasterizerDescription1.SlopeScaledDepthBias">
            <summary>	
            <para>Scalar on a given pixel's slope.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC1::SlopeScaledDepthBias']/*"/>	
            <unmanaged>float SlopeScaledDepthBias</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RasterizerDescription1.ForcedSampleCount">
            <summary>	
            <para>The sample count that is forced while UAV rendering or rasterizing. Valid values are 0, 1, 2, 4, 8, and optionally 16. 0 indicates that the sample count is not forced.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC1::ForcedSampleCount']/*"/>	
            <unmanaged>unsigned int ForcedSampleCount</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.RasterizerDescription1.FrontCounterClockwise">
            <summary>	
            <para>Specifies whether a triangle is front- or back-facing. If TRUE, a triangle will be considered front-facing if its vertices are counter-clockwise on the render target and considered back-facing if they are clockwise. If <see cref="F:SharpDX.Result.False"/>, the opposite is true.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC1::FrontCounterClockwise']/*"/>	
            <unmanaged>BOOL FrontCounterClockwise</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.RasterizerDescription1.DepthClipEnable">
            <summary>	
            <para>Specifies whether to enable clipping based on distance.</para>	
             <para>The hardware always performs x and y clipping of rasterized coordinates. When DepthClipEnable is set to the default?TRUE, the hardware also clips the z value (that is, the hardware performs the last step of the following algorithm).	
            </para>	
              0 &lt; w	
            -w &lt;= x &lt;= w (or arbitrarily wider range if implementation uses a guard band to reduce clipping burden)	
            -w &lt;= y &lt;= w (or arbitrarily wider range if implementation uses a guard band to reduce clipping burden)	
            0 &lt;= z &lt;= w	
             <para>When you set DepthClipEnable to <see cref="F:SharpDX.Result.False"/>, the hardware skips the z clipping (that is, the last step in the preceding algorithm). However, the hardware still performs the "0 &lt; w" clipping. When z clipping is disabled, improper depth ordering at the pixel level might result. However, when z clipping is disabled, stencil shadow implementations are simplified. In other words, you can avoid complex special-case handling for geometry that goes beyond the back clipping plane.	
            </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC1::DepthClipEnable']/*"/>	
            <unmanaged>BOOL DepthClipEnable</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.RasterizerDescription1.ScissorEnable">
            <summary>	
            <para>Specifies whether to enable scissor-rectangle culling. All pixels ouside an active scissor rectangle are culled.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC1::ScissorEnable']/*"/>	
            <unmanaged>BOOL ScissorEnable</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.RasterizerDescription1.MultisampleEnable">
            <summary>	
            <para>Specifies whether to enable multisample antialiasing.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC1::MultisampleEnable']/*"/>	
            <unmanaged>BOOL MultisampleEnable</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.RasterizerDescription1.AntialiasedLineEnable">
            <summary>	
            <para>Specifies whether to enable line antialiasing; only applies if doing line drawing and MultisampleEnable is <see cref="F:SharpDX.Result.False"/>.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC1::AntialiasedLineEnable']/*"/>	
            <unmanaged>BOOL AntialiasedLineEnable</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.RasterizerStateDescription">
            <summary>	
            Describes rasterizer state.	
            </summary>	
            <remarks>	
            Rasterizer state defines the behavior of the rasterizer stage; to set rasterizer state, call <see cref="M:SharpDX.Direct3D11.RasterizerStage.SetState(SharpDX.Direct3D11.RasterizerState)"/>.These are the default values for rasterizer state.StateDefault Value FillModeSolid CullModeBack FrontCounterClockwiseFALSE DepthBias0 SlopeScaledDepthBias0.0f DepthBiasClamp0.0f DepthClipEnableTRUE ScissorEnableFALSE MultisampleEnableFALSE AntialiasedLineEnableFALSE?	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC']/*"/>	
            <unmanaged>D3D11_RASTERIZER_DESC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RasterizerStateDescription.FillMode">
            <summary>	
            <para>Determines the fill mode to use when rendering (see <see cref="T:SharpDX.Direct3D11.FillMode"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC::FillMode']/*"/>	
            <unmanaged>D3D11_FILL_MODE FillMode</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RasterizerStateDescription.CullMode">
            <summary>	
            <para>Indicates triangles facing the specified direction are not drawn (see <see cref="T:SharpDX.Direct3D11.CullMode"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC::CullMode']/*"/>	
            <unmanaged>D3D11_CULL_MODE CullMode</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RasterizerStateDescription.DepthBias">
            <summary>	
            <para>Depth value added to a given pixel.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC::DepthBias']/*"/>	
            <unmanaged>int DepthBias</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RasterizerStateDescription.DepthBiasClamp">
            <summary>	
            <para>Maximum depth bias of a pixel.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC::DepthBiasClamp']/*"/>	
            <unmanaged>float DepthBiasClamp</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RasterizerStateDescription.SlopeScaledDepthBias">
            <summary>	
            <para>Scalar on a given pixel's slope.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC::SlopeScaledDepthBias']/*"/>	
            <unmanaged>float SlopeScaledDepthBias</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.RasterizerStateDescription.IsFrontCounterClockwise">
            <summary>	
            <para>Determines if a triangle is front- or back-facing. If this parameter is true, then a triangle will be considered front-facing if its vertices are counter-clockwise on the render target and considered back-facing if they are clockwise. If this parameter is false then the opposite is true.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC::FrontCounterClockwise']/*"/>	
            <unmanaged>BOOL FrontCounterClockwise</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.RasterizerStateDescription.IsDepthClipEnabled">
            <summary>	
            <para>Enable clipping based on distance.</para>	
             <para>The hardware always performs x and y clipping of rasterized coordinates. When DepthClipEnable is set to the default?TRUE, the hardware also clips the z value (that is, the hardware performs the last step of the following algorithm).	
            </para>	
              0 &lt; w	
            -w &lt;= x &lt;= w (or arbitrarily wider range if implementation uses a guard band to reduce clipping burden)	
            -w &lt;= y &lt;= w (or arbitrarily wider range if implementation uses a guard band to reduce clipping burden)	
            0 &lt;= z &lt;= w	
             <para>When you set DepthClipEnable to <see cref="F:SharpDX.Result.False"/>, the hardware skips the z clipping (that is, the last step in the preceding algorithm). However, the hardware still performs the "0 &lt; w" clipping. When z clipping is disabled, improper depth ordering at the pixel level might result. However, when z clipping is disabled, stencil shadow implementations are simplified. In other words, you can avoid complex special-case handling for geometry that goes beyond the back clipping plane.	
            </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC::DepthClipEnable']/*"/>	
            <unmanaged>BOOL DepthClipEnable</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.RasterizerStateDescription.IsScissorEnabled">
            <summary>	
            <para>Enable scissor-rectangle culling. All pixels ouside an active scissor rectangle are culled.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC::ScissorEnable']/*"/>	
            <unmanaged>BOOL ScissorEnable</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.RasterizerStateDescription.IsMultisampleEnabled">
            <summary>	
            <para>Enable multisample antialiasing.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC::MultisampleEnable']/*"/>	
            <unmanaged>BOOL MultisampleEnable</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.RasterizerStateDescription.IsAntialiasedLineEnabled">
            <summary>	
            <para>Enable line antialiasing; only applies if doing line drawing and MultisampleEnable is false.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RASTERIZER_DESC::AntialiasedLineEnable']/*"/>	
            <unmanaged>BOOL AntialiasedLineEnable</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.RenderTargetBlendDescription">
            <summary>	
            Describes the blend state for a render target.	
            </summary>	
            <remarks>	
            For info about how blending is done, see the output-merger stage.Here are the default values for blend state.StateDefault Value BlendEnableFALSE SrcBlendD3D11_BLEND_ONE DestBlendD3D11_BLEND_ZERO BlendOpD3D11_BLEND_OP_ADD SrcBlendAlphaD3D11_BLEND_ONE DestBlendAlphaD3D11_BLEND_ZERO BlendOpAlphaD3D11_BLEND_OP_ADD RenderTargetWriteMaskD3D11_COLOR_WRITE_ENABLE_ALL?	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC']/*"/>	
            <unmanaged>D3D11_RENDER_TARGET_BLEND_DESC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetBlendDescription.SourceBlend">
            <summary>	
            <para>This blend option specifies the operation to perform on the RGB value that the pixel shader outputs. The BlendOp member defines how to combine the SrcBlend and DestBlend operations.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC::SrcBlend']/*"/>	
            <unmanaged>D3D11_BLEND SrcBlend</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetBlendDescription.DestinationBlend">
            <summary>	
            <para>This blend option specifies the operation to perform on the current RGB value in the render target. The BlendOp member defines how to combine the SrcBlend and DestBlend operations.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC::DestBlend']/*"/>	
            <unmanaged>D3D11_BLEND DestBlend</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetBlendDescription.BlendOperation">
            <summary>	
            <para>This blend operation defines how to combine the SrcBlend and DestBlend operations.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC::BlendOp']/*"/>	
            <unmanaged>D3D11_BLEND_OP BlendOp</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetBlendDescription.SourceAlphaBlend">
            <summary>	
            <para>This blend option specifies the operation to perform on the alpha value that the pixel shader outputs. Blend options that end in _COLOR are not allowed. The BlendOpAlpha member defines how to combine the SrcBlendAlpha and DestBlendAlpha operations.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC::SrcBlendAlpha']/*"/>	
            <unmanaged>D3D11_BLEND SrcBlendAlpha</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetBlendDescription.DestinationAlphaBlend">
            <summary>	
            <para>This blend option specifies the operation to perform on the current alpha value in the render target. Blend options that end in _COLOR are not allowed. The BlendOpAlpha member defines how to combine the SrcBlendAlpha and DestBlendAlpha operations.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC::DestBlendAlpha']/*"/>	
            <unmanaged>D3D11_BLEND DestBlendAlpha</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetBlendDescription.AlphaBlendOperation">
            <summary>	
            <para>This blend operation defines how to combine the SrcBlendAlpha and DestBlendAlpha operations.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC::BlendOpAlpha']/*"/>	
            <unmanaged>D3D11_BLEND_OP BlendOpAlpha</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetBlendDescription.RenderTargetWriteMask">
            <summary>	
            <para>A write mask.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC::RenderTargetWriteMask']/*"/>	
            <unmanaged>D3D11_COLOR_WRITE_ENABLE RenderTargetWriteMask</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.RenderTargetBlendDescription.IsBlendEnabled">
            <summary>	
            <para>Enable (or disable) blending.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC::BlendEnable']/*"/>	
            <unmanaged>BOOL BlendEnable</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.RenderTargetBlendDescription1">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            For info about how blending is done, see the output-merger stage.Here are the default values for blend state.StateDefault Value BlendEnableFALSE LogicOpEnableFALSE SrcBlendD3D11_BLEND_ONE DestBlendD3D11_BLEND_ZERO BlendOpD3D11_BLEND_OP_ADD SrcBlendAlphaD3D11_BLEND_ONE DestBlendAlphaD3D11_BLEND_ZERO BlendOpAlphaD3D11_BLEND_OP_ADD RenderTargetWriteMaskD3D11_COLOR_WRITE_ENABLE_ALL?	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC1']/*"/>	
            <unmanaged>D3D11_RENDER_TARGET_BLEND_DESC1</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetBlendDescription1.SourceBlend">
            <summary>	
            <para>This blend option specifies the operation to perform on the RGB value that the pixel shader outputs. The BlendOp member defines how to combine the SrcBlend and DestBlend operations.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC1::SrcBlend']/*"/>	
            <unmanaged>D3D11_BLEND SrcBlend</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetBlendDescription1.DestinationBlend">
            <summary>	
            <para>This blend option specifies the operation to perform on the current RGB value in the render target. The BlendOp member defines how to combine the SrcBlend and DestBlend operations.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC1::DestBlend']/*"/>	
            <unmanaged>D3D11_BLEND DestBlend</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetBlendDescription1.BlendOperation">
            <summary>	
            <para>This blend operation defines how to combine the SrcBlend and DestBlend operations.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC1::BlendOp']/*"/>	
            <unmanaged>D3D11_BLEND_OP BlendOp</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetBlendDescription1.SourceAlphaBlend">
            <summary>	
            <para>This blend option specifies the operation to perform on the alpha value that the pixel shader outputs. Blend options that end in _COLOR are not allowed. The BlendOpAlpha member defines how to combine the SrcBlendAlpha and DestBlendAlpha operations.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC1::SrcBlendAlpha']/*"/>	
            <unmanaged>D3D11_BLEND SrcBlendAlpha</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetBlendDescription1.DestinationAlphaBlend">
            <summary>	
            <para>This blend option specifies the operation to perform on the current alpha value in the render target. Blend options that end in _COLOR are not allowed. The BlendOpAlpha member defines how to combine the SrcBlendAlpha and DestBlendAlpha operations.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC1::DestBlendAlpha']/*"/>	
            <unmanaged>D3D11_BLEND DestBlendAlpha</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetBlendDescription1.AlphaBlendOperation">
            <summary>	
            <para>This blend operation defines how to combine the SrcBlendAlpha and DestBlendAlpha operations.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC1::BlendOpAlpha']/*"/>	
            <unmanaged>D3D11_BLEND_OP BlendOpAlpha</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetBlendDescription1.LogicOp">
            <summary>	
            <para>A   <see cref="T:SharpDX.Direct3D11.LogicOperation"/>-typed value that specifies the logical operation to configure for the render target.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC1::LogicOp']/*"/>	
            <unmanaged>D3D11_LOGIC_OP LogicOp</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetBlendDescription1.RenderTargetWriteMask">
            <summary>	
            <para>A write mask.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC1::RenderTargetWriteMask']/*"/>	
            <unmanaged>D3D11_COLOR_WRITE_ENABLE RenderTargetWriteMask</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.RenderTargetBlendDescription1.IsBlendEnabled">
            <summary>	
            <para>Enable (or disable) blending.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC1::BlendEnable']/*"/>	
            <unmanaged>BOOL BlendEnable</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.RenderTargetBlendDescription1.LogicOpEnable">
            <summary>	
            <para>Enable (or disable) a logical operation.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_BLEND_DESC1::LogicOpEnable']/*"/>	
            <unmanaged>BOOL LogicOpEnable</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.RenderTargetViewDescription">
            <summary>	
            Specifies the subresources from a resource that are accessible using a render-target view.	
            </summary>	
            <remarks>	
            A render-target-view description is passed into <see cref="M:SharpDX.Direct3D11.Device.CreateRenderTargetView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.RenderTargetViewDescription},SharpDX.Direct3D11.RenderTargetView)"/> to create a render target.A render-target-view cannot use the following formats:Any typeless format. DXGI_FORMAT_R32G32B32 if the view will be used to bind a buffer (vertex, index, constant, or stream-output).If the format is set to <see cref="F:SharpDX.DXGI.Format.Unknown"/>, then the format of the resource that the view binds to the pipeline will be used.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_VIEW_DESC']/*"/>	
            <unmanaged>D3D11_RENDER_TARGET_VIEW_DESC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Format">
            <summary>	
            <para>The data format (see <see cref="T:SharpDX.DXGI.Format"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_VIEW_DESC::Format']/*"/>	
            <unmanaged>DXGI_FORMAT Format</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Dimension">
            <summary>	
            <para>The resource type (see <see cref="T:SharpDX.Direct3D11.RenderTargetViewDimension"/>), which specifies how the render-target resource will be accessed.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_VIEW_DESC::ViewDimension']/*"/>	
            <unmanaged>D3D11_RTV_DIMENSION ViewDimension</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Buffer">
            <summary>	
            <para>Specifies which buffer elements can be accessed (see <see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription.BufferResource"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_VIEW_DESC::Buffer']/*"/>	
            <unmanaged>D3D11_BUFFER_RTV Buffer</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture1D">
            <summary>	
            <para>Specifies the subresources in a 1D texture that can be accessed (see <see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription.Texture1DResource"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_VIEW_DESC::Texture1D']/*"/>	
            <unmanaged>D3D11_TEX1D_RTV Texture1D</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture1DArray">
            <summary>	
            <para>Specifies the subresources in a 1D texture array that can be accessed (see <see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription.Texture1DArrayResource"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_VIEW_DESC::Texture1DArray']/*"/>	
            <unmanaged>D3D11_TEX1D_ARRAY_RTV Texture1DArray</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2D">
            <summary>	
            <para>Specifies the subresources in a 2D texture that can be accessed (see <see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DResource"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_VIEW_DESC::Texture2D']/*"/>	
            <unmanaged>D3D11_TEX2D_RTV Texture2D</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DArray">
            <summary>	
            <para>Specifies the subresources in a 2D texture array that can be accessed (see <see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DArrayResource"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_VIEW_DESC::Texture2DArray']/*"/>	
            <unmanaged>D3D11_TEX2D_ARRAY_RTV Texture2DArray</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DMS">
            <summary>	
            <para>Specifies a single subresource because a multisampled 2D texture only contains one subresource (see <see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DMultisampledResource"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_VIEW_DESC::Texture2DMS']/*"/>	
            <unmanaged>D3D11_TEX2DMS_RTV Texture2DMS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DMSArray">
            <summary>	
            <para>Specifies the subresources in a multisampled 2D texture array that can be accessed (see <see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DMultisampledArrayResource"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_VIEW_DESC::Texture2DMSArray']/*"/>	
            <unmanaged>D3D11_TEX2DMS_ARRAY_RTV Texture2DMSArray</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture3D">
            <summary>	
            <para>Specifies subresources in a 3D texture that can be accessed (see <see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription.Texture3DResource"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_RENDER_TARGET_VIEW_DESC::Texture3D']/*"/>	
            <unmanaged>D3D11_TEX3D_RTV Texture3D</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DArrayResource">
            <summary>	
            Specifies the subresources from an array of 2D textures to use in a render-target view.	
            </summary>	
            <remarks>	
            This structure is one member of a render-target-view description (see <see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription"/>).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_RTV']/*"/>	
            <unmanaged>D3D11_TEX2D_ARRAY_RTV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DArrayResource.MipSlice">
            <summary>	
            <para>The index of the mipmap level to use mip slice.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_RTV::MipSlice']/*"/>	
            <unmanaged>unsigned int MipSlice</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DArrayResource.FirstArraySlice">
            <summary>	
            <para>The index of the first texture to use in an array of textures.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_RTV::FirstArraySlice']/*"/>	
            <unmanaged>unsigned int FirstArraySlice</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DArrayResource.ArraySize">
            <summary>	
            <para>Number of textures in the array to use in the render target view, starting from FirstArraySlice.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_RTV::ArraySize']/*"/>	
            <unmanaged>unsigned int ArraySize</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DMultisampledArrayResource">
            <summary>	
            Specifies the subresources from a an array of multisampled 2D textures to use in a render-target view.	
            </summary>	
            <remarks>	
            This structure is one member of a render-target-view description (see <see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription"/>).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2DMS_ARRAY_RTV']/*"/>	
            <unmanaged>D3D11_TEX2DMS_ARRAY_RTV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DMultisampledArrayResource.FirstArraySlice">
            <summary>	
            <para>The index of the first texture to use in an array of textures.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2DMS_ARRAY_RTV::FirstArraySlice']/*"/>	
            <unmanaged>unsigned int FirstArraySlice</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DMultisampledArrayResource.ArraySize">
            <summary>	
            <para>Number of textures to use.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2DMS_ARRAY_RTV::ArraySize']/*"/>	
            <unmanaged>unsigned int ArraySize</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DMultisampledResource">
            <summary>	
            Specifies the subresource from a multisampled 2D texture to use in a render-target view.	
            </summary>	
            <remarks>	
            Since a multisampled 2D texture contains a single subresource, there is actually nothing to specify in <see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DMultisampledResource"/>. Consequently, UnusedField_NothingToDefine is included so that this structure will compile in C.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2DMS_RTV']/*"/>	
            <unmanaged>D3D11_TEX2DMS_RTV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DMultisampledResource.UnusedFieldNothingToDefine">
            <summary>	
            <para>Integer of any value. See remarks.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2DMS_RTV::UnusedField_NothingToDefine']/*"/>	
            <unmanaged>unsigned int UnusedField_NothingToDefine</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.RenderTargetViewDescription.Texture1DResource">
            <summary>	
            Specifies the subresource from a 1D texture to use in a render-target view.	
            </summary>	
            <remarks>	
            This structure is one member of a render-target-view description (see <see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription"/>).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_RTV']/*"/>	
            <unmanaged>D3D11_TEX1D_RTV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture1DResource.MipSlice">
            <summary>	
            <para>The index of the mipmap level to use mip slice.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_RTV::MipSlice']/*"/>	
            <unmanaged>unsigned int MipSlice</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.RenderTargetViewDescription.Texture3DResource">
            <summary>	
            Specifies the subresources from a 3D texture to use in a render-target view.	
            </summary>	
            <remarks>	
            This structure is one member of a render target view. See <see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX3D_RTV']/*"/>	
            <unmanaged>D3D11_TEX3D_RTV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture3DResource.MipSlice">
            <summary>	
            <para>The index of the mipmap level to use mip slice.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX3D_RTV::MipSlice']/*"/>	
            <unmanaged>unsigned int MipSlice</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture3DResource.FirstDepthSlice">
            <summary>	
            <para>First depth level to use.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX3D_RTV::FirstWSlice']/*"/>	
            <unmanaged>unsigned int FirstWSlice</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture3DResource.DepthSliceCount">
            <summary>	
            <para>Number of depth levels to use in the render-target view, starting from FirstWSlice. A value of -1 indicates all of the slices along the w axis, starting from FirstWSlice.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX3D_RTV::WSize']/*"/>	
            <unmanaged>unsigned int WSize</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.RenderTargetViewDescription.BufferResource">
            <summary>	
            Specifies the elements in a buffer resource to use in a render-target view.	
            </summary>	
            <remarks>	
            A render-target view is a member of a render-target-view description (see <see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription"/>). Create a render-target view by calling <see cref="M:SharpDX.Direct3D11.Device.CreateRenderTargetView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.RenderTargetViewDescription},SharpDX.Direct3D11.RenderTargetView)"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_RTV']/*"/>	
            <unmanaged>D3D11_BUFFER_RTV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.BufferResource.FirstElement">
            <summary>	
            <para>Number of bytes between the beginning of the buffer and the first element to access.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_RTV::FirstElement']/*"/>	
            <unmanaged>unsigned int FirstElement</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.BufferResource.ElementOffset">
            <summary>	
            <para>The offset of the first element in the view to access, relative to element 0.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_RTV::ElementOffset']/*"/>	
            <unmanaged>unsigned int ElementOffset</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.BufferResource.ElementCount">
            <summary>	
            <para>The total number of elements in the view.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_RTV::NumElements']/*"/>	
            <unmanaged>unsigned int NumElements</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.BufferResource.ElementWidth">
            <summary>	
            <para>The width of each element (in bytes). This can be determined from the format stored in the render-target-view description.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_RTV::ElementWidth']/*"/>	
            <unmanaged>unsigned int ElementWidth</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.RenderTargetViewDescription.Texture1DArrayResource">
            <summary>	
            Specifies the subresources from an array of 1D textures to use in a render-target view.	
            </summary>	
            <remarks>	
            This structure is one member of a render-target-view description (see <see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription"/>).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_ARRAY_RTV']/*"/>	
            <unmanaged>D3D11_TEX1D_ARRAY_RTV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture1DArrayResource.MipSlice">
            <summary>	
            <para>The index of the mipmap level to use mip slice.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_ARRAY_RTV::MipSlice']/*"/>	
            <unmanaged>unsigned int MipSlice</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture1DArrayResource.FirstArraySlice">
            <summary>	
            <para>The index of the first texture to use in an array of textures.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_ARRAY_RTV::FirstArraySlice']/*"/>	
            <unmanaged>unsigned int FirstArraySlice</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture1DArrayResource.ArraySize">
            <summary>	
            <para>Number of textures to use.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_ARRAY_RTV::ArraySize']/*"/>	
            <unmanaged>unsigned int ArraySize</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DResource">
            <summary>	
            Specifies the subresource from a 2D texture to use in a render-target view.	
            </summary>	
            <remarks>	
            This structure is one member of a render-target-view description (see <see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription"/>).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_RTV']/*"/>	
            <unmanaged>D3D11_TEX2D_RTV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DResource.MipSlice">
            <summary>	
            <para>The index of the mipmap level to use mip slice.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_RTV::MipSlice']/*"/>	
            <unmanaged>unsigned int MipSlice</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.ResourceRegion">
            <summary>	
            Defines a 3D box.	
            </summary>	
            <remarks>	
            The following diagram shows a 3D box, where the origin is the left, front, top corner.The values for right, bottom, and back are each one pixel past the end of the pixels that are included in the box region.  That is, the values for left, top, and front are included in the box region while the values for right, bottom, and back are excluded from the box region. For example, for a box that is one pixel wide, (right - left) == 1; the box region includes the left pixel but not the right pixel.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BOX']/*"/>	
            <unmanaged>D3D11_BOX</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceRegion.Left">
            <summary>	
            <para>The x position of the left hand side of the box.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BOX::left']/*"/>	
            <unmanaged>unsigned int left</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceRegion.Top">
            <summary>	
            <para>The y position of the top of the box.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BOX::top']/*"/>	
            <unmanaged>unsigned int top</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceRegion.Front">
            <summary>	
            <para>The z position of the front of the box.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BOX::front']/*"/>	
            <unmanaged>unsigned int front</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceRegion.Right">
            <summary>	
            <para>The x position of the right hand side of the box.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BOX::right']/*"/>	
            <unmanaged>unsigned int right</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceRegion.Bottom">
            <summary>	
            <para>The y position of the bottom of the box.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BOX::bottom']/*"/>	
            <unmanaged>unsigned int bottom</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ResourceRegion.Back">
            <summary>	
            <para>The z position of the back of the box.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BOX::back']/*"/>	
            <unmanaged>unsigned int back</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.SamplerStateDescription">
            <summary>	
            Describes a sampler state.	
            </summary>	
            <remarks>	
            These are the default values for sampler state.StateDefault Value FilterMIN_MAG_MIP_LINEAR AddressUClamp AddressVClamp AddressWClamp MinLOD-3.402823466e+38F (-FLT_MAX) MaxLOD3.402823466e+38F (FLT_MAX) MipMapLODBias0.0f MaxAnisotropy16 ComparisonFuncNever BorderColorfloat4(0.0f,0.0f,0.0f,0.0f) TextureN/A?	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SAMPLER_DESC']/*"/>	
            <unmanaged>D3D11_SAMPLER_DESC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.SamplerStateDescription.Filter">
            <summary>	
            <para>Filtering method to use when sampling a texture (see <see cref="T:SharpDX.Direct3D11.Filter"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SAMPLER_DESC::Filter']/*"/>	
            <unmanaged>D3D11_FILTER Filter</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.SamplerStateDescription.AddressU">
            <summary>	
            <para>Method to use for resolving a u texture coordinate that is outside the 0 to 1 range (see <see cref="T:SharpDX.Direct3D11.TextureAddressMode"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SAMPLER_DESC::AddressU']/*"/>	
            <unmanaged>D3D11_TEXTURE_ADDRESS_MODE AddressU</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.SamplerStateDescription.AddressV">
            <summary>	
            <para>Method to use for resolving a v texture coordinate that is outside the 0 to 1 range.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SAMPLER_DESC::AddressV']/*"/>	
            <unmanaged>D3D11_TEXTURE_ADDRESS_MODE AddressV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.SamplerStateDescription.AddressW">
            <summary>	
            <para>Method to use for resolving a w texture coordinate that is outside the 0 to 1 range.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SAMPLER_DESC::AddressW']/*"/>	
            <unmanaged>D3D11_TEXTURE_ADDRESS_MODE AddressW</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.SamplerStateDescription.MipLodBias">
            <summary>	
            <para>Offset from the calculated mipmap level. For example, if Direct3D calculates that a texture should be sampled at mipmap level 3 and MipLODBias is 2, then the texture will be sampled at mipmap level 5.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SAMPLER_DESC::MipLODBias']/*"/>	
            <unmanaged>float MipLODBias</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.SamplerStateDescription.MaximumAnisotropy">
            <summary>	
            <para>Clamping value used if <see cref="F:SharpDX.Direct3D11.Filter.Anisotropic"/> or <see cref="F:SharpDX.Direct3D11.Filter.ComparisonAnisotropic"/> is specified in Filter. Valid values are between 1 and 16.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SAMPLER_DESC::MaxAnisotropy']/*"/>	
            <unmanaged>unsigned int MaxAnisotropy</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.SamplerStateDescription.ComparisonFunction">
            <summary>	
            <para>A function that compares sampled data against existing sampled data. The function options are listed in <see cref="T:SharpDX.Direct3D11.Comparison"/>.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SAMPLER_DESC::ComparisonFunc']/*"/>	
            <unmanaged>D3D11_COMPARISON_FUNC ComparisonFunc</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.SamplerStateDescription.BorderColor">
            <summary>	
            <para>Border color to use if <see cref="F:SharpDX.Direct3D11.TextureAddressMode.Border"/> is specified for AddressU, AddressV, or AddressW. Range must be between 0.0 and 1.0 inclusive.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SAMPLER_DESC::BorderColor']/*"/>	
            <unmanaged>SHARPDX_COLOR4 BorderColor</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.SamplerStateDescription.MinimumLod">
            <summary>	
            <para>Lower end of the mipmap range to clamp access to, where 0 is the largest and most detailed mipmap level and any level higher than that is less detailed.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SAMPLER_DESC::MinLOD']/*"/>	
            <unmanaged>float MinLOD</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.SamplerStateDescription.MaximumLod">
            <summary>	
            <para>Upper end of the mipmap range to clamp access to, where 0 is the largest and most detailed mipmap level and any level higher than that is less detailed. This value must be greater than or equal to MinLOD. To have no upper limit on LOD set this to a large value such as D3D11_FLOAT32_MAX.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SAMPLER_DESC::MaxLOD']/*"/>	
            <unmanaged>float MaxLOD</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.ShaderResourceViewDescription">
            <summary>	
            Describes a shader-resource view.	
            </summary>	
            <remarks>	
            A view is a format-specific way to look at the data in a resource. The view determines what data to look at, and how it is cast when read.When viewing a resource, the resource-view description must specify a typed format, that is compatible with the resource format. So that means that you cannot create a resource-view description using any format with _TYPELESS in the name. You can however view a typeless resource by specifying a typed format for the view. For example, a <see cref="F:SharpDX.DXGI.Format.R32G32B32_Typeless"/> resource can be viewed with one of these typed formats: <see cref="F:SharpDX.DXGI.Format.R32G32B32_Float"/>, <see cref="F:SharpDX.DXGI.Format.R32G32B32_UInt"/>, and <see cref="F:SharpDX.DXGI.Format.R32G32B32_SInt"/>, since these typed formats are compatible with the typeless resource.Create a shader-resource-view description by calling <see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/>. To view a shader-resource-view description, call <see cref="M:SharpDX.Direct3D11.ShaderResourceView.GetDescription(SharpDX.Direct3D11.ShaderResourceViewDescription@)"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SHADER_RESOURCE_VIEW_DESC']/*"/>	
            <unmanaged>D3D11_SHADER_RESOURCE_VIEW_DESC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Format">
            <summary>	
            <para>A <see cref="T:SharpDX.DXGI.Format"/> specifying the viewing format. See remarks.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SHADER_RESOURCE_VIEW_DESC::Format']/*"/>	
            <unmanaged>DXGI_FORMAT Format</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Dimension">
            <summary>	
            <para>The resource type of the view. See D3D11_SRV_DIMENSION. This should be the same as the resource type of the underlying resource. This parameter also determines which _SRV to use in the union below.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SHADER_RESOURCE_VIEW_DESC::ViewDimension']/*"/>	
            <unmanaged>D3D_SRV_DIMENSION ViewDimension</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Buffer">
            <summary>	
            <para>View the resource as a buffer using information from a shader-resource view (see <see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.BufferResource"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SHADER_RESOURCE_VIEW_DESC::Buffer']/*"/>	
            <unmanaged>D3D11_BUFFER_SRV Buffer</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1D">
            <summary>	
            <para>View the resource as a 1D texture using information from a shader-resource view (see <see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DResource"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SHADER_RESOURCE_VIEW_DESC::Texture1D']/*"/>	
            <unmanaged>D3D11_TEX1D_SRV Texture1D</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DArray">
            <summary>	
            <para>View the resource as a 1D-texture array using information from a shader-resource view (see <see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DArrayResource"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SHADER_RESOURCE_VIEW_DESC::Texture1DArray']/*"/>	
            <unmanaged>D3D11_TEX1D_ARRAY_SRV Texture1DArray</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2D">
            <summary>	
            <para>View the resource as a 2D-texture using information from a shader-resource view (see <see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DResource"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SHADER_RESOURCE_VIEW_DESC::Texture2D']/*"/>	
            <unmanaged>D3D11_TEX2D_SRV Texture2D</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DArray">
            <summary>	
            <para>View the resource as a 2D-texture array using information from a shader-resource view (see <see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DArrayResource"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SHADER_RESOURCE_VIEW_DESC::Texture2DArray']/*"/>	
            <unmanaged>D3D11_TEX2D_ARRAY_SRV Texture2DArray</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DMS">
            <summary>	
            <para>View the resource as a 2D-multisampled texture using information from a shader-resource view (see <see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DMultisampledResource"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SHADER_RESOURCE_VIEW_DESC::Texture2DMS']/*"/>	
            <unmanaged>D3D11_TEX2DMS_SRV Texture2DMS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DMSArray">
            <summary>	
            <para>View the resource as a 2D-multisampled-texture array using information from a shader-resource view (see <see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DMultisampledArrayResource"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SHADER_RESOURCE_VIEW_DESC::Texture2DMSArray']/*"/>	
            <unmanaged>D3D11_TEX2DMS_ARRAY_SRV Texture2DMSArray</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture3D">
            <summary>	
            <para>View the resource as a 3D texture using information from a shader-resource view (see <see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture3DResource"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SHADER_RESOURCE_VIEW_DESC::Texture3D']/*"/>	
            <unmanaged>D3D11_TEX3D_SRV Texture3D</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.TextureCube">
            <summary>	
            <para>View the resource as a 3D-cube texture using information from a shader-resource view (see <see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.TextureCubeResource"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SHADER_RESOURCE_VIEW_DESC::TextureCube']/*"/>	
            <unmanaged>D3D11_TEXCUBE_SRV TextureCube</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.TextureCubeArray">
            <summary>	
            <para>View the resource as a 3D-cube-texture array using information from a shader-resource view (see <see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.TextureCubeArrayResource"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SHADER_RESOURCE_VIEW_DESC::TextureCubeArray']/*"/>	
            <unmanaged>D3D11_TEXCUBE_ARRAY_SRV TextureCubeArray</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.BufferEx">
            <summary>	
            <para>View the resource as an extended buffer using information from a shader-resource view (see <see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.ExtendedBufferResource"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SHADER_RESOURCE_VIEW_DESC::BufferEx']/*"/>	
            <unmanaged>D3D11_BUFFEREX_SRV BufferEx</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DArrayResource">
            <summary>	
            Specifies the subresources from an array of 2D textures to use in a shader-resource view.	
            </summary>	
            <remarks>	
            This structure is one member of a shader-resource-view description (see <see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription"/>).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_SRV']/*"/>	
            <unmanaged>D3D11_TEX2D_ARRAY_SRV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DArrayResource.MostDetailedMip">
            <summary>	
            <para>Index of the most detailed mipmap level to use; this number is between 0 and MipLevels (from the original Texture2D for which <see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/> creates a view) -1.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_SRV::MostDetailedMip']/*"/>	
            <unmanaged>unsigned int MostDetailedMip</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DArrayResource.MipLevels">
            <summary>	
            <para>The maximum number of mipmap levels for the view of the texture. See the remarks in <see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DResource"/>.</para>	
             <para>Set to -1 to indicate all the mipmap levels from MostDetailedMip on down to least detailed.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_SRV::MipLevels']/*"/>	
            <unmanaged>unsigned int MipLevels</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DArrayResource.FirstArraySlice">
            <summary>	
            <para>The index of the first texture to use in an array of textures.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_SRV::FirstArraySlice']/*"/>	
            <unmanaged>unsigned int FirstArraySlice</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DArrayResource.ArraySize">
            <summary>	
            <para>Number of textures in the array.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_SRV::ArraySize']/*"/>	
            <unmanaged>unsigned int ArraySize</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.ShaderResourceViewDescription.ExtendedBufferResource">
            <summary>	
            Describes a raw buffer resource.	
            </summary>	
            <remarks>	
            This structure is used by <see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription"/> to create a raw buffer.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFEREX_SRV']/*"/>	
            <unmanaged>D3D11_BUFFEREX_SRV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.ExtendedBufferResource.FirstElement">
            <summary>	
            <para>The index of the first element to be accessed by the view.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFEREX_SRV::FirstElement']/*"/>	
            <unmanaged>unsigned int FirstElement</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.ExtendedBufferResource.ElementCount">
            <summary>	
            <para>The number of elements in the resource.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFEREX_SRV::NumElements']/*"/>	
            <unmanaged>unsigned int NumElements</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.ExtendedBufferResource.Flags">
            <summary>	
            <para>Options for binding a raw buffer (see <see cref="T:SharpDX.Direct3D11.ShaderResourceViewExtendedBufferFlags"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFEREX_SRV::Flags']/*"/>	
            <unmanaged>D3D11_BUFFEREX_SRV_FLAG Flags</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.ShaderResourceViewDescription.BufferResource">
            <summary>	
            Specifies the elements in a buffer resource to use in a shader-resource view.	
            </summary>	
            <remarks>	
            The <see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.BufferResource"/> structure is a member of the  <see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription"/> structure, which represents a shader-resource view description. You can create a shader-resource view by calling the <see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/> method.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_SRV']/*"/>	
            <unmanaged>D3D11_BUFFER_SRV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.BufferResource.FirstElement">
            <summary>	
            <para>Number of bytes between the beginning of the buffer and the first element to access.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_SRV::FirstElement']/*"/>	
            <unmanaged>unsigned int FirstElement</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.BufferResource.ElementOffset">
            <summary>	
            <para>The offset of the first element in the view to access, relative to element 0.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_SRV::ElementOffset']/*"/>	
            <unmanaged>unsigned int ElementOffset</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.BufferResource.ElementCount">
            <summary>	
            <para>The total number of elements in the view.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_SRV::NumElements']/*"/>	
            <unmanaged>unsigned int NumElements</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.BufferResource.ElementWidth">
            <summary>	
            <para>The width of each element (in bytes). This can be determined from the format stored in the shader-resource-view description.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_SRV::ElementWidth']/*"/>	
            <unmanaged>unsigned int ElementWidth</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DResource">
            <summary>	
            Specifies the subresource from a 1D texture to use in a shader-resource view.	
            </summary>	
            <remarks>	
            This structure is one member of a shader-resource-view description (see <see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription"/>).As an example, assuming MostDetailedMip = 6 and MipLevels = 2, the view will have access to 2 mipmap levels, 6 and 7, of the original texture for which <see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/> creates the view. In this situation, MostDetailedMip is greater than the MipLevels in the view. However, MostDetailedMip is not greater than the MipLevels in the original resource.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_SRV']/*"/>	
            <unmanaged>D3D11_TEX1D_SRV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DResource.MostDetailedMip">
            <summary>	
            <para>Index of the most detailed mipmap level to use; this number is between 0 and MipLevels (from the original Texture1D for which <see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/> creates a view) -1.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_SRV::MostDetailedMip']/*"/>	
            <unmanaged>unsigned int MostDetailedMip</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DResource.MipLevels">
            <summary>	
            <para>The maximum number of mipmap levels for the view  of the texture. See the remarks.</para>	
             <para>Set to -1 to indicate all the mipmap levels from MostDetailedMip on down to least detailed.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_SRV::MipLevels']/*"/>	
            <unmanaged>unsigned int MipLevels</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DArrayResource">
            <summary>	
            Specifies the subresources from an array of 1D textures to use in a shader-resource view.	
            </summary>	
            <remarks>	
            This structure is one member of a shader-resource-view description (see <see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription"/>).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_ARRAY_SRV']/*"/>	
            <unmanaged>D3D11_TEX1D_ARRAY_SRV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DArrayResource.MostDetailedMip">
            <summary>	
            <para>Index of the most detailed mipmap level to use; this number is between 0 and MipLevels (from the original Texture1D for which <see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/> creates a view) -1.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_ARRAY_SRV::MostDetailedMip']/*"/>	
            <unmanaged>unsigned int MostDetailedMip</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DArrayResource.MipLevels">
            <summary>	
            <para>The maximum number of mipmap levels for the view of the texture. See the remarks in <see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DResource"/>.</para>	
             <para>Set to -1 to indicate all the mipmap levels from MostDetailedMip on down to least detailed.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_ARRAY_SRV::MipLevels']/*"/>	
            <unmanaged>unsigned int MipLevels</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DArrayResource.FirstArraySlice">
            <summary>	
            <para>The index of the first texture to use in an array of textures.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_ARRAY_SRV::FirstArraySlice']/*"/>	
            <unmanaged>unsigned int FirstArraySlice</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DArrayResource.ArraySize">
            <summary>	
            <para>Number of textures in the array.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_ARRAY_SRV::ArraySize']/*"/>	
            <unmanaged>unsigned int ArraySize</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DResource">
            <summary>	
            Specifies the subresource from a 2D texture to use in a shader-resource view.	
            </summary>	
            <remarks>	
            This structure is one member of a shader-resource-view description (see <see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription"/>).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_SRV']/*"/>	
            <unmanaged>D3D11_TEX2D_SRV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DResource.MostDetailedMip">
            <summary>	
            <para>Index of the most detailed mipmap level to use; this number is between 0 and MipLevels (from the original Texture2D for which <see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/> creates a view) -1.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_SRV::MostDetailedMip']/*"/>	
            <unmanaged>unsigned int MostDetailedMip</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DResource.MipLevels">
            <summary>	
            <para>The maximum number of mipmap levels for the view of the texture. See the remarks in <see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DResource"/>.</para>	
             <para>Set to -1 to indicate all the mipmap levels from MostDetailedMip on down to least detailed.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_SRV::MipLevels']/*"/>	
            <unmanaged>unsigned int MipLevels</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DMultisampledResource">
            <summary>	
            Specifies the subresources from a multisampled 2D texture to use in a shader-resource view.	
            </summary>	
            <remarks>	
            Since a multisampled 2D texture contains a single subresource, there is actually nothing to specify in <see cref="T:SharpDX.Direct3D11.RenderTargetViewDescription.Texture2DMultisampledResource"/>. Consequently, UnusedField_NothingToDefine is included so that this structure will compile in C.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2DMS_SRV']/*"/>	
            <unmanaged>D3D11_TEX2DMS_SRV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DMultisampledResource.UnusedFieldNothingToDefine">
            <summary>	
            <para>Integer of any value. See remarks.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2DMS_SRV::UnusedField_NothingToDefine']/*"/>	
            <unmanaged>unsigned int UnusedField_NothingToDefine</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DMultisampledArrayResource">
            <summary>	
            Specifies the subresources from an array of multisampled 2D textures to use in a shader-resource view.	
            </summary>	
            <remarks>	
            This structure is one member of a shader-resource-view description (see <see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription"/>).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2DMS_ARRAY_SRV']/*"/>	
            <unmanaged>D3D11_TEX2DMS_ARRAY_SRV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DMultisampledArrayResource.FirstArraySlice">
            <summary>	
            <para>The index of the first texture to use in an array of textures.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2DMS_ARRAY_SRV::FirstArraySlice']/*"/>	
            <unmanaged>unsigned int FirstArraySlice</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture2DMultisampledArrayResource.ArraySize">
            <summary>	
            <para>Number of textures to use.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2DMS_ARRAY_SRV::ArraySize']/*"/>	
            <unmanaged>unsigned int ArraySize</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture3DResource">
            <summary>	
            Specifies the subresources from a 3D texture to use in a shader-resource view.	
            </summary>	
            <remarks>	
            This structure is one member of a shader-resource-view description (see <see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription"/>).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX3D_SRV']/*"/>	
            <unmanaged>D3D11_TEX3D_SRV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture3DResource.MostDetailedMip">
            <summary>	
            <para>Index of the most detailed mipmap level to use; this number is between 0 and MipLevels (from the original Texture3D for which <see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/> creates a view) -1.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX3D_SRV::MostDetailedMip']/*"/>	
            <unmanaged>unsigned int MostDetailedMip</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture3DResource.MipLevels">
            <summary>	
            <para>The maximum number of mipmap levels for the view of the texture. See the remarks in <see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DResource"/>.</para>	
             <para>Set to -1 to indicate all the mipmap levels from MostDetailedMip on down to least detailed.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX3D_SRV::MipLevels']/*"/>	
            <unmanaged>unsigned int MipLevels</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.ShaderResourceViewDescription.TextureCubeResource">
            <summary>	
            Specifies the subresource from a cube texture to use in a shader-resource view.	
            </summary>	
            <remarks>	
            This structure is one member of a shader-resource-view description (see <see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription"/>).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXCUBE_SRV']/*"/>	
            <unmanaged>D3D11_TEXCUBE_SRV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.TextureCubeResource.MostDetailedMip">
            <summary>	
            <para>Index of the most detailed mipmap level to use; this number is between 0 and MipLevels (from the original TextureCube for which <see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/> creates a view) -1.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXCUBE_SRV::MostDetailedMip']/*"/>	
            <unmanaged>unsigned int MostDetailedMip</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.TextureCubeResource.MipLevels">
            <summary>	
            <para>The maximum number of mipmap levels for the view of the texture. See the remarks in <see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DResource"/>.</para>	
             <para>Set to -1 to indicate all the mipmap levels from MostDetailedMip on down to least detailed.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXCUBE_SRV::MipLevels']/*"/>	
            <unmanaged>unsigned int MipLevels</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.ShaderResourceViewDescription.TextureCubeArrayResource">
            <summary>	
            Specifies the subresources from an array of cube textures to use in a shader-resource view.	
            </summary>	
            <remarks>	
            This structure is one member of a shader-resource-view description (see <see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription"/>).	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXCUBE_ARRAY_SRV']/*"/>	
            <unmanaged>D3D11_TEXCUBE_ARRAY_SRV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.TextureCubeArrayResource.MostDetailedMip">
            <summary>	
            <para>Index of the most detailed mipmap level to use; this number is between 0 and MipLevels (from the original TextureCube for which <see cref="M:SharpDX.Direct3D11.Device.CreateShaderResourceView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.ShaderResourceViewDescription},SharpDX.Direct3D11.ShaderResourceView)"/> creates a view) -1.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXCUBE_ARRAY_SRV::MostDetailedMip']/*"/>	
            <unmanaged>unsigned int MostDetailedMip</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.TextureCubeArrayResource.MipLevels">
            <summary>	
            <para>The maximum number of mipmap levels for the view of the texture. See the remarks in <see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DResource"/>.</para>	
             <para>Set to -1 to indicate all the mipmap levels from MostDetailedMip on down to least detailed.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXCUBE_ARRAY_SRV::MipLevels']/*"/>	
            <unmanaged>unsigned int MipLevels</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.TextureCubeArrayResource.First2DArrayFace">
            <summary>	
            <para>Index of the first 2D texture to use.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXCUBE_ARRAY_SRV::First2DArrayFace']/*"/>	
            <unmanaged>unsigned int First2DArrayFace</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.ShaderResourceViewDescription.TextureCubeArrayResource.CubeCount">
            <summary>	
            <para>Number of cube textures in the array.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXCUBE_ARRAY_SRV::NumCubes']/*"/>	
            <unmanaged>unsigned int NumCubes</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.StreamOutputElement">
            <summary>	
            Description of a vertex element in a vertex buffer in an output slot.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SO_DECLARATION_ENTRY']/*"/>	
            <unmanaged>D3D11_SO_DECLARATION_ENTRY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.StreamOutputElement.Stream">
            <summary>	
            <para>Zero-based, stream number.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SO_DECLARATION_ENTRY::Stream']/*"/>	
            <unmanaged>unsigned int Stream</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.StreamOutputElement.SemanticName">
            <summary>	
            <para>Type of output element; possible values include: "POSITION", "NORMAL", or "TEXCOORD0". Note that if SemanticName is <c>null</c> then  ComponentCount can be greater than 4 and the described entry will be a gap in the stream out where no data will be written. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SO_DECLARATION_ENTRY::SemanticName']/*"/>	
            <unmanaged>const char* SemanticName</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.StreamOutputElement.SemanticIndex">
            <summary>	
            <para>Output element's zero-based index. Should be used if, for example, you have more than one texture coordinate stored in each vertex.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SO_DECLARATION_ENTRY::SemanticIndex']/*"/>	
            <unmanaged>unsigned int SemanticIndex</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.StreamOutputElement.StartComponent">
            <summary>	
            <para>Which component of the entry to begin writing out to. Valid values are 0 to 3. For example, if you only wish to output to the y and z components  of a position, then StartComponent should be 1 and ComponentCount should be 2.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SO_DECLARATION_ENTRY::StartComponent']/*"/>	
            <unmanaged>unsigned char StartComponent</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.StreamOutputElement.ComponentCount">
            <summary>	
            <para>The number of components of the entry to write out to. Valid values are 1 to 4. For example, if you only wish to output to the y and z components  of a position, then StartComponent should be 1 and ComponentCount should be 2.  Note that if SemanticName is <c>null</c> then  ComponentCount can be greater than 4 and the described entry will be a gap in the stream out where no data will be written.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SO_DECLARATION_ENTRY::ComponentCount']/*"/>	
            <unmanaged>unsigned char ComponentCount</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.StreamOutputElement.OutputSlot">
            <summary>	
            <para>The associated stream output buffer that is bound to the pipeline  (see <see cref="M:SharpDX.Direct3D11.StreamOutputStage.SetTargets(SharpDX.Direct3D11.StreamOutputBufferBinding[])"/>).  The valid range for OutputSlot is 0 to 3.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_SO_DECLARATION_ENTRY::OutputSlot']/*"/>	
            <unmanaged>unsigned char OutputSlot</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.StreamOutputStatistics">
            <summary>	
            Query information about the amount of data streamed out to the stream-output buffers in between <see cref="M:SharpDX.Direct3D11.DeviceContext.Begin(SharpDX.Direct3D11.Asynchronous)"/> and <see cref="M:SharpDX.Direct3D11.DeviceContext.End(SharpDX.Direct3D11.Asynchronous)"/>.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DATA_SO_STATISTICS']/*"/>	
            <unmanaged>D3D11_QUERY_DATA_SO_STATISTICS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.StreamOutputStatistics.NumPrimitivesWritten">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DATA_SO_STATISTICS::NumPrimitivesWritten']/*"/>	
            <unmanaged>unsigned longlong NumPrimitivesWritten</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.StreamOutputStatistics.PrimitivesStorageNeeded">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_QUERY_DATA_SO_STATISTICS::PrimitivesStorageNeeded']/*"/>	
            <unmanaged>unsigned longlong PrimitivesStorageNeeded</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.Texture1DDescription">
            <summary>	
            Describes a 1D texture.	
            </summary>	
            <remarks>	
            This structure is used in a call to <see cref="M:SharpDX.Direct3D11.Device.CreateTexture1D(SharpDX.Direct3D11.Texture1DDescription@,SharpDX.DataBox[],SharpDX.Direct3D11.Texture1D)"/>. A helpful derived structure CD3D11_TEXTURE1D_DESC is declared in D3D11.h, to help create a texture description.The texture size range is determined by the feature level at which you create the device and not the Microsoft Direct3D interface version. For example, if you use Microsoft Direct3D?10 hardware at feature level 10 (<see cref="F:SharpDX.Direct3D.FeatureLevel.Level_10_0"/>) and call <see cref="M:SharpDX.Direct3D11.D3D11.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.Direct3D11.Device,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/> to create an <see cref="T:SharpDX.Direct3D11.Device"/>, you must constrain the maximum texture size to <see cref="!:SharpDX.Direct3D10.Resource.MaximumTexture1DSize"/> (8192) when you create your 1D texture.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE1D_DESC']/*"/>	
            <unmanaged>D3D11_TEXTURE1D_DESC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture1DDescription.Width">
            <summary>	
            <para>Texture width (in texels). The  range is from 1 to <see cref="F:SharpDX.Direct3D11.Resource.MaximumTexture1DSize"/> (16384). However, the range is actually constrained by the feature level at which you create the rendering device. For more information about restrictions, see Remarks.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE1D_DESC::Width']/*"/>	
            <unmanaged>unsigned int Width</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture1DDescription.MipLevels">
            <summary>	
            <para>The maximum number of mipmap levels in the texture. See the remarks in <see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DResource"/>. Use 1 for a multisampled texture; or 0 to generate a full set of subtextures.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE1D_DESC::MipLevels']/*"/>	
            <unmanaged>unsigned int MipLevels</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture1DDescription.ArraySize">
            <summary>	
            <para>Number of textures in the array. The  range is from 1 to <see cref="F:SharpDX.Direct3D11.Resource.MaximumTexture1DArraySize"/> (2048). However, the range is actually constrained by the feature level at which you create the rendering device. For more information about restrictions, see Remarks.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE1D_DESC::ArraySize']/*"/>	
            <unmanaged>unsigned int ArraySize</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture1DDescription.Format">
            <summary>	
            <para>Texture format (see <see cref="T:SharpDX.DXGI.Format"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE1D_DESC::Format']/*"/>	
            <unmanaged>DXGI_FORMAT Format</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture1DDescription.Usage">
            <summary>	
            <para>Value that identifies how the texture is to be read from and written to. The most common value is <see cref="F:SharpDX.Direct3D11.ResourceUsage.Default"/>; see <see cref="T:SharpDX.Direct3D11.ResourceUsage"/> for all possible values.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE1D_DESC::Usage']/*"/>	
            <unmanaged>D3D11_USAGE Usage</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture1DDescription.BindFlags">
            <summary>	
            <para>Flags (see <see cref="T:SharpDX.Direct3D11.BindFlags"/>) for binding to pipeline stages. The flags can be combined by a logical OR. For a 1D texture, the allowable values are: <see cref="F:SharpDX.Direct3D11.BindFlags.ShaderResource"/>, <see cref="F:SharpDX.Direct3D11.BindFlags.RenderTarget"/> and <see cref="F:SharpDX.Direct3D11.BindFlags.DepthStencil"/>.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE1D_DESC::BindFlags']/*"/>	
            <unmanaged>D3D11_BIND_FLAG BindFlags</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture1DDescription.CpuAccessFlags">
            <summary>	
            <para>Flags (see <see cref="T:SharpDX.Direct3D11.CpuAccessFlags"/>) to specify the types of CPU access allowed. Use 0 if CPU access is not required. These flags can be combined with a logical OR.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE1D_DESC::CPUAccessFlags']/*"/>	
            <unmanaged>D3D11_CPU_ACCESS_FLAG CPUAccessFlags</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture1DDescription.OptionFlags">
            <summary>	
            <para>Flags (see <see cref="T:SharpDX.Direct3D11.ResourceOptionFlags"/>) that identify other, less common resource options. Use 0 if none of these flags apply. These flags can be combined with a logical OR.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE1D_DESC::MiscFlags']/*"/>	
            <unmanaged>D3D11_RESOURCE_MISC_FLAG MiscFlags</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.Texture2DArrayVpov">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_VPOV']/*"/>	
            <unmanaged>D3D11_TEX2D_ARRAY_VPOV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture2DArrayVpov.MipSlice">
            <summary>	
            <para>The zero-based index into the array of subtextures.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_VPOV::MipSlice']/*"/>	
            <unmanaged>unsigned int MipSlice</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture2DArrayVpov.FirstArraySlice">
            <summary>	
            <para>The index of the first texture to use.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_VPOV::FirstArraySlice']/*"/>	
            <unmanaged>unsigned int FirstArraySlice</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture2DArrayVpov.ArraySize">
            <summary>	
            <para>The number of textures in the array.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_VPOV::ArraySize']/*"/>	
            <unmanaged>unsigned int ArraySize</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.Texture2DDescription">
            <summary>	
            Describes a 2D texture.	
            </summary>	
            <remarks>	
            This structure is used in a call to <see cref="M:SharpDX.Direct3D11.Device.CreateTexture2D(SharpDX.Direct3D11.Texture2DDescription@,SharpDX.DataBox[],SharpDX.Direct3D11.Texture2D)"/>. A helpful derived structure CD3D11_TEXTURE2D_DESC is declared in D3D11.h, to help create a texture description.The device places some size restrictions (must be multiples of a minimum size) for a subsampled, block compressed, or bit-format resource.The texture size range is determined by the feature level at which you create the device and not the Microsoft Direct3D interface version. For example, if you use Microsoft Direct3D?10 hardware at feature level 10 (<see cref="F:SharpDX.Direct3D.FeatureLevel.Level_10_0"/>) and call <see cref="M:SharpDX.Direct3D11.D3D11.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.Direct3D11.Device,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/> to create an <see cref="T:SharpDX.Direct3D11.Device"/>, you must constrain the maximum texture size to <see cref="!:SharpDX.Direct3D10.Resource.MaximumTexture2DSize"/> (8192) when you create your 2D texture.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE2D_DESC']/*"/>	
            <unmanaged>D3D11_TEXTURE2D_DESC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture2DDescription.Width">
            <summary>	
            <para>Texture width (in texels). The  range is from 1 to <see cref="F:SharpDX.Direct3D11.Resource.MaximumTexture2DSize"/> (16384). For a texture cube-map, the  range is from 1 to <see cref="F:SharpDX.Direct3D11.Resource.MaximumTextureCubeSize"/> (16384). However, the range is actually constrained by the feature level at which you create the rendering device. For more information about restrictions, see Remarks.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE2D_DESC::Width']/*"/>	
            <unmanaged>unsigned int Width</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture2DDescription.Height">
            <summary>	
            <para>Texture height (in texels). The  range is from 1 to <see cref="F:SharpDX.Direct3D11.Resource.MaximumTexture2DSize"/> (16384). For a texture cube-map, the  range is from 1 to <see cref="F:SharpDX.Direct3D11.Resource.MaximumTextureCubeSize"/> (16384). However, the range is actually constrained by the feature level at which you create the rendering device. For more information about restrictions, see Remarks.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE2D_DESC::Height']/*"/>	
            <unmanaged>unsigned int Height</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture2DDescription.MipLevels">
            <summary>	
            <para>The maximum number of mipmap levels in the texture. See the remarks in <see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DResource"/>. Use 1 for a multisampled texture; or 0 to generate a full set of subtextures.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE2D_DESC::MipLevels']/*"/>	
            <unmanaged>unsigned int MipLevels</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture2DDescription.ArraySize">
            <summary>	
            <para>Number of textures in the texture array. The  range is from 1 to <see cref="F:SharpDX.Direct3D11.Resource.MaximumTexture2DArraySize"/> (2048). For a texture cube-map, this value is a multiple of 6 (that is, 6 times the value in the NumCubes member of <see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.TextureCubeArrayResource"/>), and the  range is from 6 to <see cref="F:SharpDX.Direct3D11.Resource.MaximumTextureCubeSize"/>. The range is actually constrained by the feature level at which you create the rendering device. For more information about restrictions, see Remarks.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE2D_DESC::ArraySize']/*"/>	
            <unmanaged>unsigned int ArraySize</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture2DDescription.Format">
            <summary>	
            <para>Texture format (see <see cref="T:SharpDX.DXGI.Format"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE2D_DESC::Format']/*"/>	
            <unmanaged>DXGI_FORMAT Format</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture2DDescription.SampleDescription">
            <summary>	
            <para>Structure that specifies multisampling parameters for the texture. See <see cref="T:SharpDX.DXGI.SampleDescription"/>.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE2D_DESC::SampleDesc']/*"/>	
            <unmanaged>DXGI_SAMPLE_DESC SampleDesc</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture2DDescription.Usage">
            <summary>	
            <para>Value that identifies how the texture is to be read from and written to. The most common value is <see cref="F:SharpDX.Direct3D11.ResourceUsage.Default"/>; see <see cref="T:SharpDX.Direct3D11.ResourceUsage"/> for all possible values.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE2D_DESC::Usage']/*"/>	
            <unmanaged>D3D11_USAGE Usage</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture2DDescription.BindFlags">
            <summary>	
            <para>Flags (see <see cref="T:SharpDX.Direct3D11.BindFlags"/>) for binding to pipeline stages. The flags can be combined by a logical OR.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE2D_DESC::BindFlags']/*"/>	
            <unmanaged>D3D11_BIND_FLAG BindFlags</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture2DDescription.CpuAccessFlags">
            <summary>	
            <para>Flags (see <see cref="T:SharpDX.Direct3D11.CpuAccessFlags"/>) to specify the types of CPU access allowed. Use 0 if CPU access is not required. These flags can be combined with a logical OR.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE2D_DESC::CPUAccessFlags']/*"/>	
            <unmanaged>D3D11_CPU_ACCESS_FLAG CPUAccessFlags</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture2DDescription.OptionFlags">
            <summary>	
            <para>Flags (see <see cref="T:SharpDX.Direct3D11.ResourceOptionFlags"/>) that identify other, less common resource options. Use 0 if none of these flags apply. These flags can be combined by using a logical OR. For a texture cube-map, set the <see cref="F:SharpDX.Direct3D11.ResourceOptionFlags.TextureCube"/> flag. Cube-map arrays (that is, ArraySize &gt; 6) require feature level <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_10_1"/> or higher.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE2D_DESC::MiscFlags']/*"/>	
            <unmanaged>D3D11_RESOURCE_MISC_FLAG MiscFlags</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.Texture2DVdov">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_VDOV']/*"/>	
            <unmanaged>D3D11_TEX2D_VDOV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture2DVdov.ArraySlice">
            <summary>	
            <para>The zero-based index of the texture.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_VDOV::ArraySlice']/*"/>	
            <unmanaged>unsigned int ArraySlice</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.Texture2DVpiv">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_VPIV']/*"/>	
            <unmanaged>D3D11_TEX2D_VPIV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture2DVpiv.MipSlice">
            <summary>	
            <para>The zero-based index into the array of subtextures.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_VPIV::MipSlice']/*"/>	
            <unmanaged>unsigned int MipSlice</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture2DVpiv.ArraySlice">
            <summary>	
            <para>The zero-based index of the texture.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_VPIV::ArraySlice']/*"/>	
            <unmanaged>unsigned int ArraySlice</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.Texture2DVpov">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_VPOV']/*"/>	
            <unmanaged>D3D11_TEX2D_VPOV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture2DVpov.MipSlice">
            <summary>	
            <para>The zero-based index into the array of subtextures.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_VPOV::MipSlice']/*"/>	
            <unmanaged>unsigned int MipSlice</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.Texture3DDescription">
            <summary>	
            Describes a 3D texture.	
            </summary>	
            <remarks>	
            This structure is used in a call to <see cref="M:SharpDX.Direct3D11.Device.CreateTexture3D(SharpDX.Direct3D11.Texture3DDescription@,SharpDX.DataBox[],SharpDX.Direct3D11.Texture3D)"/>. A helpful derived structure CD3D11_TEXTURE3D_DESC is declared in D3D11.h, to help create a texture description.The device restricts the size of subsampled, block compressed, and bit format resources to be multiples of sizes specific to each format.The texture size range is determined by the feature level at which you create the device and not the Microsoft Direct3D interface version. For example, if you use Microsoft Direct3D?10 hardware at feature level 10 (<see cref="F:SharpDX.Direct3D.FeatureLevel.Level_10_0"/>) and call <see cref="M:SharpDX.Direct3D11.D3D11.CreateDevice(SharpDX.DXGI.Adapter,SharpDX.Direct3D.DriverType,System.IntPtr,SharpDX.Direct3D11.DeviceCreationFlags,SharpDX.Direct3D.FeatureLevel[],System.Int32,System.Int32,SharpDX.Direct3D11.Device,SharpDX.Direct3D.FeatureLevel@,SharpDX.Direct3D11.DeviceContext@)"/> to create an <see cref="T:SharpDX.Direct3D11.Device"/>, you must constrain the maximum texture size to <see cref="!:SharpDX.Direct3D10.Resource.MaximumTexture3DSize"/> (2048) when you create your 3D texture.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE3D_DESC']/*"/>	
            <unmanaged>D3D11_TEXTURE3D_DESC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture3DDescription.Width">
            <summary>	
            <para>Texture width (in texels). The  range is from 1 to <see cref="F:SharpDX.Direct3D11.Resource.MaximumTexture3DSize"/> (2048). However, the range is actually constrained by the feature level at which you create the rendering device. For more information about restrictions, see Remarks.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE3D_DESC::Width']/*"/>	
            <unmanaged>unsigned int Width</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture3DDescription.Height">
            <summary>	
            <para>Texture height (in texels). The  range is from 1 to <see cref="F:SharpDX.Direct3D11.Resource.MaximumTexture3DSize"/> (2048). However, the range is actually constrained by the feature level at which you create the rendering device. For more information about restrictions, see Remarks.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE3D_DESC::Height']/*"/>	
            <unmanaged>unsigned int Height</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture3DDescription.Depth">
            <summary>	
            <para>Texture depth (in texels). The  range is from 1 to <see cref="F:SharpDX.Direct3D11.Resource.MaximumTexture3DSize"/> (2048). However, the range is actually constrained by the feature level at which you create the rendering device. For more information about restrictions, see Remarks.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE3D_DESC::Depth']/*"/>	
            <unmanaged>unsigned int Depth</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture3DDescription.MipLevels">
            <summary>	
            <para>The maximum number of mipmap levels in the texture. See the remarks in <see cref="T:SharpDX.Direct3D11.ShaderResourceViewDescription.Texture1DResource"/>. Use 1 for a multisampled texture; or 0 to generate a full set of subtextures.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE3D_DESC::MipLevels']/*"/>	
            <unmanaged>unsigned int MipLevels</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture3DDescription.Format">
            <summary>	
            <para>Texture format (see <see cref="T:SharpDX.DXGI.Format"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE3D_DESC::Format']/*"/>	
            <unmanaged>DXGI_FORMAT Format</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture3DDescription.Usage">
            <summary>	
            <para>Value that identifies how the texture is to be read from and written to. The most common value is <see cref="F:SharpDX.Direct3D11.ResourceUsage.Default"/>; see <see cref="T:SharpDX.Direct3D11.ResourceUsage"/> for all possible values.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE3D_DESC::Usage']/*"/>	
            <unmanaged>D3D11_USAGE Usage</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture3DDescription.BindFlags">
            <summary>	
            <para>Flags (see <see cref="T:SharpDX.Direct3D11.BindFlags"/>) for binding to pipeline stages. The flags can be combined by a logical OR.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE3D_DESC::BindFlags']/*"/>	
            <unmanaged>D3D11_BIND_FLAG BindFlags</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture3DDescription.CpuAccessFlags">
            <summary>	
            <para>Flags (see <see cref="T:SharpDX.Direct3D11.CpuAccessFlags"/>) to specify the types of CPU access allowed. Use 0 if CPU access is not required. These flags can be combined with a logical OR.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE3D_DESC::CPUAccessFlags']/*"/>	
            <unmanaged>D3D11_CPU_ACCESS_FLAG CPUAccessFlags</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Texture3DDescription.OptionFlags">
            <summary>	
            <para>Flags (see <see cref="T:SharpDX.Direct3D11.ResourceOptionFlags"/>) that identify other, less common resource options. Use 0 if none of these flags apply. These flags can be combined with a logical OR.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEXTURE3D_DESC::MiscFlags']/*"/>	
            <unmanaged>D3D11_RESOURCE_MISC_FLAG MiscFlags</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.UnorderedAccessViewDescription">
            <summary>	
            Specifies the subresources from a resource that are accessible using an unordered-access view.	
            </summary>	
            <remarks>	
            An unordered-access-view description is passed into <see cref="M:SharpDX.Direct3D11.Device.CreateUnorderedAccessView(SharpDX.Direct3D11.Resource,System.Nullable{SharpDX.Direct3D11.UnorderedAccessViewDescription},SharpDX.Direct3D11.UnorderedAccessView)"/> to create a view.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_UNORDERED_ACCESS_VIEW_DESC']/*"/>	
            <unmanaged>D3D11_UNORDERED_ACCESS_VIEW_DESC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Format">
            <summary>	
            <para>The data format (see <see cref="T:SharpDX.DXGI.Format"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_UNORDERED_ACCESS_VIEW_DESC::Format']/*"/>	
            <unmanaged>DXGI_FORMAT Format</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Dimension">
            <summary>	
            <para>The resource type (see <see cref="T:SharpDX.Direct3D11.UnorderedAccessViewDimension"/>), which specifies how the resource will be accessed.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_UNORDERED_ACCESS_VIEW_DESC::ViewDimension']/*"/>	
            <unmanaged>D3D11_UAV_DIMENSION ViewDimension</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Buffer">
            <summary>	
            <para>Specifies which buffer elements can be accessed (see <see cref="T:SharpDX.Direct3D11.UnorderedAccessViewDescription.BufferResource"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_UNORDERED_ACCESS_VIEW_DESC::Buffer']/*"/>	
            <unmanaged>D3D11_BUFFER_UAV Buffer</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture1D">
            <summary>	
            <para>Specifies the subresources in a 1D texture that can be accessed (see <see cref="T:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture1DResource"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_UNORDERED_ACCESS_VIEW_DESC::Texture1D']/*"/>	
            <unmanaged>D3D11_TEX1D_UAV Texture1D</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture1DArray">
            <summary>	
            <para>Specifies the subresources in a 1D texture array that can be accessed (see <see cref="T:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture1DArrayResource"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_UNORDERED_ACCESS_VIEW_DESC::Texture1DArray']/*"/>	
            <unmanaged>D3D11_TEX1D_ARRAY_UAV Texture1DArray</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture2D">
            <summary>	
            <para>Specifies the subresources in a 2D texture that can be accessed (see <see cref="T:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture2DResource"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_UNORDERED_ACCESS_VIEW_DESC::Texture2D']/*"/>	
            <unmanaged>D3D11_TEX2D_UAV Texture2D</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture2DArray">
            <summary>	
            <para>Specifies the subresources in a 2D texture array that can be accessed (see <see cref="T:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture2DArrayResource"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_UNORDERED_ACCESS_VIEW_DESC::Texture2DArray']/*"/>	
            <unmanaged>D3D11_TEX2D_ARRAY_UAV Texture2DArray</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture3D">
            <summary>	
            <para>Specifies subresources in a 3D texture that can be accessed (see <see cref="T:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture3DResource"/>).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_UNORDERED_ACCESS_VIEW_DESC::Texture3D']/*"/>	
            <unmanaged>D3D11_TEX3D_UAV Texture3D</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture1DResource">
            <summary>	
            Describes a unordered-access 1D texture resource.	
            </summary>	
            <remarks>	
            This structure is used by a <see cref="T:SharpDX.Direct3D11.UnorderedAccessViewDescription"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_UAV']/*"/>	
            <unmanaged>D3D11_TEX1D_UAV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture1DResource.MipSlice">
            <summary>	
            <para>The mipmap slice index.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_UAV::MipSlice']/*"/>	
            <unmanaged>unsigned int MipSlice</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture1DArrayResource">
            <summary>	
            Describes an array of unordered-access 1D texture resources.	
            </summary>	
            <remarks>	
            This structure is used by a <see cref="T:SharpDX.Direct3D11.UnorderedAccessViewDescription"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_ARRAY_UAV']/*"/>	
            <unmanaged>D3D11_TEX1D_ARRAY_UAV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture1DArrayResource.MipSlice">
            <summary>	
            <para>The mipmap slice index.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_ARRAY_UAV::MipSlice']/*"/>	
            <unmanaged>unsigned int MipSlice</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture1DArrayResource.FirstArraySlice">
            <summary>	
            <para>The zero-based index of the first array slice to be accessed.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_ARRAY_UAV::FirstArraySlice']/*"/>	
            <unmanaged>unsigned int FirstArraySlice</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture1DArrayResource.ArraySize">
            <summary>	
            <para>The number of slices in the array.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX1D_ARRAY_UAV::ArraySize']/*"/>	
            <unmanaged>unsigned int ArraySize</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture2DResource">
            <summary>	
            Describes a unordered-access 2D texture resource.	
            </summary>	
            <remarks>	
            This structure is used by a <see cref="T:SharpDX.Direct3D11.UnorderedAccessViewDescription"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_UAV']/*"/>	
            <unmanaged>D3D11_TEX2D_UAV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture2DResource.MipSlice">
            <summary>	
            <para>The mipmap slice index.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_UAV::MipSlice']/*"/>	
            <unmanaged>unsigned int MipSlice</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture3DResource">
            <summary>	
            Describes a unordered-access 3D texture resource.	
            </summary>	
            <remarks>	
            This structure is used by a <see cref="T:SharpDX.Direct3D11.UnorderedAccessViewDescription"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX3D_UAV']/*"/>	
            <unmanaged>D3D11_TEX3D_UAV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture3DResource.MipSlice">
            <summary>	
            <para>The mipmap slice index.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX3D_UAV::MipSlice']/*"/>	
            <unmanaged>unsigned int MipSlice</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture3DResource.FirstWSlice">
            <summary>	
            <para>The zero-based index of the first depth slice to be accessed.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX3D_UAV::FirstWSlice']/*"/>	
            <unmanaged>unsigned int FirstWSlice</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture3DResource.WSize">
            <summary>	
            <para>The number of depth slices.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX3D_UAV::WSize']/*"/>	
            <unmanaged>unsigned int WSize</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture2DArrayResource">
            <summary>	
            Describes an array of unordered-access 2D texture resources.	
            </summary>	
            <remarks>	
            This structure is used by a <see cref="T:SharpDX.Direct3D11.UnorderedAccessViewDescription"/>.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_UAV']/*"/>	
            <unmanaged>D3D11_TEX2D_ARRAY_UAV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture2DArrayResource.MipSlice">
            <summary>	
            <para>The mipmap slice index.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_UAV::MipSlice']/*"/>	
            <unmanaged>unsigned int MipSlice</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture2DArrayResource.FirstArraySlice">
            <summary>	
            <para>The zero-based index of the first array slice to be accessed.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_UAV::FirstArraySlice']/*"/>	
            <unmanaged>unsigned int FirstArraySlice</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.Texture2DArrayResource.ArraySize">
            <summary>	
            <para>The number of slices in the array.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_TEX2D_ARRAY_UAV::ArraySize']/*"/>	
            <unmanaged>unsigned int ArraySize</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.UnorderedAccessViewDescription.BufferResource">
            <summary>	
            Unordered-access-view buffer options.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_UAV']/*"/>	
            <unmanaged>D3D11_BUFFER_UAV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.BufferResource.FirstElement">
            <summary>	
            <para>Resource contains raw, unstructured data.  Requires the UAV format to be <see cref="F:SharpDX.DXGI.Format.R32_Typeless"/>. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_UAV::FirstElement']/*"/>	
            <unmanaged>unsigned int FirstElement</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.BufferResource.ElementCount">
            <summary>	
            <para>Allow data to be appended to the end of the buffer.  <see cref="F:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.Append"/> flag must also be used for  any view that will be used as a AppendStructuredBuffer or a ConsumeStructuredBuffer.  Requires the UAV format to be <see cref="F:SharpDX.DXGI.Format.Unknown"/>.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_UAV::NumElements']/*"/>	
            <unmanaged>unsigned int NumElements</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.UnorderedAccessViewDescription.BufferResource.Flags">
            <summary>	
            <para>Adds a counter to the unordered-access-view buffer.  <see cref="F:SharpDX.Direct3D11.UnorderedAccessViewBufferFlags.Counter"/> can only be used on a UAV that is a  RWStructuredBuffer and it enables the functionality needed for the IncrementCounter and DecrementCounter methods in HLSL.  Requires the UAV format to be <see cref="F:SharpDX.DXGI.Format.Unknown"/>.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_BUFFER_UAV::Flags']/*"/>	
            <unmanaged>D3D11_BUFFER_UAV_FLAG Flags</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoColor">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            Values have a nominal range of [0...1]. Given a format with  n bits per channel, the value of each color component is calculated as follows:val = f * ((1 &lt;&lt; n)-1)For example, for 8-bit YUV formats, val = BYTE(f * 255.0).  Reference black is (0.0625, 0.5, 0.5), which corresponds to (16, 128, 128) in an 8-bit representation.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_COLOR']/*"/>	
            <unmanaged>D3D11_VIDEO_COLOR</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoColor.YCbCr">
            <summary>	
            <para>The Y (luma) value. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_COLOR::YCbCr']/*"/>	
            <unmanaged>D3D11_VIDEO_COLOR_YCbCrA YCbCr</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoColor.Rgba">
            <summary>	
            <para>The Cb chroma value. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_COLOR::RGBA']/*"/>	
            <unmanaged>D3D11_VIDEO_COLOR_RGBA RGBA</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoColorRgba">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_COLOR_RGBA']/*"/>	
            <unmanaged>D3D11_VIDEO_COLOR_RGBA</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoColorRgba.R">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_COLOR_RGBA::R']/*"/>	
            <unmanaged>float R</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoColorRgba.G">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_COLOR_RGBA::G']/*"/>	
            <unmanaged>float G</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoColorRgba.B">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_COLOR_RGBA::B']/*"/>	
            <unmanaged>float B</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoColorRgba.A">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_COLOR_RGBA::A']/*"/>	
            <unmanaged>float A</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoColorYCbCrA">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_COLOR_YCbCrA']/*"/>	
            <unmanaged>D3D11_VIDEO_COLOR_YCbCrA</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoColorYCbCrA.Y">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_COLOR_YCbCrA::Y']/*"/>	
            <unmanaged>float Y</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoColorYCbCrA.Cb">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_COLOR_YCbCrA::Cb']/*"/>	
            <unmanaged>float Cb</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoColorYCbCrA.Cr">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_COLOR_YCbCrA::Cr']/*"/>	
            <unmanaged>float Cr</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoColorYCbCrA.A">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_COLOR_YCbCrA::A']/*"/>	
            <unmanaged>float A</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoContentProtectionCaps">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_CONTENT_PROTECTION_CAPS']/*"/>	
            <unmanaged>D3D11_VIDEO_CONTENT_PROTECTION_CAPS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoContentProtectionCaps.Caps">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_CONTENT_PROTECTION_CAPS::Caps']/*"/>	
            <unmanaged>unsigned int Caps</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoContentProtectionCaps.KeyExchangeTypeCount">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_CONTENT_PROTECTION_CAPS::KeyExchangeTypeCount']/*"/>	
            <unmanaged>unsigned int KeyExchangeTypeCount</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoContentProtectionCaps.BlockAlignmentSize">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_CONTENT_PROTECTION_CAPS::BlockAlignmentSize']/*"/>	
            <unmanaged>unsigned int BlockAlignmentSize</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoContentProtectionCaps.ProtectedMemorySize">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_CONTENT_PROTECTION_CAPS::ProtectedMemorySize']/*"/>	
            <unmanaged>unsigned longlong ProtectedMemorySize</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoDecoderBufferDescription">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_DESC']/*"/>	
            <unmanaged>D3D11_VIDEO_DECODER_BUFFER_DESC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferDescription.BufferType">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_DESC::BufferType']/*"/>	
            <unmanaged>D3D11_VIDEO_DECODER_BUFFER_TYPE BufferType</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferDescription.BufferIndex">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_DESC::BufferIndex']/*"/>	
            <unmanaged>unsigned int BufferIndex</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferDescription.DataOffset">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_DESC::DataOffset']/*"/>	
            <unmanaged>unsigned int DataOffset</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferDescription.DataSize">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_DESC::DataSize']/*"/>	
            <unmanaged>unsigned int DataSize</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferDescription.FirstMBaddress">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_DESC::FirstMBaddress']/*"/>	
            <unmanaged>unsigned int FirstMBaddress</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferDescription.NumMBsInBuffer">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_DESC::NumMBsInBuffer']/*"/>	
            <unmanaged>unsigned int NumMBsInBuffer</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferDescription.Width">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_DESC::Width']/*"/>	
            <unmanaged>unsigned int Width</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferDescription.Height">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_DESC::Height']/*"/>	
            <unmanaged>unsigned int Height</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferDescription.Stride">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_DESC::Stride']/*"/>	
            <unmanaged>unsigned int Stride</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferDescription.ReservedBits">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_DESC::ReservedBits']/*"/>	
            <unmanaged>unsigned int ReservedBits</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferDescription.PIV">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_DESC::pIV']/*"/>	
            <unmanaged>void* pIV</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferDescription.IVSize">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_DESC::IVSize']/*"/>	
            <unmanaged>unsigned int IVSize</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderBufferDescription.EncryptedBlockInfo">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_DESC::EncryptedBlockInfo']/*"/>	
            <unmanaged>D3D11_ENCRYPTED_BLOCK_INFO EncryptedBlockInfo</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.VideoDecoderBufferDescription.PartialEncryption">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_BUFFER_DESC::PartialEncryption']/*"/>	
            <unmanaged>BOOL PartialEncryption</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoDecoderConfig">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_CONFIG']/*"/>	
            <unmanaged>D3D11_VIDEO_DECODER_CONFIG</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderConfig.GuidConfigBitstreamEncryption">
            <summary>	
            <para> Defines the encryption protocol type for bit-stream data buffers. If no encryption is applied, the value is DXVA_NoEncrypt. If ConfigBitstreamRaw is 0, the value must be DXVA_NoEncrypt. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_CONFIG::guidConfigBitstreamEncryption']/*"/>	
            <unmanaged>GUID guidConfigBitstreamEncryption</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderConfig.GuidConfigMBcontrolEncryption">
            <summary>	
            <para>Defines the encryption protocol type for macroblock control data buffers. If no encryption is applied, the value is DXVA_NoEncrypt. If ConfigBitstreamRaw is 1, the value must be DXVA_NoEncrypt. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_CONFIG::guidConfigMBcontrolEncryption']/*"/>	
            <unmanaged>GUID guidConfigMBcontrolEncryption</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderConfig.GuidConfigResidDiffEncryption">
            <summary>	
            <para>Defines the encryption protocol type for residual difference decoding data buffers (buffers containing spatial-domain data or sets of transform-domain coefficients for accelerator-based inverse discrete cosine transform [IDCT]). If no encryption is applied, the value is DXVA_NoEncrypt. If ConfigBitstreamRaw is 1, the value must be DXVA_NoEncrypt. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_CONFIG::guidConfigResidDiffEncryption']/*"/>	
            <unmanaged>GUID guidConfigResidDiffEncryption</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderConfig.ConfigBitstreamRaw">
            <summary>	
            <para>Indicates whether the host-decoder sends raw bit-stream data. If the value is 1, the data for the pictures will be sent in bit-stream buffers as raw bit-stream content. If the value is 0, picture data will be sent using macroblock control command buffers. If either ConfigResidDiffHost or ConfigResidDiffAccelerator is 1, the value must be 0. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_CONFIG::ConfigBitstreamRaw']/*"/>	
            <unmanaged>unsigned int ConfigBitstreamRaw</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderConfig.ConfigMBcontrolRasterOrder">
            <summary>	
            <para>Specifies whether macroblock control commands are in raster scan order or in arbitrary order. If the value is 1, the macroblock control commands within each macroblock control command buffer are in raster-scan order. If the value is 0, the order is arbitrary. For some types of bit streams, forcing raster order either greatly increases the number of required macroblock control buffers that must be processed, or requires host reordering of the control information. Therefore, supporting arbitrary order can be more efficient. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_CONFIG::ConfigMBcontrolRasterOrder']/*"/>	
            <unmanaged>unsigned int ConfigMBcontrolRasterOrder</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderConfig.ConfigResidDiffHost">
            <summary>	
            <para>Contains the host residual difference configuration. If the value is 1, some residual difference decoding data may be sent as blocks in the spatial domain from the host. If the value is 0, spatial domain data will not be sent. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_CONFIG::ConfigResidDiffHost']/*"/>	
            <unmanaged>unsigned int ConfigResidDiffHost</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderConfig.ConfigSpatialResid8">
            <summary>	
            <para>Indicates the word size used to represent residual difference spatial-domain blocks for predicted (non-intra) pictures when using host-based residual difference decoding. </para>	
             <para>If ConfigResidDiffHost is 1 and ConfigSpatialResid8 is 1, the host will send residual difference spatial-domain blocks for non-intra macroblocks using 8-bit signed samples and for intra macroblocks in predicted (non-intra) pictures in a format that depends on the value of ConfigIntraResidUnsigned: </para>	
               If ConfigIntraResidUnsigned is 0, spatial-domain blocks for intra macroblocks are sent as 8-bit signed integer values relative to a constant reference value of 2^(BPP?1).   If ConfigIntraResidUnsigned is 1, spatial-domain blocks for intra macroblocks are sent as 8-bit unsigned integer values relative to a constant reference value of 0.   <para> If ConfigResidDiffHost is 1 and ConfigSpatialResid8 is 0, the host will send residual difference spatial-domain blocks of data for non-intra macroblocks using 16-bit signed samples and for intra macroblocks in predicted (non-intra) pictures in a format that depends on the value of ConfigIntraResidUnsigned: </para>	
               If ConfigIntraResidUnsigned is 0, spatial domain blocks for intra macroblocks are sent as 16-bit signed integer values relative to a constant reference value of 2^(BPP?1).   If ConfigIntraResidUnsigned is 1, spatial domain blocks for intra macroblocks are sent as 16-bit unsigned integer values relative to a constant reference value of 0.   <para> If ConfigResidDiffHost is 0, ConfigSpatialResid8 must be 0. </para>	
             <para> For intra pictures, spatial-domain blocks must be sent using 8-bit samples if bits-per-pixel (BPP) is 8, and using 16-bit samples if BPP &gt; 8. If ConfigIntraResidUnsigned is 0, these samples are sent as signed integer values relative to a constant reference value of 2^(BPP?1), and if ConfigIntraResidUnsigned is 1, these samples are sent as unsigned integer values relative to a constant reference value of 0. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_CONFIG::ConfigSpatialResid8']/*"/>	
            <unmanaged>unsigned int ConfigSpatialResid8</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderConfig.ConfigResid8Subtraction">
            <summary>	
            <para> If the value is 1, 8-bit difference overflow blocks are subtracted rather than added. The value must be 0 unless ConfigSpatialResid8 is 1. </para>	
             <para> The ability to subtract differences rather than add them enables 8-bit difference decoding to be fully compliant with the full ?255 range of values required in video decoder specifications, because +255 cannot be represented as the addition of two signed 8-bit numbers, but any number in the range ?255 can be represented as the difference between two signed 8-bit numbers (+255 = +127 minus ?128).</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_CONFIG::ConfigResid8Subtraction']/*"/>	
            <unmanaged>unsigned int ConfigResid8Subtraction</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderConfig.ConfigSpatialHost8or9Clipping">
            <summary>	
            <para> If the value is 1, spatial-domain blocks for intra macroblocks must be clipped to an 8-bit range on the host and spatial-domain blocks for non-intra macroblocks must be clipped to a 9-bit range on the host. If the value is 0, no such clipping is necessary by the host. </para>	
             <para> The value must be 0 unless ConfigSpatialResid8 is 0 and ConfigResidDiffHost is 1. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_CONFIG::ConfigSpatialHost8or9Clipping']/*"/>	
            <unmanaged>unsigned int ConfigSpatialHost8or9Clipping</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderConfig.ConfigSpatialResidInterleaved">
            <summary>	
            <para> If the value is 1, any spatial-domain residual difference data must be sent in a chrominance-interleaved form matching the YUV format chrominance interleaving pattern. The value must be 0 unless ConfigResidDiffHost is 1 and the YUV format is NV12 or NV21. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_CONFIG::ConfigSpatialResidInterleaved']/*"/>	
            <unmanaged>unsigned int ConfigSpatialResidInterleaved</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderConfig.ConfigIntraResidUnsigned">
            <summary>	
            <para> Indicates the method of representation of spatial-domain blocks of residual difference data for intra blocks when using host-based difference decoding. </para>	
             <para> If ConfigResidDiffHost is 1 and ConfigIntraResidUnsigned is 0, spatial-domain residual difference data blocks for intra macroblocks must be sent as follows: </para>	
               In a non-intra picture, if ConfigSpatialResid8 is 0, the spatial-domain residual difference data blocks for intra macroblocks are sent as 16-bit signed integer values relative to a constant reference value of 2^(BPP?1).   In a non-intra picture, if ConfigSpatialResid8 is 1, the spatial-domain residual difference data blocks for intra macroblocks are sent as 8-bit signed integer values relative to a constant reference value of 2^(BPP?1).   In an intra picture, if BPP is 8, the spatial-domain residual difference data blocks for intra macroblocks are sent as 8-bit signed integer values relative to a constant reference value of 2^(BPP?1), regardless of the value of ConfigSpatialResid8.   <para> If ConfigResidDiffHost is 1 and ConfigIntraResidUnsigned is 1, spatial-domain residual difference data blocks for intra macroblocks must be sent as follows: </para>	
               In a non-intra picture, if ConfigSpatialResid8 is 0, the spatial-domain residual difference data blocks for intra macroblocks must be sent as 16-bit unsigned integer values relative to a constant reference value of 0.   In a non-intra picture, if ConfigSpatialResid8 is 1, the spatial-domain residual difference data blocks for intra macroblocks are sent as 8-bit unsigned integer values relative to a constant reference value of 0.   In an intra picture, if BPP is 8, the spatial-domain residual difference data blocks for intra macroblocks are sent as 8-bit unsigned integer values relative to a constant reference value of 0, regardless of the value of ConfigSpatialResid8.   <para> The value of the member must be 0 unless ConfigResidDiffHost is 1. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_CONFIG::ConfigIntraResidUnsigned']/*"/>	
            <unmanaged>unsigned int ConfigIntraResidUnsigned</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderConfig.ConfigResidDiffAccelerator">
            <summary>	
            <para> If the value is 1, transform-domain blocks of coefficient data may be sent from the host for accelerator-based IDCT. If the value is 0, accelerator-based IDCT will not be used. If both ConfigResidDiffHost and ConfigResidDiffAccelerator are 1, this indicates that some residual difference decoding will be done on the host and some on the accelerator, as indicated by macroblock-level control commands. </para>	
             <para> The value must be 0 if ConfigBitstreamRaw is 1. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_CONFIG::ConfigResidDiffAccelerator']/*"/>	
            <unmanaged>unsigned int ConfigResidDiffAccelerator</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderConfig.ConfigHostInverseScan">
            <summary>	
            <para> If the value is 1, the inverse scan for transform-domain block processing will be performed on the host, and absolute indices will be sent instead for any transform coefficients. If the value is 0, the inverse scan will be performed on the accelerator. </para>	
             <para> The value must be 0 if ConfigResidDiffAccelerator is 0 or if Config4GroupedCoefs is 1. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_CONFIG::ConfigHostInverseScan']/*"/>	
            <unmanaged>unsigned int ConfigHostInverseScan</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderConfig.ConfigSpecificIDCT">
            <summary>	
            <para> If the value is 1, the IDCT specified in Annex W of ITU-T Recommendation H.263 is used. If the value is 0, any compliant IDCT can be used for off-host IDCT. </para>	
             <para> The H.263 annex does not comply with the IDCT requirements of MPEG-2 corrigendum 2, so the value must not be 1 for use with MPEG-2 video. </para>	
             <para> The value must be 0 if ConfigResidDiffAccelerator is 0, indicating purely host-based residual difference decoding. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_CONFIG::ConfigSpecificIDCT']/*"/>	
            <unmanaged>unsigned int ConfigSpecificIDCT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderConfig.Config4GroupedCoefs">
            <summary>	
            <para> If the value is 1, transform coefficients for off-host IDCT will be sent using the DXVA_TCoef4Group structure. If the value is 0, the DXVA_TCoefSingle structure is used. The value must be 0 if ConfigResidDiffAccelerator is 0 or if ConfigHostInverseScan is 1. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_CONFIG::Config4GroupedCoefs']/*"/>	
            <unmanaged>unsigned int Config4GroupedCoefs</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderConfig.ConfigMinRenderTargetBuffCount">
            <summary>	
            <para> Specifies how many frames the decoder device processes at any one time. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_CONFIG::ConfigMinRenderTargetBuffCount']/*"/>	
            <unmanaged>unsigned short ConfigMinRenderTargetBuffCount</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderConfig.ConfigDecoderSpecific">
            <summary>	
            <para> Contains decoder-specific configuration information. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_CONFIG::ConfigDecoderSpecific']/*"/>	
            <unmanaged>unsigned short ConfigDecoderSpecific</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoDecoderDescription">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_DESC']/*"/>	
            <unmanaged>D3D11_VIDEO_DECODER_DESC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderDescription.Guid">
            <summary>	
            <para>The DirectX Video Acceleration (DXVA) decoding profile. To get the list of profiles supported by the device, call the <see cref="M:SharpDX.Direct3D11.VideoDevice.GetVideoDecoderProfile(System.Int32,System.Guid@)"/> method.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_DESC::Guid']/*"/>	
            <unmanaged>GUID Guid</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderDescription.SampleWidth">
            <summary>	
            <para>The width of the video frame, in pixels.  </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_DESC::SampleWidth']/*"/>	
            <unmanaged>unsigned int SampleWidth</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderDescription.SampleHeight">
            <summary>	
            <para>The height of the video frame, in pixels.  </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_DESC::SampleHeight']/*"/>	
            <unmanaged>unsigned int SampleHeight</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderDescription.OutputFormat">
            <summary>	
            <para>The output surface format, specified as a <see cref="T:SharpDX.DXGI.Format"/> value.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_DESC::OutputFormat']/*"/>	
            <unmanaged>DXGI_FORMAT OutputFormat</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoDecoderExtension">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            The exact meaning of each structure member depends on the value of Function.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_EXTENSION']/*"/>	
            <unmanaged>D3D11_VIDEO_DECODER_EXTENSION</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderExtension.Function">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_EXTENSION::Function']/*"/>	
            <unmanaged>unsigned int Function</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderExtension.PPrivateInputData">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_EXTENSION::pPrivateInputData']/*"/>	
            <unmanaged>void* pPrivateInputData</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderExtension.PrivateInputDataSize">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_EXTENSION::PrivateInputDataSize']/*"/>	
            <unmanaged>unsigned int PrivateInputDataSize</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderExtension.PPrivateOutputData">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_EXTENSION::pPrivateOutputData']/*"/>	
            <unmanaged>void* pPrivateOutputData</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderExtension.PrivateOutputDataSize">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_EXTENSION::PrivateOutputDataSize']/*"/>	
            <unmanaged>unsigned int PrivateOutputDataSize</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderExtension.ResourceCount">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_EXTENSION::ResourceCount']/*"/>	
            <unmanaged>unsigned int ResourceCount</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderExtension.PpResourceList">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_EXTENSION::ppResourceList']/*"/>	
            <unmanaged>ID3D11Resource** ppResourceList</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoDecoderOutputViewDescription">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC']/*"/>	
            <unmanaged>D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderOutputViewDescription.DecodeProfile">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC::DecodeProfile']/*"/>	
            <unmanaged>GUID DecodeProfile</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderOutputViewDescription.Dimension">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC::ViewDimension']/*"/>	
            <unmanaged>D3D11_VDOV_DIMENSION ViewDimension</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoDecoderOutputViewDescription.Texture2D">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_DECODER_OUTPUT_VIEW_DESC::Texture2D']/*"/>	
            <unmanaged>D3D11_TEX2D_VDOV Texture2D</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorCaps">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CAPS']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_CAPS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorCaps.DeviceCaps">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CAPS::DeviceCaps']/*"/>	
            <unmanaged>unsigned int DeviceCaps</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorCaps.FeatureCaps">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CAPS::FeatureCaps']/*"/>	
            <unmanaged>unsigned int FeatureCaps</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorCaps.FilterCaps">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CAPS::FilterCaps']/*"/>	
            <unmanaged>unsigned int FilterCaps</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorCaps.InputFormatCaps">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CAPS::InputFormatCaps']/*"/>	
            <unmanaged>unsigned int InputFormatCaps</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorCaps.AutoStreamCaps">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CAPS::AutoStreamCaps']/*"/>	
            <unmanaged>unsigned int AutoStreamCaps</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorCaps.StereoCaps">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CAPS::StereoCaps']/*"/>	
            <unmanaged>unsigned int StereoCaps</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorCaps.RateConversionCapsCount">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CAPS::RateConversionCapsCount']/*"/>	
            <unmanaged>unsigned int RateConversionCapsCount</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorCaps.MaxInputStreams">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CAPS::MaxInputStreams']/*"/>	
            <unmanaged>unsigned int MaxInputStreams</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorCaps.MaxStreamStates">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CAPS::MaxStreamStates']/*"/>	
            <unmanaged>unsigned int MaxStreamStates</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorColorSpace">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            The RGB_Range member applies to RGB output, while the YCbCr_Matrix and YCbCr_xvYCC members apply to YCbCr output. If the driver performs color-space conversion on the background color, it uses the values that apply to both color spaces.If the driver supports extended YCbCr (xvYCC), it returns the <see cref="F:SharpDX.Direct3D11.VideoProcessorDeviceCaps.XvYCC"/> capabilities flag in the <see cref="M:SharpDX.Direct3D11.VideoProcessorEnumerator.GetVideoProcessorCaps(SharpDX.Direct3D11.VideoProcessorCaps@)"/> method. Otherwise, the driver ignores the value of YCbCr_xvYCC and treats all YCbCr output as conventional YCbCr.If extended YCbCr is supported, it can be used with either transfer matrix. Extended YCbCr does not change the black point or white point?the black point is still 16 and the white point is still 235. However, extended YCbCr explicitly allows blacker-than-black values in the range 1?15, and whiter-than-white values in the range 236?254. When extended YCbCr is used, the driver should not clip the luma values to the nominal 16?235 range.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_COLOR_SPACE']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_COLOR_SPACE</unmanaged>	
        </member>
        <!-- Badly formed XML comment ignored for member "P:SharpDX.Direct3D11.VideoProcessorColorSpace.Usage" -->
        <!-- Badly formed XML comment ignored for member "P:SharpDX.Direct3D11.VideoProcessorColorSpace.RgbRange" -->
        <!-- Badly formed XML comment ignored for member "P:SharpDX.Direct3D11.VideoProcessorColorSpace.YCbCrMatrix" -->
        <!-- Badly formed XML comment ignored for member "P:SharpDX.Direct3D11.VideoProcessorColorSpace.YCbCrXvYCC" -->
        <member name="P:SharpDX.Direct3D11.VideoProcessorColorSpace.Reserved">
            <summary>	
            <para>Reserved. Set to zero.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_COLOR_SPACE::Reserved']/*"/>	
            <unmanaged>unsigned int Reserved</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorContentDescription">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CONTENT_DESC']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_CONTENT_DESC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorContentDescription.InputFrameFormat">
            <summary>	
            <para>A member of the <see cref="T:SharpDX.Direct3D11.VideoFrameFormat"/> enumeration that describes how the video stream is interlaced.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CONTENT_DESC::InputFrameFormat']/*"/>	
            <unmanaged>D3D11_VIDEO_FRAME_FORMAT InputFrameFormat</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorContentDescription.InputFrameRate">
            <summary>	
            <para>The frame rate of the input video stream, specified as a <see cref="T:SharpDX.DXGI.Rational"/> structure. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CONTENT_DESC::InputFrameRate']/*"/>	
            <unmanaged>DXGI_RATIONAL InputFrameRate</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorContentDescription.InputWidth">
            <summary>	
            <para>The width of the input frames, in pixels.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CONTENT_DESC::InputWidth']/*"/>	
            <unmanaged>unsigned int InputWidth</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorContentDescription.InputHeight">
            <summary>	
            <para>The height of the input frames, in pixels.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CONTENT_DESC::InputHeight']/*"/>	
            <unmanaged>unsigned int InputHeight</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorContentDescription.OutputFrameRate">
            <summary>	
            <para>The frame rate of the output video stream, specified as a <see cref="T:SharpDX.DXGI.Rational"/> structure. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CONTENT_DESC::OutputFrameRate']/*"/>	
            <unmanaged>DXGI_RATIONAL OutputFrameRate</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorContentDescription.OutputWidth">
            <summary>	
            <para>The width of the output frames, in pixels. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CONTENT_DESC::OutputWidth']/*"/>	
            <unmanaged>unsigned int OutputWidth</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorContentDescription.OutputHeight">
            <summary>	
            <para>The height of the output frames, in pixels.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CONTENT_DESC::OutputHeight']/*"/>	
            <unmanaged>unsigned int OutputHeight</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorContentDescription.Usage">
            <summary>	
            <para>A member of the <see cref="T:SharpDX.Direct3D11.VideoUsage"/> enumeration that describes how the video processor will be used. The value indicates the desired trade-off between speed and video quality. The driver uses this flag as a hint when it creates the video processor.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CONTENT_DESC::Usage']/*"/>	
            <unmanaged>D3D11_VIDEO_USAGE Usage</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorCustomRate">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            The CustomRate member gives the rate conversion factor, while the remaining members define the pattern of input and output samples.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CUSTOM_RATE']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_CUSTOM_RATE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorCustomRate.CustomRate">
            <summary>	
            <para>The ratio of the output frame rate to the input frame rate, expressed as a <see cref="T:SharpDX.DXGI.Rational"/> structure that holds a rational number. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CUSTOM_RATE::CustomRate']/*"/>	
            <unmanaged>DXGI_RATIONAL CustomRate</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorCustomRate.OutputFrames">
            <summary>	
            <para>The number of output frames that will be generated for every N input samples, where N = InputFramesOrFields. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CUSTOM_RATE::OutputFrames']/*"/>	
            <unmanaged>unsigned int OutputFrames</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorCustomRate.InputFramesOrFields">
            <summary>	
            <para>The number of input fields or frames for every N output frames that will be generated, where N = OutputFrames. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CUSTOM_RATE::InputFramesOrFields']/*"/>	
            <unmanaged>unsigned int InputFramesOrFields</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.VideoProcessorCustomRate.InputInterlaced">
            <summary>	
            <para>If TRUE, the input stream must be interlaced. Otherwise, the input stream must be progressive. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_CUSTOM_RATE::InputInterlaced']/*"/>	
            <unmanaged>BOOL InputInterlaced</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorFilterRange">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <remarks>	
            The multiplier enables the filter range to have a fractional step value.For example, a hue filter might have an actual range of [?180.0 ... +180.0] with a step size of 0.25. The device would report the following range and multiplier:Minimum: ?720 Maximum: +720 Multiplier: 0.25In this case,  a filter value of 2 would be interpreted by the device as 0.50 (or 2 ? 0.25).The device should use  a multiplier that can be represented exactly as a base-2 fraction.	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_RANGE']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_FILTER_RANGE</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilterRange.Minimum">
            <summary>	
            <para>The minimum value of the filter. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_RANGE::Minimum']/*"/>	
            <unmanaged>int Minimum</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilterRange.Maximum">
            <summary>	
            <para>The maximum value of the filter. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_RANGE::Maximum']/*"/>	
            <unmanaged>int Maximum</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilterRange.Default">
            <summary>	
            <para>The default value of the filter. </para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_RANGE::Default']/*"/>	
            <unmanaged>int Default</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorFilterRange.Multiplier">
            <summary>	
            <para>A multiplier. Use the following formula to translate the filter setting into the actual filter value: Actual Value = Set Value???Multiplier.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_FILTER_RANGE::Multiplier']/*"/>	
            <unmanaged>float Multiplier</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorInputViewDescription">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorInputViewDescription.FourCC">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC::FourCC']/*"/>	
            <unmanaged>unsigned int FourCC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorInputViewDescription.Dimension">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC::ViewDimension']/*"/>	
            <unmanaged>D3D11_VPIV_DIMENSION ViewDimension</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorInputViewDescription.Texture2D">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_INPUT_VIEW_DESC::Texture2D']/*"/>	
            <unmanaged>D3D11_TEX2D_VPIV Texture2D</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorOutputViewDescription">
            <summary>	
            [This documentation is preliminary and is subject to change.]	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorOutputViewDescription.Dimension">
            <summary>	
            <para>The resource type of the view, specified as a member of the <see cref="T:SharpDX.Direct3D11.VpovDimension"/> enumeration.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC::ViewDimension']/*"/>	
            <unmanaged>D3D11_VPOV_DIMENSION ViewDimension</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorOutputViewDescription.Texture2D">
            <summary>	
            <para>A <see cref="T:SharpDX.Direct3D11.Texture2DVpov"/> structure that identifies the texture resource for the output view. </para>	
             <para>Use this member of the union when ViewDimension equals <see cref="F:SharpDX.Direct3D11.VpovDimension.Texture2D"/>.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC::Texture2D']/*"/>	
            <unmanaged>D3D11_TEX2D_VPOV Texture2D</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorOutputViewDescription.Texture2DArray">
            <summary>	
            <para>A <see cref="T:SharpDX.Direct3D11.Texture2DArrayVpov"/> structure that identifies the texture array for the output view. </para>	
             <para>Use this member of the union when ViewDimension equals <see cref="F:SharpDX.Direct3D11.VpovDimension.Texture2DArray"/>.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_OUTPUT_VIEW_DESC::Texture2DArray']/*"/>	
            <unmanaged>D3D11_TEX2D_ARRAY_VPOV Texture2DArray</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorRateConversionCaps">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorRateConversionCaps.PastFrames">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS::PastFrames']/*"/>	
            <unmanaged>unsigned int PastFrames</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorRateConversionCaps.FutureFrames">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS::FutureFrames']/*"/>	
            <unmanaged>unsigned int FutureFrames</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorRateConversionCaps.ProcessorCaps">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS::ProcessorCaps']/*"/>	
            <unmanaged>unsigned int ProcessorCaps</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorRateConversionCaps.ITelecineCaps">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS::ITelecineCaps']/*"/>	
            <unmanaged>unsigned int ITelecineCaps</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorRateConversionCaps.CustomRateCount">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_RATE_CONVERSION_CAPS::CustomRateCount']/*"/>	
            <unmanaged>unsigned int CustomRateCount</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.VideoProcessorStream">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STREAM']/*"/>	
            <unmanaged>D3D11_VIDEO_PROCESSOR_STREAM</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStream.OutputIndex">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STREAM::OutputIndex']/*"/>	
            <unmanaged>unsigned int OutputIndex</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStream.InputFrameOrField">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STREAM::InputFrameOrField']/*"/>	
            <unmanaged>unsigned int InputFrameOrField</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStream.PastFrames">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STREAM::PastFrames']/*"/>	
            <unmanaged>unsigned int PastFrames</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStream.FutureFrames">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STREAM::FutureFrames']/*"/>	
            <unmanaged>unsigned int FutureFrames</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStream.PpPastSurfaces">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STREAM::ppPastSurfaces']/*"/>	
            <unmanaged>ID3D11VideoProcessorInputView** ppPastSurfaces</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStream.PInputSurface">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STREAM::pInputSurface']/*"/>	
            <unmanaged>ID3D11VideoProcessorInputView* pInputSurface</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStream.PpFutureSurfaces">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STREAM::ppFutureSurfaces']/*"/>	
            <unmanaged>ID3D11VideoProcessorInputView** ppFutureSurfaces</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStream.PpPastSurfacesRight">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STREAM::ppPastSurfacesRight']/*"/>	
            <unmanaged>ID3D11VideoProcessorInputView** ppPastSurfacesRight</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStream.PInputSurfaceRight">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STREAM::pInputSurfaceRight']/*"/>	
            <unmanaged>ID3D11VideoProcessorInputView* pInputSurfaceRight</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.VideoProcessorStream.PpFutureSurfacesRight">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STREAM::ppFutureSurfacesRight']/*"/>	
            <unmanaged>ID3D11VideoProcessorInputView** ppFutureSurfacesRight</unmanaged>	
        </member>
        <member name="P:SharpDX.Direct3D11.VideoProcessorStream.Enable">
            <summary>	
            No documentation.	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIDEO_PROCESSOR_STREAM::Enable']/*"/>	
            <unmanaged>BOOL Enable</unmanaged>	
        </member>
        <member name="T:SharpDX.Direct3D11.Viewport">
            <summary>	
            Defines the dimensions of a viewport.	
            </summary>	
            <remarks>	
            In all cases, Width and Height must be &gt;= 0 and TopLeftX + Width and TopLeftY + Height must be &lt;= D3D11_VIEWPORT_BOUNDS_MAX.<para>Viewport Sizes and Feature Level Support Differences between Direct3D 11 and Direct3D 10:</para>	
             <para>The range for the minimum and maximum viewport size is dependent on the feature level defined by <see cref="T:SharpDX.Direct3D.FeatureLevel"/>.</para>	
              Direct3D 11 supports fractional viewports; the parameter types are  floating-point numbers. The feature level, <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_11_0"/>, supports (D3D11_VIEWPORT_BOUNDS_MIN, D3D11_VIEWPORT_BOUNDS_MAX) values between (-32768, 32,767). Direct3D 10 does not support fractional viewports. The feature levels, <see cref="F:SharpDX.Direct3D.FeatureLevel.Level_10_1"/> (or below), supports (D3D10_VIEWPORT_BOUNDS_MIN, D3D10_VIEWPORT_BOUNDS_MAX) values between (-16384, 16383).?	
            </remarks>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIEWPORT']/*"/>	
            <unmanaged>D3D11_VIEWPORT</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Viewport.TopLeftX">
            <summary>	
            <para>X position of the left hand side of the viewport. Ranges between D3D11_VIEWPORT_BOUNDS_MIN and D3D11_VIEWPORT_BOUNDS_MAX.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIEWPORT::TopLeftX']/*"/>	
            <unmanaged>float TopLeftX</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Viewport.TopLeftY">
            <summary>	
            <para>Y position of the top of the viewport. Ranges between D3D11_VIEWPORT_BOUNDS_MIN and D3D11_VIEWPORT_BOUNDS_MAX.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIEWPORT::TopLeftY']/*"/>	
            <unmanaged>float TopLeftY</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Viewport.Width">
            <summary>	
            <para>Width of the viewport.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIEWPORT::Width']/*"/>	
            <unmanaged>float Width</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Viewport.Height">
            <summary>	
            <para>Height of the viewport.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIEWPORT::Height']/*"/>	
            <unmanaged>float Height</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Viewport.MinDepth">
            <summary>	
            <para>Minimum depth of the viewport. Ranges between 0 and 1.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIEWPORT::MinDepth']/*"/>	
            <unmanaged>float MinDepth</unmanaged>	
        </member>
        <member name="F:SharpDX.Direct3D11.Viewport.MaxDepth">
            <summary>	
            <para>Maximum depth of the viewport. Ranges between 0 and 1.</para>	
            </summary>	
            <!-- No matching elements were found for the following include tag --><include file=".\..\Documentation\CodeComments.xml" path="/comments/comment[@id='D3D11_VIEWPORT::MaxDepth']/*"/>	
            <unmanaged>float MaxDepth</unmanaged>	
        </member>
        <member name="M:SharpDX.Direct3D11.Viewport.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.Viewport" /> structure.
            </summary>
            <param name = "x">The X coordinate of the viewport.</param>
            <param name = "y">The Y coordinate of the viewport.</param>
            <param name = "width">The width of the viewport.</param>
            <param name = "height">The height of the viewport.</param>
            <param name = "minZ">The minimum Z distance of the viewport.</param>
            <param name = "maxZ">The maximum Z distance of the viewport.</param>
        </member>
        <member name="M:SharpDX.Direct3D11.Viewport.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.Viewport" /> structure.
            </summary>
            <param name = "x">The X coordinate of the viewport.</param>
            <param name = "y">The Y coordinate of the viewport.</param>
            <param name = "width">The width of the viewport.</param>
            <param name = "height">The height of the viewport.</param>
        </member>
        <member name="F:SharpDX.Direct3D11.ImageLoadInformation.FileDefaultValue">
            <summary>
            The default value for load options.
            </summary>
        </member>
        <member name="T:SharpDX.Direct3D11.StreamOutputBufferBinding">
            <summary>
              Properties defining the way a buffer is bound to the pipeline as a target for stream output operations.
            </summary>
        </member>
        <member name="M:SharpDX.Direct3D11.StreamOutputBufferBinding.#ctor(SharpDX.Direct3D11.Buffer,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.StreamOutputBufferBinding" /> struct.
            </summary>
            <param name = "buffer">The buffer being bound.</param>
            <param name = "offset">The offset to the first vertex (in bytes).</param>
        </member>
        <member name="P:SharpDX.Direct3D11.StreamOutputBufferBinding.Buffer">
            <summary>
              Gets or sets the buffer being bound.
            </summary>
        </member>
        <member name="P:SharpDX.Direct3D11.StreamOutputBufferBinding.Offset">
            <summary>
              Gets or sets the offset from the start of the buffer of the first vertex to use (in bytes).
            </summary>
        </member>
        <member name="T:SharpDX.Direct3D11.VertexBufferBinding">
            <summary>
              Properties defining the way a buffer (containing vertex data) is bound
              to the pipeline for rendering.
            </summary>
        </member>
        <member name="M:SharpDX.Direct3D11.VertexBufferBinding.#ctor(SharpDX.Direct3D11.Buffer,System.Int32,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref = "T:SharpDX.Direct3D11.VertexBufferBinding" /> struct.
            </summary>
            <param name = "buffer">The buffer being bound.</param>
            <param name = "stride">The stride between vertex element (in bytes).</param>
            <param name = "offset">The offset to the first vertex (in bytes).</param>
        </member>
        <member name="P:SharpDX.Direct3D11.VertexBufferBinding.Buffer">
            <summary>
              Gets or sets the buffer being bound.
            </summary>
        </member>
        <member name="P:SharpDX.Direct3D11.VertexBufferBinding.Stride">
            <summary>
              Gets or sets the stride between vertex elements in the buffer (in bytes).
            </summary>
        </member>
        <member name="P:SharpDX.Direct3D11.VertexBufferBinding.Offset">
            <summary>
              Gets or sets the offset from the start of the buffer of the first vertex to use (in bytes).
            </summary>
        </member>
    </members>
</doc>

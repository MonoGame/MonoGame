<?xml version="1.0"?>
<project name="Aurora Ion Build Script" default="build" basedir=".">
	<description>Default Ion Automated Build script</description>
	<property name="os" value="${operating-system::get-platform(environment::get-operating-system())}" />
  <property name="mdtooldir" value="/Applications/MonoDevelop.app/Contents/MacOS"/>

  <target name="checkos" description="check the operating system">
  <property name="os" value="${operating-system::get-platform(environment::get-operating-system())}"/>
  <if test="${os == 'Unix'}">
      <if test="${directory::exists('/Applications') and directory::exists('/Library')}">
        <property name="os" value="MacOS"/>
        <if test="${not directory::exists(mdtooldir)}">
          <property name="mdtooldir" value="/Applications/Xamarin\ Studio.app/Contents/MacOS"/>
        </if>
      </if>
  </if>
  <echo message="Detected : ${os}"/>    
  </target>


	<target name="build" description="Build MonoGame Release" depends="checkos">

		<call target="buildwindows"/>		
		<call target="buildlinux"/>		
		<call target="buildandroid" />
    <call target="buildwindows8" />
    <call target="buildwindowsphone" />
    <call target="buildmac" />
    <call target="buildios" />
    
    <call target="buildtools"/>		
    <call target="buildcontentprocessor"/>	
	   
	  <nant buildfile="ProjectTemplates/MonoDevelop/MonoDevelop.MonoGame/default.build" target="build" />
    <nant buildfile="ProjectTemplates/VisualStudio2010/default.build" target="build" />
				
		
	</target>
        
    <target name="buildwindows" description="Build Windows">      
    <if test="${os == 'Win32NT'}">
		  <exec program="msbuild " commandline="MonoGame.Framework.Windows.sln /t:Clean /p:Configuration=Release" />			      
			<exec program="msbuild " commandline="MonoGame.Framework.Windows.sln /t:Build /p:Configuration=Release" />			
      <exec program="msbuild " commandline="MonoGame.Framework.WindowsGL.sln /t:Clean /p:Configuration=Release" />			      
			<exec program="msbuild " commandline="MonoGame.Framework.WindowsGL.sln /t:Build /p:Configuration=Release" />			
		</if>
		<if test="${os == 'Unix'}">
      <exec program="xbuild" commandline="/t:Clean /p:Configuration=Release MonoGame.Framework.Windows.sln" />
			<exec program="xbuild" commandline="/t:Build /p:Configuration=Release MonoGame.Framework.Windows.sln" />
      <exec program="xbuild" commandline="/t:Clean /p:Configuration=Release MonoGame.Framework.WindowsGL.sln" />
			<exec program="xbuild" commandline="/t:Build /p:Configuration=Release MonoGame.Framework.WindowsGL.sln" />
		</if>
    </target>
    
    <target name="buildlinux" description="Build Linux">
    <if test="${os == 'Win32NT'}">
      <exec program="msbuild " commandline="MonoGame.Framework.Linux.sln /t:Clean /p:Configuration=Release" />			
			<exec program="msbuild " commandline="MonoGame.Framework.Linux.sln /t:Build /p:Configuration=Release" />			
		</if>
		<if test="${os == 'Unix'}">
      <exec program="xbuild" commandline="/t:Build /p:Configuration=Clean MonoGame.Framework.Linux.sln" />
			<exec program="xbuild" commandline="/t:Build /p:Configuration=Release MonoGame.Framework.Linux.sln" />
		</if>	
    </target>

    <target name="buildmac" description="Build MacOS">
    <if test="${os == 'MacOS'}">
      <exec program="mdtool" basedir="${mdtooldir}" commandline="build -t:Clean -c:Release MonoGame.Framework.MacOS.sln" />
      <exec program="mdtool" basedir="${mdtooldir}" commandline="build -t:Build -c:Release MonoGame.Framework.MacOS.sln" />
    </if>
    </target>
    
    <target name="buildios" description="Build iOS">      
        <if test="${os == 'MacOS'}">
          <if test="${file::exists('/Developer/MonoTouch/MSBuild/Xamarin.ObjcBinding.CSharp.targets')}">
          <exec program="mdtool" basedir="${mdtooldir}" commandline="build -t:Clean -c:Release  MonoGame.Framework.iOS.sln" />
          <exec program="mdtool" basedir="${mdtooldir}" commandline="build -t:Build -c:Release  MonoGame.Framework.iOS.sln" />
        </if>
      </if>
    </target>
    
    <target name="buildandroid" description="Build Android">
    <if test="${os == 'Win32NT'}">
      <if test="${file::exists('C:\Program Files (x86)\MSBuild\Novell\Novell.MonoDroid.CSharp.targets')}">
      <exec program="msbuild " commandline="MonoGame.Framework.Android.sln /t:Clean /p:Configuration=Release" />			                  
			<exec program="msbuild " commandline="MonoGame.Framework.Android.sln /t:Build /p:Configuration=Release" />
      <exec program="msbuild " commandline="MonoGame.Framework.OUYA.sln /t:Clean /p:Configuration=Release" />
      <exec program="msbuild " commandline="MonoGame.Framework.OUYA.sln /t:Build /p:Configuration=Release" />
    </if>
    </if>
      
        <if test="${os == 'MacOS'}">
          <if test="${file::exists('/Developer/MonoAndroid/usr/bin/mandroid')}">
          <exec program="mdtool" basedir="${mdtooldir}" commandline="build -t:Clean -c:Release MonoGame.Framework.Android.sln" />
          <exec program="mdtool" basedir="${mdtooldir}" commandline="build -t:Build -c:Release MonoGame.Framework.Android.sln" />
          <exec program="mdtool" basedir="${mdtooldir}" commandline="build -t:Clean -c:Release MonoGame.Framework.OUYA.sln" />
          <exec program="mdtool" basedir="${mdtooldir}" commandline="build -t:Build -c:Release MonoGame.Framework.OUYA.sln" />
        </if>
      </if>  
    </target>
		
	  <target name="buildwindows8" description="Build Windows 8">
    <if test="${os == 'Win32NT'}">
      <exec program="msbuild " commandline="MonoGame.Framework.Windows8.sln /t:Clean /p:Configuration=Release" />			
			<exec program="msbuild " commandline="MonoGame.Framework.Windows8.sln /t:Build /p:Configuration=Release" />			
		</if>
		</target>
  
    <target name="buildwindowsphone" description="Build Windows Phone">
    <if test="${os == 'Win32NT'}">
      <if test="${file::exists('c:\Program Files (x86)\MSBuild\Microsoft\WindowsPhone\v8.0\Microsoft.Cpp.WindowsPhone.8.0.targets')}">
      <exec program="msbuild " commandline='MonoGame.Framework.WindowsPhone.sln /t:Clean /p:Configuration=Release /p:Platform="ARM"' />			
			<exec program="msbuild " commandline='MonoGame.Framework.WindowsPhone.sln /t:Build /p:Configuration=Release /p:Platform="ARM"' />			
      <exec program="msbuild " commandline='MonoGame.Framework.WindowsPhone.sln /t:Clean /p:Configuration=Release /p:Platform="x86"' />			
      <exec program="msbuild " commandline='MonoGame.Framework.WindowsPhone.sln /t:Build /p:Configuration=Release /p:Platform="x86"' />			
		</if>
             </if>
     </target>
  
    <target name="buildtools" description="Build Tools">
    <if test="${os == 'Win32NT'}">
      <exec program="msbuild " commandline="Tools\2MGFX\2MGFX.sln /t:Clean /p:Configuration=Release" />			
			<exec program="msbuild " commandline="Tools\2MGFX\2MGFX.sln /t:Build /p:Configuration=Release" />
      <exec program="msbuild " commandline="Tools\MGCB\MGCB.sln /t:Clean /p:Configuration=Release" />			
      <exec program="msbuild " commandline="Tools\MGCB\MGCB.sln /t:Build /p:Configuration=Release" />			
		</if>
		</target>
  
    <target name="buildcontentprocessor" description="Build Content Processor">
    <if test="${os == 'Win32NT'}">
      <exec program="msbuild " commandline="MonoGame.ContentPipeline\ContentProcessors\MonoGameContentProcessors.sln /t:Clean /p:Configuration=Release" />			
			<exec program="msbuild " commandline="MonoGame.ContentPipeline\ContentProcessors\MonoGameContentProcessors.sln /t:Build /p:Configuration=Release" />			
		</if>
		</target>
	
</project>

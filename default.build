<?xml version="1.0"?>
<project name="MonoGame Build Script" default="build" basedir=".">
  <description>Default MonoGame Automated Build script</description>
  <property name="os" value="${operating-system::get-platform(environment::get-operating-system())}" />
  <property name="mdtooldir" value="/Applications/MonoDevelop.app/Contents/MacOS"/>
  <property name="psmtooldir" value="C:\Program Files (x86)\SCE\PSM\tools\PsmStudio\bin" />

  <target name="checkos" description="check the operating system">
    <property name="os" value="${operating-system::get-platform(environment::get-operating-system())}"/>
    <if test="${os == 'Unix'}">
      <if test="${directory::exists('/Applications') and directory::exists('/Library')}">
        <property name="os" value="MacOS"/>
        <if test="${not directory::exists(mdtooldir)}">
          <property name="mdtooldir" value="${path::get-full-path('/Applications/Xamarin Studio.app/Contents/MacOS')}"/>
        </if>
      </if>
    </if>
    <echo message="Detected : ${os}"/>
  </target>

  <target name="clean">
    <delete dir="${project::get-base-directory()}\MonoGame.Framework\obj" verbose="true">
    </delete>
  </target>

  <target name="build" description="Build MonoGame Release" depends="checkos">

    <call target="buildwindows"/>
    <call target="buildlinux"/>
    <call target="buildandroid" />
    <call target="buildwindows8" />
    <call target="buildwindowsphone" />
    <call target="buildmac" />
    <call target="buildios" />
    <call target="buildpsm" />

    <call target="buildtools"/>
    <call target="buildcontentprocessor"/>

    <nant buildfile="ProjectTemplates/MonoDevelop/MonoDevelop.MonoGame/default.build" target="build" />
    <nant buildfile="ProjectTemplates/VisualStudio2010/default.build" target="build" />
    <nant buildfile="ProjectTemplates/VisualStudio2012/default.build" target="build" />

    <call target="buildtests"/>

    <nant buildfile="Installers/default.build" target="build" />
  </target>

  <target name="buildpsm" description="Build Play Station Mobile" depends="clean">
    <if test="${os == 'Win32NT'}">
      <if test="${file::exists('C:\Program Files (x86)\SCE\PSM\tools\PsmStudio\bin\mdtool.exe')}">
        <exec program="mdtool.exe" basedir="${psmtooldir}" commandline="build -t:Clean -c:Release MonoGame.Framework.PSMobile.sln" />
        <exec program="mdtool.exe" basedir="${psmtooldir}" commandline="build -t:Build -c:Release MonoGame.Framework.PSMobile.sln" />
      </if>
    </if>
  </target>

  <target name="buildwindows" description="Build Windows" depends="clean">
    <exec program="Protobuild.exe" commandline="--clean Windows" />
    <exec program="Protobuild.exe" commandline="--generate Windows" />
    <exec program="Protobuild.exe" commandline="--clean WindowsGL" />
    <exec program="Protobuild.exe" commandline="--generate WindowsGL" />
    <if test="${os == 'Win32NT'}">
      <exec program="msbuild " commandline="MonoGame.Windows.sln /t:Clean /p:Configuration=Release" />
      <exec program="msbuild " commandline="MonoGame.Windows.sln /t:Build /p:Configuration=Release" />
      <exec program="msbuild " commandline="MonoGame.WindowsGL.sln /t:Clean /p:Configuration=Release" />
      <exec program="msbuild " commandline="MonoGame.WindowsGL.sln /t:Build /p:Configuration=Release" />
    </if>
    <if test="${os == 'Unix'}">
      <exec program="xbuild" commandline="/t:Clean /p:Configuration=Release MonoGame.Windows.sln" />
      <exec program="xbuild" commandline="/t:Build /p:Configuration=Release MonoGame.Windows.sln" />
      <exec program="xbuild" commandline="/t:Clean /p:Configuration=Release MonoGame.WindowsGL.sln" />
      <exec program="xbuild" commandline="/t:Build /p:Configuration=Release MonoGame.WindowsGL.sln" />
    </if>
  </target>

  <target name="buildlinux" description="Build Linux" depends="clean">
    <exec program="Protobuild.exe" commandline="--clean Linux" />
    <exec program="Protobuild.exe" commandline="--generate Linux" />
    <if test="${os == 'Win32NT'}">
      <exec program="msbuild " commandline="MonoGame.Framework/MonoGame.Framework.Linux.csproj /t:Clean /p:Configuration=Release" />
      <exec program="msbuild " commandline="MonoGame.Framework/MonoGame.Framework.Linux.csproj /t:Build /p:Configuration=Release" />
    </if>
    <if test="${os == 'Unix'}">
      <exec program="xbuild" commandline="/t:Clean /p:Configuration=Release MonoGame.Framework/MonoGame.Framework.Linux.csproj" />
      <exec program="xbuild" commandline="/t:Build /p:Configuration=Release MonoGame.Framework/MonoGame.Framework.Linux.csproj" />
    </if>
  </target>

  <target name="buildmac" description="Build MacOS" depends="clean">
    <exec program="Protobuild.exe" commandline="--clean MacOS" />
    <exec program="Protobuild.exe" commandline="--generate MacOS" />
    <if test="${os == 'MacOS'}">
      <exec program="mdtool" basedir="${mdtooldir}" commandline="build -t:Clean -c:Release MonoGame.Framework/MonoGame.Framework.MacOS.csproj" />
      <exec program="mdtool" basedir="${mdtooldir}" commandline="build -t:Build -c:Release MonoGame.Framework/MonoGame.Framework.MacOS.csproj" />
    </if>
  </target>

  <target name="buildios" description="Build iOS" depends="clean">
    <exec program="Protobuild.exe" commandline="--clean iOS" />
    <exec program="Protobuild.exe" commandline="--generate iOS" /> 
    <if test="${os == 'MacOS'}">
      <if test="${file::exists('/Developer/MonoTouch/MSBuild/Xamarin.ObjcBinding.CSharp.targets')}">
        <exec program="mdtool" basedir="${mdtooldir}" commandline="build -t:Clean -c:Release MonoGame.Framework/MonoGame.Framework.iOS.csproj" />
        <exec program="mdtool" basedir="${mdtooldir}" commandline="build -t:Build -c:Release MonoGame.Framework/MonoGame.Framework.iOS.csproj" />
      </if>
    </if>
  </target>

  <target name="buildandroid" description="Build Android" depends="clean">
    <exec program="Protobuild.exe" commandline="--clean Android" />
    <exec program="Protobuild.exe" commandline="--generate Android" /> 
    <exec program="Protobuild.exe" commandline="--clean Ouya" />
    <exec program="Protobuild.exe" commandline="--generate Ouya" />  
    <if test="${os == 'Win32NT'}">
      <if test="${file::exists('C:\Program Files (x86)\MSBuild\Novell\Novell.MonoDroid.CSharp.targets')}">
        <exec program="msbuild " commandline="MonoGame.Framework/MonoGame.Framework.Android.csproj /t:Clean /p:Configuration=Release" />
        <exec program="msbuild " commandline="MonoGame.Framework/MonoGame.Framework.Android.csproj /t:Build /p:Configuration=Release" />
        <exec program="msbuild " commandline="MonoGame.Framework/MonoGame.Framework.Ouya.csproj /t:Clean /p:Configuration=Release" />
        <exec program="msbuild " commandline="MonoGame.Framework/MonoGame.Framework.Ouya.csproj /t:Build /p:Configuration=Release" />
      </if>
    </if>
    <if test="${os == 'MacOS'}">
      <if test="${file::exists('/Developer/MonoAndroid/usr/bin/mandroid')}">
        <exec program="mdtool" basedir="${mdtooldir}" commandline="build -t:Clean -c:Release MonoGame.Framework/MonoGame.Framework.Android.csproj" />
        <exec program="mdtool" basedir="${mdtooldir}" commandline="build -t:Build -c:Release MonoGame.Framework/MonoGame.Framework.Android.csproj" />
        <exec program="mdtool" basedir="${mdtooldir}" commandline="build -t:Clean -c:Release MonoGame.Framework/MonoGame.Framework.Ouya.csproj" />
        <exec program="mdtool" basedir="${mdtooldir}" commandline="build -t:Build -c:Release MonoGame.Framework/MonoGame.Framework.Ouya.csproj" />
      </if>
    </if>
  </target>

  <target name="buildwindows8" description="Build Windows 8" depends="clean">
    <if test="${os == 'Win32NT'}">
      <exec program="msbuild " commandline="MonoGame.Framework.Windows8.sln /t:Clean /p:Configuration=Release" />
      <exec program="msbuild " commandline="MonoGame.Framework.Windows8.sln /t:Rebuild /p:Configuration=Release" />
    </if>
  </target>

  <target name="buildwindowsphone" description="Build Windows Phone" depends="clean">
    <if test="${os == 'Win32NT'}">
      <if test="${file::exists('c:\Program Files (x86)\MSBuild\Microsoft\WindowsPhone\v8.0\Microsoft.Cpp.WindowsPhone.8.0.targets')}">
        <exec program="msbuild " commandline='MonoGame.Framework.WindowsPhone.sln /t:Clean /p:Configuration=Release /p:Platform="ARM"' />
        <exec program="msbuild " commandline='MonoGame.Framework.WindowsPhone.sln /t:Build /p:Configuration=Release /p:Platform="ARM"' />
        <exec program="msbuild " commandline='MonoGame.Framework.WindowsPhone.sln /t:Clean /p:Configuration=Release /p:Platform="x86"' />
        <exec program="msbuild " commandline='MonoGame.Framework.WindowsPhone.sln /t:Build /p:Configuration=Release /p:Platform="x86"' />
      </if>
    </if>
  </target>

  <target name="buildtools" description="Build Tools" depends="clean">
    <if test="${os == 'Win32NT'}">
      <exec program="msbuild " commandline="Tools\2MGFX\2MGFX.sln /t:Clean /p:Configuration=Release" />
      <exec program="msbuild " commandline="Tools\2MGFX\2MGFX.sln /t:Build /p:Configuration=Release" />
      <exec program="msbuild " commandline="Tools\MGCB\MGCB.sln /t:Clean /p:Configuration=Release" />
      <exec program="msbuild " commandline="Tools\MGCB\MGCB.sln /t:Build /p:Configuration=Release" />
    </if>
  </target>

  <target name="buildcontentprocessor" description="Build Content Processor" depends="clean">
    <if test="${os == 'Win32NT'}">
      <exec program="msbuild " commandline="MonoGame.ContentPipeline\ContentProcessors\MonoGameContentProcessors.sln /t:Clean /p:Configuration=Release" />
      <exec program="msbuild " commandline="MonoGame.ContentPipeline\ContentProcessors\MonoGameContentProcessors.sln /t:Build /p:Configuration=Release" />
    </if>
  </target>

  <target name="buildtests" description="Build Tests" depends="clean">
    <if test="${os == 'Win32NT'}">
      <exec program="msbuild " commandline="Test\MonoGame.Tests.Windows.sln /t:Clean /p:Configuration=Release" />
      <exec program="msbuild " commandline="Test\MonoGame.Tests.Windows.sln /t:Build /p:Configuration=Release" />
    </if>
  </target>

  <target name="runtests" description="Run Tests">
    <if test="${os == 'Win32NT'}">
    </if>
  </target>
</project>

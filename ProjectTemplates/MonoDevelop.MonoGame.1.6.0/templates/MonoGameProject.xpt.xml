<?xml version="1.0"?>
<Template originator="Jose Antonio Leal de Farias"
          created="2009/09/17">
	
	<!-- Template Header -->
	<TemplateConfiguration>
		<_Name>MonoGame Game Project</_Name>
		<_Category>C#/iPhone and iPad</_Category>
		<Icon>md-project-iphone</Icon>
		<LanguageName>C#</LanguageName>
		<_Description>Creates a MonoGame Game project for for iPhone, iPod Touch and iPad.</_Description>
	</TemplateConfiguration>
	
	<!-- Actions -->
	<Actions>
        <Open filename = "Game1.cs"/>
	</Actions>
	
	<!-- Template Content -->
	<Combine name = "${ProjectName}" directory = ".">
		<Options>
			<StartupProject>${ProjectName}</StartupProject>
		</Options>
		
		<Project name = "${ProjectName}" directory = "." type = "IPhone">
            <Options />
			<References>
				<Reference type="Gac" refto="System, Version=2.0.5.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e" />
				<Reference type="Gac" refto="System.Xml, Version=2.0.5.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e" />
				<Reference type="Gac" refto="System.Core, Version=2.0.5.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e" />
				<Reference type="Gac" refto="monotouch" />
				<Reference type="Gac" refto="OpenTK" />
			</References>
			<Files>
				<File name="Program.cs">
<![CDATA[
#region Using Statements
using System;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Media;

using MonoTouch.Foundation;
using MonoTouch.UIKit;
#endregion

namespace ${Namespace}
{
	[Register ("AppDelegate")]
	class Program : UIApplicationDelegate 
	{
		public override void FinishedLaunching (UIApplication app)
		{
            using (Game1 game = new Game1())
            {
                game.Run();
            }
		}
		
		static void Main (string [] args)
		{
			UIApplication.Main (args,null,"AppDelegate");
		}
	}
}
]]>
				</File>
                <File name="Game1.cs">
<![CDATA[
#region Using Statements
using System;

using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.GamerServices;
using Microsoft.Xna.Framework.Graphics;
using Microsoft.Xna.Framework.Storage;

using MonoTouch.StoreKit;
using MonoTouch.Foundation;
#endregion

namespace ${Namespace}
{
	/// <summary>
    /// This is the main type for your game
    /// </summary>
    public class Game1 : Game
    {
        GraphicsDeviceManager graphics;
        SpriteBatch spriteBatch;		

        public Game1()
        {
            graphics = new GraphicsDeviceManager(this);
            Content.RootDirectory = "Content";			
			graphics.IsFullScreen = true;		
        }

        /// <summary>
        /// Allows the game to perform any initialization it needs to before starting to run.
        /// This is where it can query for any required services and load any non-graphic
        /// related content.  Calling base.Initialize will enumerate through any components
        /// and initialize them as well.
        /// </summary>
        protected override void Initialize()
        {
            // TODO: Add your initialization logic here
            base.Initialize();
				
        }

        /// <summary>
        /// LoadContent will be called once per game and is the place to load
        /// all of your content.
        /// </summary>
        protected override void LoadContent()
        {
            // Create a new SpriteBatch, which can be used to draw textures.
            spriteBatch = new SpriteBatch(GraphicsDevice);

            //TODO: use this.Content to load your game content here 
        }

        /// <summary>
        /// Allows the game to run logic such as updating the world,
        /// checking for collisions, gathering input, and playing audio.
        /// </summary>
        /// <param name="gameTime">Provides a snapshot of timing values.</param>
        protected override void Update(GameTime gameTime)
        {
            // TODO: Add your update logic here			
            base.Update(gameTime);
        }

        /// <summary>
        /// This is called when the game should draw itself.
        /// </summary>
        /// <param name="gameTime">Provides a snapshot of timing values.</param>
        protected override void Draw(GameTime gameTime)
        {
           	graphics.GraphicsDevice.Clear(Color.CornflowerBlue);
		
            //TODO: Add your drawing code here
            
            base.Draw(gameTime);
        }
    }
}
]]>
				</File>
                <File name="Content/readme.txt">
<![CDATA[
Put your resource files here! MonoGame is compatible with several image formats (PNG,JPEG,TIFF, etc.)
and .MP3 and .WAV audio formats. It's also compatible with a Windows XNB SpriteFont file.
]]>
				</File>
			</Files>
		</Project>
	</Combine>
</Template>